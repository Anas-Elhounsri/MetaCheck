{
  "application_domain": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "recommender system"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "recess-project@proton.me",
        "type": "Agent",
        "value": "recess-project@proton.me"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Systems Biology and Informatics, University of Rostock, Rostock, Germany",
        "email": "clemence.reda@uni-rostock.de",
        "type": "String",
        "value": "Cl\u00e9mence R\u00e9da"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": [
          {
            "family_name": "R\u00e9da",
            "given_name": "Cl\u00e9mence",
            "name": "Cl\u00e9mence R\u00e9da",
            "type": "Agent",
            "url": "https://orcid.org/0000-0003-3238-0258"
          },
          {
            "family_name": "Vie",
            "given_name": "Jill-J\u00eann",
            "name": "Jill-J\u00eann Vie",
            "type": "Agent",
            "url": "https://orcid.org/0000-0002-9304-2220"
          },
          {
            "family_name": "Wolkenhauer",
            "given_name": "Olaf",
            "name": "Olaf Wolkenhauer",
            "type": "Agent",
            "url": "https://orcid.org/0000-0001-6105-2937"
          }
        ],
        "datePublished": "2024",
        "doi": "10.5281/zenodo.12193722",
        "format": "cff",
        "title": "Joint Embedding-classifier Learning for improved Interpretability (JELI) ",
        "type": "File_dump",
        "url": "https://doi.org/10.5281/zenodo.12193722",
        "value": "cff-version: \"1.0.1\"\nauthors:\n- family-names: R\u00e9da\n  given-names: Cl\u00e9mence\n  orcid: \"https://orcid.org/0000-0003-3238-0258\"\n- family-names: Vie\n  given-names: Jill-J\u00eann\n  orcid: \"https://orcid.org/0000-0002-9304-2220\"\n- family-names: Wolkenhauer\n  given-names: Olaf\n  orcid: \"https://orcid.org/0000-0001-6105-2937\"\nmessage: If you use this software, please cite this repository and the RECeSS project.\ntitle: \"Joint Embedding-classifier Learning for improved Interpretability (JELI) \"\nversion: 1.0.1\ndate-released: 2024-06-22\ndoi: 10.5281/zenodo.12193722\nurl: \"https://github.com/RECeSS-EU-Project/JELI\"\n"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Joint Embedding-classifier Learning for improved Interpretability (JELI) Python Package"
        ],
        "type": "Text_excerpt",
        "value": "If you use *JELI* in academic research, please cite it as follows\n\n```\n@article{reda2025joint,\n  title={Joint embedding--classifier learning for interpretable collaborative filtering},\n  author={R{\\'e}da, Cl{\\'e}mence and Vie, Jill-J{\\^e}nn and Wolkenhauer, Olaf},\n  journal={BMC bioinformatics},\n  volume={26},\n  number={1},\n  pages={26},\n  year={2025},\n  publisher={Springer}\n}\n\n```\n"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "R{\\'e}da, Cl{\\'e}mence and Vie, Jill-J{\\^e}nn and Wolkenhauer, Olaf",
        "format": "bibtex",
        "title": "Joint embedding--classifier learning for interpretable collaborative filtering",
        "type": "Text_excerpt",
        "value": "@article{reda2025joint,\n    publisher = {Springer},\n    year = {2025},\n    pages = {26},\n    number = {1},\n    volume = {26},\n    journal = {BMC bioinformatics},\n    author = {R{\\'e}da, Cl{\\'e}mence and Vie, Jill-J{\\^e}nn and Wolkenhauer, Olaf},\n    title = {Joint embedding--classifier learning for interpretable collaborative filtering},\n}"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/RECeSS-EU-Project/JELI"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/RECeSS-EU-Project/jeli"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "git+https://github.com/RECeSS-EU-Project/JELI"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/.github/workflows/post-push-test.yml"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/.github/workflows/pip-release.yml"
      },
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-10T15:28:13Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2024-06-22"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2024-06-22"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-02-20T12:39:07Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2024-06-22"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Joint Embedding-classifier Learning for improved Interpretability (JELI)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Package for Joint Embedding-classifier Learning for Interpretability. Learns feature/item/user embeddings with specific structures, recommends new item-user associations and provides feature importance scores."
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Joint Embedding-classifier Learning for improved Interpretability (JELI) "
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9855068061697716,
      "result": {
        "original_header": "Joint Embedding-classifier Learning for improved Interpretability (JELI) Python Package",
        "type": "Text_excerpt",
        "value": "This repository is a part of the EU-funded [RECeSS project](https://recess-eu-project.github.io) (#101102016), and hosts the code for the open-source Python package *JELI* for the collaborative filtering approach. \n"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.946063984742501,
      "result": {
        "original_header": "Statement of need",
        "type": "Text_excerpt",
        "value": "Interpretability is a topical question in recommender systems, especially in healthcare applications. In drug repurposing, the goal is to identify novel therapeutic indications as drug-disease pairs. An interpretable drug repurposing algorithm quantifies the importance of each input feature for the predicted therapeutic drug-disease association in a non-ambiguous fashion, using post hoc methods. Unfortunately, different importance score-based approaches lead to different results, yielding unreliable interpretations. \nWe introduce the novel Joint Embedding Learning-classifier for improved Interpretability (JELI). It features a new structured recommender system and trains it jointly on a drug-disease-gene knowledge graph completion task.\u00a0In particular, JELI simultaneously (a) learns the gene, drug, and disease embeddings; (b) predicts new drug-disease associations based on those embeddings; (c) provides importance scores for each gene.\u00a0The drug and disease embeddings have a structure that depends on the gene embeddings. Therefore, JELI allows the introduction of graph-based priors on the connections between diseases, drugs, and genes in a generic fashion to recommend and argue for novel therapeutic drug-disease associations.\u00a0 \nContrary to prior works, the recommender system explicitly includes the importance scores, strengthening the link between the recommendations and the extracted scores while allowing the use of a generic embedding model. The recommendation strategy in JELI can also\u00a0be readily applied\u00a0beyond the task of drug repurposing for any sets of items, users, and features.\n \n"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/RECeSS-EU-Project/JELI/releases"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://pypi.org/project/jeli/#files"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/RECeSS-EU-Project/JELI/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RECeSS-EU-Project/JELI"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Joint Embedding-classifier Learning for improved Interpretability (JELI) Python Package"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "setup.py",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/setup.py"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/setup.py",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "pyproject.toml",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/pyproject.toml"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/pyproject.toml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/pip/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/pip/requirements.txt",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "pyproject.toml"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.12193722"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RECeSS-EU-Project/RECeSS-EU-Project.github.io/main/assets/images/header%2BEU_rescale.jpg"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://codecov.io/github/recess-eu-project/jeli/coverage.svg?branch=master"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Using pip",
        "parent_header": [
          "Joint Embedding-classifier Learning for improved Interpretability (JELI) Python Package",
          "Install the latest release"
        ],
        "type": "Text_excerpt",
        "value": "```bash\npip install jeli\n```\n"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker",
        "parent_header": [
          "Joint Embedding-classifier Learning for improved Interpretability (JELI) Python Package",
          "Install the latest release"
        ],
        "type": "Text_excerpt",
        "value": "```bash\n#Build Docker image\ndocker build -t jeli .\n#Run Docker image built in previous step and drop into SSH\ndocker run -it --expose 3000  -p 3000:3000 jeli\n```\n"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/RECeSS-EU-Project/JELI/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/RECeSS-EU-Project/JELI/issues"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "collaborative-filtering, drug-repurposing, factorization-machine, interpretability"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "collaborative filtering",
          "drug repurposing",
          "factorization machine",
          "recommender system"
        ]
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Copyright 2024 Cl\u00e9mence R\u00e9da (RECeSS project #101102016)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/MIT",
        "spdx_id": "https://spdx.org/licenses/MIT",
        "type": "License",
        "value": "https://spdx.org/licenses/MIT"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Licence",
        "parent_header": [
          "Joint Embedding-classifier Learning for improved Interpretability (JELI) Python Package"
        ],
        "type": "Text_excerpt",
        "value": "This repository is under an [OSI-approved](https://opensource.org/licenses/) [MIT license](https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/LICENSE). \n"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JELI"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JELI"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "RECeSS-EU-Project"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jeli"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/setup.py",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 78238,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 482,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python 3",
        "type": "Programming_language",
        "value": "Python 3",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RECeSS-EU-Project",
          "type": "User"
        },
        "date_created": "2025-01-28T09:46:23Z",
        "date_published": "2025-01-28T10:06:21Z",
        "description": "Joint Embedding-classifier Learning for improved Interpretability (JELI) for recommender systems\r\n\r\nCHANGELOG:\r\n- Fixes the dependency on pykeen (module pykeen.nn,functional no longer exists)",
        "html_url": "https://github.com/RECeSS-EU-Project/JELI/releases/tag/v1.0.2",
        "name": "JELI v1.0.2",
        "release_id": 197103786,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/RECeSS-EU-Project/JELI/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/RECeSS-EU-Project/JELI/releases/197103786",
        "value": "https://api.github.com/repos/RECeSS-EU-Project/JELI/releases/197103786",
        "zipball_url": "https://api.github.com/repos/RECeSS-EU-Project/JELI/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RECeSS-EU-Project",
          "type": "User"
        },
        "date_created": "2024-06-21T00:18:34Z",
        "date_published": "2024-06-20T22:31:40Z",
        "description": "Joint Embedding-classifier Learning for improved Interpretability (JELI) for recommender systems",
        "html_url": "https://github.com/RECeSS-EU-Project/JELI/releases/tag/v1.0.1",
        "name": "JELI v1.0.1",
        "release_id": 161567448,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/RECeSS-EU-Project/JELI/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/RECeSS-EU-Project/JELI/releases/161567448",
        "value": "https://api.github.com/repos/RECeSS-EU-Project/JELI/releases/161567448",
        "zipball_url": "https://api.github.com/repos/RECeSS-EU-Project/JELI/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "RECeSS-EU-Project",
          "type": "User"
        },
        "date_created": "2024-06-21T00:18:34Z",
        "date_published": "2024-06-20T22:23:19Z",
        "description": "Joint Embedding-classifier Learning for improved Interpretability (JELI) for recommender systems",
        "html_url": "https://github.com/RECeSS-EU-Project/JELI/releases/tag/v1.0.0",
        "name": "JELI v1.0.0",
        "release_id": 161566882,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/RECeSS-EU-Project/JELI/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/RECeSS-EU-Project/JELI/releases/161566882",
        "value": "https://api.github.com/repos/RECeSS-EU-Project/JELI/releases/161566882",
        "zipball_url": "https://api.github.com/repos/RECeSS-EU-Project/JELI/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "setuptools",
        "type": "Software_application",
        "value": "setuptools>=61.0",
        "version": ">=61.0"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "numpy",
        "type": "Software_application",
        "value": "numpy",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pykeen",
        "type": "Software_application",
        "value": "pykeen>=1.10.1",
        "version": ">=1.10.1"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "stanscofi",
        "type": "Software_application",
        "value": "stanscofi>=2.0.1",
        "version": ">=2.0.1"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "scikit-learn",
        "type": "Software_application",
        "value": "scikit-learn>=1.2.2",
        "version": ">=1.2.2"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "scipy",
        "type": "Software_application",
        "value": "scipy>=1.9.3",
        "version": ">=1.9.3"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "torch_geometric",
        "type": "Software_application",
        "value": "torch_geometric>=2.4.0",
        "version": ">=2.4.0"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "igraph",
        "type": "Software_application",
        "value": "igraph>=0.11.4",
        "version": ">=0.11.4"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "torch",
        "type": "Software_application",
        "value": "torch>=2.1.2",
        "version": ">=2.1.2"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "tqdm",
        "type": "Software_application",
        "value": "tqdm>=4.66.2",
        "version": ">=4.66.2"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "qnorm",
        "type": "Software_application",
        "value": "qnorm>=0.8.1",
        "version": ">=0.8.1"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "typing_extensions",
        "type": "Software_application",
        "value": "typing_extensions>=4.2.0",
        "version": ">=4.2.0"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "numpy",
        "type": "Software_application",
        "value": "numpy",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/pip/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pykeen",
        "type": "Software_application",
        "value": "pykeen==1.10.1",
        "version": "==1.10.1"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/pip/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "stanscofi",
        "type": "Software_application",
        "value": "stanscofi>=2.0.1",
        "version": ">=2.0.1"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/pip/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "scikit-learn",
        "type": "Software_application",
        "value": "scikit-learn>=1.2.2",
        "version": ">=1.2.2"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/pip/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "scipy",
        "type": "Software_application",
        "value": "scipy>=1.9.3",
        "version": ">=1.9.3"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/pip/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "torch_geometric",
        "type": "Software_application",
        "value": "torch_geometric>=2.4.0",
        "version": ">=2.4.0"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/pip/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "igraph",
        "type": "Software_application",
        "value": "igraph>=0.11.4",
        "version": ">=0.11.4"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/pip/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "torch",
        "type": "Software_application",
        "value": "torch>=2.1.2",
        "version": ">=2.1.2"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/pip/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "tqdm",
        "type": "Software_application",
        "value": "tqdm>=4.66.2",
        "version": ">=4.66.2"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/pip/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "qnorm",
        "type": "Software_application",
        "value": "qnorm>=0.8.1",
        "version": ">=0.8.1"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/pip/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "typing_extensions",
        "type": "Software_application",
        "value": "typing_extensions>=4.2.0",
        "version": ">=4.2.0"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/pip/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "Joint Embedding-classifier Learning for improved Interpretability (JELI) Python Package",
          "Install the latest release"
        ],
        "type": "Text_excerpt",
        "value": "OS: developed and tested on Debian Linux.\n\nThe complete list of dependencies for *JELI* can be found at [requirements.txt](https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/pip/requirements.txt) (pip).\n"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 03:14:16",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Community guidelines with respect to contributions, issue reporting, and support",
        "parent_header": [
          "Joint Embedding-classifier Learning for improved Interpretability (JELI) Python Package"
        ],
        "type": "Text_excerpt",
        "value": "[Pull requests](https://github.com/RECeSS-EU-Project/JELI/pulls) and [issue flagging](https://github.com/RECeSS-EU-Project/JELI/issues) are welcome, and can be made through the GitHub interface. Support can be provided by reaching out to ``recess-project[at]proton.me``. However, please note that contributors and users must abide by the [Code of Conduct](https://github.com/RECeSS-EU-Project/JELI/blob/master/CODE%20OF%20CONDUCT.md).\n\n"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Joint Embedding-classifier Learning for improved Interpretability (JELI) Python Package"
        ],
        "type": "Text_excerpt",
        "value": "```python\nfrom jeli.JELI import JELI\n\nfrom stanscofi.utils import load_dataset\nfrom stanscofi.training_testing import random_simple_split\nimport pandas as pd\n\n## loads the Gottlieb drug repurposing data set\ndata_args = load_dataset(\"Gottlieb\", \"./\")\ndataset = Dataset(**data_args)\n\n## splits in training and testing sets without leakage\n(train_folds, test_folds), _ = random_simple_split(dataset, 0.2, random_state=1234)\ntrain = dataset.subset(train_folds)\ntest = dataset.subset(test_folds)\n\nclassifier = JELI({\"cuda_on\": False, \"n_dimensions\": 10, \"random_state\": 1234, \"epochs\": 25})\n\n## trains JELI on the training set\nclassifier.fit(train)\n\n## predicts on the testing set\nscores = classifier.predict_proba(test)\nclassifier.print_scores(scores)\npredictions = classifier.predict(scores, threshold=0.5)\nclassifier.print_classification(predictions)\n\n## computes an embedding i (item/drug)\nitem = pd.DataFrame(dataset.items.toarray()[:,0],index=dataset.item_features,columns=[\"0\"])\ni = model.transform(item, is_item=True)\n\n## computes an embedding u (user/disease)\nuser = pd.DataFrame(dataset.users.toarray()[:,0],index=dataset.user_features,columns=[\"0\"])\nu = model.transform(user, is_item=False)\n\n## computes the feature-wise importance scores from embeddings\nembs = classifier.model[\"feature_embeddings\"]\nfeature_scores = embs.sum(axis=1)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "1.0.1"
      },
      "source": "https://raw.githubusercontent.com/RECeSS-EU-Project/JELI/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
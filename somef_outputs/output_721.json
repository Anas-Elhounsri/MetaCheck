{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "dylan.turner3@outlook.com",
        "identifier": "https://orcid.org/000-0002-0915-7384",
        "type": "String",
        "value": "Dylan Turner"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "datePublished": "2022",
        "format": "bibtex",
        "type": "File_dump",
        "value": "citHeader(\"To cite rfema in publications use:\")\n\ncitEntry(\n  entry    = \"Article\",\n  title    = \"rfema: Access the openFEMA API\",\n  author   = as.person(\"Dylan Turner\"),\n  journal  = \"rOpenSci\",\n  year     = 2022,\n  volume   = \"\",\n  number   = \"\",\n  pages    = \"\",\n  url      = \"https://github.com/ropensci/rfema\",\n  textVersion = paste(\n    \"Turner, D. 2022. rfema:Access the openFEMA API. rOpenSci, avaliable at https://github.com/ropensci/rfema\"\n  )\n)\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/inst/CITATION",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/rfema"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dylan-turner25/rfema"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dylan-turner25/rfema"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": [
          "https://github.com/ropensci/rfema/actions",
          "https://codecov.io/gh/ropensci/rfema?branch=main"
        ]
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing\n\nIf you plan to contribute code that would amount to a substantial change in the package, please first outline the planned change as an [issue](https://github.com/ropensci/rfema/issues) so that it can be discussed to get community feedback.\n\nContributors are asked to comply with the [code of conduct](https://ropensci.org/code-of-conduct/#:~:text=rOpenSci%20is%20committed%20to%20providing,understand%E2%80%9D%20or%20%E2%80%9CWhy%E2%80%9D.) if they wish to remain associated with the project.\n\n# Pull Requests\n\nPull requests are more than welcome. `rfema` generally follows the style laid out in Hadley Wickham and Jennifer Bryan's [R Packages](https://r-pkgs.org/). Conforming to the same development practices will mean review of your pull request will be faster and smoother. \n\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-14T19:34:19Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-08-24T02:12:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": " rfema allows users to access The Federal Emergency Management Agency's (FEMA)  publicly available data through their API. The package provides a set of functions to easily navigate and access data  from the National Flood Insurance Program along and FEMA's various disaster aid programs."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/ropensci/rfema/main/DESCRIPTION",
        "type": "String",
        "value": "`rfema` allows users to access The Federal Emergency Management Agency's (FEMA) publicly available data through their API. The package provides a set of functions to easily navigate and access data from the National Flood Insurance Program along with FEMA's various disaster aid programs, including the Hazard Mitigation Grant Program, the Public Assistance Grant Program, and the Individual Assistance Grant Program."
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "`rfema` allows users to access The Federal Emergency Management Agency's (FEMA) publicly available data through their API. The package provides a set of functions to easily navigate and access data from the National Flood Insurance Program along with FEMA's various disaster aid programs, including the Hazard Mitigation Grant Program, the Public Assistance Grant Program, and the Individual Assistance Grant Program."
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "rfema (R FEMA)"
        ],
        "type": "Text_excerpt",
        "value": "`rfema` allows users to access The Federal Emergency Management Agency\u2019s\n(FEMA) publicly available data through the open FEMA API. The package\nprovides a set of functions to easily navigate and access all data sets\nprovided by FEMA, including (but not limited to) data from the National\nFlood Insurance Program and FEMA\u2019s various disaster aid programs.\n\nFEMA data is publicly available through the open [FEMA\nwebsite](https://www.fema.gov/about/openfema/data-sets) via their API.\nFEMA's datasets are often very large (multiple gigabytes) and many times\nusers do not need all records for a data series (for example: many users\nmay only want records for a single state for several years). Using\nFEMA's API allows users to query specific subsets of data, but can be\ninaccessible for those without prior API experience. This package contains a set of functions\nthat allows users to easily identify and retrieve data from FEMA\u2019s API\nwithout needing any technical knowledge of APIs. Notably, the FEMA API\ndoes not require an API key, meaning the package is extremely accessible\nregardless of if the user has ever interacted with an API.\n\nThe rest of this page explains the benefits of the package and\ndemonstrates basic usage of the package. For those looking for more in\ndepth examples of how to use the package in your workflow, consider\nreading the [Getting\nStarted](https://github.com/dylan-turner25/rfema/blob/main/vignettes/getting_started.md)\nvignette.\n\nIn accordance with the Open Fema terms and conditions: This product uses\nthe Federal Emergency Management Agency\u2019s Open FEMA API, but is not\nendorsed by FEMA. The Federal Government or FEMA cannot vouch for the\ndata or analyses derived from these data after the data have been\nretrieved from the Agency\u2019s website(s). Guidance on FEMA\u2019s preferred\ncitation for Open FEMA data can be found at:\n<https://www.fema.gov/about/openfema/terms-conditions>.\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/README.rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.971236723001076,
      "result": {
        "original_header": "Why rfema?",
        "type": "Text_excerpt",
        "value": "What are the advantages of accessing the FEMA API through the `rfema`\npackage as compared to accessing the API directly? In short, the `rfema`\npackage handles much of the grunt work associated with constructing API\nqueries, dealing with API limits, and applying filters or other\nparameters. Suppose one wants to obtain data on all of the flood\ninsurance claims in Florida for 2020. The following code obtains that\ndata without the use of the `rfema` package. As can be seen it requires\nquite a few lines of code, in part due to the API limiting calls to 1000\nrecords per call which can make obtaining a full data set cumbersome.\n``` r\n# Code needed to obtain data on flood insurance claims in FL without the rfema package ------------------\n\n# define the url for the appropriate api end point\nbase_url <- \"https://www.fema.gov/api/open/v2/FimaNfipClaims\"\n\n# append the base_url to apply filters\nfilters <- \"?$inlinecount=allpages&$filter=(state%20eq%20'FL')%20and%20(yearOfLoss%20eq%202020)\"\n\napi_query <- paste0(base_url, filters)\n\n# run a query setting the top_n parameter to 1 to check how many records match the filters\nrecord_check_query <- \"https://www.fema.gov/api/open/v2/FimaNfipClaims?$inlinecount=allpages&$top=1&$filter=(state%20eq%20'FL')%20and%20(yearOfLoss%20eq%202020)\"\n\n# run the api call and determine the number of matching records\nresult <- httr::GET(record_check_query)\njsonData <- httr::content(result)        \nn_records <- jsonData$metadata$count \n\n# calculate number of calls neccesary to get all records using the \n# 1000 records/ call max limit defined by FEMA\niterations <- ceiling(n_records / 1000)\n\n# initialize a skip counter which will indicate where in the full \n# data set each API call needs to start from.\nskip <- 0\n\n# make however many API calls are neccesary to get the full data set\nfor (i in seq(from = 1, to = iterations, by = 1)) {\n  # As above, if you have filters, specific fields, or are sorting, add\n  # that to the base URL or make sure it gets concatenated here.\n  result <- httr::GET(paste0(api_query, \"&$skip=\", (i - 1) * 1000))\n  if (result$status_code != 200) {\n    status <- httr::http_status(result)\n    stop(status$message)\n  }\n  json_data <- httr::content(result)[[2]]\n  \n  # for data returned as a list of lists, correct any discrepancies\n  # in the length of the lists by adding NA values to the shorter lists\n  \n  # calculate longest list\n  max_list_length <- max(sapply(json_data, length))\n  \n  # add NA values to lists shorter than the max list length\n  json_data <- lapply(json_data, function(x) {\n    c(x, rep(NA, max_list_length - length(x)))\n  })\n  \n  if (i == 1) {\n    # bind the data into a single data frame\n    data <- data.frame(do.call(rbind, json_data))\n  } else {\n    data <- dplyr::bind_rows(\n      data,\n      data.frame(do.call(rbind, json_data))\n    )\n  }\n}\n\n \n# remove the html line breaks from returned data frame (if there are any)  \ndata <- as_tibble(lapply(data, function(data) gsub(\"\\n\", \"\", data)))\n\n# view the retrieved data\ndata\n```\n \nCompare the above block of code to the following code which obtains the\nsame data using the `rfema` package. The `rfema` package allows the same\nrequest to be made with two lines of code. Notably, the `open_fema()`\nfunction handles checking the number of records and implements an\niterative loop to deal with the 1000 records/call limit.\n``` r\n# define a list of filters to apply\nfilterList <- list(state = \"FL\",yearOfLoss = \"= 2020\")\n\n# Make the API call using the `open_fema` function. The function will output a \n# status message to the console letting you monitor the progress of the data retrieval.\ndata <- open_fema(data_set = \"fimaNfipClaims\",ask_before_call = F, filters = filterList)\n\n# view data\ndata\n```\n \nThe `rfema` package also returns data, where possible, in formats that\nare easier to work with. For example, all functions return data as a\ntibble with all date columns converted to POSIX format. This makes\nplotting time series easy as the API call can be piped directly into a\n`ggplot` plot. For example, the following is a plot of the number of\nFEMA disaster declarations in response to hurricanes since 2010,\nseparated out by Florida versus the rest of the United States. In an\napplication where the most up to date data is required, this block of\ncode can be rerun to plot the most up to date data from the FEMA API.\n``` r\nlibrary(ggplot2)\nopen_fema(\"DisasterDeclarationsSummaries\", \n                  filters = list(declarationDate = \">= 2010-01-01\",\n                                 incidentType = \"Hurricane\"), \n                  ask_before_call = F) %>% \n  mutate(date = lubridate::floor_date(declarationDate,\"year\"),count = 1,\n         Florida = factor(state == \"FL\")) %>%\n  select(date,count,Florida) %>%\n  group_by(date,Florida) %>%\n  summarise(count = sum(count)) %>%\n  ggplot(., aes(fill=Florida, y=count, x=date)) + \n    geom_bar(position=\"stack\", stat=\"identity\") +\n  scale_fill_manual(name = \"\",values = c(\"grey80\",\"forestgreen\"),drop = FALSE,\n                    labels = c(\"Rest of U.S.\",\"Florida\")) +\n  labs(x = \"year\",y = \"\",\n       title = \"County Level FEMA Disaster Declarations for Hurricanes\") +\n  theme_light()\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/README.rmd",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "https://www.repostatus.org/#active",
          "https://www.tidyverse.org/lifecycle/#stable"
        ]
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/rfema/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/rfema/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ropensci/rfema/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ropensci/rfema"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rfema (R FEMA)"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/README.rmd",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "description",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/rfema/main/DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/DESCRIPTION",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/ropensci/rfema/main/DESCRIPTION",
        "type": "Url",
        "value": "DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rfema"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/406498163"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/README.rmd",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/rfema/main/man/figures/unnamed-chunk-3-1.png"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/README.rmd",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "rfema (R FEMA)"
        ],
        "type": "Text_excerpt",
        "value": "Right now, the best way to install and use the `rfema` package is by\ninstalling directly from rOpenSci using\n`install.packages(\"rfema\", repos = \"https://ropensci.r-universe.dev\")`.\nThe FEMA API does not require an API key, meaning no further setup\nsteps need be taken to start using the package.\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/README.rmd",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ropensci/rfema/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dylan-turner25/rfema/issues"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dylan-turner25/rfema/issues"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "File_dump",
        "value": "# MIT License\n\nCopyright (c) 2021 Dylan Turner\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/LICENSE.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/ropensci/rfema/main/DESCRIPTION",
        "type": "String",
        "value": "MIT + file LICENSE"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/MIT",
        "spdx_id": "https://spdx.org/licenses/MIT",
        "type": "License",
        "value": "https://spdx.org/licenses/MIT"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rfema"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rfema: Access the openFEMA API"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ropensci"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/ropensci/rfema/main/DESCRIPTION",
        "type": "String",
        "value": "rfema"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 38168,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 1233,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "type": "Programming_language",
        "url": "https://r-project.org",
        "value": "R",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/rfema/main/README.rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://github.com/ropensci/rfema/blob/main/README.md"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/rfema/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dylan-turner25",
          "type": "User"
        },
        "date_created": "2022-01-25T11:30:44Z",
        "date_published": "2022-01-25T16:45:52Z",
        "description": "Initial release",
        "html_url": "https://github.com/ropensci/rfema/releases/tag/v1.0.0",
        "name": "v1.0.0",
        "release_id": 57939308,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/ropensci/rfema/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/rfema/releases/57939308",
        "value": "https://api.github.com/repos/ropensci/rfema/releases/57939308",
        "zipball_url": "https://api.github.com/repos/ropensci/rfema/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "repository_status": [
    {
      "confidence": 1,
      "result": {
        "description": "Active \u2013 The project has reached a stable, usable\nstate and is being actively\ndeveloped.",
        "type": "Url",
        "value": "https://www.repostatus.org/#active"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/README.rmd",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "dplyr",
        "type": "Software_application",
        "value": "dplyr",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "memoise",
        "type": "Software_application",
        "value": "memoise",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "utils",
        "type": "Software_application",
        "value": "utils",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "httr",
        "type": "Software_application",
        "value": "httr",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "plyr",
        "type": "Software_application",
        "value": "plyr",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "tibble",
        "type": "Software_application",
        "value": "tibble",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "executable_example",
    "keywords"
  ],
  "somef_provenance": {
    "date": "2025-09-19 02:49:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "rfema (R FEMA)"
        ],
        "type": "Text_excerpt",
        "value": "For those unfamiliar with the data sets available through the FEMA API,\na good starting place is to visit the [FEMA API documentation\npage](https://www.fema.gov/about/openfema/data-sets). However, if you\nare already familiar with the data and want to quickly reference the\ndata set names or another piece of meta data, using the\n`fema_data_sets()` function to obtain a tibble of available data sets\nalong with associated meta data is a convenient option.\n\n``` r\n# store meta data for the available data sets as an object in the R environment\ndata_sets <- fema_data_sets()\n\n# view the just retrieved data\ndata_sets\n```\n\n    ## # A tibble: 51 \u00d7 35\n    ##    identif\u2026\u00b9 name  title descr\u2026\u00b2 webSe\u2026\u00b3 dataD\u2026\u2074 keyword modif\u2026\u2075 publi\u2026\u2076 conta\u2026\u2077\n    ##    <chr>     <chr> <chr> <chr>   <chr>   <chr>   <list>  <chr>   <chr>   <chr>  \n    ##  1 openfema\u2026 Fema\u2026 FEMA\u2026 \"This \u2026 https:\u2026 https:\u2026 <list>  2023-0\u2026 Federa\u2026 OpenFE\u2026\n    ##  2 openfema\u2026 Ipaw\u2026 IPAW\u2026 \"The I\u2026 https:\u2026 https:\u2026 <list>  2020-0\u2026 Federa\u2026 OpenFE\u2026\n    ##  3 openfema\u2026 Regi\u2026 Regi\u2026 \"This \u2026 https:\u2026 https:\u2026 <list>  2023-0\u2026 Federa\u2026 OpenFE\u2026\n    ##  4 openfema\u2026 Regi\u2026 Regi\u2026 \"This \u2026 https:\u2026 https:\u2026 <list>  2023-1\u2026 Federa\u2026 OpenFE\u2026\n    ##  5 openfema\u2026 Fema\u2026 FEMA\u2026 \"This \u2026 https:\u2026 https:\u2026 <list>  2023-0\u2026 Federa\u2026 OpenFE\u2026\n    ##  6 openfema\u2026 Haza\u2026 Haza\u2026 \"The d\u2026 https:\u2026 https:\u2026 <list>  2023-1\u2026 Federa\u2026 OpenFE\u2026\n    ##  7 openfema\u2026 Hous\u2026 Hous\u2026 \"This \u2026 https:\u2026 https:\u2026 <list>  2023-0\u2026 Federa\u2026 OpenFE\u2026\n    ##  8 openfema\u2026 Hous\u2026 Hous\u2026 \"The d\u2026 https:\u2026 https:\u2026 <list>  2023-0\u2026 Federa\u2026 OpenFE\u2026\n    ##  9 openfema\u2026 Indi\u2026 Indi\u2026 \"This \u2026 https:\u2026 https:\u2026 <list>  2020-0\u2026 Federa\u2026 OpenFE\u2026\n    ## 10 openfema\u2026 Miss\u2026 Miss\u2026 \"1.1 W\u2026 https:\u2026 https:\u2026 <list>  2023-0\u2026 Federa\u2026 OpenFE\u2026\n    ## # \u2026 with 41 more rows, 25 more variables: mbox <chr>, accessLevel <chr>,\n    ## #   landingPage <list>, temporal <list>, api <lgl>, version <int>,\n    ## #   bureauCode <chr>, programCode <chr>, license <list>, theme <list>,\n    ## #   dataQuality <chr>, accrualPeriodicity <list>, language <chr>,\n    ## #   references <list>, issued <list>, recordCount <list>, depDate <list>,\n    ## #   depApiMessage <list>, depWebMessage <list>, depNewURL <list>, hash <chr>,\n    ## #   lastRefresh <chr>, id <chr>, lastDataSetRefresh <list>, \u2026\n\nOnce you have the name of the data set you want, simply pass it as an\nargument to the `open_fema()` function which will return the data set as\na tibble. By default, `open_fema()` will warn you if the number of\nrecords is greater than 1000 and present an estimated time required to\ncomplete the records request. As the user, you will then be asked to\nconfirm that you want to retrieve all of the available records (for many\ndata sets the total records is quite large). To turn off this feature,\nset the parameter `ask_before_call` equal to FALSE. To limit the number\nof records returned, specify the `top_n` argument. This is useful for\nexploring a data set without retrieving all records.\n\n``` r\n# obtain the first 10 records from the fimaNfipClaims data set.\n# Note: the data_set argument is not case sensitive\nretrieved_data <- open_fema(data_set = \"fimanfipclaims\", top_n = 10)\n\n# view the data\nretrieved_data\n```\n\n    ## # A tibble: 10 \u00d7 73\n    ##    agriculture\u2026\u00b9 asOfDate            basem\u2026\u00b2 polic\u2026\u00b3 crsCl\u2026\u2074 dateOfLoss         \n    ##    <chr>         <dttm>              <chr>   <chr>   <chr>   <dttm>             \n    ##  1 FALSE         2020-01-22 00:00:00 NULL    1       8       1998-02-07 00:00:00\n    ##  2 FALSE         2020-01-22 00:00:00 NULL    1       8       2005-08-29 00:00:00\n    ##  3 FALSE         2020-01-22 00:00:00 NULL    1       9       1998-09-28 00:00:00\n    ##  4 FALSE         2019-09-19 00:00:00 1       1       9       1994-10-07 00:00:00\n    ##  5 FALSE         2019-09-19 00:00:00 NULL    1       8       1996-03-11 00:00:00\n    ##  6 FALSE         2020-01-22 00:00:00 NULL    1       NULL    1998-02-03 00:00:00\n    ##  7 FALSE         2020-01-22 00:00:00 NULL    1       5       2017-08-27 00:00:00\n    ##  8 FALSE         2019-10-19 00:00:00 NULL    1       NULL    1992-09-11 00:00:00\n    ##  9 FALSE         2019-10-19 00:00:00 NULL    1       8       1998-09-28 00:00:00\n    ## 10 FALSE         2019-09-19 00:00:00 NULL    1       8       1995-03-11 00:00:00\n    ## # \u2026 with 67 more variables: elevatedBuildingIndicator <chr>,\n    ## #   elevationCertificateIndicator <chr>, elevationDifference <chr>,\n    ## #   baseFloodElevation <chr>, ratedFloodZone <chr>, houseWorship <chr>,\n    ## #   locationOfContents <chr>, lowestAdjacentGrade <chr>,\n    ## #   lowestFloorElevation <chr>, numberOfFloorsInTheInsuredBuilding <chr>,\n    ## #   nonProfitIndicator <chr>, obstructionType <chr>, occupancyType <chr>,\n    ## #   originalConstructionDate <dttm>, originalNBDate <dttm>, \u2026\n\nThere are a variety of other ways to more precisely target the data you\nwant to retrieve by specifying how many records you want returned,\nspecifying which columns in a data set to return, and applying filters\nto any of the columns in a data set. For more information and examples\nof use cases, see the [Getting\nStarted](https://github.com/ropensci/rfema/blob/main/vignettes/getting_started.md)\nvignette.\n\n------------------------------------------------------------------------\n\nPlease note that `rfema` is released with a [Contributor Code of\nConduct](https://ropensci.org/code-of-conduct/#:~:text=rOpenSci%20is%20committed%20to%20providing,understand%E2%80%9D%20or%20%E2%80%9CWhy%E2%80%9D.).\nBy contributing to the package you agree to abide by its terms.\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/README.rmd",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/ropensci/rfema/main/DESCRIPTION",
        "type": "String",
        "value": "1.0.1"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "1.0.0"
      },
      "source": "https://raw.githubusercontent.com/ropensci/rfema/main/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
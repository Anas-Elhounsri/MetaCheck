{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "github@quantenbrot.de",
        "identifier": "https://orcid.org/0000-0001-7528-3795",
        "type": "String",
        "value": "Lukas Burk"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Code of Conduct\n\nAs contributors and maintainers of this project, we pledge to respect all people who \ncontribute through reporting issues, posting feature requests, updating documentation,\nsubmitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for\neveryone, regardless of level of experience, gender, gender identity and expression,\nsexual orientation, disability, personal appearance, body size, race, ethnicity, age, or religion.\n\nExamples of unacceptable behavior by participants include the use of sexual language or\nimagery, derogatory comments or personal attacks, trolling, public or private harassment,\ninsults, or other unprofessional conduct.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments,\ncommits, code, wiki edits, issues, and other contributions that are not aligned to this \nCode of Conduct. Project maintainers who do not follow the Code of Conduct may be removed \nfrom the project team.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by \nopening an issue or contacting one or more of the project maintainers.\n\nThis Code of Conduct is adapted from the Contributor Covenant \n(http://contributor-covenant.org), version 1.0.0, available at \nhttp://contributor-covenant.org/version/1/0/0/\n"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/.github/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jemus42/tRakt"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jemus42/tRakt"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jemus42/tRakt"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": [
          "https://github.com/jemus42/tRakt/actions/workflows/R-CMD-check.yaml",
          "https://app.codecov.io/gh/jemus42/tRakt"
        ]
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2014-07-01T11:48:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-09-15T15:12:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A trakt.tv API wrapper in R."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/DESCRIPTION",
        "type": "String",
        "value": "A wrapper for the <https://trakt.tv> API to retrieve data\n    about shows and movies, including user ratings, credits and related\n    metadata. Additional functions retrieve user-specific information\n    including collections and history of watched items. A full API\n    reference is available at <https://trakt.docs.apiary.io>."
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A wrapper for the <https://trakt.tv> API to retrieve data about shows and movies, including user ratings, credits and related metadata. Additional functions retrieve user-specific information including collections and history of watched items. A full API reference is available at <https://trakt.docs.apiary.io>."
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9868650949989599,
      "result": {
        "original_header": "tRakt <a href=\"https://jemus42.github.io/tRakt\"><img src=\"man/figures/logo.png\" align=\"right\" height=\"139\" alt=\"tRakt website\" /></a>",
        "type": "Text_excerpt",
        "value": "\n`tRakt` lets you retrieve data from [trakt.tv](https://trakt.tv/), a\nsite similar to [IMDb](https://imdb.com) with a wider focus, yet smaller\nuser base. The site also enables media-center integration, so you can\nautomatically sync your collection and watch progress, as well as\nscrobble playback and ratings via [Plex](https://www.plex.tv/),\n[Kodi](https://kodi.tv/) and streaming services like Netflix and\nAppleTV+.  \nAnd, most importantly, [trakt.tv has a publicly available\nAPI](https://trakt.docs.apiary.io), which makes this package possible\nand allows you to collect all that nice data people have contributed. \nPlease note that while this package is *basically* an API-client, it is\na little more opinionated and might deliver results that do not exactly\nmatch the data delivered by the API. The primary motivation for this\npackage is to retrieve data that is easily processable for data analysis\nand display, which is why it tries hard to coerce most data into tabular\nform instead of using nested lists, which is what the direct translation\nof the API results would look like.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9113615258939213,
      "result": {
        "original_header": "Credentials",
        "type": "Text_excerpt",
        "value": "The API requires at least a `client id` for the API calls.  \nLoading the package (or calling its functions via `tRakt::` wil\nautomatically set the app\u2019s credentials for authentication, but for\nextended use you should set your own credentials via environment\nvariables in your `.Renviron` like this:\n``` sh\n# tRakt\ntrakt_client_id=12fc1de7[...]3d629afdf2\ntrakt_client_secret=justabunchofstuffhere\n```\n \n- `trakt_client_id` **Required**. It\u2019s used in the HTTP headers for the\n  API calls, which is kind of a biggie.\n- `trakt_client_secret`: **Optional**(ish). This is only required if you\n  intend to make an authenticated request, which is only required by a\n  small number of implemented API methods (see\n  `vignette(\"Implemented-API-methods\")`). You can use this package\n  perfectly fine for basic data collection and you can authenticate\n  using the package\u2019s credentials without registering an application on\n  trakt.tv. \nYou theoretically never need to supply your own credentials. However, if\nyou want to actually use this package for some project, I do not\nrecommend relying on the package\u2019s credentials due to API rate limits.\nIn any case, trakt.tv is free.  \nBe nice to their servers.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9240949813383974,
      "result": {
        "original_header": "Code of Conduct",
        "type": "Text_excerpt",
        "value": "Please note that the **tRakt** project is released with a [Contributor\nCode of Conduct](.github/CODE_OF_CONDUCT.md). By contributing to this\nproject, you agree to abide by its terms.\n \n"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://www.repostatus.org/#wip"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jemus42/tRakt/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jemus42/tRakt/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "jemus42/tRakt"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tRakt "
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "description",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jemus42/tRakt/main/DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/DESCRIPTION",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/DESCRIPTION",
        "type": "Url",
        "value": "DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "homepage": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://jemus42.github.io/tRakt"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tRakt"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "tRakt <a href=\"https://jemus42.github.io/tRakt\"><img src=\"man/figures/logo.png\" align=\"right\" height=\"139\" alt=\"tRakt website\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "Get it from GitHub:\n\n``` r\nif (!(\"pak\" %in% installed.packages())) {\n  install.packages(\"pak\")\n}\npak::pak(\"jemus42/tRakt\")\n```\n\n\u2026or from [r-universe](https://jemus42.r-universe.dev/tRakt):\n\n``` r\ninstall.packages(\"tRakt\", repos = \"https://jemus42.r-universe.dev\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/jemus42/tRakt/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://github.com/jemus42/tRakt/issues"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://github.com/jemus42/tRakt/issues"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "r, r-package, rstats, trakt, trakt-api, trakttv"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "trakt-api",
          "trakttv",
          "r",
          "rstats",
          "r-package",
          "trakt"
        ]
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "YEAR: 2019\nCOPYRIGHT HOLDER: Lukas Burk\n"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/DESCRIPTION",
        "type": "String",
        "value": "MIT + file LICENSE"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/MIT",
        "spdx_id": "https://spdx.org/licenses/MIT",
        "type": "License",
        "value": "https://spdx.org/licenses/MIT"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jemus42/tRakt/main/man/figures/logo.png"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tRakt"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "tRakt: Get Data from 'trakt.tv'"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "jemus42"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/DESCRIPTION",
        "type": "String",
        "value": "tRakt"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 197442,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1257,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "type": "Programming_language",
        "url": "https://r-project.org",
        "value": "R",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jemus42/tRakt/main/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://github.com/jemus42/tRakt/blob/main/README.md"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/jemus42/tRakt/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jemus42",
          "type": "User"
        },
        "date_created": "2025-03-16T16:25:27Z",
        "date_published": "2025-03-16T16:27:47Z",
        "description": "This is been well over a year of \"hobby project staleness says what?\", but alas, it is done(ish).\r\n\r\n## Switch from `{httr}` to `{httr2}`\r\n\r\nThis should have been a small under the hood change, but it also enabled major changes in the way I'm handling API secrets, allowing me to include my encrypted client secret with the package directly.  \r\nThis should make it more convenient for users to make authenticated requests without having to register their own app on trakt.tv.\r\n\r\nThe main user-facing highlight however should probably be more stable API interactions including\r\n\r\n- Automatic retries in case of errors (up to 3, currently not configurable)\r\n- Caching of API results to `getOption(\"tRakt_cache_dir\")`, which is pruned\r\n  - after 1 week by default (option `tRakt_cache_max_age`)\r\n  - after exceeding a total of 100MB (option `tRakt_cache_max_size`)\r\n\r\n## Minor changes\r\n\r\n- Remove `magrittr` import and use `|>` internally, hence bumping the R dependency to `>= 4.1`.\r\n- Clean up unused package imports.\r\n- `tRakt_sitrep()` is now available to check general settings and API credentials.\r\n- Switch to `{testthat}` 3e.\r\n",
        "html_url": "https://github.com/jemus42/tRakt/releases/tag/v0.17.0",
        "name": "tRakt 0.17.0",
        "release_id": 206099313,
        "tag": "v0.17.0",
        "tarball_url": "https://api.github.com/repos/jemus42/tRakt/tarball/v0.17.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jemus42/tRakt/releases/206099313",
        "value": "https://api.github.com/repos/jemus42/tRakt/releases/206099313",
        "zipball_url": "https://api.github.com/repos/jemus42/tRakt/zipball/v0.17.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jemus42",
          "type": "User"
        },
        "date_created": "2022-08-28T16:32:22Z",
        "date_published": "2022-08-28T17:36:48Z",
        "description": "- Add GitHub actions via `usethis::use_github_actions()`\r\n- Use the tidy CI setup via `usethis::use_tidy_ci()`, this bumps the R dependency to `>= 3.2`.\r\n\r\n## Authenticated requests\r\n\r\nBy default, all requests to the API are now made using authentication _if_ a `trakt_client_secret` is set. See `?trakt_credentials()` for details on how to set your credentials.  \r\nIf no secret is available, unauthenticated requests are made as in previous versions. In this case, you still **need** either the built-in or your own `trakt_client_id`.\r\n\r\nOAuth2 support comes with the need to handle secrets, i.e. `.httr-oauth` files. This can be a pain with headless/automated setups, which is why I am trying to keep \"no auth needed\" as the default, as most (implemented) endpoints don't strictly require authentication.\r\n\r\nSee `vignette(\"Implemented-API-methods\", package = \"tRakt\")` for an overview of implemented methods with an indicator on whether authentication is required (it usually isn't).\r\n\r\n## New functions\r\n\r\n- `episodes_summary()` [`shows/:id/seasons/:season/episodes/:episode`]: What `seasons_season()` and `seasons_summary()` do, but for a single episode. Only really implemented for completeness' sake. [Wraps this method](https://trakt.docs.apiary.io/#reference/episodes/summary).\r\n- `user_profile()` [`user/:id`]: [Get a user's profile](https://trakt.docs.apiary.io/#reference/users/profile/get-user-profile).\r\n- `user_lists()` [`users/:id/lists`]: Get [all user lists](https://trakt.docs.apiary.io/#reference/users/lists/get-custom-list).\r\n- `user_list()` [`users/:id/lists/:list_id`]: Get a [single list](https://trakt.docs.apiary.io/#reference/users/list/get-custom-list).\r\n- `user_list_items()` [`users/:id/lists/:list_id/items/:type`]: Get the [items in said lists](https://trakt.docs.apiary.io/#reference/users/list-items/get-custom-list).\r\n\r\n## The Renamingering\r\n\r\nRename _all the things_ to snake_case and drop the `trakt.` prefix.  \r\nThis results in (most) functions mapping directly to [API endpoints](https://trakt.docs.apiary.io/) in the form `section_method`,\r\ne.g. the API endpoint `movies/collected` is handled by function `movies_collected()`. \r\n\r\n### Search\r\n\r\n- `trakt.search` -> `search_query()`\r\n- `trakt.search.byid` -> `search_id()`\r\n\r\n### Dynamic Lists\r\n\r\n- `trakt.popular`\r\n  - -> `movies_popular()`\r\n  - -> `shows_popular()`\r\n- `trakt.trending`\r\n  - -> `movies_trending()`\r\n  - -> `shows_trending()`\r\n- `trakt.anticipated`\r\n  - -> `movies_anticipated()`\r\n  - -> `shows_anticipated()`\r\n- `trakt.played`\r\n  - -> `movies_played()`\r\n  - -> `shows_played()`\r\n- `trakt.watched`\r\n  - -> `movies_watched()`\r\n  - -> `shows_watched()`\r\n- `trakt.collected()`\r\n  - -> `movies_collected()`\r\n  - -> `shows_collected()`\r\n- `trakt.updates()`\r\n  - -> `movies_updates()`\r\n  - -> `shows_updates()`\r\n  \r\n### Movies\r\n\r\n- `trakt.movies.summary` -> `movies_summary()`\r\n- `trakt.movies.boxoffice` -> `movies_boxoffice()`\r\n- `trakt.movies.releases` -> `movies_releases()`\r\n- `trakt.movies.people` -> `movies_people()`\r\n  \r\n### Shows\r\n\r\n- `trakt.shows.summary` -> `shows_summary()`\r\n- `trakt.shows.people` -> `shows_people()`\r\n\r\n### Seasons\r\n\r\n- `trakt.seasons.summary` -> `seasons_summary()`\r\n- `trakt.seasons.season` -> `seasons_season()` (It's silly, I know, but oh well)\r\n\r\n### Ratings\r\n\r\n- `trakt.movies.ratings` -> `movies_ratings()`\r\n- `trakt.shows.ratings` -> `shows_ratings()`\r\n- `trakt.seasons.ratings` -> `seasons_ratings()`\r\n- `trakt.episodes.ratings` -> `episodes_ratings()`\r\n\r\n### Related\r\n\r\n- `trakt.movies.related` -> `movies_related()`\r\n- `trakt.shows.related` -> `shows_related()`\r\n\r\n### Stats\r\n\r\n- `trakt.movies.stats` -> `movies_stats()`\r\n- `trakt.shows.stats` -> `shows_stats()`\r\n- `trakt.seasons.stats` -> `seasons_stats()`\r\n- `trakt.episodes.stats` -> `episodes_stats()`\r\n\r\n### People \r\n\r\n- `trakt.people.summary` -> `people_summary()`\r\n- `trakt.people.movies` -> `people_movies()`\r\n- `trakt.people.shows` -> `people_shows()`\r\n\r\n\r\n### User functions\r\n\r\n- `trakt.user.network`\r\n  - -> `user_followers()`\r\n  - -> `user_following()`\r\n  - -> `user_friends()`\r\n- `trakt.user.collection` -> `user_collection()`\r\n- `trakt.user.history` -> `user_history()`\r\n- `trakt.user.ratings` -> `user_ratings()`\r\n- `trakt.user.stats` -> `user_stats()`\r\n- `trakt.user.watched` -> `user_watched()`\r\n- `trakt.user.watchlist` -> `user_watchlist()`\r\n",
        "html_url": "https://github.com/jemus42/tRakt/releases/tag/v0.16.0",
        "name": "tRakt 0.16.0",
        "release_id": 75578142,
        "tag": "v0.16.0",
        "tarball_url": "https://api.github.com/repos/jemus42/tRakt/tarball/v0.16.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jemus42/tRakt/releases/75578142",
        "value": "https://api.github.com/repos/jemus42/tRakt/releases/75578142",
        "zipball_url": "https://api.github.com/repos/jemus42/tRakt/zipball/v0.16.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jemus42",
          "type": "User"
        },
        "date_created": "2019-10-04T16:12:50Z",
        "date_published": "2019-10-04T16:23:39Z",
        "description": "This is a big one, but not 1.0.0 big one I guess.  \r\nThis is a consolidation release with lots of internal improvements, but for the 1.0.0 I decided to overhaul the structure of the package *again*, so before I completely break any kind of backwards compatiblity, I thought I'd get this one out.\r\n\r\n## Consolidation for the people\r\n\r\n- Major refactor of the docs. Sadly, the user will only notice a little more consistency.\r\n- Consolidate related functions into the same Rd page\r\n- Centrally document common parameters and reuse them where needed\r\n- Also consolidate many similar functions by factoring out the relevant bits into more flexible helper functions. In some cases those are exported as well.\r\n- In the process, some functions where partially renamed (`.show.` -> `.shows.`, `.movie.` -> `.movies.`) for consistency.\r\n\r\n- Rename `get_trakt_credentials` -> `trakt_credentials`\r\n- Many functions now return much flatter output, notably `*people*` functions. They return a `list` with `cast` and `crew` objects, which in turn are both flat `tibbles`.\r\n\r\n## Features\r\n\r\n- Improved search function (`trakt.search`). \r\n  - If the result has a `year` that is `NA` but a search `score == 1000`, that's probably bad and dropped.\r\n- Added more of the automated list methods, like most anticipated, most played and most watched items.\r\n- Added `trakt.user.history` for user/:id/history methods\r\n",
        "html_url": "https://github.com/jemus42/tRakt/releases/tag/v0.15.0",
        "name": " tRakt 0.15.0",
        "release_id": 20479365,
        "tag": "v0.15.0",
        "tarball_url": "https://api.github.com/repos/jemus42/tRakt/tarball/v0.15.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jemus42/tRakt/releases/20479365",
        "value": "https://api.github.com/repos/jemus42/tRakt/releases/20479365",
        "zipball_url": "https://api.github.com/repos/jemus42/tRakt/zipball/v0.15.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jemus42",
          "type": "User"
        },
        "date_created": "2019-02-22T21:02:59Z",
        "date_published": "2019-02-22T21:24:40Z",
        "description": "# tRakt 0.14.0\r\n\r\nMany functions were refactored, which in some cases changes the output.  \r\nNot only do most functions return a `tibble` now, but some additionally computed variables have been removed as well.\r\n\r\n## Starting to clean things up with some major housekeeping\r\n\r\n- `usethis::use_*` all the things, basically.\r\n- Add a `pkgdown` site and a `README.Rmd`\r\n- Use `codecov`\r\n- Apply `styler::style_pkg()`\r\n- Update documentation to use markdown\r\n- Redo vignette\r\n- Tests. So many tests.\r\n\r\n## Less plyr, more purrr\r\n\r\n- Completely removed plyr dependency in favor of purrr",
        "html_url": "https://github.com/jemus42/tRakt/releases/tag/v0.14.0",
        "name": "Is this thing still on?",
        "release_id": 15728462,
        "tag": "v0.14.0",
        "tarball_url": "https://api.github.com/repos/jemus42/tRakt/tarball/v0.14.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jemus42/tRakt/releases/15728462",
        "value": "https://api.github.com/repos/jemus42/tRakt/releases/15728462",
        "zipball_url": "https://api.github.com/repos/jemus42/tRakt/zipball/v0.14.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jemus42",
          "type": "User"
        },
        "date_created": "2015-03-12T02:28:33Z",
        "date_published": "2015-03-12T02:52:18Z",
        "description": "- **Rename** `trakt.getEpisodeData` -> `trakt.get_all_episodes`\n  - Expand handling of `season_nums` argument to make it easier to get all episodes of a show.\n  - Vectorize to enable multiple target input\n- **Rename** `trakt.getFullShowData` -> `trakt.get_full_showdata`\n",
        "html_url": "https://github.com/jemus42/tRakt/releases/tag/v0.13.0",
        "name": "Less camelCase for the Greater Good",
        "release_id": 1040942,
        "tag": "v0.13.0",
        "tarball_url": "https://api.github.com/repos/jemus42/tRakt/tarball/v0.13.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jemus42/tRakt/releases/1040942",
        "value": "https://api.github.com/repos/jemus42/tRakt/releases/1040942",
        "zipball_url": "https://api.github.com/repos/jemus42/tRakt/zipball/v0.13.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jemus42",
          "type": "User"
        },
        "date_created": "2015-03-08T05:00:06Z",
        "date_published": "2015-03-08T05:03:43Z",
        "description": "### v0.12.0\n\n#### API changes, functional fixes\n- **Add** `dropunaired` param to `trakt.seasons.summary` (defaults to `TRUE`).\n  - Requires `extended` to be more than `min` since the required `aired_episodes` field\n    is only present with higher levels of detail.\n- **Add** `extended` param to `trakt.user.f*`\n- **Fix** `trakt.user.f*` now return `NULL` when the user is private instead of failing.\n\n#### Internal changes\n- User internal, generalized functions to reduce duplicate code for the following:\n  - `trakt.*.popular`\n  - `trakt.*.related`\n  - `trakt.*.trending`\n  - `trakt.*.summary`\n  - `trakt.*.ratings`\n\n##### Vectorization improvements\n- **Add** multiple target input support (vectorization) for:\n  - `trakt.user.f*` functions: Results will be `rbind`ed together and a `source_user` column is appended.\n  - `trakt.seasons.season`: Soon to make `trakt.getEpisodeData` obsolete.\n  - `trakt.*.summary`: Forces `force_data_frame` to `TRUE` to enable `rbind`ing.\n  - `trakt.*.related`: Appends `source` column containing respective input `id`.\n  - `trakt.*.ratings`: Returns result as a `list` with each entry containing data for each\n    show or movie to accommodate the `distribution` variable (`data.frame`)\n  - `trakt.people.summary`: Appends `person` column with `target` id.\n  - `trakt.*.watching`: Returns `data.frame` with `source` column containing each `target`.\n",
        "html_url": "https://github.com/jemus42/tRakt/releases/tag/v0.12.0",
        "name": "Vectorization, Generalization, Bugfixization",
        "release_id": 1026895,
        "tag": "v0.12.0",
        "tarball_url": "https://api.github.com/repos/jemus42/tRakt/tarball/v0.12.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jemus42/tRakt/releases/1026895",
        "value": "https://api.github.com/repos/jemus42/tRakt/releases/1026895",
        "zipball_url": "https://api.github.com/repos/jemus42/tRakt/zipball/v0.12.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jemus42",
          "type": "User"
        },
        "date_created": "2015-03-06T22:18:23Z",
        "date_published": "2015-03-06T22:52:47Z",
        "description": "#### API changes, functional fixes\n- **Add** `build_trakt_url` to ease trakt API URL assembly and reduce duplicate code.\n- **Add** `force_data_frame` option to `trakt.*.summary`: Forces unnesting.\n- **Rename** `trakt.show.stats` to `trakt.stats`, will work with both movies and shows\n  as soon as the API endpoint actually works.\n\n#### Minor changes\n- Expand `@family` tags in docs a little\n",
        "html_url": "https://github.com/jemus42/tRakt/releases/tag/v0.11.3",
        "name": "v0.11.3",
        "release_id": 1024847,
        "tag": "v0.11.3",
        "tarball_url": "https://api.github.com/repos/jemus42/tRakt/tarball/v0.11.3",
        "type": "Release",
        "url": "https://api.github.com/repos/jemus42/tRakt/releases/1024847",
        "value": "https://api.github.com/repos/jemus42/tRakt/releases/1024847",
        "zipball_url": "https://api.github.com/repos/jemus42/tRakt/zipball/v0.11.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jemus42",
          "type": "User"
        },
        "date_created": "2015-03-04T21:34:28Z",
        "date_published": "2015-03-05T19:11:27Z",
        "description": "### v0.11.2\n\n#### API changes, functional fixes\n- **Add** `trakt.movie.watching` and `trakt.show.watching`: Get trakt.tv users watching.\n- **Add** `trakt.movie.releases`: Gets release dates & certifications per movie.\n- **Fix** `trakt.search.byid`: Used to only work on shows, now actually works on movies.\n- **Fix** `convert_datetime` (internal): improve reliability.\n\n#### Minor changes\n- Fix documentation error in `*.movie.*` functions.\n- Added tests for new functions\n",
        "html_url": "https://github.com/jemus42/tRakt/releases/tag/v0.11.2",
        "name": "Some New Stuff, Some Fixed Stuff",
        "release_id": 1018843,
        "tag": "v0.11.2",
        "tarball_url": "https://api.github.com/repos/jemus42/tRakt/tarball/v0.11.2",
        "type": "Release",
        "url": "https://api.github.com/repos/jemus42/tRakt/releases/1018843",
        "value": "https://api.github.com/repos/jemus42/tRakt/releases/1018843",
        "zipball_url": "https://api.github.com/repos/jemus42/tRakt/zipball/v0.11.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jemus42",
          "type": "User"
        },
        "date_created": "2015-03-03T02:00:39Z",
        "date_published": "2015-03-03T20:44:41Z",
        "description": "- Internal restructuring (moving functionally similar functions together)\n  - **TODO**: Create generic functions for both movie and show functions to reduce duplicate code\n- **Add** `extended` param to `trakt.user.watchlist`\n- Improve consistency between `trakt.user.watched` and `trakt.user.collection`\n  - Rename `slug` to `id.slug`\n  - Ensure proper datetime conversion\n- **Fix** error in `trakt.user.watchlist` when `type = shows` was ignored by accident\n",
        "html_url": "https://github.com/jemus42/tRakt/releases/tag/v0.11.1",
        "name": "Moving Stuff Around and Calling it Progress",
        "release_id": 1009461,
        "tag": "v0.11.1",
        "tarball_url": "https://api.github.com/repos/jemus42/tRakt/tarball/v0.11.1",
        "type": "Release",
        "url": "https://api.github.com/repos/jemus42/tRakt/releases/1009461",
        "value": "https://api.github.com/repos/jemus42/tRakt/releases/1009461",
        "zipball_url": "https://api.github.com/repos/jemus42/tRakt/zipball/v0.11.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jemus42",
          "type": "User"
        },
        "date_created": "2015-03-01T23:16:07Z",
        "date_published": "2015-03-01T23:23:35Z",
        "description": "- **Rename** `trakt.getSeasons`  -> `trakt.seasons.summary` for consistency with the trakt API.\n- **Rename** `trakt.show.season` -> `trakt.seasons.season` for consistency with the trakt API.\n- **Rename** `getNameFromUrl`    -> `parse_trakt_url` to be more descriptive. Also, de-camelCasezation. \n- Update vignette to reflect the above changes\n- **Add** some `people` functions:\n  - `trakt.people.summary`\n  - `trakt.people.movies`\n  - `trakt.people.shows`\n- Unify output of `trakt.show.people` and `trakt.movie.people`\n- **Add** `extended` argument to `trakt.movies.related` and `trakt.shows.related` (defaults to `min`)\n- **Add** `page` param to [paginated](http://docs.trakt.apiary.io/#introduction/pagination) functions:\n  - `trakt.shows.popular`\n  - `trakt.shows.trending`\n  - `trakt.movies.popular`\n  - `trakt.movies.trending`\n- The usual bug fixes\n",
        "html_url": "https://github.com/jemus42/tRakt/releases/tag/v0.11.0",
        "name": "The \"People\u2026 and also other stuff\"-Update",
        "release_id": 1000767,
        "tag": "v0.11.0",
        "tarball_url": "https://api.github.com/repos/jemus42/tRakt/tarball/v0.11.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jemus42/tRakt/releases/1000767",
        "value": "https://api.github.com/repos/jemus42/tRakt/releases/1000767",
        "zipball_url": "https://api.github.com/repos/jemus42/tRakt/zipball/v0.11.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jemus42",
          "type": "User"
        },
        "date_created": "2015-02-28T23:58:11Z",
        "date_published": "2015-03-01T00:34:30Z",
        "description": "- `trakt.user.stats`:  \n  - Tidy up rating distribution \n  - **Remove** `to.data.frame` option because the output is too messy\n- Add another `@family` tag to docs for aggregation functions (`.popular`, `.trending`, `.related`)\n- Individual functions don't have to warn about missing headers, that's `trakt.api.call`'s job.\n- `trakt.getEpisodeData`: \n  - Explicitly drop episodes with `NA` firstaired fields\n  - The `episode_abs` field is usually `NA`, so let's dump `epnum` on it\n- Use `extended = \"min\"` as default across functions for consistency with the trakt API\n",
        "html_url": "https://github.com/jemus42/tRakt/releases/tag/v0.10.3",
        "name": "Consistency is Good. Right?",
        "release_id": 999163,
        "tag": "v0.10.3",
        "tarball_url": "https://api.github.com/repos/jemus42/tRakt/tarball/v0.10.3",
        "type": "Release",
        "url": "https://api.github.com/repos/jemus42/tRakt/releases/999163",
        "value": "https://api.github.com/repos/jemus42/tRakt/releases/999163",
        "zipball_url": "https://api.github.com/repos/jemus42/tRakt/zipball/v0.10.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jemus42",
          "type": "User"
        },
        "date_created": "2015-02-26T18:56:10Z",
        "date_published": "2015-02-26T19:01:51Z",
        "description": "- Add `year` parameter to `trakt.search`\n- If `query` in `trakt.search` ends with a 4 digit number, this will be used as `year` parameter and stripped from the original `query`\n- Minor internal fixes\n",
        "html_url": "https://github.com/jemus42/tRakt/releases/tag/v0.10.2",
        "name": "Oh Search, You Silly Goose",
        "release_id": 992450,
        "tag": "v0.10.2",
        "tarball_url": "https://api.github.com/repos/jemus42/tRakt/tarball/v0.10.2",
        "type": "Release",
        "url": "https://api.github.com/repos/jemus42/tRakt/releases/992450",
        "value": "https://api.github.com/repos/jemus42/tRakt/releases/992450",
        "zipball_url": "https://api.github.com/repos/jemus42/tRakt/zipball/v0.10.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jemus42",
          "type": "User"
        },
        "date_created": "2015-02-25T19:50:04Z",
        "date_published": "2015-02-25T20:13:34Z",
        "description": "- Add `testthat` tests\n- Internal changes to how/where datetime variables are converted (user doesn't see any of that)\n  - If `lubridate::parse_date_time` fails, `as.POSIXct` is used as a fallback \n- Various bug fixes\n",
        "html_url": "https://github.com/jemus42/tRakt/releases/tag/v0.10.1",
        "name": "Use Tests. Tests are Good.",
        "release_id": 988449,
        "tag": "v0.10.1",
        "tarball_url": "https://api.github.com/repos/jemus42/tRakt/tarball/v0.10.1",
        "type": "Release",
        "url": "https://api.github.com/repos/jemus42/tRakt/releases/988449",
        "value": "https://api.github.com/repos/jemus42/tRakt/releases/988449",
        "zipball_url": "https://api.github.com/repos/jemus42/tRakt/zipball/v0.10.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jemus42",
          "type": "User"
        },
        "date_created": "2015-02-23T19:01:22Z",
        "date_published": "2015-02-23T19:03:38Z",
        "description": "- Fix a whole bunch of typos I only found _after_ the CRAN release, naturally\n- Improve consistency across functions\n  - The date fields ending in `.posix` have been removed and the existing date fiels are now converted to `POSIXct` to remove cluttering\n  - `firstaired.posix` -> `first_aired` etc\n- Update vignette for the above change\n\nUnfortunately, this and the previous release are kind of important if you start writing code with it, so it's kind of crappy that I have to wait a while to push an update to CRAN, but oh well. That's what GitHub is for.\n",
        "html_url": "https://github.com/jemus42/tRakt/releases/tag/v0.8.1",
        "name": "Well, I Should Have Done that Last Week",
        "release_id": 979626,
        "tag": "v0.8.1",
        "tarball_url": "https://api.github.com/repos/jemus42/tRakt/tarball/v0.8.1",
        "type": "Release",
        "url": "https://api.github.com/repos/jemus42/tRakt/releases/979626",
        "value": "https://api.github.com/repos/jemus42/tRakt/releases/979626",
        "zipball_url": "https://api.github.com/repos/jemus42/tRakt/zipball/v0.8.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jemus42",
          "type": "User"
        },
        "date_created": "2015-02-22T23:57:36Z",
        "date_published": "2015-02-22T23:58:43Z",
        "description": "- Added more user-facing functions (`trakt.user.following` / `.followers` / `.friends`) because maybe I want to throw [networkD3](https://github.com/christophergandrud/networkD3) at my people\n- Improve consistency with date variables: The `.posix` variables should be removed and the existing date variables should just be properly converted to `POSIXct`\n- Improve documentation: Added `@family` tags to all functions to group them together\n- Add a package vignette\n- Minor fixes and non-breaking additions\n",
        "html_url": "https://github.com/jemus42/tRakt/releases/tag/v0.8.0",
        "name": "Barely Not Embarrassing Anymore",
        "release_id": 976783,
        "tag": "v0.8.0",
        "tarball_url": "https://api.github.com/repos/jemus42/tRakt/tarball/v0.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/jemus42/tRakt/releases/976783",
        "value": "https://api.github.com/repos/jemus42/tRakt/releases/976783",
        "zipball_url": "https://api.github.com/repos/jemus42/tRakt/zipball/v0.8.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jemus42",
          "type": "User"
        },
        "date_created": "2015-02-16T11:49:27Z",
        "date_published": "2015-02-16T18:31:25Z",
        "description": "At this point, the package includes the basic show-related functions, as well as a new group of functions for user-specific data: `trakt.user.*`  \nThese can be used to access a users `watched` items, `collection` and `stats`.\n\nBesides that, I tried my best to add a vignette, to illustrate the basic functionality as I intended it to be used.  \nI hope it doesn't break horribly now.\n",
        "html_url": "https://github.com/jemus42/tRakt/releases/tag/v0.7.2",
        "name": "More functions, more yay",
        "release_id": 956929,
        "tag": "v0.7.2",
        "tarball_url": "https://api.github.com/repos/jemus42/tRakt/tarball/v0.7.2",
        "type": "Release",
        "url": "https://api.github.com/repos/jemus42/tRakt/releases/956929",
        "value": "https://api.github.com/repos/jemus42/tRakt/releases/956929",
        "zipball_url": "https://api.github.com/repos/jemus42/tRakt/zipball/v0.7.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jemus42",
          "type": "User"
        },
        "date_created": "2015-02-11T23:28:45Z",
        "date_published": "2015-02-11T23:51:52Z",
        "description": "As of now, all the functions are [APIv2](http://docs.trakt.apiary.io/) ready.  \nThe package is able to consistently (I hope) output the data provided by the trakt.tv API, and it also provides a generic wrapper function which can be used to query any APIv2 endpoint.\n\nAs far as authentication is concerned, **no OAuth2 methods are supported**, but the package uses your credentials (see [Readme](https://github.com/jemus42/tRakt-package/blob/master/README.md) for details) to make proper queries to the API.  \nSince the goal of this function is to collect data about tv shows, user-specific methods which require OAauth2 are not a priority.\n\nThe next step is to implement more API methods. Maybe I'll tip my toe into movie data, too.\n",
        "html_url": "https://github.com/jemus42/tRakt/releases/tag/v0.5.1",
        "name": "Well, at least it doesn't blow up anymore! Probably!",
        "release_id": 943647,
        "tag": "v0.5.1",
        "tarball_url": "https://api.github.com/repos/jemus42/tRakt/tarball/v0.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/jemus42/tRakt/releases/943647",
        "value": "https://api.github.com/repos/jemus42/tRakt/releases/943647",
        "zipball_url": "https://api.github.com/repos/jemus42/tRakt/zipball/v0.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jemus42",
          "type": "User"
        },
        "date_created": "2014-07-22T19:48:55Z",
        "date_published": "2014-07-23T14:36:31Z",
        "description": "After a lot of back and forth on JSON dependencies, this version only needs one JSON package dependency, namely `jsonlite`, and it circumvents the UTF-8 issues by manually pumping some stuff through `iconv`, so technically it should be stable _and_ spit out decent data structures.\n\nLong story short: It's kind of functional, but there's still a lot to do.\n",
        "html_url": "https://github.com/jemus42/tRakt/releases/tag/v0.3.3",
        "name": "It barely works!",
        "release_id": 446322,
        "tag": "v0.3.3",
        "tarball_url": "https://api.github.com/repos/jemus42/tRakt/tarball/v0.3.3",
        "type": "Release",
        "url": "https://api.github.com/repos/jemus42/tRakt/releases/446322",
        "value": "https://api.github.com/repos/jemus42/tRakt/releases/446322",
        "zipball_url": "https://api.github.com/repos/jemus42/tRakt/zipball/v0.3.3"
      },
      "technique": "GitHub_API"
    }
  ],
  "repository_status": [
    {
      "confidence": 1,
      "result": {
        "description": "WIP \u2013 Initial development is in progress, but there\nhas not yet been a stable, usable release suitable for the\npublic.",
        "type": "Url",
        "value": "https://www.repostatus.org/#wip"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 00:19:59",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 24
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "tRakt <a href=\"https://jemus42.github.io/tRakt\"><img src=\"man/figures/logo.png\" align=\"right\" height=\"139\" alt=\"tRakt website\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "``` r\nlibrary(tRakt)\nlibrary(dplyr) # for convenience\n```\n\nSearch for a specific show from 2013 (and not the US adaptation) and get\nbasic info:\n\n``` r\nshow_info <- search_query(\"Utopia\", year = \"2013\", type = \"show\")\nglimpse(show_info)\n#> Rows: 1\n#> Columns: 9\n#> $ type  <chr> \"show\"\n#> $ score <dbl> 5.787301e+17\n#> $ title <chr> \"Utopia\"\n#> $ year  <int> 2013\n#> $ trakt <chr> \"46241\"\n#> $ slug  <chr> \"utopia\"\n#> $ tvdb  <chr> \"264991\"\n#> $ imdb  <chr> \"tt2384811\"\n#> $ tmdb  <chr> \"46511\"\n```\n\nWe\u2019ll use the `$trakt` ID for subsequent requests.\n\nGet season information for the show using its trakt ID:\n\n``` r\nseasons_summary(show_info$trakt, extended = \"full\") |>\n  glimpse()\n#> Rows: 2\n#> Columns: 14\n#> $ season         <int> 1, 2\n#> $ rating         <dbl> 8.40741, 8.08333\n#> $ votes          <int> 351, 216\n#> $ episode_count  <int> 6, 6\n#> $ aired_episodes <int> 6, 6\n#> $ title          <chr> \"Season 1\", \"Season 2\"\n#> $ overview       <chr> \"When a group of strangers find themselves in possessio\u2026\n#> $ first_aired    <dttm> 2013-01-15 21:00:00, 2014-07-14 20:00:00\n#> $ updated_at     <dttm> 2025-08-12 06:03:40, 2025-08-12 06:03:40\n#> $ network        <chr> \"Channel 4\", \"Channel 4\"\n#> $ original_title <lgl> NA, NA\n#> $ trakt          <chr> \"56008\", \"56009\"\n#> $ tvdb           <chr> \"507598\", \"524149\"\n#> $ tmdb           <chr> \"54695\", \"54696\"\n```\n\nGet episode data for the first season, this time using the show\u2019s URL\nslug:\n\n``` r\nseasons_episodes(show_info$trakt, seasons = 1, extended = \"full\") |>\n  glimpse()\n#> Rows: 6\n#> Columns: 20\n#> $ season                 <int> 1, 1, 1, 1, 1, 1\n#> $ episode                <int> 1, 2, 3, 4, 5, 6\n#> $ title                  <chr> \"Episode 1\", \"Episode 2\", \"Episode 3\", \"Episode\u2026\n#> $ episode_abs            <int> 1, 2, 3, 4, 5, 6\n#> $ overview               <chr> \"When  five strangers from an online comic book\u2026\n#> $ rating                 <dbl> 8.14286, 8.03480, 8.02721, 7.99512, 8.12932, 8.\u2026\n#> $ votes                  <int> 1211, 977, 882, 820, 781, 801\n#> $ comment_count          <int> 9, 0, 1, 2, 1, 2\n#> $ first_aired            <dttm> 2013-01-15 21:00:00, 2013-01-22 21:00:00, 2013-\u2026\n#> $ updated_at             <dttm> 2025-08-12 13:37:06, 2025-08-12 13:37:07, 2025-\u2026\n#> $ available_translations <list> <\"de\", \"en\", \"es\", \"fr\", \"he\", \"nl\", \"pl\", \"ru\"\u2026\n#> $ runtime                <int> 60, 49, 51, 48, 49, 62\n#> $ episode_type           <chr> \"series_premiere\", \"standard\", \"standard\", \"sta\u2026\n#> $ original_title         <lgl> NA, NA, NA, NA, NA, NA\n#> $ after_credits          <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#> $ during_credits         <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE\n#> $ trakt                  <chr> \"1405053\", \"1405054\", \"1405055\", \"1405056\", \"14\u2026\n#> $ tvdb                   <chr> \"4471351\", \"4477746\", \"4477747\", \"4477748\", \"4\u2026\n#> $ imdb                   <chr> \"tt2618234\", \"tt2618232\", \"tt2618236\", \"tt2618\u2026\n#> $ tmdb                   <chr> \"910003\", \"910004\", \"910005\", \"910006\", \"91000\u2026\n```\n\nYou cann also get episode data for all seasons, but note that episodes\nwill be included as a list-column and need further unpacking:\n\n``` r\nseasons_summary(show_info$trakt, episodes = TRUE, extended = \"full\") |>\n  pull(episodes) |>\n  bind_rows() |>\n  glimpse()\n#> Rows: 12\n#> Columns: 20\n#> $ season                 <int> 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2\n#> $ episode                <int> 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6\n#> $ title                  <chr> \"Episode 1\", \"Episode 2\", \"Episode 3\", \"Episode\u2026\n#> $ episode_abs            <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n#> $ overview               <chr> \"When  five strangers from an online comic book\u2026\n#> $ rating                 <dbl> 8.14286, 8.03480, 8.02721, 7.99512, 8.12932, 8.\u2026\n#> $ votes                  <int> 1211, 977, 882, 820, 781, 801, 796, 701, 669, 6\u2026\n#> $ comment_count          <int> 9, 0, 1, 2, 1, 2, 5, 1, 2, 2, 2, 6\n#> $ first_aired            <dttm> 2013-01-15 21:00:00, 2013-01-22 21:00:00, 2013-\u2026\n#> $ updated_at             <dttm> 2025-08-11 21:19:50, 2025-08-12 00:25:28, 2025-\u2026\n#> $ available_translations <list> <\"de\", \"en\", \"es\", \"fr\", \"he\", \"nl\", \"pl\", \"ru\"\u2026\n#> $ runtime                <int> 60, 49, 51, 48, 49, 62, 54, 51, 50, 50, 50, 53\n#> $ episode_type           <chr> \"series_premiere\", \"standard\", \"standard\", \"sta\u2026\n#> $ original_title         <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA\n#> $ after_credits          <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS\u2026\n#> $ during_credits         <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS\u2026\n#> $ trakt                  <chr> \"1405053\", \"1405054\", \"1405055\", \"1405056\", \"1\u2026\n#> $ tvdb                   <chr> \"4471351\", \"4477746\", \"4477747\", \"4477748\", \"44\u2026\n#> $ imdb                   <chr> \"tt2618234\", \"tt2618232\", \"tt2618236\", \"tt26182\u2026\n#> $ tmdb                   <chr> \"910003\", \"910004\", \"910005\", \"910006\", \"910007\u2026\n```\n\nOr alternatively, get the [trending\nshows](https://trakt.tv/shows/trending):\n\n``` r\nshows_trending()\n#> # A tibble: 10 \u00d7 8\n#>    watchers title                             year trakt slug  tvdb  imdb  tmdb \n#>       <int> <chr>                            <int> <chr> <chr> <chr> <chr> <chr>\n#>  1     6995 Wednesday                         2022 1739\u2026 wedn\u2026 3970\u2026 tt13\u2026 1190\u2026\n#>  2     4905 Dexter: Resurrection              2025 2496\u2026 dext\u2026 4525\u2026 tt33\u2026 2599\u2026\n#>  3     3138 The Gilded Age                    2022 1522\u2026 the-\u2026 3644\u2026 tt44\u2026 81723\n#>  4     2900 South Park                        1997 2177  sout\u2026 75897 tt01\u2026 2190 \n#>  5     2777 The Institute                     2025 2381\u2026 the-\u2026 4511\u2026 tt10\u2026 2533\u2026\n#>  6     2708 Last Week Tonight with John Oli\u2026  2014 60267 last\u2026 2785\u2026 tt35\u2026 60694\n#>  7     2673 Foundation                        2021 1504\u2026 foun\u2026 3669\u2026 tt08\u2026 93740\n#>  8     2205 Star Trek: Strange New Worlds     2022 1622\u2026 star\u2026 3823\u2026 tt12\u2026 1035\u2026\n#>  9     2044 Twisted Metal                     2023 1882\u2026 twis\u2026 3665\u2026 tt14\u2026 1337\u2026\n#> 10     2020 Resident Alien                    2021 1535\u2026 resi\u2026 3681\u2026 tt86\u2026 96580\n```\n\nMaybe you just want to know how long it would take you to binge through\nthese shows:\n\n``` r\nshows_trending(extended = \"full\") |>\n  transmute(\n    show = glue::glue(\"{title} ({year})\"),\n    runtime_hms = hms::hms(minutes = runtime),\n    aired_episodes = aired_episodes,\n    runtime_aired = hms::hms(minutes = runtime * aired_episodes)\n  ) |>\n  knitr::kable(\n    col.names = c(\"Show\", \"Episode Runtime\", \"Aired Episodes\", \"Total Runtime (aired)\")\n  )\n```\n\n| Show | Episode Runtime | Aired Episodes | Total Runtime (aired) |\n|:---|:---|---:|:---|\n| Wednesday (2022) | 00:42:00 | 12 | 08:24:00 |\n| Dexter: Resurrection (2025) | 00:50:00 | 6 | 05:00:00 |\n| The Gilded Age (2022) | 00:56:00 | 25 | 23:20:00 |\n| South Park (1997) | 00:22:00 | 323 | 118:26:00 |\n| The Institute (2025) | 00:58:00 | 6 | 05:48:00 |\n| Last Week Tonight with John Oliver (2014) | 00:42:00 | 340 | 238:00:00 |\n| Foundation (2021) | 00:42:00 | 25 | 17:30:00 |\n| Star Trek: Strange New Worlds (2022) | 00:55:00 | 25 | 22:55:00 |\n| Twisted Metal (2023) | 00:42:00 | 15 | 10:30:00 |\n| Resident Alien (2021) | 00:45:00 | 44 | 33:00:00 |\n\nPlease note though that episode runtime data may be inaccurate. In my\nexperience, recent shows have fairly accurate runtime data, which is\noften not the case for older shows.\n"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/DESCRIPTION",
        "type": "String",
        "value": "0.17.0.9000"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "0.17.0.9000"
      },
      "source": "https://raw.githubusercontent.com/jemus42/tRakt/main/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
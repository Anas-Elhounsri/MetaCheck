{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgments",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">"
        ],
        "type": "Text_excerpt",
        "value": "This work was funded by the California Institute of Technology Library.\n\nIGA uses multiple other open-source packages, without which it would have taken much longer to write the software. I want to acknowledge this debt. In alphabetical order, the packages are:\n\n* [Aenum](https://github.com/ethanfurman/aenum) &ndash; package for advanced enumerations\n* [Arrow](https://pypi.org/project/arrow/) &ndash; a library for creating & manipulating dates\n* [Boltons](https://github.com/mahmoud/boltons/) &ndash; package of miscellaneous Python utilities\n* [caltechdata_api](https://github.com/caltechlibrary/caltechdata_api) &ndash; package for using the CaltechDATA API\n* [CommonPy](https://github.com/caltechlibrary/commonpy) &ndash; a collection of commonly-useful Python functions\n* [dirtyjson](https://github.com/codecobblers/dirtyjson) &ndash; JSON decoder that copes with problematic JSON files and reports useful error messages\n* [flake8](https://github.com/pycqa/flake8) &ndash; Python code linter and style analyzer\n* [Ginza](https://github.com/megagonlabs/ginza) &ndash; Japanese NLP Library\n* [httpx](https://www.python-httpx.org) &ndash; HTTP client library that supports HTTP/2\n* [humanize](https://github.com/jmoiron/humanize) &ndash; make numbers more easily readable by humans\n* [idutils](https://github.com/inveniosoftware/idutils) &ndash; package for validating and normalizing various kinds of persistent identifiers\n* [ipdb](https://github.com/gotcha/ipdb) &ndash; the IPython debugger\n* [iptools](https://github.com/bd808/python-iptools) &ndash; utilities for dealing with IP addresses\n* [isbnlib](https://github.com/xlcnd/isbnlib) &ndash; utilities for dealing with ISBNs\n* [Jamo](https://github.com/JDongian/python-jamo) &ndash; Hangul character analysis\n* [json5](https://github.com/dpranke/pyjson5) &ndash; extended JSON format parser\n* [latexcodec](https://github.com/mcmtroffaes/latexcodec) &ndash; lexer and codec to work with LaTeX code in Python\n* [Lingua](https://github.com/pemistahl/lingua) &ndash; language detection library\n* [linkify-it-py](https://github.com/tsutsu3/linkify-it-py) &ndash; a link recognition library with full unicode support\n* [lxml](https://lxml.de) &ndash; an XML parsing library\n* [Markdown](https://python-markdown.github.io) &ndash; Python package for working with Markdown\n* [markdown-checklist](https://github.com/FND/markdown-checklist) &ndash; GitHub-style checklist extension for Python Markdown package\n* [mdx-breakless-lists](https://github.com/adamb70/mdx-breakless-lists) &ndash; GitHub-style Markdown lists that don't require a line break above them\n* [mdx_linkify](https://github.com/daGrevis/mdx_linkify) &ndash; extension for Python Markdown will convert text that look like links to HTML anchors\n* [MyST-parser](https://github.com/executablebooks/MyST-Parser) &ndash; A Sphinx and Docutils extension to parse an extended version of Markdown\n* [nameparser](https://github.com/derek73/python-nameparser) &ndash; package for parsing human names into their individual components\n* [probablepeople](https://github.com/datamade/probablepeople) &ndash; package for parsing names into components using ML-based techniques\n* [pybtex](https://pybtex.org) &ndash; BibTeX parser and formatter\n* [pybtex-apa7-style](https://pypi.org/project/pybtex-apa7-style/) &ndash; plugin for [pybtex](https://pybtex.org) that provides APA7 style formatting\n* [pymdown-extensions](https://github.com/facelessuser/pymdown-extensions) &ndash; extensions for Python Markdown\n* [pytest](https://docs.pytest.org/en/stable/) &ndash; testing framework\n* [pytest-cov](https://github.com/pytest-dev/pytest-cov) &ndash; coverage reports for use with `pytest`\n* [pytest-mock](https://pypi.org/project/pytest-mock/) &ndash; wrapper around the `mock` package for use with `pytest`\n* [PyYAML](https://pyyaml.org) &ndash; YAML parser\n* [Rich](https://github.com/Textualize/rich) &ndash; library for writing styled text to the terminal\n* [rich-click](https://github.com/ewels/rich-click) &ndash; CLI interface built on top of [Rich](https://github.com/Textualize/rich)\n* [setuptools](https://github.com/pypa/setuptools) &ndash; library for `setup.py`\n* [Sidetrack](https://github.com/caltechlibrary/sidetrack) &ndash; simple debug logging/tracing package\n* [spaCy](https://spacy.io) &ndash; Natural Language Processing package\n* [spacy-alignments](https://github.com/explosion/spacy-alignments) &ndash; alternate alignments for [spaCy](https://spacy.io)\n* [spacy-legacy](https://pypi.org/project/spacy-legacy/) &ndash; [spaCy](https://spacy.io) legacy functions and architectures for backwards compatibility\n* [spacy-loggers](https://github.com/explosion/spacy-loggers) &ndash; loggers for [spaCy](https://spacy.io)\n* [spacy-pkuseg](https://github.com/explosion/spacy-pkuseg) &ndash; Chinese word segmentation toolkit for [spaCy](https://spacy.io)\n* [spacy-transformers](https://spacy.io) &ndash; pretrained Transformers for [spaCy](https://spacy.io)\n* [Sphinx](https://www.sphinx-doc.org/en/master/) &ndash; documentation generator for Python\n* [sphinx-autobuild](https://pypi.org/project/sphinx-autobuild/) &ndash; rebuild Sphinx docs automatically\n* [sphinx-material](https://bashtage.github.io/sphinx-material/) &ndash; a responsive Material Design theme for Sphinx\n* [sphinxcontrib-mermaid](https://github.com/mgaitan/sphinxcontrib-mermaid) &ndash; support Mermaid diagrams in Sphinx docs\n* [StringDist](https://github.com/obulkin/string-dist) &ndash; library for calculating string distances\n* [Twine](https://github.com/pypa/twine) &ndash; utilities for publishing Python packages on [PyPI](https://pypi.org)\n* [url-normalize](https://github.com/niksite/url-normalize) &ndash; URI/URL normalization utilities\n* [validators](https://github.com/kvesteri/validators) &ndash; data validation package for Python\n* [wheel](https://pypi.org/project/wheel/) &ndash; setuptools extension for building wheels\n\n<div align=\"center\">\n  <br>\n  <a href=\"https://www.caltech.edu\">\n    <img width=\"100\" height=\"100\" alt=\"Caltech logo\" src=\"https://github.com/caltechlibrary/iga/raw/main/.graphics/caltech-round.png\">\n  </a>\n</div>\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 0.8411565190639456,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "affiliation": "California Institute of Technology Library",
        "identifier": "https://orcid.org/0000-0001-9105-5960",
        "type": "String",
        "value": "Michael Hucka"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "California Institute of Technology Library",
        "email": "tmorrell@caltech.edu",
        "identifier": "https://orcid.org/0000-0001-9266-5146",
        "type": "String",
        "value": "Thomas E Morrell"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "github.com@accounts.chrisproctor.net",
        "name": "Chris Proctor",
        "type": "Agent",
        "value": "Chris Proctor"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/iga/vendor/pybtex_apa7_style/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": [
          {
            "family_name": "Hucka",
            "given_name": "Michael",
            "name": "Michael Hucka",
            "type": "Agent",
            "url": "https://orcid.org/0000-0001-9105-5960"
          },
          {
            "family_name": "Morrell",
            "given_name": "Thomas E",
            "name": "Thomas E Morrell",
            "type": "Agent",
            "url": "https://orcid.org/0000-0001-9266-5146"
          }
        ],
        "datePublished": "2024",
        "doi": "10.22002/7vcz4-d4p68",
        "format": "cff",
        "title": "InvenioRDM GitHub Archiver (IGA)",
        "type": "File_dump",
        "url": "https://doi.org/10.22002/7vcz4-d4p68",
        "value": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\ntitle: InvenioRDM GitHub Archiver (IGA)\nauthors:\n  - family-names: Hucka\n    given-names: Michael\n    orcid: https://orcid.org/0000-0001-9105-5960\n  - family-names: Morrell\n    given-names: Thomas E\n    orcid: https://orcid.org/0000-0001-9266-5146\nabstract: The InvenioRDM GitHub Archiver (IGA) automatically archives GitHub releases in an InvenioRDM repository.\nrepository-code: \"https://github.com/caltechlibrary/iga\"\ntype: software\ndoi: 10.22002/7vcz4-d4p68\nversion: 1.3.5\nlicense-url: \"https://github.com/caltechlibrary/iga/blob/main/LICENSE\"\nkeywords:\n  - software\n  - science\n  - archiving\n  - archives\n  - preservation\n  - source code\n  - source code archiving\n  - source code preservation\n  - code preservation\n  - automation\n  - reproducibility\n  - research reproducibility\n  - InvenioRDM\n  - Invenio\n  - GitHub\n  - GitHub Actions\n  - GitHub Automation\ndate-released: 2024-11-07\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject contributors are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject contributors have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project contributors.\n\n## Enforcement\n\nIf a contributor engages in harassing behaviour, the project organizers may take any action they deem appropriate, including warning the offender or expelling them from online forums, online project resources, face-to-face meetings, or any other project-related activity or resource.\n\nIf you are being harassed, notice that someone else is being harassed, or have any other concerns, please contact a member of the project team immediately.  Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team.  All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances.  The project team is obligated to maintain confidentiality with regard to the reporter of an incident.  Further details of specific enforcement policies may be posted separately.\n\n## Attribution\n\nPortions of this Code of Conduct were adapted from Electron's [Contributor Covenant Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md), which itself was adapted from the [Contributor Covenant](http://contributor-covenant.org/version/1/4), version 1.4.\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/iga"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/iga"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cproctor/pybtex-apa7-style"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/iga/vendor/pybtex_apa7_style/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/.github/workflows/doc-builder.yml"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/.github/workflows/waystation.yml"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/.github/workflows/iga.yml"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/.github/workflows/python-linter.yml"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/.github/workflows/bad-link-reporter.yml"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/.github/workflows/markdown-linter.yml"
      },
      "technique": "file_exploration"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Guidelines for contributing to this project\n\nAny constructive contributions &ndash; bug reports, pull requests (code or documentation), suggestions for improvements, and more &ndash; are welcome.\n\n\n## Conduct\n\nEveryone is asked to read and respect the [code of conduct](CODE_OF_CONDUCT.md) before participating in this project.\n\n\n## Coordinating work\n\nA quick way to find out what is currently in the near-term plans for this project is to look at the [GitHub issue tracker](https://github.com/caltechlibrary/iga/issues), but the possibilities are not limited to what you see there &ndash; if you have ideas for new features and enhancements, please feel free to write them up as a new issue or contact the developers directly!\n\nNew development takes place in the `develop` branch. The `v1` branch reflect the latest release, so that code should be the same as the lateset released version of the software.\n\n\n## Submitting contributions\n\nPlease feel free to contact the author directly, or even better, jump right in and use the standard GitHub approach of forking the repo and creating a pull request.  When committing code changes and submitting pull requests, please write a clear log message for your commits.\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">"
        ],
        "type": "Text_excerpt",
        "value": "Your help and participation in enhancing IGA is welcome!  Please visit the [guidelines for contributing](CONTRIBUTING.md) for some tips on getting started.\n\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-12-08T00:09:21Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2022-12-07"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-04-25T23:36:22Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "IGA is the InvenioRDM GitHub Archiver, a standalone program as well as a GitHub Action that lets you automatically archive GitHub software releases in an InvenioRDM repository."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The InvenioRDM GitHub Archiver (IGA) automatically archives GitHub releases in an InvenioRDM repository."
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Provides APA7 style for Pybtex"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/iga/vendor/pybtex_apa7_style/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">"
        ],
        "type": "Text_excerpt",
        "value": "[InvenioRDM](https://inveniosoftware.org/products/rdm/) is the basis for many institutional repositories such as [CaltechDATA](https://data.caltech.edu) that enable users to preserve software and data sets in long-term archive. Though such repositories are critical resources, creating detailed records and uploading assets can be a tedious and error-prone process if done manually. This is where the [_InvenioRDM GitHub Archiver_](https://github.com/caltechlibrary/iga) (IGA) comes in.\n\nIGA creates metadata records and sends releases from GitHub to an InvenioRDM-based repository server. IGA can be invoked from the command line; it also can be set up as a [GitHub Actions](https://docs.github.com/en/actions) workflow to archive GitHub releases automatically for a repository each time they are made.\n\n<p align=center>\n<img align=\"middle\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/example-github-release.jpg\" alt=\"Screenshot of a software release in GitHub\" width=\"40%\">\n<span style=\"font-size: 150%\">\u279c</span>\n<img align=\"middle\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/example-record-landing-page.jpg\" alt=\"Screenshot of the corresponding entry in InvenioRDM\" width=\"40%\">\n</p>\n\nIGA offers many notable features:\n\n* Automatic metadata extraction from GitHub plus [`codemeta.json`](https://codemeta.github.io) and [`CITATION.cff`](https://citation-file-format.github.io) files\n* Thorough coverage of [InvenioRDM record metadata](https://inveniordm.docs.cern.ch/reference/metadata) using painstaking procedures\n* Recognition of identifiers in CodeMeta & CFF files: [ORCID](https://orcid.org), [DOI](https://www.doi.org),  [PMCID](https://www.ncbi.nlm.nih.gov/pmc/about/public-access-info/), and more\n* Automatic lookup of publication data in [DOI.org](https://www.doi.org), [PubMed](https://www.ncbi.nlm.nih.gov/pmc/about/public-access-info/), Google, and other sources\n* Automatic lookup of organization names in [ROR](https://ror.org) (assuming ROR id's are provided)\n* Automatic lookup of human names in [ORCID.org](https://orcid.org) (assuming ORCID id's are provided)\n* Automatic splitting of human names into family & given names using [ML](https://en.wikipedia.org/wiki/Machine_learning) methods\n* Support for InvenioRDM [communities](https://invenio-communities.readthedocs.io/en/latest/)\n* Support for overriding the record that IGA creates, for complete control if you need it\n* Support for using the GitHub API without a [GitHub access token](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token) in simple cases\n* Extensive use of logging so you can see what's going on under the hood\n\nThe IGA GitHub action workflow automatically will add the archived DOI to a CodeMeta file and create/update a CFF file using the [CodeMeta2CFF workflow](https://github.com/caltechlibrary/codemeta2cff).\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Summary of command-line options",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "As explain above, IGA takes one required argument on the command line: either (1) the full URL of a web page on GitHub of a tagged release, or (2) a release tag name which is to be used in combination with options `--github-account` and `--github-repo`. The following table summarizes all the command line options available.\n\n| Long&nbsp;form&nbsp;option&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Short&nbsp;&nbsp; | Meaning | Default |  |\n|------------------------|----------|--------------------------------------|---------|---|\n| `--all-assets`         | `-A`     | Attach all GitHub assets | Attach only the release source ZIP| |\n| `--all-metadata`       | `-M`     | Include additional metadata from GitHub | Favor CodeMeta & CFF | |\n| `--community` _C_      | `-c` _C_ | Submit record to RDM community _C_ | Don't submit record to any community | |\n| `--draft`              | `-d`     | Mark the RDM record as a draft | Publish record when done | |\n| `--file` _F_           | `-f` _F_ | Upload local file _F_ instead of GitHub assets | Upload only GitHub assets | \u2691 |\n| `--github-account` _A_ | `-a` _A_ | Look in GitHub account _A_ | Get account name from release URL | \u272f |\n| `--github-repo` _R_    | `-r` _R_ | Look in GitHub repository _R_ of account _A_ | Get repo name from release URL | \u272f |\n| `--github-token` _T_   | `-t` _T_ | Use GitHub access token _T_| Use value in env. var. `GITHUB_TOKEN` | |\n| `--help`               | `-h`     | Print help info and exit | | |\n| `--invenio-server` _S_ | `-s` _S_ | Send record to InvenioRDM server at address _S_ | Use value in env. var. `INVENIO_SERVER` | |\n| `--invenio-token` _K_  | `-k` _K_ | Use InvenioRDM access token _K_ | Use value in env. var. `INVENIO_TOKEN` | |\n| `--list-communities`   | `-L`     | List communities available for use with `--community` | | |\n| `--log-dest` _L_       | `-l` _L_ | Write log output to destination _L_ | Write to terminal | \u2690 |\n| `--mode` _M_           | `-m` _M_ | Run in mode `quiet`, `normal`, `verbose`, or `debug` | `normal` | |\n| `--open`               | `-o`     | Open record's web page in a browser when done | Do nothing when done | |\n| `--parent-record` _N_  | `-p` _N_ | Make this a new version of existing record _N_ | New record is unrelated to other records | \u2756 |\n| `--print-doi`          | `-i`     | Print both the DOI & record URL when done | Print only the record URL | |\n| `--read-metadata` _R_  | `-R` _R_ | Read metadata record from file _R_; don\\'t build one | Build metadata record | |\n| `--save-metadata` _D_  | `-S` _D_ | Save metadata record to file _D_; don\\'t upload it | Upload to InvenioRDM server | |\n| `--timeout` _X_        | `-T` _X_ | Wait on network operations a max of _X_ seconds | Auto-adjusted based on file size | |\n| `--version`            | `-V`     | Print program version info and exit | | |\n\n\u2691 &nbsp; Can repeat the option to specify multiple files.<br>\n\u2690 &nbsp; To write to the console, use the character `-` as the value of _OUT_; otherwise, _OUT_ must be the name of a file where the output should be written.<br>\n\u272f &nbsp; When using `--github-account` and `--github-repo`, the last argument on the command line must be a release tag name.<br>\n\u2756 &nbsp; The record identifier must be given either as a sequence of alphanumeric characters of the form _XXXXX-XXXXX_ (e.g., `bknz4-bch35`), or as a URL to the landing page of an existing record in the InvenioRDM server.\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8808669482866076,
      "result": {
        "original_header": "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
        "type": "Text_excerpt",
        "value": "IGA is the _InvenioRDM GitHub Archiver_, a standalone program as well as a [GitHub Actions](https://github.com/marketplace/actions/inveniordm-github-archiver) workflow that lets you automatically archive GitHub software releases in an [InvenioRDM](https://inveniosoftware.org/products/rdm/) repository. \n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9732367904609646,
      "result": {
        "original_header": "Known issues and limitations",
        "type": "Text_excerpt",
        "value": "* As of mid-2023, InvenioRDM requires names of record creators and other contributors to be split into given (first) and family (surname). This is problematic for multiple reasons. The first is that mononyms are common in many countries: a person's name may legitimately be only a single word which is not conceptually a \"given\" or \"family\" name.  To compound the difficulty for IGA, names are stored as single fields in GitHub account metadata, so unless a repository has a `codemeta.json` or `CITATION.cff` file (which allow authors more control over how they want their names represented), IGA is forced to try to split the single GitHub name string into two parts. _A foolproof algorithm for doing this does not exist_, so IGA will sometimes get it wrong. (That said, IGA goes to extraordinary lengths to try to do a good job.)\n* InvenioRDM requires that identities (creators, contributors, etc.) to be labeled as personal or organizational. The nature of identities is usually made clear in `codemeta.json` and `CITATION.cff` files. GitHub also provides a flag that is meant to be used to label organizational accounts, but sometimes people don't set the GitHub account information correctly. Consequently, if IGA has to use GitHub data to get (e.g.) the list of contributors on a project, it may mislabel identities in the InvenioRDM record it produces.\n* Some accounts on GitHub are software automation or \"bot\" accounts, but are not labeled as such. These accounts are generally indistinguishable from human accounts on GitHub, so if they're not labeled as bot or organizational accounts in GitHub, IGA can't recognize that they're humans. If such an account is the creator of a release in GitHub, and IGA tries to use its name-splitting algorithm on the name of the account, it may produce a nonsensical result. For example, it might turn \"Travis CI\" into an entry with a first name of \"Travis\" and last name of \"CI\".\n* Funder and funding information can only be specified in `codemeta.json` files; neither GitHub nor `CITATION.cff` have provisions to store this kind of metadata. The CodeMeta specification defines two fields for this purpose: `funder` and `funding`. Unfortunately, these map imperfectly to the requirements of InvenioRDM's metadata format. In addition, people don't always follow the CodeMeta guidelines, and sometimes they write funding information as text strings (instead of structured objects), the interpretation of which would require software that can recognize grant and funding agency information from free-text descriptions. This combination of factors means IGA often can't fill in the funding metadata in InvenioRDM records even if there is some funding information in the `codemeta.json` file. \n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "active"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/iga/tree/develop/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/iga/releases"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/iga/releases"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/caltechlibrary/iga/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "caltechlibrary/iga"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "IGA"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "setup.py",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/setup.py"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/setup.py",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "pyproject.toml",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/iga/vendor/pybtex_apa7_style/pyproject.toml"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/iga/vendor/pybtex_apa7_style/pyproject.toml",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "pyproject.toml"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/iga/vendor/pybtex_apa7_style/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "10.22002/7vcz4-d4p68"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://data.caltech.edu/records/zsmem-2pg20/latest"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "<i><b><code>SERVERURL</code></b></i>/records/<i><b><code>IDENTIFIER</code></b></i>/latest"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://data.caltech.edu/records/zsmem-2pg20/latest"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://data.caltech.edu/records/zsmem-2pg20/latest"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/example-github-release.jpg"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/example-record-landing-page.jpg"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/get-invenio-pat.png"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/github-tabs.png"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/github-sidebar-secrets.png"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/github-secrets.png"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/github-run-workflow.png"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/github-workflow-options-circled.png"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/github-running-workflow.png"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/iga/raw/main/.graphics/caltech-round.png"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# How to install Python version 3.x\n\nThe following instructions focus on getting [Python 3](https://docs.python.org/3/) running on Debian/Ubuntu Linux-based systems as well as on macOS via [MacPorts](https://www.macports.org) or [HomeBrew](https://brew.sh).\n\n_**Tip**_: If you are running on an Intel-based computers (e.g., most Macs and Windows machines), you can use a Python distribution called [Miniconda](https://docs.conda.io/en/latest/miniconda.html).  This is often the easiest approach to getting Python on your machine.  If that's not suitable for you for any reason, continue reading!\n\n\n## A note about Python version issues\n\nIt may be possible to use the default copy of Python provided by your operating system if it happens to be a version 3 edition of Python.  As of January 2021, the [oldest still-supported version of Python is 3.6](https://www.python.org/downloads/).  However, for historical reasons, many operating system distributions still ship with Python version 2.7 even today. This can be confusing, because the default `python` and `pip` commands provided on these operating systems is version 2.7 of Python; attempting to run programs written for Python version 3 with version 2.7 can result in extremely confusing errors that bear no relationship to the _actual_ problem, which is that the program is not written to run in Python 2.7.\n\n\n## Installing a recent version of Python and `pip`\n\nOn some systems, version 3.x of the Python interpreter and `pip` are available using the commands `python3` and `pip3`, respectively. More often, they must be installed separately.  The following subsections describe how Python 3 can be installed either using the standard software package managers on certain popular operating systems, or using third-party software managers.\n\n\n### Debian/Ubuntu\n\nDebian-based systems still ship with older versions of Python by\ndefault. To install a modern version of Python and the associated version of `pip`, run the following command:\n\n```shell\nsudo apt install python3 python3-pip\n```\n\n### macOS\n\nThe version of Python that comes with macOS through at least macOS 10.15 (Catalina) is Python 2.7.  The most convenient way to get Python 3.x and the associated version of `pip` is to use [MacPorts](https://www.macports.org) or [HomeBrew](https://brew.sh), depending on your preference.\n\n\n#### _Using MacPorts_\n\nIf you are using macOS and MacPorts, the following command will install a recent version of Python 3:\n\n```shell\nsudo port install python3 py38-pip\n```\n\nAfter running the command above, you should be able to invoke the Python interpreter using the command `python3`. You can verify the version of Python and `pip` with the following commands:\n\n```shell\npython3 --version\npython3 -m pip --version\n```\n\n#### _Using HomeBrew_\n\nIf you are using [HomeBrew](https://brew.sh), the corresponding commands are as follows:\n\n```shell\nbrew install python3\n```\n\nHomeBrew's Python 3 package installs `pip3` by default.  Unless you configured your copy of HomeBrew to install it elsewhere, programs should end up in `/usr/local/bin` on your computer.  Look for `pip3` there (e.g., by running the command `ls /usr/local/bin/pip*` to see what gets listed).\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/INSTALL-Python3.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Installation\n\nIGA can be installed as either (or both) a command-line program on your computer or a [GitHub Action](https://docs.github.com/en/actions) in a GitHub repository.\n\n## IGA as a normal program\n\nPlease choose an approach that suits your situation and preferences. Then, after installation, proceed to (1) [get an InvenioRDM token](quick-start.md#getting-an-inveniordm-token) and (2) [configure IGA for command-line use](quick-start.md#configuring-a-local-iga).\n\n\n### Installation alternative 1: installing IGA using `pipx`\n\n[Pipx](https://pypa.github.io/pipx/) lets you install Python programs in a way that isolates Python dependencies from other Python programs on your system, and yet the resulting `iga` command can be run from any shell and directory &ndash; like any normal program on your computer. If you use `pipx` on your system, you can install IGA with the following command:\n```sh\npipx install iga\n```\n\n\n### Installation alternative 2: installing IGA using `pip`\n\nIGA is available from the [Python package repository PyPI](https://pypi.org) and can be installed using [`pip`](https://pip.pypa.io/en/stable/installing/):\n```sh\npython3 -m pip install iga\n```\n\nAs an alternative to getting it from [PyPI](https://pypi.org), you can install `iga` directly from GitHub:\n```sh\npython3 -m pip install git+https://github.com/caltechlibrary/iga.git\n```\n\n_If you already installed IGA once before_, and want to update to the latest version, add `--upgrade` to the end of either command line above.\n\n\n### Installation alternative 3: installing IGA from sources\n\nIf  you prefer to install IGA directly from the source code, first obtain a copy by either downloading the source archive from the [IGA releases page on GitHub](https://github.com/caltechlibrary/iga/releases), or by using `git` to clone the repository to a location on your computer. For example,\n```sh\ngit clone https://github.com/caltechlibrary/iga\n```\n\nNext, after getting a copy of the files,  run `setup.py` inside the code directory:\n```sh\ncd iga\npython3 setup.py install\n```\n\n\n(iga_as_a_github_action)=\n## IGA as a GitHub workflow\n\nA [GitHub Actions](https://docs.github.com/en/actions) workflow is an automated process that runs on GitHub's servers under control of a file in your repository. Follow these steps to create the IGA workflow file:\n\n1. In the main branch of your GitHub repository, create a `.github/workflows` directory\n2. In the `.github/workflows` directory, create a file named (e.g.) `iga.yml` and copy the following content (which is also available as file [`sample-workflow.yml`](https://github.com/caltechlibrary/iga/blob/v1/sample-workflow.yml) in the GitHub repository for IGA):\n    ```{literalinclude} ../sample-workflow.yml\n    :language: yaml\n    ```\n3. **Edit the value of the `INVENIO_SERVER` variable near the top of the file above** \u2191. For CaltechDATA the value should be `https://data.caltech.edu`.\n4. Optionally, change the [values of other options (`parent_record`, `community`, etc.)](https://caltechlibrary.github.io/iga/gha-usage.html#input-parameters)\n5. If you have a [CodeMeta](https://caltechlibrary.github.io/iga/introduction.html#codemeta-citation-cff) file, the GitHub action workflow can automatically add the DOI after IGA has run. The \"ref\" value is the branch where the CodeMeta file will be updated. If you don't use a CodeMeta file, you can delete the `add_doi_codemeta` part of the workflow.\n6. Save the file, commit the changes to git, and push your changes to GitHub\n\nOnce you have installed the GitHub Action workflow for IGA, the next steps are (1) [get an InvenioRDM token](quick-start.md#getting-an-inveniordm-token) and (2) [configure the GitHub Action workflow](quick-start.md#configuring-a-github-action).\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/docs/installation.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">"
        ],
        "type": "Text_excerpt",
        "value": "IGA can be installed as either (or both) a command-line program on your computer or a [GitHub Action](https://docs.github.com/en/actions) in a GitHub repository.\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "IGA as a standalone program",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Please choose an approach that suits your situation and preferences.\n\n<details><summary><h4><i>Alternative 1: using <code>pipx</code></i></h4></summary>\n\n[Pipx](https://github.com/pypa/pipx) lets you install Python programs in a way that isolates Python dependencies from other Python programs on your system, and yet the resulting `iga` command can be run from any shell and directory &ndash; like any normal program on your computer. If you use `pipx` on your system, you can install IGA with the following command:\n\n```sh\npipx install iga\n```\n\nAfter installation, a program named `iga` should end up in a location where other command-line programs are installed on your computer.  Test it by running the following command in a shell:\n\n```shell\niga --help\n```\n\n</details>\n\n<details><summary><h4><i>Alternative 2: using <code>pip</code></i></h4></summary>\n\nIGA is available from the [Python package repository PyPI](https://pypi.org) and can be installed using [`pip`](https://pip.pypa.io/en/stable/installing/):\n\n```sh\npython3 -m pip install iga\n```\n\nAs an alternative to getting it from [PyPI](https://pypi.org), you can install `iga` directly from GitHub:\n\n```sh\npython3 -m pip install git+https://github.com/caltechlibrary/iga.git\n```\n\n_If you already installed IGA once before_, and want to update to the latest version, add `--upgrade` to the end of either command line above.\n\nAfter installation, a program named `iga` should end up in a location where other command-line programs are installed on your computer.  Test it by running the following command in a shell:\n\n```shell\niga --help\n```\n\n</details>\n\n<details><summary><h4><i>Alternative 3: from sources</i></h4></summary>\n\nIf  you prefer to install IGA directly from the source code, first obtain a copy by either downloading the source archive from the [IGA releases page on GitHub](https://github.com/caltechlibrary/iga/releases), or by using `git` to clone the repository to a location on your computer. For example,\n\n```sh\ngit clone https://github.com/caltechlibrary/iga\n```\n\nNext, after getting a copy of the files,  run `setup.py` inside the code directory:\n\n```sh\ncd iga\npython3 setup.py install\n```\n\n</details>\n\nOnce you have installed `iga`, the next steps are (1) [get an InvenioRDM token](#getting-an-inveniordm-token) and (2) [configure `iga` for running locally](#configuring-and-running-iga-locally).\n\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "IGA as a GitHub Actions workflow",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "A [GitHub Actions](https://docs.github.com/en/actions) workflow is an automated process that runs on GitHub's servers under control of a file in your repository. Follow these steps to create the IGA workflow file:\n\n1. In the main branch of your GitHub repository, create a `.github/workflows` directory\n2. In the `.github/workflows` directory, create a file named (e.g.) `iga.yml` and copy the [following contents](https://raw.githubusercontent.com/caltechlibrary/iga/v1/sample-workflow.yml) into it:\n\n    ```yaml\n    # GitHub Actions workflow for InvenioRDM GitHub Archiver version 1.3.4\n    # This is available as the file \"sample-workflow.yml\" from the open-\n    # source repository for IGA at https://github.com/caltechlibrary/iga/.\n\n    # \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n    # \u2502 Configure this section                     \u2502\n    # \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\n    env:\n      # \ud83d\udc4b\ud83c\udffb Set the next variable to your InvenioRDM server address \ud83d\udc4b\ud83c\udffb\n      INVENIO_SERVER: https://your-invenio-server.org\n\n      # Set to an InvenioRDM record ID to mark release as a new version.\n      parent_record: none\n\n      # The variables below are other IGA options. Please see the docs.\n      community:     none\n      draft:         false\n      all_assets:    false\n      all_metadata:  false\n      debug:         false\n\n      # This variable is a setting for post-archiving CodeMeta file updates.\n      # If you don't have a CodeMeta file, you can remove the add_doi_codemeta\n      # and Codemeta2CFF jobs at the bottom of this file.\n      ref: main\n\n    # \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n    # \u2502 The rest of this file should be left as-is \u2502\n    # \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\n    name: InvenioRDM GitHub Archiver\n    on:\n      release:\n        types: [published]\n      workflow_dispatch:\n        inputs:\n          release_tag:\n            description: The release tag (empty = latest)\n          parent_record:\n            description: ID of parent record (for versioning)\n          community:\n            description: Name of InvenioRDM community (if any)\n          draft:\n            description: Mark the record as a draft\n            type: boolean\n          all_assets:\n            description: Attach all GitHub assets\n            type: boolean\n          all_metadata:\n            description: Include additional GitHub metadata\n            type: boolean\n          debug:\n            description: Print debug info in the GitHub log\n            type: boolean\n\n    run-name: Archive ${{inputs.release_tag || 'latest release'}} in InvenioRDM\n    jobs:\n      run_iga:\n        name: Send to ${{needs.get_repository.outputs.server}}\n        runs-on: ubuntu-latest\n        needs: get_repository\n        outputs:\n          record_doi: ${{steps.iga.outputs.record_doi}}\n        steps:\n          - uses: caltechlibrary/iga@v1\n            id: iga\n            with:\n              INVENIO_SERVER: ${{env.INVENIO_SERVER}}\n              INVENIO_TOKEN:  ${{secrets.INVENIO_TOKEN}}\n              all_assets:     ${{github.event.inputs.all_assets || env.all_assets}}\n              all_metadata:   ${{github.event.inputs.all_metadata || env.all_metadata}}\n              debug:          ${{github.event.inputs.debug || env.debug}}\n              draft:          ${{github.event.inputs.draft || env.draft}}\n              community:      ${{github.event.inputs.community || env.community}}\n              parent_record:  ${{github.event.inputs.parent_record || env.parent_record}}\n              release_tag:    ${{github.event.inputs.release_tag || 'latest'}}\n      get_repository:\n        name: Get repository name\n        runs-on: ubuntu-latest\n        outputs:\n          server: ${{steps.parse.outputs.host}}\n        steps:\n          - name: Extract name from INVENIO_SERVER\n            id: parse\n            run: echo \"host=$(cut -d'/' -f3 <<< ${{env.INVENIO_SERVER}} | cut -d':' -f1)\" >> $GITHUB_OUTPUT\n      add_doi_codemeta:\n        name: \"Add ${{needs.run_iga.outputs.record_doi}} to codemeta.json\"\n        needs: run_iga\n        runs-on: ubuntu-latest\n        steps:\n          - name: Checkout\n            uses: actions/checkout@v4\n            with:\n              ref: ${{ env.ref }}\n          - name: Install sde\n            run: pip install sde\n          - name: Add DOI to CodeMeta File\n            run: sde identifier ${{needs.run_iga.outputs.record_doi}} codemeta.json\n          - name: Commit CFF\n            uses: EndBug/add-and-commit@v9\n            with:\n              message: 'Add DOI to codemeta.json file'\n              add: 'codemeta.json'\n      CodeMeta2CFF:\n        runs-on: ubuntu-latest\n        needs: add_doi_codemeta\n        steps:\n          - name: Checkout\n            uses: actions/checkout@v4\n            with:\n              ref: ${{ env.ref }}\n          - name: Convert CFF\n            uses: caltechlibrary/codemeta2cff@main\n          - name: Commit CFF\n            uses: EndBug/add-and-commit@v9\n            with:\n              message: 'Add updated CITATION.cff from codemeta.json file'\n              add: 'CITATION.cff'\n    ```\n\n3. **Edit the value of the `INVENIO_SERVER` variable (line 7 above)** \u2191\n4. Optionally, change the [values of other options (`parent_record`, `community`, etc.)](https://caltechlibrary.github.io/iga/gha-usage.html#input-parameters)\n5. If you have a [CodeMeta](https://caltechlibrary.github.io/iga/introduction.html#codemeta-citation-cff) file, the GitHub action workflow can automatically add the DOI after IGA has run. The \"ref\" value is the branch where the CodeMeta file will be updated. If you don't use a CodeMeta file, you can delete the `add_doi_codemeta` part of the workflow.\n6. Save the file, commit the changes to git, and push your changes to GitHub\nOnce you have installed the GitHub Action workflow for IGA, the next steps are (1) [get an InvenioRDM token](#getting-an-inveniordm-token) and (2) [configure the GitHub Action workflow](#configuring-and-running-iga-as-a-github-actions-workflow).\n\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/caltechlibrary/iga/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/iga/issues"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "archives, archiving, automation, code-preservation, github-action, github-actions, github-automation, invenio, invenio-rdm, preservation, reproducibility, reproducible-research, research-data-management, research-software, software-archiving, software-preservation, source-code-archiving"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "software",
          "science",
          "archiving",
          "archives",
          "preservation",
          "source code",
          "source code archiving",
          "source code preservation",
          "code preservation",
          "automation",
          "reproducibility",
          "research reproducibility",
          "InvenioRDM",
          "Invenio",
          "GitHub",
          "GitHub Actions",
          "GitHub Automation"
        ]
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause",
        "spdx_id": "BSD-2-Clause",
        "type": "File_dump",
        "value": "Copyright (c) 2022-2024, Caltech\nAll rights not granted herein are expressly reserved by Caltech.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice,\nthis list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\nmay be used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://github.com/caltechlibrary/iga/blob/main/LICENSE",
        "spdx_id": "https://github.com/caltechlibrary/iga/blob/main/LICENSE",
        "type": "License",
        "value": "https://github.com/caltechlibrary/iga/blob/main/LICENSE"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "License",
        "value": "MIT"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/iga/vendor/pybtex_apa7_style/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">"
        ],
        "type": "Text_excerpt",
        "value": "Software produced by the Caltech Library is Copyright \u00a9 2022\u20132024 California Institute of Technology.  This software is freely distributed under a BSD-style license.  Please see the [LICENSE](LICENSE) file for more information.\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "iga"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "InvenioRDM GitHub Archiver (IGA)"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "caltechlibrary"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_distribution": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://pypi.org/project/iga/"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pybtex-apa7-style"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/iga/vendor/pybtex_apa7_style/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 603259,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 5344,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "type": "Programming_language",
        "url": "https://www.python.org/",
        "value": "Python",
        "version": "3.9"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://github.com/caltechlibrary/iga/blob/main/README.md"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cproctor/pybtex-apa7-style"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/iga/vendor/pybtex_apa7_style/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://invenio-communities.readthedocs.io/"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tmorrell",
          "type": "User"
        },
        "date_created": "2024-11-07T20:32:13Z",
        "date_published": "2024-11-07T20:32:40Z",
        "description": "This release adds CFF updating as part of the example workflow.",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v1.3.5",
        "name": "CFF Updating",
        "release_id": 184236387,
        "tag": "v1.3.5",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v1.3.5",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/184236387",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/184236387",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v1.3.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tmorrell",
          "type": "User"
        },
        "date_created": "2024-11-05T19:16:47Z",
        "date_published": "2024-11-05T19:18:09Z",
        "description": "Bug fix release for automatic CodeMeta updating workflow. Also updates the documentation build process.",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v1.3.4",
        "name": "Workflow bugfix and documentation release",
        "release_id": 183796095,
        "tag": "v1.3.4",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v1.3.4",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/183796095",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/183796095",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v1.3.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tmorrell",
          "type": "User"
        },
        "date_created": "2024-11-05T00:45:46Z",
        "date_published": "2024-11-05T00:46:07Z",
        "description": "Bug fix release for automatic CodeMeta updating workflow",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v1.3.3",
        "name": "Workflow bug fix release",
        "release_id": 183492413,
        "tag": "v1.3.3",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v1.3.3",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/183492413",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/183492413",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v1.3.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tmorrell",
          "type": "User"
        },
        "date_created": "2024-11-05T00:36:26Z",
        "date_published": "2024-11-05T00:37:01Z",
        "description": "Bug fix release for automatic CodeMeta updating workflow",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v1.3.2",
        "name": "Workflow bugfix release",
        "release_id": 183491528,
        "tag": "v1.3.2",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v1.3.2",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/183491528",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/183491528",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v1.3.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "tmorrell",
          "type": "User"
        },
        "date_created": "2024-11-05T00:15:22Z",
        "date_published": "2024-11-05T00:17:06Z",
        "description": "Changes in this release\r\n\r\n- Adds support for automatically updating a CodeMeta.json file when used on GitHub actions\r\n- Fixes bug https://github.com/caltechlibrary/iga/issues/39 that impacted RDM repositories with no records\r\n- Un-pins dependencies so iga will work better with other python installs, and pins rich-click to avoid bug #40\r\n- Switches to the v1 branch instead of master\r\n- Simplifies release workflow",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v1.3.1",
        "name": "Add automatic CodeMeta updating",
        "release_id": 183488848,
        "tag": "v1.3.1",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v1.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/183488848",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/183488848",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v1.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2024-05-15T21:18:07Z",
        "date_published": "2024-05-15T21:31:40Z",
        "description": "Changes in this release:\n\n* Fix issue: when we have a parent id for a record,  records should not go through the community review workflow. (Fix implemented by @tmorrell.)\n* Fix issue #14: try to make better guesses at person names containing CJK characters.\n* Updated the IGA workflow to use the latest versions of GitHub Actions dependencies; this avoids runtime warnings about the version of Node being used by GitHub runners.\n* Updated Python dependencies.\n* Added a new GitHub Actions workflow for linting the Markdown files.\n* Added a new GitHub Actions workflow to check URLs in Markdown files and reports invalid or broken links.\n* Edited the README file to follow the Markdown lint rules and to add alt text to images.\n* Minor other internal code changes have been made.\n* Updated copyright year.\n* Updated miscellaenous repository files to match current Library template versions of those files.\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v1.3.0",
        "name": "Release 1.3.0",
        "release_id": 155967132,
        "tag": "v1.3.0",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v1.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/155967132",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/155967132",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v1.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-11-09T02:43:58Z",
        "date_published": "2023-11-09T02:48:41Z",
        "description": "Changes in this release:\r\n* Fixed [issue #28](https://github.com/caltechlibrary/iga/issues/28): catch and report the case where a repo has no releases.\r\n* Fixed a bug that manifested when the GitHub access token was invalid.\r\n* Fixed a syntax bug in the Makefile.\r\n* Improved (hopefully) the caching of python dependencies to actually work this time.\r\n* Improved (hopefully) some of the diagnostic error messages.\r\n* Added Tom Morrell to the CITATION.cff file.\r\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v1.2.2",
        "name": "Release 1.2.2",
        "release_id": 128642619,
        "tag": "v1.2.2",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v1.2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/128642619",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/128642619",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v1.2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-07-24T19:54:52Z",
        "date_published": "2023-07-24T19:56:43Z",
        "description": "Changes in this release:\r\n* Fixed `setup.cfg`, which had some garbled content.\r\n* Fixed the GitHub Action for building the IGA documentation pages to avoid needlessly running it on every push.\r\n* The GitHub Actions workflow (`action.yml`) for IGA now caches Python package dependencies for a slight speed up in run times on GitHub.\r\n* Added a GitHub Actions workflow to lint the code on pushes & pull requests.\r\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v1.2.1",
        "name": "Release 1.2.1",
        "release_id": 113379070,
        "tag": "v1.2.1",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/113379070",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/113379070",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-07-18T22:45:03Z",
        "date_published": "2023-07-18T22:48:59Z",
        "description": "This version fixes problems with handling Invenio Communities. First, an internal bug in IGA would cause an exception if the user attempted to list communities in an InvenioRDM server that defined more than one community. Second, a bug in InvenioRDM itself meant that community links were broken. (Thanks to @tmorrell for a fix via PR #23.)\n\nAdditional changes in this version:\n* Switched to using `codemeta.json` as the main source of truth for version info. The `setup.cfg` file is now updated from `codemeta.json`, not the other way around.\n* With respect to how the InvenioRDM metadata field `related_identifiers` is handled, the IGA [documentation](https://caltechlibrary.github.io/iga/appendix.html#record-metadata) and the [Google spreadsheet describing how IGA maps fields](https://docs.google.com/spreadsheets/d/1QgFrZIhip1qKA_M45QkeYe9SH238XL1K/edit?usp=sharing&ouid=111701691832013929970&rtpof=true&sd=true) both omitted the use of CodeMeta fields `downloadUrl` and `installUrl` and CFF field `repository-artifact`. These fields are now in the documentation.\n* The Makefile has been updated in various ways based on experiences with other projects.\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v1.2.0",
        "name": "Release 1.2.0",
        "release_id": 112737361,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/112737361",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/112737361",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-05-31T23:09:09Z",
        "date_published": "2023-05-31T23:11:14Z",
        "description": "New features:\n* New option `--print-doi` makes IGA print the DOI of a published record in addition to printing the URL. (Without the option, IGA only prints the URL.)\n\nChanges:\n* The color of text messages printed to the terminal has been changed slightly in an effort to improve readability.\n* The versions of some dependencies in `requirements.txt` have been updated.\n* Documentation has been updated and expanded.\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v1.1.0",
        "name": "Release 1.1.0",
        "release_id": 105602868,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/105602868",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/105602868",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-05-24T21:01:53Z",
        "date_published": "2023-05-24T21:16:14Z",
        "description": "Changes in this release:\n* The sample workflow has been revised to be slightly more informative about where it's sending the release for archiving.\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v1.0.3",
        "name": "Release 1.0.3",
        "release_id": 104178786,
        "tag": "v1.0.3",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/104178786",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/104178786",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-05-23T15:18:19Z",
        "date_published": "2023-05-23T15:45:30Z",
        "description": "Changes in this release:\n* Fix issue #21: the copyright year put in the metadata `dates` field can could up being a completely bogus value in some cases.\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v1.0.2",
        "name": "Release 1.0.2",
        "release_id": 103975455,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/103975455",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/103975455",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-05-22T20:32:15Z",
        "date_published": "2023-05-22T21:10:09Z",
        "description": "Changes in this release:\r\n* Fix issue #8: parsing organization info sometimes results in an empty id string.\r\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v1.0.1",
        "name": "Release 1.0.1",
        "release_id": 103869711,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/103869711",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/103869711",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-05-19T00:01:41Z",
        "date_published": "2023-05-19T00:21:36Z",
        "description": "This is the first full release of IGA, the _InvenioRDM GitHub Archiver_. This release supports the use of IGA as both a command-line program and as a GitHub Action. Complete documentation is available at <https://caltechlibrary.github.io/iga/> and a shortened version of the documentation is present in the [repository README file](https://github.com/caltechlibrary/iga).\r\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v1.0.0-final",
        "name": "Release 1.0.0",
        "release_id": 103537682,
        "tag": "v1.0.0-final",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v1.0.0-final",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/103537682",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/103537682",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v1.0.0-final"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-05-18T01:08:48Z",
        "date_published": "2023-05-18T01:11:45Z",
        "description": "Changes in this release:\n* Fixed another problem with logging, in part by reverting a previous change but also by modifying the code that writes error messages.\n* Expanded the error catches in the GitHub Action workflow to detect and report problems with invalid tokens.\n* Merge PR #7: doc improvements.\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v0.0.16",
        "name": "Release 0.0.16",
        "release_id": 103396746,
        "tag": "v0.0.16",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v0.0.16",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/103396746",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/103396746",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v0.0.16"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-05-17T19:17:25Z",
        "date_published": "2023-05-17T19:20:32Z",
        "description": "Changes in this version:\n* IGA now tests the InvenioRDM token explicitly and returns a new exit code if the token is rejected. This makes it possible for the GitHub Action to report this situation more clearly.\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v0.0.15",
        "name": "Release 0.0.15",
        "release_id": 103367211,
        "tag": "v0.0.15",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v0.0.15",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/103367211",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/103367211",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v0.0.15"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-05-17T00:56:23Z",
        "date_published": "2023-05-17T01:01:07Z",
        "description": "Changes in this release:\n* Fixed bug where setting `verbose` mode or higher caused output to go to the terminal and was not properly sent to the log destination.\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v0.0.14",
        "name": "Release 0.0.14",
        "release_id": 103243014,
        "tag": "v0.0.14",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v0.0.14",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/103243014",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/103243014",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v0.0.14"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-05-17T00:18:07Z",
        "date_published": "2023-05-17T00:22:37Z",
        "description": "Changes in this release:\n* IGA detects the case where InvenioRDM refuses the token, and reports the error more explicitly.\n* More documentation updates.\n* More improvements to the GitHub Action workflow.\n* Fixes to test cases.\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v0.0.13",
        "name": "Release 0.0.13",
        "release_id": 103241042,
        "tag": "v0.0.13",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v0.0.13",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/103241042",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/103241042",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v0.0.13"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-05-13T02:22:18Z",
        "date_published": "2023-05-13T02:24:28Z",
        "description": "Changes in this release:\n* A preliminary GitHub Action workflow is available.\n* Documentation is more complete.\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v0.0.12",
        "name": "Release 0.0.12",
        "release_id": 102854909,
        "tag": "v0.0.12",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v0.0.12",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/102854909",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/102854909",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v0.0.12"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-05-11T02:46:33Z",
        "date_published": "2023-05-11T02:49:03Z",
        "description": "Changes in this release:\n* Fixed behavior of `--mode quiet`: it was not completely quiet after all, but now it is.\n* Fixed behavior when `--log-dest` is used; not all output was going to the log destination, but now it is.\n* Fixed additional minor issues.\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v0.0.11",
        "name": "Release 0.0.11",
        "release_id": 102566133,
        "tag": "v0.0.11",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v0.0.11",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/102566133",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/102566133",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v0.0.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-05-09T21:26:31Z",
        "date_published": "2023-05-09T21:28:59Z",
        "description": "Changes in this release:\r\n* IGA won't fail if the GitHub release description is empty and the repo doesn't have a `codemeta.json` nor a `CITATION.cff` file.\r\n* IGA won't fail if the GitHub repo doesn't have a license and there are no `codemeta.json` or `CITATION.cff` files.\r\n* IGA will properly get release assets from private repos (assuming the user has access to the private repo). Previously, it would erroneously think the repo had no assets.\r\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v0.0.10",
        "name": "Release 0.0.10",
        "release_id": 102409971,
        "tag": "v0.0.10",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v0.0.10",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/102409971",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/102409971",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v0.0.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-05-08T18:58:36Z",
        "date_published": "2023-05-08T19:00:21Z",
        "description": "Changes in this release:\n* `IGA` and `GitHub` are now added automatically to the list of subject tags in the InvenioRDM record created by IGA.\n* Debug mode will not cause `pdb` to be invoked upon an exception if IGA is running as a GitHub Action.\n* Documentation has been further expanded and improved.\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v0.0.9",
        "name": "Release 0.0.9",
        "release_id": 102253489,
        "tag": "v0.0.9",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v0.0.9",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/102253489",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/102253489",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v0.0.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-05-04T22:41:19Z",
        "date_published": "2023-05-04T22:42:23Z",
        "description": "This version fixes a few minor bugs, and improves documentation.\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v0.0.8",
        "name": "Release 0.0.8",
        "release_id": 101944487,
        "tag": "v0.0.8",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v0.0.8",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/101944487",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/101944487",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v0.0.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-04-25T22:27:28Z",
        "date_published": "2023-04-25T22:35:39Z",
        "description": "This release fixes some bugs and adds a few more features.\n\n### What's new\n\n* IGA now supports creating new versions of existing InvenioRDM records, via the new option `--parent-record`.\n\n### What's changed\n\n* Option `--read-record` has been renamed `--read-metadata` and option `--save-record` has been renamed `--save-metadata`. The goal is to make it more clear that they are about the metadata portion of an InvenioRDM record, and also to avoid possible confusion that the values they take are not record identifiers like the new `--parent-record` option.\n* The short-form name of `--open` has changed from `-O` to `-o` (lower case).\n* The versions of some dependencies in `requirements.txt` have been updated.\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v0.0.7",
        "name": "Release 0.0.7",
        "release_id": 100875600,
        "tag": "v0.0.7",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v0.0.7",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/100875600",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/100875600",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v0.0.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-04-20T00:57:22Z",
        "date_published": "2023-04-20T01:00:21Z",
        "description": "This release fixes some bugs and adds a few more features.\n\n### What's new\n* CodeMeta's `downloadUrl` and `installUrl` as well as CITATION.cff's `repository-artifact` fields are now supported.\n* New repository branch `develop` is where new development takes place. Previously, the lazy maintainer didn't create a branch and instead worked out of `main`.\n\n### What's changed\n\n* Fix issue #3: IGA would previously incorrectly always get the latest version of files like `codemeta.json` from the repo, even if the release requested was not the latest release.\n* Fix issue #4: improve name splitting algorithm to handle a situation where it failed to produce a result before.\n* The list of programming languages associated with the GitHub repo is only added to the `subjects` field of the metadata record if IGA is invoked with the `--all-metadata` option. This is to make the behavior more consistent with the conditions under which other metadata fields get values from the GitHub repo.\n* The name splitting algorithm has been further enhanced to handle more test cases.\n* Internally, some data loading steps are much faster.\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v0.0.6",
        "name": "Release 0.0.6",
        "release_id": 100134620,
        "tag": "v0.0.6",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v0.0.6",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/100134620",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/100134620",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v0.0.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-04-11T00:04:40Z",
        "date_published": "2023-04-11T00:11:46Z",
        "description": "This release improves IGA's detection of ROR identifiers if provided for people's affiliations in `codemeta.json` files, and checks more carefully for duplicate identifiers in the \"identifiers\" section of the InvenioRDM metadata record.\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v0.0.5",
        "name": "Release 0.0.5",
        "release_id": 98853310,
        "tag": "v0.0.5",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v0.0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/98853310",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/98853310",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v0.0.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-04-08T03:16:53Z",
        "date_published": "2023-04-08T03:20:23Z",
        "description": "This release works around the problem that PyPI rejects packages that have `requirements.txt` containing direct references to packages outside of PyPI. Two of our dependencies are directly affected by this:\n* It prevents us from having our `requirements.txt` install our [patched version of `pybtex-apa7-style`](https://github.com/caltechlibrary/pybtex-apa7-style) unless we also release that package on PyPI. Doing so is undesirable, so we have to vendor the package within IGA's codebase. (A detailed explanation of the problem can be found in the [README file in `iga/vendor`](./iga/vendor/README.md).\n* SpaCy models are only available from spaCy's GitHub repository and not as packages installable using `pip`. Since we can't have them as direct references in our `requirements.txt` file, IGA has to download spaCy models it needs at run-time the first time it needs them. The change to IGA means that we take a huge (but thankfully one-time) performance hit the first time spaCy is needed, but at least it'll happen only once and not again on subsequent runs of IGA.\n\nOther changes in this release:\n* Update the versions of some dependencies in `requirements.txt`.\n* Improve trapping and reporting of internal errors during network calls.\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v0.0.4",
        "name": "Release 0.0.4",
        "release_id": 98611897,
        "tag": "v0.0.4",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v0.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/98611897",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/98611897",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v0.0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-04-07T01:56:18Z",
        "date_published": "2023-04-07T01:56:53Z",
        "description": "This release fixes a problem with the syntax of `setup.py` that prevented installations via `pip install git+https://github.com/caltechlibrary/iga.git`.\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v0.0.3",
        "name": "Release 0.0.3",
        "release_id": 98483552,
        "tag": "v0.0.3",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v0.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/98483552",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/98483552",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v0.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2023-04-07T01:27:22Z",
        "date_published": "2023-04-07T01:29:48Z",
        "description": "Fixes:\n* Fix issue #1: error if `--mode` option is not given.\n* Fix missing dependencies in `requirements-dev.txt`.\n* Fix parsing of https dependencies in `setup.py`.\n* Fix bug in `requirements.txt` that caused loading the wrong copy of `pybtex-apa7-style`.\n* Fix missing spaCy requirements in `requirements.txt`.\n* Fix name tagging algorithm to account for changes in spaCy behavior in latest Transformer models.\n* Fix tests that had gotten out of sync with the codebase.\n\nChanges:\n* (Hopefully) improve colors and readability of help text printed with `--help`.\n* More documentation (still a work in progress).\n",
        "html_url": "https://github.com/caltechlibrary/iga/releases/tag/v0.0.2",
        "name": "Release 0.0.2",
        "release_id": 98482627,
        "tag": "v0.0.2",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/iga/tarball/v0.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/iga/releases/98482627",
        "value": "https://api.github.com/repos/caltechlibrary/iga/releases/98482627",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/iga/zipball/v0.0.2"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "aenum",
        "type": "Software_application",
        "value": "aenum                      >= 3.1.15",
        "version": ">= 3.1.15"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "arrow",
        "type": "Software_application",
        "value": "arrow                      >= 1.3.0",
        "version": ">= 1.3.0"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "boltons",
        "type": "Software_application",
        "value": "boltons                    >= 21.0.0",
        "version": ">= 21.0.0"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "caltechdata-api",
        "type": "Software_application",
        "value": "caltechdata-api            >= 1.8.1",
        "version": ">= 1.8.1"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "commonpy",
        "type": "Software_application",
        "value": "commonpy                   >= 1.13.0",
        "version": ">= 1.13.0"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "dirtyjson",
        "type": "Software_application",
        "value": "dirtyjson                  >= 1.0.8",
        "version": ">= 1.0.8"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "ginza",
        "type": "Software_application",
        "value": "ginza                      >= 5.2.0",
        "version": ">= 5.2.0"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "ja_ginza_electra",
        "type": "Software_application",
        "value": "ja_ginza_electra           >= 5.2.0",
        "version": ">= 5.2.0"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "httpx",
        "type": "Software_application",
        "value": "httpx                      >= 0.23.1",
        "version": ">= 0.23.1"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "humanize",
        "type": "Software_application",
        "value": "humanize                   >= 4.9.0",
        "version": ">= 4.9.0"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "idutils",
        "type": "Software_application",
        "value": "idutils                    >= 1.2.1",
        "version": ">= 1.2.1"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "iptools",
        "type": "Software_application",
        "value": "iptools                    >= 0.7.0",
        "version": ">= 0.7.0"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "isbnlib",
        "type": "Software_application",
        "value": "isbnlib                    >= 3.10.14",
        "version": ">= 3.10.14"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "jamo",
        "type": "Software_application",
        "value": "jamo                       >= 0.4.1",
        "version": ">= 0.4.1"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "json5",
        "type": "Software_application",
        "value": "json5                      >= 0.9.25",
        "version": ">= 0.9.25"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "latexcodec",
        "type": "Software_application",
        "value": "latexcodec                 >= 3.0.0",
        "version": ">= 3.0.0"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "lingua-language-detector",
        "type": "Software_application",
        "value": "lingua-language-detector   >= 2.0.2",
        "version": ">= 2.0.2"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "lxml",
        "type": "Software_application",
        "value": "lxml                       >= 5.2.2",
        "version": ">= 5.2.2"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Markdown",
        "type": "Software_application",
        "value": "Markdown                   >= 3.6",
        "version": ">= 3.6"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "markdown-checklist",
        "type": "Software_application",
        "value": "markdown-checklist         >= 0.4.4",
        "version": ">= 0.4.4"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "mdx-breakless-lists",
        "type": "Software_application",
        "value": "mdx-breakless-lists        >= 1.0.1",
        "version": ">= 1.0.1"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "mdx_linkify",
        "type": "Software_application",
        "value": "mdx_linkify                >= 2.1",
        "version": ">= 2.1"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "nameparser",
        "type": "Software_application",
        "value": "nameparser                 >= 1.1.3",
        "version": ">= 1.1.3"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "probablepeople",
        "type": "Software_application",
        "value": "probablepeople             >= 0.5.5",
        "version": ">= 0.5.5"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pybtex",
        "type": "Software_application",
        "value": "pybtex                     >= 0.24.0",
        "version": ">= 0.24.0"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pybtex-apa7-style",
        "type": "Software_application",
        "value": "pybtex-apa7-style          >= 0.1.3",
        "version": ">= 0.1.3"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pymdown-extensions",
        "type": "Software_application",
        "value": "pymdown-extensions         >= 10.8.1",
        "version": ">= 10.8.1"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PyYAML",
        "type": "Software_application",
        "value": "PyYAML                     >= 6.0.1",
        "version": ">= 6.0.1"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "regex",
        "type": "Software_application",
        "value": "regex                      >= 2022.3.2",
        "version": ">= 2022.3.2"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "rich-click",
        "type": "Software_application",
        "value": "rich-click                 == 1.7.4",
        "version": "== 1.7.4"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "sidetrack",
        "type": "Software_application",
        "value": "sidetrack                  >= 2.0.1",
        "version": ">= 2.0.1"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "spacy",
        "type": "Software_application",
        "value": "spacy                      >= 3.7.4",
        "version": ">= 3.7.4"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "spacy-alignments",
        "type": "Software_application",
        "value": "spacy-alignments           >= 0.9.1",
        "version": ">= 0.9.1"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "spacy-curated-transformers",
        "type": "Software_application",
        "value": "spacy-curated-transformers >= 0.2.2",
        "version": ">= 0.2.2"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "spacy-legacy",
        "type": "Software_application",
        "value": "spacy-legacy               >= 3.0.12",
        "version": ">= 3.0.12"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "spacy-loggers",
        "type": "Software_application",
        "value": "spacy-loggers              >= 1.0.5",
        "version": ">= 1.0.5"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "spacy-pkuseg",
        "type": "Software_application",
        "value": "spacy-pkuseg               >= 0.0.33",
        "version": ">= 0.0.33"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "spacy-transformers",
        "type": "Software_application",
        "value": "spacy-transformers         >= 1.1.9",
        "version": ">= 1.1.9"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "StringDist",
        "type": "Software_application",
        "value": "StringDist                 >= 1.0.9",
        "version": ">= 1.0.9"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "url-normalize",
        "type": "Software_application",
        "value": "url-normalize              >= 1.4.3",
        "version": ">= 1.4.3"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "validators",
        "type": "Software_application",
        "value": "validators                 >= 0.28.1",
        "version": ">= 0.28.1"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "python",
        "type": "Software_application",
        "value": "python^3.9",
        "version": "^3.9"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/iga/vendor/pybtex_apa7_style/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pybtex",
        "type": "Software_application",
        "value": "pybtex^0.24.0",
        "version": "^0.24.0"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/iga/vendor/pybtex_apa7_style/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "poetry-core",
        "type": "Software_application",
        "value": "poetry-core>=1.0.0",
        "version": ">=1.0.0"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/iga/vendor/pybtex_apa7_style/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Configuring and running IGA locally",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "To send a GitHub release to your InvenioRDM server, IGA needs this information:\n\n1. (Required) The identity of the GitHub release to be archived\n2. (Required) The address of the destination InvenioRDM server\n3. (Required) A personal access token for InvenioRDM (from [above](#getting-an-inveniordm-token))\n4. (Optional) A [personal access token for GitHub](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token)\n\nThe identity of the GitHub release is always given as an argument to IGA on the command line; the remaining values can be provided either via command-line options or environment variables. One approach is to set environment variables in shell scripts or your interactive shell. Here is an example using Bash shell syntax, with fake token values:\n\n```shell\nexport INVENIO_SERVER=https://data.caltech.edu\nexport INVENIO_TOKEN=qKLoOH0KYf4D98PGYQGnC09hiuqw3Y1SZllYnonRVzGJbWz2\nexport GITHUB_TOKEN=ghp_wQXp6sy3AsKyyEo4l9esHNxOdo6T34Zsthz\n```\n\nOnce these are set, use of IGA can be as simple as providing a URL for a release in GitHub. For example, the following command creates a draft record (the `-d` option is short for `--draft`) for another project in GitHub and tells IGA to open (the `-o` option is short for `--open`) the newly-created InvenioRDM entry in a web browser:\n\n```shell\niga -d -o https://github.com/mhucka/taupe/releases/tag/v1.2.0\n```\n\nMore options are described in the section on [detailed usage information](#usage) below.\n\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configuring and running IGA as a GitHub Actions workflow",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "After doing the [GitHub Actions installation](#configuring-and-running-iga-as-a-github-actions-workflow) steps and [obtaining an InvenioRDM token](#getting-an-inveniordm-token), one more step is needed: the token must be stored as a \"secret\" in your GitHub repository.\n\n1. Go to the _Settings_ page of your GitHub repository<p align=\"center\"><img src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/github-tabs.png\" alt=\"Screenshot of repository tabs in GitHub\" width=\"85%\"></p>\n2. In the left-hand sidebar, find _Secrets and variables_ in the Security section, click on it to reveal _Actions_ underneath, then click on _Actions_<p align=\"center\"><img src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/github-sidebar-secrets.png\" alt=\"Screenshot of GitHub secrets sidebar item\" width=\"40%\"></p>\n3. In the next page, click the green <kbd>New repository secret</kbd> button<p align=\"center\"><img src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/github-secrets.png\" alt=\"Screenshot of GitHub secrets interface\" width=\"60%\"></p>\n4. Name the variable `INVENIO_TOKEN` and paste in your InvenioRDM token\n5. Finish by clicking the green <kbd>Add secret</kbd> button\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Testing the workflow",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Quick start",
          "Configuring and running IGA as a GitHub Actions workflow"
        ],
        "type": "Text_excerpt",
        "value": "After setting up the workflow and storing the InvenioRDM token in your repository on GitHub, it's a good idea to run the workflow manually to test that it works as expected.\n\n1. Go to the _Actions_ tab in your repository and click on the name of the workflow in the sidebar on the left<p align=\"center\"><img src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/github-run-workflow.png\" alt=\"Screenshot of GitHub actions workflow list\" width=\"90%\"></p>\n2. Click the <kbd>Run workflow</kbd> button in the right-hand side of the blue strip\n3. In the pull-down, change the value of \"Mark the record as a draft\" to `true`<p align=\"center\"><img src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/github-workflow-options-circled.png\" alt=\"Screenshot of GitHub Actions workflow menu\" width=\"40%\"></p>\n4. Click the green <kbd>Run workflow</kbd> button near the bottom\n5. Refresh the web page and a new line will be shown named after your workflow file<p align=\"center\"><img src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/github-running-workflow.png\" alt=\"Screenshot of a running workflow in GitHub Actions\" width=\"90%\"></p>\n6. Click the title of the workflow to see the IGA workflow progress and results\n\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Running the workflow when releasing software",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Quick start",
          "Configuring and running IGA as a GitHub Actions workflow"
        ],
        "type": "Text_excerpt",
        "value": "Once the personal access token from InvenioRDM is stored as a GitHub secret, the workflow should run automatically every time a new release is made on GitHub &ndash; no further action should be needed. You can check the results (and look for errors if something went wrong) by going to the _Actions_ tab in your GitHub repository.\n\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "download",
    "contact",
    "contributors",
    "faq",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 01:14:14",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting help",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">"
        ],
        "type": "Text_excerpt",
        "value": "If you find an issue, please submit it in [the GitHub issue tracker](https://github.com/caltechlibrary/iga/issues) for this repository.\n\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">"
        ],
        "type": "Text_excerpt",
        "value": "No matter whether IGA is run locally on your computer or as a GitHub Actions workflow, in both cases it must be provided with a personal access token (PAT) for your InvenioRDM server. Getting one is the first step.\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting an InvenioRDM token",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "<img src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/get-invenio-pat.png\" alt=\"Screenshot of InvenioRDM PAT menu\" width=\"60%\" align=\"right\">\n\n1. Log in to your InvenioRDM account\n2. Go to the _Applications_ page in your account profile\n3. Click the <kbd>New token</kbd> button next to \"Personal access tokens\"\n4. On the page that is shown after you click that button, name your token (the name does not matter) and click the <kbd>Create</kbd> button\n5. After InvenioRDM creates and shows you the token, **copy it to a safe location** because InvenioRDM will not show it again\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Testing the workflow",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Quick start",
          "Configuring and running IGA as a GitHub Actions workflow"
        ],
        "type": "Text_excerpt",
        "value": "After setting up the workflow and storing the InvenioRDM token in your repository on GitHub, it's a good idea to run the workflow manually to test that it works as expected.\n\n1. Go to the _Actions_ tab in your repository and click on the name of the workflow in the sidebar on the left<p align=\"center\"><img src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/github-run-workflow.png\" alt=\"Screenshot of GitHub actions workflow list\" width=\"90%\"></p>\n2. Click the <kbd>Run workflow</kbd> button in the right-hand side of the blue strip\n3. In the pull-down, change the value of \"Mark the record as a draft\" to `true`<p align=\"center\"><img src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/github-workflow-options-circled.png\" alt=\"Screenshot of GitHub Actions workflow menu\" width=\"40%\"></p>\n4. Click the green <kbd>Run workflow</kbd> button near the bottom\n5. Refresh the web page and a new line will be shown named after your workflow file<p align=\"center\"><img src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/github-running-workflow.png\" alt=\"Screenshot of a running workflow in GitHub Actions\" width=\"90%\"></p>\n6. Click the title of the workflow to see the IGA workflow progress and results\n\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">"
        ],
        "type": "Text_excerpt",
        "value": "This section provides detailed information about IGA's operation and options to control it.\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Identifying the InvenioRDM server",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The server address must be provided either as the value of the option `--invenio-server` or in an environment variable named `INVENIO_SERVER`.  If the server address does not begin with `https://`, IGA will prepend it automatically.\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Providing an InvenioRDM access token",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "A personal access token (PAT) for making API calls to the InvenioRDM server must be also supplied when invoking IGA. The preferred method is to set the value of the environment variable `INVENIO_TOKEN`. Alternatively, you can use the option `--invenio-token` to pass the token on the command line, but **you are strongly advised to avoid this practice because it is insecure**.\n\nTo obtain a PAT from an InvenioRDM server, first log in to the server, then visit the page at `/account/settings/applications` and use the interface there to create a token. The token will be a long string of alphanumeric characters such as `OH0KYf4PGYQGnCM4b53ejSGicOC4s4YnonRVzGJbWxY`; set the value of the variable `INVENIO_TOKEN` to this string.\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Providing a GitHub access token",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "It _may_ be possible to run IGA without providing a GitHub access token. GitHub allows up to 60 API calls per minute when running without credentials, and though IGA makes several API calls to GitHub each time it runs, for some public repositories IGA will not hit the limit. However, if you are archiving a private repository, run IGA multiple times in a row, or the repository has many contributors, then you will need to supply a GitHub access token. The preferred way of doing that is to set the value of the environment variable `GITHUB_TOKEN`. Alternatively, you can use the option `--github-token` to pass the token on the command line, but **you are strongly advised to avoid this practice because it is insecure**.  To obtain a PAT from GitHub, visit [https://docs.github.com/en/authentication](https://docs.github.com/en/authentication) and follow the instructions for creating a \"classic\" personal access token.\n\nNote that when you run IGA as a GitHub Actions workflow, you do not need to create or set a GitHub token because it is obtained automatically by the GitHub Actions workflow.\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Specifying a GitHub release",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "A GitHub release can be specified to IGA in one of two mutually-exclusive ways:\n\n1. The full URL of the web page on GitHub of a tagged release. In this case,\n    the URL must be the final argument on the command line invocation of IGA\n    and the options `--account` and `--repo` must be omitted.\n2. A combination of _account name_, _repository name_, and _tag_. In this\n    case, the final argument on the command line must be the _tag_, and in\n    addition, values for the options `--account` and `--repo` must be provided.\n\nHere's an example using approach #1 (assuming environment variables `INVENIO_SERVER`, `INVENIO_TOKEN`, and `GITHUB_TOKEN` have all been set):\n\n```shell\niga https://github.com/mhucka/taupe/releases/tag/v1.2.0\n```\n\nand here's the equivalent using approach #2:\n\n```shell\niga --github-account mhucka --github-repo taupe v1.2.0\n```\n\nNote that when using this form of the command, the release tag (`v1.2.0` above) must be the last item given on the command line.\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Gathering metadata for an InvenioRDM record",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The record created in InvenioRDM is constructed using information obtained using GitHub's API as well as several other APIs as needed. The information includes the following:\n\n* (if one exists) a `codemeta.json` file in the GitHub repository\n* (if one exists) a `CITATION.cff` file in the GitHub repository\n* data available from GitHub for the release\n* data available from GitHub for the repository\n* data available from GitHub for the account of the owner\n* data available from GitHub for the accounts of repository contributors\n* file assets associated with the GitHub release\n* data available from ORCID.org for ORCID identifiers\n* data available from ROR.org for Research Organization Registry identifiers\n* data available from DOI.org, NCBI, Google Books, & others for publications\n* data available from spdx.org for software licenses\n\nIGA tries to use [`CodeMeta.json`](https://codemeta.github.io) first and [`CITATION.cff`](https://citation-file-format.github.io) second to fill out the fields of the InvenioRDM record. If neither of those files are present, IGA uses values from the GitHub repository instead. You can make it always use all sources of info with the option `--all-metadata`. Depending on how complete and up-to-date your `CodeMeta.json` and `CITATION.cff` are, this may or may not make the record more comprehensive and may or may not introduce redundancies or unwanted values.\n\nTo override the auto-created metadata, use the option `--read-metadata` followed by the path to a JSON file structured according to the InvenioRDM schema used by the destination server. When `--read-metadata` is provided, IGA does _not_ extract the data above, but still obtains the file assets from GitHub.\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Specifying GitHub file assets",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "By default, IGA attaches to the InvenioRDM record _only_ the ZIP file asset created by GitHub for the release. To make IGA attach all assets associated with the GitHub release, use the option `--all-assets`.\n\nTo upload specific file assets and override the default selections made by IGA, you can use the option `--file` followed by a path to a file to be uploaded.  You can repeat the option `--file` to upload multiple file assets. Note that if `--file` is provided, then IGA _does not use any file assets from GitHub_; it is the user's responsibility to supply all the files that should be uploaded.\n\nIf both `--read-metadata` and `--file` are used, then IGA does not actually contact GitHub for any information.\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Handling communities",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "To submit your record to a community, use the `--community` option together with a community name. The option `--list-communities` can be used to get a list of communities supported by the InvenioRDM server. Note that submitting a record to a community means that the record will not be finalized and will not be publicly visible when IGA finishes; instead, the record URL that you receive will be for a draft version, pending review by the community moderators.\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Indicating draft versus published records",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "If the `--community` option is not used, then by default, IGA will finalize and publish the record. To make it stop short and leave the record as a draft instead, use the option `--draft`. The draft option also takes precedence over the community option: if you use both `--draft` and `--community`, IGA will stop after creating the draft record and will _not_ submit it to the community.  (You can nevertheless submit the record to a community manually once the draft is created, by visiting the record's web page and using the InvenioRDM interface there.)\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Versioning records",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The option `--parent-record` can be used to indicate that the record being constructed is a new version of an existing record. This will make IGA use the InvenioRDM API for [record versioning](https://inveniordm.docs.cern.ch/releases/versions/version-v2.0.0/#versioning-support). The newly-created record will be linked to a parent record identified by the value passed to `--parent-record`. The value must be either an InvenioRDM record identifier (which is a sequence of alphanumeric characters of the form _XXXXX-XXXXX_, such as `bknz4-bch35`, generated by the InvenioRDM server), or a URL to the landing page of the record in the InvenioRDM server. (Note that such URLs end in the record identifier.) Here is an example of using this option:\n\n```shell\niga --parent-record xbcd4-efgh5 https://github.com/mhucka/taupe/releases/tag/v1.2.0\n```\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Other options recognized by IGA",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Running IGA with the option `--save-metadata` will make it create a metadata record, but instead of uploading the record (and any assets) to the InvenioRDM server, IGA will write the result to the given destination. This can be useful not only for debugging but also for creating a starting point for a custom metadata record: first run IGA with `--save-metadata` to save a record to a file, edit the result, then finally run IGA with the `--read-metadata` option to use the modified record to create a release in the InvenioRDM server.\n\nThe `--mode` option can be used to change the run mode. Four run modes are available: `quiet`, `normal`, `verbose`, and `debug`. The default mode is `normal`, in which IGA prints a few messages while it's working. The mode `quiet` will make it avoid printing anything unless an error occurs, the mode `verbose` will make it print a detailed trace of what it is doing, and the mode `debug` will make IGA even more verbose. In addition, in `debug` mode, IGA will drop into the `pdb` debugger if it encounters an exception during execution. On Linux and macOS, debug mode also installs a signal handler on signal USR1 that causes IGA to drop into the `pdb` debugger if the signal USR1 is received. (Use `kill -USR1 NNN`, where NNN is the IGA process id.)\n\nBy default, informational output is sent to the standard output (normally the terminal console). The option `--log-dest` can be used to send the output to the given destination instead. The value can be `-` (i.e., a dash) to indicate console output, or it can be a file path to send the output to the file. A special exception is that even if a log destination is given, IGA will still print the final record URL to stdout.  This makes it possible to invoke IGA from scripts that capture the record URL while still saving diagnostic output in case debugging is needed.\n\nBy default, IGA prints only the record URL when done. The option `--print-doi` will make it also print the DOI of the record. (Note that this only works when publishing records; if options `--draft` or `--community` are used, then there will be no DOI. In those case, only the URL will be printed.)\n\nReading and writing large files may take a long time; on the other hand, IGA should not wait forever on network operations before reporting an error if a server or network becomes unresponsive. To balance these conflicting needs, IGA automatically scales its network timeout based on file sizes. To override its adaptive algorithm and set an explicit timeout value, use the option `--timeout` with a value in seconds.\n\nIf given the `--version` option, this program will print its version and other information, and exit without doing anything else.\n\nRunning IGA with the option `--help` will make it print help text and exit without doing anything else.\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Return values",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "This program exits with a return status code of 0 if no problem is encountered.  Otherwise, it returns a nonzero status code. The following table lists the possible values:\n\n| Code | Meaning                                                  |\n|:----:|----------------------------------------------------------|\n| 0    | success &ndash; program completed normally               |\n| 1    | interrupted                                              |\n| 2    | encountered a bad or missing value for an option         |\n| 3    | encountered a problem with a file or directory           |\n| 4    | encountered a problem interacting with GitHub            |\n| 5    | encountered a problem interacting with InvenioRDM        |\n| 6    | the personal access token was rejected                   |\n| 7    | an exception or fatal error occurred                     |\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Adding a DOI badge to your GitHub repository",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "Once you have set up the IGA workflow in your GitHub repository, you may wish to add a DOI badge to your repository's README file. It would be a chore to keep updating the DOI value in this badge every time a new release is made, and thankfully, it's not necessary: it's possible to make the badge get the current DOI value dynamically. Here is how:\n\n1. _After_ you have at least one release archived in your InvenioRDM server, find out the DOI of that release in InvenioRDM, and extract the tail end of that DOI. The DOI assigned by InvenioRDM will be a string such as `10.22002/zsmem-2pg20`; the tail end is the `zsmem-2pg20` part. (Your DOI and tail portion will be different.)\n2. Let <i><b><code>SERVERURL</code></b></i> stand for the URL for your InvenioRDM server, and let <i><b><code>IDENTIFIER</code></b></i> stand for the identifier portion of the DOI. In your `README.md` file, write the DOI badge as follows (without line breaks):\n\n    <pre><code>[![DOI](https://img.shields.io/badge/dynamic/json.svg?label=DOI&query=$.pids.doi.identifier&uri=<i><b><code>SERVERURL</code></b></i>/api/records/<i><b><code>IDENTIFIER</code></b></i>/versions/latest)](<i><b><code>SERVERURL</code></b></i>/records/<i><b><code>IDENTIFIER</code></b></i>/latest)</code></pre>\n\nFor example, for CaltechDATA and the archived IGA releases there,\n\n* <i><b><code>SERVERURL</code></b></i> = `http://data.caltech.edu`\n* <i><b><code>IDENTIFIER</code></b></i> = `zsmem-2pg20`\n\nwhich leads to the following badge string for IGA's `README.md` file:\n\n```txt\n[![DOI](https://img.shields.io/badge/dynamic/json.svg?label=DOI&query=$.pids.doi.identifier&uri=https://data.caltech.edu/api/records/zsmem-2pg20/versions/latest)](https://data.caltech.edu/records/zsmem-2pg20/latest)\n```\n\n<br>The result looks like this: <div align=\"center\">\n\n[![DOI](https://img.shields.io/badge/dynamic/json.svg?label=DOI&query=$.pids.doi.identifier&uri=https://data.caltech.edu/api/records/zsmem-2pg20/versions/latest)](https://data.caltech.edu/records/zsmem-2pg20/latest)\n\n</div>\n\nYou can change the look of the badge by using style parameters. Please refer to the [Shields.io](https://shields.io/badges/static-badge) documentation for static badges.\n\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting help",
        "parent_header": [
          "IGA<img alt=\"IGA logo\" width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/iga/raw/main/docs/_static/media/cloud-upload.png\">"
        ],
        "type": "Text_excerpt",
        "value": "If you find an issue, please submit it in [the GitHub issue tracker](https://github.com/caltechlibrary/iga/issues) for this repository.\n\n"
      },
      "source": "https://github.com/caltechlibrary/iga/blob/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "1.3.5"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "tag": "0.1.3",
        "type": "Release",
        "value": "0.1.3"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/iga/develop/iga/vendor/pybtex_apa7_style/pyproject.toml",
      "technique": "code_parser"
    }
  ]
}
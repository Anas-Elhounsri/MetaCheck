{
  "application_domain": [
    {
      "confidence": 0.8942588863658114,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "chuck@rcharlie.com",
        "type": "String",
        "value": "Charlie Thompson"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "daniel.antal@dataobservatory.eu",
        "identifier": "https://orcid.org/0000-0001-7513-6760",
        "type": "String",
        "value": "Daniel Antal"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "josiah.parry@yahoo.com",
        "identifier": "https://orcid.org/0000-0001-9910-865X",
        "type": "String",
        "value": "Josiah Parry"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "donal.phipps@gmail.com",
        "type": "String",
        "value": "Donal Phipps"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "tom.wolff@duke.edu",
        "type": "String",
        "value": "Tom Wolff"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\nand learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\ncommunity\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\nadvances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\naddress, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards\nof acceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies\nwhen an individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at [INSERT CONTACT\nMETHOD]. All complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0,\navailable at https://www.contributor-covenant.org/version/2/0/\ncode_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at https://\nwww.contributor-covenant.org/translations.\n"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/charlie86/spotifyr"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/charlie86/spotifyr"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/charlie86/spotifyr"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-09-07T03:35:05Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-09-12T08:28:52Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "R wrapper for Spotify's Web API"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/DESCRIPTION",
        "type": "String",
        "value": "An R wrapper for pulling data from the 'Spotify' Web API \n  <https://developer.spotify.com/documentation/web-api/> in bulk, or post items on a\n  'Spotify' user's playlist."
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An R wrapper for pulling data from the 'Spotify' Web API <https://developer.spotify.com/documentation/web-api/> in bulk, or post items on a 'Spotify' user's playlist."
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.975637489874041,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "spotifyr is an R wrapper for pulling track audio features and other\ninformation from Spotify\u2019s Web API in bulk. By automatically batching\nAPI requests, it allows you to enter an artist\u2019s name and retrieve their\nentire discography in seconds, along with Spotify\u2019s audio features and\ntrack/album popularity metrics. You can also pull song and playlist\ninformation for a given Spotify User (including yourself!).\n \n"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/readme.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8951382893903277,
      "result": {
        "original_header": "Authentication",
        "type": "Text_excerpt",
        "value": "First, set up a Dev account with Spotify to access their Web API\n[here](https://developer.spotify.com/my-applications/#!/applications).\nThis will give you your `Client ID` and `Client Secret`. Once you have\nthose, you can pull your access token into R with\n`get_spotify_access_token()`. \n"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/readme.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9076567437278272,
      "result": {
        "original_header": "Authorization Code Flow",
        "type": "Text_excerpt",
        "value": "For certain functions and applications, you\u2019ll need to log in as a\nSpotify user. To do this, your Spotify Developer application needs to\nhave a callback url. You can set this to whatever you want that will\nwork with your application, but a good default option is\n`http://localhost:1410/` (see image below). For more information on\nauthorization, visit the offical [Spotify Developer\nGuide](https://developer.spotify.com/documentation/general/guides/authorization-guide/). \n"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/readme.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.813194432365501,
      "result": {
        "original_header": "Dope Stuff Other People Have Done with spotifyr",
        "type": "Text_excerpt",
        "value": "[Sente-se triste quando ouve \u201cAmar pelos dois\u201d? N\u00e3o \u00e9 o \u00fanico (Do you\nfeel sad when you hear \u201cLove for both?\u201d You\u2019re not\nalone)](https://rr.sapo.pt/especial/112355/sente-se-triste-quando-ouve-amar-pelos-dois-nao-e-o-unico),\nRui Barros, R\u00e1dio Renascen\u00e7a \n"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/readme.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9602680469303578,
      "result": {
        "original_header": "Code of Conduct",
        "type": "Text_excerpt",
        "value": "Please note that the spotifyr project is released with a [Contributor\nCode of\nConduct](https://contributor-covenant.org/version/2/0/CODE_OF_CONDUCT.html).\nBy contributing to this project, you agree to abide by its terms.\n \n"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/readme.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/charlie86/spotifyr/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/charlie86/spotifyr/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 69
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/charlie86/spotifyr/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "charlie86/spotifyr"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "spotifyr"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/readme.Rmd",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "description",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/charlie86/spotifyr/master/DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/DESCRIPTION",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/DESCRIPTION",
        "type": "Url",
        "value": "DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "spotifyr"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.5638489"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/readme.Rmd",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/charlie86/spotifyr/master/man/figures/README-joyplot-1.png"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/readme.Rmd",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "spotifyr"
        ],
        "type": "Text_excerpt",
        "value": "CRAN version 2.2.3 (recommended)\n\n``` r\ninstall.packages('spotifyr')\n```\n\nDevelopment version\n\n``` r\ndevtools::install_github('charlie86/spotifyr')\n```\n"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/readme.Rmd",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/charlie86/spotifyr/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/charlie86/spotifyr/issues"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/charlie86/spotifyr/issues"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "music-information-retrieval, spotify"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "spotify",
          "music-information-retrieval"
        ]
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "YEAR: 2017\nCOPYRIGHT HOLDER: Charlie Thompson\n"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/DESCRIPTION",
        "type": "String",
        "value": "MIT + file LICENSE"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/MIT",
        "spdx_id": "https://spdx.org/licenses/MIT",
        "type": "License",
        "value": "https://spdx.org/licenses/MIT"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/charlie86/spotifyr/master/man/figures/spotifyr_auth_screenshot.png"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/readme.Rmd",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "spotifyr"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "spotifyr: R Wrapper for the 'Spotify' Web API"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "charlie86"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/DESCRIPTION",
        "type": "String",
        "value": "spotifyr"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 186700,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 217,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "type": "Programming_language",
        "url": "https://r-project.org",
        "value": "R",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/charlie86/spotifyr/master/readme.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://github.com/charlie86/spotifyr/blob/master/README.md"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/charlie86/spotifyr/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "antaldaniel",
          "type": "User"
        },
        "date_created": "2024-10-22T14:51:03Z",
        "date_published": "2024-10-22T14:54:22Z",
        "description": "This pre-release (not yet on CRAN) contains some pertinent fixes from @pmcharrison (thank you!)\r\nAfter further checks, and review from remaining pull requests will go to CRAN.\r\n",
        "html_url": "https://github.com/charlie86/spotifyr/releases/tag/2.2.5",
        "name": "Recent updates",
        "release_id": 181252919,
        "tag": "2.2.5",
        "tarball_url": "https://api.github.com/repos/charlie86/spotifyr/tarball/2.2.5",
        "type": "Release",
        "url": "https://api.github.com/repos/charlie86/spotifyr/releases/181252919",
        "value": "https://api.github.com/repos/charlie86/spotifyr/releases/181252919",
        "zipball_url": "https://api.github.com/repos/charlie86/spotifyr/zipball/2.2.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "antaldaniel",
          "type": "User"
        },
        "date_created": "2022-12-14T20:22:02Z",
        "date_published": "2022-12-14T20:36:45Z",
        "description": "- Removing the `genius` dependency as it is archived now.\r\n- Small bug fixes by [\\@yogat3ch](https://github.com/yogat3ch) (thanks!)",
        "html_url": "https://github.com/charlie86/spotifyr/releases/tag/2.2.4",
        "name": "Removing the genius library link",
        "release_id": 86080899,
        "tag": "2.2.4",
        "tarball_url": "https://api.github.com/repos/charlie86/spotifyr/tarball/2.2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/charlie86/spotifyr/releases/86080899",
        "value": "https://api.github.com/repos/charlie86/spotifyr/releases/86080899",
        "zipball_url": "https://api.github.com/repos/charlie86/spotifyr/zipball/2.2.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "antaldaniel",
          "type": "User"
        },
        "date_created": "2021-11-02T16:48:39Z",
        "date_published": "2021-11-02T18:08:01Z",
        "description": "* Fixes bug [#152](https://github.com/charlie86/spotifyr/issues/152). Thanks for the report, [\\@pham-thomas](https://github.com/pham-thomas)!\r\n* Incorporates better API call, thanks for the valuable contribution,  [\\@annnvv](https://github.com/annnvv).\r\n* Fixes [#160](https://github.com/charlie86/spotifyr/issues/160)   Thanks for reporting by [\\@dwh1142](https://github.com/dwh1142) and fixing the scopes ,[\\@bradisbrad](https://github.com/bradisbrad).\r\n* Fixes [#161](https://github.com/charlie86/spotifyr/issues/161) with the bug fix provided by [\\@apsteinmetz](https://github.com/apsteinmetz). Thank you!\r\n* More consistent error messages for `get_artist_audio_features()`, which needs to be re-written together with `get_artist_albums()` for more",
        "html_url": "https://github.com/charlie86/spotifyr/releases/tag/2.2.3",
        "name": "2.2.3 Bug fixes",
        "release_id": 52541640,
        "tag": "2.2.3",
        "tarball_url": "https://api.github.com/repos/charlie86/spotifyr/tarball/2.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/charlie86/spotifyr/releases/52541640",
        "value": "https://api.github.com/repos/charlie86/spotifyr/releases/52541640",
        "zipball_url": "https://api.github.com/repos/charlie86/spotifyr/zipball/2.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "antaldaniel",
          "type": "User"
        },
        "date_created": "2021-06-14T18:39:16Z",
        "date_published": "2021-06-17T08:42:39Z",
        "description": "spotifyr is back on CRAN! \r\n\r\nThe version 2.2.1 modernized the code to make it compatible with tidyverse 1.0+ and stop some annoying deprecation warnings. What is more important, it got some bug fixes, and a very thoroughly reworked exception handling and documentation.  \r\n\r\nWhile there are no new features (in fact, we temporarily retired one), you will get far more meaningful and descriptive error messages, and hopefully do not run into some bugs that were eliminated.  We are aware of some further issues, and we hope that people who experience undesired outcomes from the code can localize the problem and report us issues that are easier to handle. \r\nYou can download the new version with install.packages(\u201cspotifyr\u201d) from CRAN\r\n",
        "html_url": "https://github.com/charlie86/spotifyr/releases/tag/2.2.1",
        "name": "Modernized exception handling and documentation, some bug fixes",
        "release_id": 44779468,
        "tag": "2.2.1",
        "tarball_url": "https://api.github.com/repos/charlie86/spotifyr/tarball/2.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/charlie86/spotifyr/releases/44779468",
        "value": "https://api.github.com/repos/charlie86/spotifyr/releases/44779468",
        "zipball_url": "https://api.github.com/repos/charlie86/spotifyr/zipball/2.2.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "repository_status": [
    {
      "confidence": 1,
      "result": {
        "description": "Active \u2013 The project has reached a stable, usable state and is being actively developed.",
        "type": "Url",
        "value": "https://www.repostatus.org/#active"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/readme.Rmd",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 01:39:43",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 378
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "What Was the Beatles\u2019 Favorite Key?",
        "parent_header": [
          "spotifyr",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "``` r\nlibrary(spotifyr)\nbeatles <- get_artist_audio_features('the beatles')\n```\n\n``` r\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(knitr)\n\nbeatles %>% \n    count(key_mode, sort = TRUE) %>% \n    head(5) %>% \n    kable()\n```\n\n| key\\_mode |   n |\n|:----------|----:|\n| D major   | 115 |\n| C major   | 111 |\n| G major   |  90 |\n| A major   |  80 |\n| E major   |  68 |\n"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/readme.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Get your most recently played tracks",
        "parent_header": [
          "spotifyr",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "``` r\nlibrary(lubridate)\n#> Warning: package 'lubridate' was built under R version 4.1.1\n\nget_my_recently_played(limit = 5) %>% \n    mutate(\n        artist.name = map_chr(track.artists, function(x) x$name[1]),\n        played_at = as_datetime(played_at)\n        ) %>% \n    select(\n      all_of(c(\"track.name\", \"artist.name\", \"track.album.name\", \"played_at\"))\n      ) %>% \n    kable()\n```\n\n| track.name                   | artist.name | track.album.name                                                                                   | played\\_at          |\n|:-----------------------------|:------------|:---------------------------------------------------------------------------------------------------|:--------------------|\n| Look For Me (I\u2019ll Be Around) | Neko Case   | Blacklisted                                                                                        | 2021-11-01 17:16:12 |\n| Don\u2019t Forget Me              | Neko Case   | Middle Cyclone                                                                                     | 2021-11-01 17:12:50 |\n| Magpie to the Morning        | Neko Case   | The Worse Things Get, The Harder I Fight, The Harder I Fight, The More I Love You (Deluxe Edition) | 2021-11-01 17:09:42 |\n| Margaret vs.\u00a0Pauline         | Neko Case   | Fox Confessor Brings The Flood (Bonus Track Version)                                               | 2021-11-01 17:06:45 |\n| Runnin\u2019 Out Of Fools         | Neko Case   | Blacklisted                                                                                        | 2021-11-01 17:03:52 |\n"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/readme.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Find Your All Time Favorite Artists",
        "parent_header": [
          "spotifyr",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "``` r\nget_my_top_artists_or_tracks(type = 'artists', \n                             time_range = 'long_term', \n                             limit = 5) %>% \n    select(.data$name, .data$genres) %>% \n    rowwise %>% \n    mutate(genres = paste(.data$genres, collapse = ', ')) %>% \n    ungroup %>% \n    kable()\n```\n\n| name                | genres                                                |\n|:--------------------|:------------------------------------------------------|\n| Japanese Breakfast  | art pop, eugene indie, indie pop, philly indie        |\n| Balthazar           | belgian indie, belgian rock, dutch indie, ghent indie |\n| Haley Bonar         | melancholia, stomp and holler                         |\n| Angus & Julia Stone | australian indie folk, indie folk, stomp and holler   |\n| Buildings Breeding  | indie fuzzpop                                         |\n"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/readme.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Find your favorite tracks at the moment",
        "parent_header": [
          "spotifyr",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "``` r\nget_my_top_artists_or_tracks(type = 'tracks', \n                             time_range = 'short_term', \n                             limit = 5) %>% \n    mutate(\n        artist.name = map_chr(artists, function(x) x$name[1])\n        ) %>% \n    select(name, artist.name, album.name) %>% \n    kable()\n```\n\n| name                                 | artist.name   | album.name                       |\n|:-------------------------------------|:--------------|:---------------------------------|\n| Can\u2019t Walk That Back                 | Tristen       | Can\u2019t Walk That Back             |\n| You\u2019re Too Weird                     | Fruit Bats    | Tripper                          |\n| California (All the Way)             | Luna          | Bewitched                        |\n| Don\u2019t Blame Your Daughter (Diamonds) | The Cardigans | Super Extra Gravity (Remastered) |\n| Born In The \u201970s                     | Fruit Bats    | Spelled In Bones                 |\n"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/readme.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "What\u2019s the most joyful Joy Division song?",
        "parent_header": [
          "spotifyr",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "My favorite audio feature has to be \u201cvalence,\u201d a measure of musical\npositivity.\n\n``` r\njoy <- get_artist_audio_features('joy division')\n```\n\n``` r\njoy %>% \n    arrange(-valence) %>% \n    select(.data$track_name, .data$valence) %>% \n    head(5) %>% \n    kable()\n```\n\n| track\\_name                               | valence |\n|:------------------------------------------|--------:|\n| Passover - 2020 Digital Master            |   0.946 |\n| Passover - 2007 Remaster                  |   0.941 |\n| Colony - 2020 Digital Master              |   0.829 |\n| Colony - 2007 Remaster                    |   0.808 |\n| Atrocity Exhibition - 2020 Digital Master |   0.790 |\n\nNow if only there was some way to plot joy\u2026\n"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/readme.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Joyplot of the emotional rollercoasters that are Joy Division\u2019s albums",
        "parent_header": [
          "spotifyr",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "``` r\nlibrary(ggplot2)\nlibrary(ggridges)\n\nggplot(\n    joy, \n    aes(x = valence, y = album_name)\n    ) + \ngeom_density_ridges() + \ntheme_ridges() +\nlabs(title = \"Joyplot of Joy Division's joy distributions\", \n     subtitle = \"Based on valence pulled from Spotify's Web API with spotifyr\")\n```\n\n<img src=\"man/figures/README-joyplot-1.png\" width=\"100%\" />\n"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/readme.Rmd",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/DESCRIPTION",
        "type": "String",
        "value": "2.2.5"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2.2.5"
      },
      "source": "https://raw.githubusercontent.com/charlie86/spotifyr/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
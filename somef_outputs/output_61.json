{
  "application_domain": [
    {
      "confidence": 0.8126325348328753,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/DESCRIPTION",
        "type": "Agent",
        "value": [
          {
            "email": "",
            "value": "Damiano Oldoni"
          }
        ]
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "damiano.oldoni@inbo.be",
        "identifier": "https://orcid.org/0000-0003-3445-7562",
        "type": "String",
        "value": "Damiano Oldoni"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "pieterjan.verhelst@inbo.be",
        "identifier": "https://orcid.org/0000-0002-2610-6941",
        "type": "String",
        "value": "Pieterjan Verhelst"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at codeofconduct@posit.co. \nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n<https://www.contributor-covenant.org/version/2/1/code_of_conduct.html>.\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][https://github.com/mozilla/inclusion].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n<https://www.contributor-covenant.org/faq>. Translations are available at <https://www.contributor-covenant.org/translations>.\n\n[homepage]: https://www.contributor-covenant.org\n"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/.github/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/inbo/archivaltag"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/inbo/archivaltag"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/inbo/archivaltag"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": [
          "https://github.com/inbo/archivaltag/actions/workflows/R-CMD-check.yaml",
          "https://github.com/inbo/archivaltag/actions/workflows/test-coverage.yaml",
          "https://app.codecov.io/gh/inbo/archivaltag?branch=main"
        ]
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing to archivaltag\n\nThis outlines how to propose a change to archivaltag.\nFor a detailed discussion on contributing to this and other tidyverse packages, please see the [development contributing guide](https://rstd.io/tidy-contrib) and our [code review principles](https://code-review.tidyverse.org/).\n\n## Fixing typos\n\nYou can fix typos, spelling mistakes, or grammatical errors in the documentation directly using the GitHub web interface, as long as the changes are made in the _source_ file. \nThis generally means you'll need to edit [roxygen2 comments](https://roxygen2.r-lib.org/articles/roxygen2.html) in an `.R`, not a `.Rd` file. \nYou can find the `.R` file that generates the `.Rd` by reading the comment in the first line.\n\n## Bigger changes\n\nIf you want to make a bigger change, it's a good idea to first file an issue and make sure someone from the team agrees that it\u2019s needed. \nIf you\u2019ve found a bug, please file an issue that illustrates the bug with a minimal \n[reprex](https://www.tidyverse.org/help/#reprex) (this will also help you write a unit test, if needed).\nSee our guide on [how to create a great issue](https://code-review.tidyverse.org/issues/) for more advice.\n\n### Pull request process\n\n*   Fork the package and clone onto your computer. If you haven't done this before, we recommend using `usethis::create_from_github(\"inbo/archivaltag\", fork = TRUE)`.\n\n*   Install all development dependencies with `devtools::install_dev_deps()`, and then make sure the package passes R CMD check by running `devtools::check()`. \n    If R CMD check doesn't pass cleanly, it's a good idea to ask for help before continuing. \n*   Create a Git branch for your pull request (PR). We recommend using `usethis::pr_init(\"brief-description-of-change\")`.\n\n*   Make your changes, commit to git, and then create a PR by running `usethis::pr_push()`, and following the prompts in your browser.\n    The title of your PR should briefly describe the change.\n    The body of your PR should contain `Fixes #issue-number`.\n\n*  For user-facing changes, add a bullet to the top of `NEWS.md` (i.e. just below the first header). Follow the style described in <https://style.tidyverse.org/news.html>.\n\n### Code style\n\n*   New code should follow the tidyverse [style guide](https://style.tidyverse.org). \n    You can use the [styler](https://CRAN.R-project.org/package=styler) package to apply these styles, but please don't restyle code that has nothing to do with your PR.  \n\n*  We use [roxygen2](https://cran.r-project.org/package=roxygen2), with [Markdown syntax](https://cran.r-project.org/web/packages/roxygen2/vignettes/rd-formatting.html), for documentation.  \n\n*  We use [testthat](https://cran.r-project.org/package=testthat) for unit tests. \n   Contributions with test cases included are easier to accept.  \n\n## Code of Conduct\n\nPlease note that the archivaltag project is released with a\n[Contributor Code of Conduct](CODE_OF_CONDUCT.md). By contributing to this\nproject you agree to abide by its terms.\n"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/.github/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-11T10:48:04Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-06-24T08:58:45Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "R Package to read archival tag data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/DESCRIPTION",
        "type": "String",
        "value": "Functionalities to read archival tag data from several manufacturers, types and sensors."
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Functionalities to read archival tag data from several manufacturers, types and sensors."
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.971840002447244,
      "result": {
        "original_header": "archivaltag",
        "type": "Text_excerpt",
        "value": "\nThe goal of archivaltag is to provide information to read archival tag\ndata. Such data are stored differently depending on the manufacturer and\nthe model. Also, the data are different depending on the sensors built\nin.\n \n"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://lifecycle.r-lib.org/articles/stages.html#experimental"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/inbo/archivaltag/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/inbo/archivaltag/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "inbo/archivaltag"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "archivaltag"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "description",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/inbo/archivaltag/main/DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/DESCRIPTION",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/DESCRIPTION",
        "type": "Url",
        "value": "DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "archivaltag"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "archivaltag"
        ],
        "type": "Text_excerpt",
        "value": "You can install the development version of archivaltag from\n[GitHub](https://github.com/) with:\n\n``` r\n# install.packages(\"devtools\")\ndevtools::install_github(\"inbo/archivaltag\")\n```\n\nHowever, as reading R functions will be not developed at this stage, no\nreal installation is needed. Check the vignette online for more\ninformation about reading data files of archival tags.\n"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/inbo/archivaltag/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/inbo/archivaltag/issues"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/inbo/archivaltag/issues"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "oscibio, r, rstats, telemetry"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "oscibio",
          "r",
          "rstats",
          "telemetry"
        ]
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "File_dump",
        "value": "# MIT License\n\nCopyright (c) 2024 Research Institute for Nature and Forest (INBO)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/LICENSE.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/DESCRIPTION",
        "type": "String",
        "value": "MIT + file LICENSE"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/MIT",
        "spdx_id": "https://spdx.org/licenses/MIT",
        "type": "License",
        "value": "https://spdx.org/licenses/MIT"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "archivaltag"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "archivaltag: Read Archival Tag Data"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "inbo"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/DESCRIPTION",
        "type": "String",
        "value": "archivaltag"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 6058,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "type": "Programming_language",
        "url": "https://r-project.org",
        "value": "R",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/inbo/archivaltag/main/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://github.com/inbo/archivaltag/blob/main/README.md"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/inbo/archivaltag/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 00:19:42",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "version": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/DESCRIPTION",
        "type": "String",
        "value": "0.0.0.9000"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "0.0.0.9000"
      },
      "source": "https://raw.githubusercontent.com/inbo/archivaltag/main/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "affiliation": "INSA Lyon",
        "email": "Yves.Renard@insa-lyon.fr",
        "type": "String",
        "value": "Yves Renard"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Julien Pommier"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Konstantinos Poulios"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "Yves",
        "last_name": "RENARD",
        "name": "Yves RENARD",
        "type": "Agent",
        "value": "Yves RENARD"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "-",
        "last_name": "Initial project. All the project.",
        "name": "- Initial project. All the project.",
        "type": "Agent",
        "value": "- Initial project. All the project."
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "Julien",
        "last_name": "POMMIER",
        "name": "Julien POMMIER",
        "type": "Agent",
        "value": "Julien POMMIER"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "-",
        "last_name": "All the project. Main contributions :",
        "name": "- All the project. Main contributions :",
        "type": "Agent",
        "value": "- All the project. Main contributions :"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "-",
        "last_name": "Python/Matlab/Scilab interface,",
        "name": "- Python/Matlab/Scilab interface,",
        "type": "Agent",
        "value": "- Python/Matlab/Scilab interface,"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "-",
        "last_name": "graphical post-treatment,",
        "name": "- graphical post-treatment,",
        "type": "Agent",
        "value": "- graphical post-treatment,"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "-",
        "last_name": "generic assembly",
        "name": "- generic assembly",
        "type": "Agent",
        "value": "- generic assembly"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "-",
        "last_name": "import/export format.",
        "name": "- import/export format.",
        "type": "Agent",
        "value": "- import/export format."
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "Konstantinos",
        "last_name": "POULIOS",
        "name": "Konstantinos POULIOS",
        "type": "Agent",
        "value": "Konstantinos POULIOS"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "-",
        "last_name": "All the project.",
        "name": "- All the project.",
        "type": "Agent",
        "value": "- All the project."
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "-",
        "last_name": "Main contributions on contact with friction algorithms.",
        "name": "- Main contributions on contact with friction algorithms.",
        "type": "Agent",
        "value": "- Main contributions on contact with friction algorithms."
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/AUTHORS",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/getfem/getfem"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "git+https://git.savannah.nongnu.org/git/getfem.git"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/getfem/getfem/master/.github/workflows/repo-sync.yml"
      },
      "technique": "file_exploration"
    }
  ],
  "contributors": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Andriy ANDREIKIV       - All the project. Parallelisation.\nLiang Jin LIM          - All the project. \nTomas LIGURSKY         - Continuation/bifurcation algorithms.\nLuis SAAVEDRA          - Web site / documentation\nYann COLETTE           - Scilab interface"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/CONTRIBUTORS",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-01-16T07:19:05Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "1999-01-01"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2008-06-28"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-08-29T12:03:21Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2025-01-16"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Mirror of GetFEM repository"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GetFEM is an open source library based on collaborative development.\nIt aims to offer the most flexible framework for solving potentially coupled systems of linear and nonlinear partial differential equations with the finite element method. GetFEM is interfaced\nwith some script languages (Python, Octave, Scilab and Matlab) so that almost all of the functionalities can be used just writing scripts. It works in arbitrary dimension and allow to couple 1D, 2D and 3D problems."
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9079939471176866,
      "result": {
        "type": "Text_excerpt",
        "value": "GetFEM is an open source library based on collaborative development.\nIt aims to offer the most flexible framework for solving potentially coupled\nsystems of linear and nonlinear partial differential equations with the finite\nelement method. GetFEM is interfaced\nwith some script languages (Python, Octave, Scilab and Matlab) so that almost\nall of the functionalities can be used just writing scripts. It works in\narbitrary dimension and allow to couple 1D, 2D and 3D problems. The strong\npoints of GetFEM can be summarized as follows: \n  A weak form language (in terms of operators) that allows to translate quite\n  arbitrary weak formulations. A symbolic derivation that allows to\n  automatically obtain the tangent system for nonlinear problems. A compilation\n  of assembly terms into optimized basic instructions. \n  A model description that gather the variables, data and terms of a problem\n  and some predefined bricks representing classical models : elasticity in\n  small and large deformations, Helmholtz problem, scalar elliptic problem,\n  Dirichlet, contact and Neumann boundary conditions, incompressibility\n  constraint, ... \n  A complete separation between geometric transformation, finite element\n  method, integration methods and partial differential term description, which\n  allows to easily switch from a method to another. \n  A large set of predefined methods :\n  isoparametric/subparametric/overparametric elements, Pk on simplices of\n  arbitrary degree and dimension, Qk on parallelepipeds, pyramidal elements,\n  P1, P2 with bubble functions, Hermite elements, Argyris element, HCT and FVS,\n  elements with hierarchical basis (for multigrid methods for instance),\n  discontinuous Pk and Qk, vector elements (RT0, Nedelec) ... \n  A large set of predefined integration methods.\n  Structural mechanics terms (elasticity, contact with friction, plasticity ...)\n  Level-set and finite element cut by one or several level-set (Xfem)\n  \n  Computation of terms between two meshes with an arbitrary transformation:\n  this is a very powerful tool of the generic assembly that allows to use a\n  parameterized transformation. The derivative of the transformation with\n  respect to the potential dependance in the variables is taken into account.\n  Possible use : contact problems, fluid-structure interaction, special\n  boundary conditions ... \n  Post-processing directly with Scilab, Octave or Matlab interfaces or with\n  the export of vtk or gmsh files. Many possibility to interpolate arbitrary\n  quantities, make slices, projections ... \nGetFEM can be used to construct very generic finite element codes, where\nfinite element methods, integration methods and the dimension of the problem\nare the parameters that can be changed very easily. This allows a wide range\nof experiments. Many examples and demos are provided. \nGetFEM has only an experimental meshing procedure (and produces regular meshes).\nIt is therefore often necessary to import meshes. The formats currently\nsupported are GID, GMSH, EMC2 and ANSYS.  \n"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/README",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "active"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/getfem/getfem/releases"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://download-mirror.savannah.gnu.org/releases/getfem/stable/getfem-5.4.4.tar.gz"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 15
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/getfem/getfem/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "getfem/getfem"
      },
      "technique": "GitHub_API"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/getfem/getfem/master/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/requirements.txt",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/getfem/getfem/master/autogen.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/getfem/getfem/master/msvc/makebindist.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/getfem/getfem/master/doc/web/update_website.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/getfem/getfem/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://getfem.discourse.group/"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fem, finite-element-analysis, finite-element-methods, gmsh, hacktoberfest, hacktoberfest2020, matlab, mechanical-engineering, octave, python, science, scientific-computing, scilab, simulation, vtk"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/LGPL-3.0",
        "spdx_id": "https://spdx.org/licenses/LGPL-3.0",
        "type": "License",
        "value": "https://spdx.org/licenses/LGPL-3.0"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": ".. include:: replaces.txt\n\n.. highlight:: none\n\n.. _history-and-license:\n\n*******************\nHistory and License\n*******************\n\nGetFEM was born during the PhD thesis of Yves Renard (1994-1998, the first files dating from 1995). The fundamental bases of GetFEM (assembly in any dimension, separation of geometric transformations, finite element methods and cubature methods) date from 1999. However, GetFEM did not take the size it is now without the contributions of Julien Pommier since 2001. His major contributions are generic assembly, Matlab and Python interfaces and the graphical postprocessing (including nice Matlab functions, vtk, open DX output, slices ...). Early versions distributed in 2002 already contain these components. Since then, GetFEM grows thanks to various collaborations and external contributions.\n\n\n\n.. include:: license.txt\n\n"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/doc/sphinx/source/license.rst",
      "technique": "file_exploration"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "getfem"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "GetFEM"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "getfem"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 8560129,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 864256,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 701001,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 541706,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Scilab",
        "size": 430688,
        "type": "Programming_language",
        "value": "Scilab"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 222270,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 136472,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 133600,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "M4",
        "size": 132671,
        "type": "Programming_language",
        "value": "M4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Raku",
        "size": 37721,
        "type": "Programming_language",
        "value": "Raku"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 28386,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 27527,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Inno Setup",
        "size": 14490,
        "type": "Programming_language",
        "value": "Inno Setup"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 3034,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 2936,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "GLSL",
        "size": 2758,
        "type": "Programming_language",
        "value": "GLSL"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "RPC",
        "size": 1239,
        "type": "Programming_language",
        "value": "RPC"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "type": "Programming_language",
        "value": "C++",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "type": "Programming_language",
        "value": "Python",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Scilab",
        "type": "Programming_language",
        "value": "Scilab",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Octave",
        "type": "Programming_language",
        "value": "Octave",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Matlab",
        "type": "Programming_language",
        "value": "Matlab",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/getfem/getfem/master/README"
      },
      "technique": "file_exploration"
    }
  ],
  "reference_publication": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://doi.org/10.1145/3412849"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "numpy",
        "type": "Software_application",
        "value": "numpy",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "scipy",
        "type": "Software_application",
        "value": "scipy",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Sphinx",
        "type": "Software_application",
        "value": "Sphinx",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pyvista",
        "type": "Software_application",
        "value": "pyvista",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": null,
        "type": "Software_application",
        "value": "Python 3.4",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "SuperLu",
        "type": "Software_application",
        "value": "SuperLu",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Mumps",
        "type": "Software_application",
        "value": "Mumps",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Blas",
        "type": "Software_application",
        "value": "Blas",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Lapack",
        "type": "Software_application",
        "value": "Lapack",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "qhull",
        "type": "Software_application",
        "value": "qhull",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 01:18:02",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 54
      },
      "technique": "GitHub_API"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "5.4.4"
      },
      "source": "https://raw.githubusercontent.com/getfem/getfem/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
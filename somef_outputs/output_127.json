{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "mdsherman@betteridiot.tech",
        "type": "Agent",
        "value": "mdsherman@betteridiot.tech"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Department of Computational Medicine and Bioinformatics, University of Michigan",
        "email": "mdsherm@umich.edu",
        "identifier": "https://orcid.org/0000-0002-0243-4609",
        "type": "String",
        "value": "Marcus D Sherman"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "remills@med.umich.edu",
        "identifier": "https://orcid.org/0000-0003-3425-6998",
        "type": "String",
        "value": "Ryan E Mills"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Department of Computational Medicine and Bioinformatics, University of Michigan",
        "email": "mdsherm@umich.edu",
        "identifier": "https://orcid.org/0000-0002-0243-4609",
        "type": "String",
        "value": "Marcus D Sherman"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/paper/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "remills@med.umich.edu",
        "identifier": "https://orcid.org/0000-0003-3425-6998",
        "type": "String",
        "value": "Ryan E Mills"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/paper/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "BAMnostic"
        ],
        "type": "Text_excerpt",
        "value": "If you use bamnostic in your analyses, please consider citing [Li et al (2009)](http://www.ncbi.nlm.nih.gov/pubmed/19505943) as well. Regarding the citation for bamnostic, please use the JoSS journal article (click on the JOSS badge above) or use the following:\r\n>Sherman MD and Mills RE, (2018). BAMnostic: an OS-agnostic toolkit for genomic sequence analysis . Journal of Open Source Software, 3(28), 826, https://doi.org/10.21105/joss.00826\r\n\r\n***\r"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at support@betteridiot.tech. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/betteridiot/bamnostic"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/betteridiot/bamnostic/"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/betteridiot/bamnostic"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/betteridiot/bamnostic"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/paper/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# How to contribute to bamnostic\n----\n**First and foremost:** by contributing in this project, you agree to abide by\nthe Contributor Covenant [code of conduct](https://github.com/betteridiot/bamnostic/blob/master/CODE_OF_CONDUCT.md)\n\n## Our Promise:\nThe maintainers of this project promise to address each issue/question/pull\nrequest in the following manner:\n* Prompt acknowledgment of receipt of issue/question/pull request\n    * Potentially assigning to a specific maintainer\n* If needed, a description of when work on a given issue has started, or an explanation of why the issues/pull request is not being addressed\n* Closing the issue upon the maintainer's determination of issue resolution.\n\n## General Questions\n\n* Read the [documentation](https://bamnostic.readthedocs.io/en/latest/?badge=latest) on the project\n* Search the GitHub [Issues](https://github.com/betteridiot/bamnostic/issues) for this project to see if this question has already been addressed\n* If neither of these avenues answer your question, please feel free to create\na new [issue](https://github.com/betteridiot/bamnostic/issues) that has a \nsuccinct (but informative) subject line. In the body of the issue, please ask\nyour question, including any context regarding your specific problem or inquiry.\n\nA *bad* general question would look like:\n> \"Your module will not work on my computer. How do I fix it?\"\n\nA *good* general question would look like:\n> \"I am running your code on Windows 10 version 1803 in a Anaconda build of Python version 3.6. When I try to \\<some implementation\\>, I get \\<some error\\>. Here is an example of how I invoked your code: \\<insert code invocation\\>. Can you tell what is going on?\"\n\n## Bug reporting\n\n* Ensure the bug has not been already reported:\n    * Search the GitHub [Issues](https://github.com/betteridiot/bamnostic/issues) for this project\n* If the bug has not been previously reported, feel free to open a new issue:\n    * Please follow the Bug report template provided on issue creation as closely as possible\n\n## Bugfixes, patches, or documentation corrections\nAny additions to the code should follow the [Google Python Style Guide](https://github.com/google/styleguide/blob/gh-pages/pyguide.md) or [NumPy Style Guide](https://numpydoc.readthedocs.io/en/latest/) for documentation purposes.\n\nThe preferred method of contributing in the form of a pull request is to fork\nthe latest version of the project (likely the `master` branch), and cloning that\nfork to your local machine:\n\n```bash\n\ngit clone git@github.com:your-username/bamnostic.git\n\n```\n\nCommit your changes to your fork, and submit a [Pull Request](https://github.com/betteridiot/bamnostic/pulls)\n\nThe maintainers will review your PR within a timely manner. Be aware that the \nmaintainers may request an improvement or alternative, and also reserve the\nright to reject any Pull Request if it does not meet sytle or community\nguidelines.\n\nA good PR should contain the following items:\n* Follows the [Google Python Style Guide](https://github.com/google/styleguide/blob/gh-pages/pyguide.md) or [NumPy Style Guide](https://numpydoc.readthedocs.io/en/latest/).\n* **Tests:** either doctests for unit tests (written using `pytest`)\n* Contains a helpful/meaningful **commit message**.\n"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "contributors": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Commmunity Contributors:",
        "parent_header": [
          "BAMnostic"
        ],
        "type": "Text_excerpt",
        "value": "Below you will find a list of contributors and it acts as a small token of my gratitude to the community that has helped support this project.\r\n1. [@GeekLogan](https://github.com/GeekLogan)\r\n2. [@giesselmann](https://github.com/giesselmann)\r\n3. [@olgabot](https://github.com/olgabot)\r\n4. [@OliverVoogd](https://github.com/OliverVoogd)\r\n5. [@gmat](https://github.com/gmat)\r\n6. [@JMencius](https://github.com/JMencius\r\n"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-02-16T17:57:09Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-06-27T23:47:50Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2025-06-27"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2025-06-27"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/paper/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "a pure Python multi-version tolerant, runtime and OS-agnostic Binary Alignment Map (BAM) file parser and random access tool"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Pure Python, OS-agnostic Binary Alignment Map (BAM) random access and parsing tool"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BAMnostic is a Pure Python OS, version, and runtime agnostic BAM file parser"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BAMnostic: an OS-agnostic toolkit for genomic sequence analysis"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/paper/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Next-Generation Sequencing",
        "parent_header": [
          "BAMnostic",
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "The field of genomics requires sequencing data produced by Next-Generation sequencing (NGS) platforms (such as [Illumina](https://www.illumina.com/)). These data take the form of millions of short strings that represent the nucleotide sequences (A, T, C, or G) of the sample fragments processed by the NGS platform. More information regarding the NGS workflow can be found [here](https://www.illumina.com/content/dam/illumina-marketing/documents/products/illumina_sequencing_introduction.pdf)\r\n</br></br> \r\nAn example of a single entry (known as FASTQ) can be seen below ([FASTQ Format](https://en.wikipedia.org/wiki/FASTQ_format)):</br>\r\n\r\n```bash\r\n@SRR001666.1 071112_SLXA-EAS1_s_7:5:1:817:345 length=36\r\nGGGTGATGGCCGCTGCCGATGGCGTCAAATCCCACC\r\n+SRR001666.1 071112_SLXA-EAS1_s_7:5:1:817:345 length=36\r\nIIIIIIIIIIIIIIIIIIIIIIIIIIIIII9IG9IC\r\n``` \r\n\r\nEach entry details the read name, lenght, string representation, and quality of each aligned base along the read.\r"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "SAM/BAM Format",
        "parent_header": [
          "BAMnostic",
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "The data from the NGS platforms are often aligned to reference genome. That is, each entry goes through an alignment algorithm that finds the best position that the entry matches along a known reference sequence. The alignment step extends the original entry with a sundry of additional attributes. A few of the included attributes are contig, position, and Compact Idiosyncratic Gapped Alignment Report (CIGAR) string. The modified entry is called the \r\nAn example Sequence Alignment Map (SAM) entry can be see below ([SAM format](https://samtools.github.io/hts-specs/SAMv1.pdf)):\r\n\r\n```bash\r\n@HD VN:1.5 SO:coordinate\r\n@SQ SN:ref LN:45\r\nr001   99 ref  7 30 8M2I4M1D3M = 37  39 TTAGATAAAGGATACTG *\r\nr002    0 ref  9 30 3S6M1P1I4M *  0   0 AAAAGATAAGGATA    *\r\nr003    0 ref  9 30 5S6M       *  0   0 GCCTAAGCTAA       * SA:Z:ref,29,-,6H5M,17,0;\r\nr004    0 ref 16 30 6M14N5M    *  0   0 ATAGCTTCAGC       *\r\nr003 2064 ref 29 17 6H5M       *  0   0 TAGGC             * SA:Z:ref,9,+,5S6M,30,1;\r\nr001  147 ref 37 30 9M         =  7 -39 CAGCGGCAT         * NM:i:1\r\n``` \r\n\r\nThere are many benefits to the SAM format: human-readable, each entry is contained to a single line (supporting simple stream analysis), concise description of the read's quality and position, and a file header metadata that supports integrity and reproducibility.\r\n</br></br>\r\nAdditionally, a compressed form of the SAM format was designed in parallel. It is called the Binary Alignment Map ([BAM](https://samtools.github.io/hts-specs/SAMv1.pdf)). Using a series of clever byte encoding of each SAM entry, the data are compressed into specialized, concatenated GZIP blocks called Blocked GNU Zip Format ([BGZF](https://samtools.github.io/hts-specs/SAMv1.pdf)) blocks. Each BGZF block contains a finite amount of data (&#8776;65Kb). While the whole file is GZIP compatible, each individual block is also independently GZIP compatible. This data structure, ultimately, makes the file larger than just a normal GZIP file, but it also allow for random access within the file though the use of a BAM Index file ([BAI](https://samtools.github.io/hts-specs/SAMv1.pdf)).\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "BAI",
        "parent_header": [
          "BAMnostic",
          "Introduction"
        ],
        "type": "Text_excerpt",
        "value": "The BAI file, often produced via [samtools](http://samtools.sourceforge.net/), requires the BAM file to be sorted prior to indexing. Using a modified R-tree binning strategy, each reference contig is divided into sequential, non-overlapping bins. That is a parent bin may contain numerous children, but none of the children bins overlap another's assigned interval. Each BAM entry is then assigned to the bin that fully contains it. A visual description of the binning strategy can be found [here](https://samtools.github.io/hts-specs/SAMv1.pdf). Each bin is comprised of chunks, and each chunk contains its respective start and stop byte positions within the BAM file.\r\n</br>\r\nIn addition to the bin index, a linear index is produced as well. Again, the reference contig is divided into equally sized windows (covering &#8776;16Kbp/each). Along those windows, the start offset of the first read that ***overlaps*** that window is stored. Now, given a region of interest, the first bin that overlaps the region is looked up. The chunks in the bin are stored as *virtual offsets*. </br>\r\nA virtual offset is a 64-bit unsigned integer that is comprised of the compressed offset `coffset` (indicating the byte position of the start of the containing BGZF block) and the uncompressed offset `uoffset` (indicating the byte position within the uncompressed data of the BGZF block that the data starts). A virtual offset is calculated by:\r\n\r\n```python\r\nvirtual_offset = coffset << 16 | uoffset\r\n``` \r\n\r\nSimilarly, the complement of the above is as follows:\r\n\r\n```python\r\ncoffset = virtual_offset >> 16\r\nuoffset = virtual_offset ^ (coffset << 16)\r\n``` \r\n\r\nA simple seek call against the BAM file will put the head at the start of your region of interest.\r\n\r\n***\r"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9827372346545659,
      "result": {
        "original_header": "Quickstart",
        "type": "Text_excerpt",
        "value": "Bamnostic is meant to be a reduced drop-in replacement for [pysam](https://github.com/pysam-developers/pysam). As such it has much the same API as `pysam` with regard to BAM-related operations. </br>\r\n**Note**: the `pileup()` method is not supported at this time. </br></br>\r \n"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9935961021721543,
      "result": {
        "original_header": "Motivation",
        "type": "Text_excerpt",
        "value": "The common practice within the field of genomics/genetics when analyzing BAM files is to use the program known as [samtools](http://samtools.sourceforge.net/). The maintainers of samtools have done a tremendous job of providing distributions that work on a multitude of operating systems. While samtools is powerful, as a command line interface, it is also limited in that it doesn't really afford the ability to perform real-time dynamic processing of reads (without requiring many system calls to samtools). Due to its general nature and inherent readability, a package was written in Python called [pysam](https://github.com/pysam-developers/pysam). This package allowed users a very comfortable means to doing such dynamic processing. However, the foundation of these tools is built on a C-API called [htslib](https://github.com/samtools/htslib) and htslib cannot be compiled in a Windows environment. By extension, neither can pysam. \r\n</br></br>\r\nIn building a tool for genomic visualization, I wanted it to be platform agnostic. This is precisely when I found out that the tools I had planned to use as a backend did not work on Windows...the most prevalent operation system in the end-user world. So, I wrote **bamnostic**. As of this writing, bamnostic is OS-agnostic and written completely in Pure Python--requiring only the standard library (and `pytest` for the test suite). Special care was taken to ensure that it would run on all versions of CPython 2.7 or greater. Additionally, it runs in both stable versions of PyPy. While it may perform slower than its C counterparts, bamnostic opens up the science to a much greater end-user group. Lastly, it is lightweight enough to fit into any simple web server (e.g. [Flask](http://flask.pocoo.org/)), further expanding the science of genetics/genomics.\r\n\r\n***\r \n"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8466920380946739,
      "result": {
        "original_header": "Community Guidelines:",
        "type": "Text_excerpt",
        "value": "Eagerly accepting PRs for improvements, optimizations, or features. For any questions or issues, please feel free to make a post to bamnostic's [Issue tracker](https://github.com/betteridiot/bamnostic/issues) on github or read over our [CONTRIBUTING](https://github.com/betteridiot/bamnostic/blob/master/CONTRIBUTING.md) documentation.\r\n\r\n***\r \n"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://bamnostic.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://bamnostic.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/betteridiot/bamnostic/releases"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": [
          "https://github.com/codemeta/codemetar/releases/",
          "https://pypi.org/project/bamnostic/",
          "https://anaconda.org/conda-forge/bamnostic"
        ]
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": [
          "https://pypi.org/project/bamnostic/",
          "https://anaconda.org/conda-forge/bamnostic"
        ]
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/paper/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 25
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "betteridiot/bamnostic"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BAMnostic"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "setup.py",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "pyproject.toml",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/pyproject.toml"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/pyproject.toml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/requirements.txt",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/requirements.txt",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "pyproject.toml"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/121782433"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://joss.theoj.org/papers/9952b35bbb30ca6c01e6a27b80006bd8/status.svg"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://ci.appveyor.com/api/projects/status/y95q02gkv3lgmlf4/branch/master?svg=true"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "BAMnostic"
        ],
        "type": "Text_excerpt",
        "value": "There are 4 methods of installation available (choose one):</br>\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Through the `conda` package manager (<a href=\"https://anaconda.org/conda-forge/bamnostic\">Anaconda Cloud</a>)",
        "parent_header": [
          "BAMnostic",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "\r\n```bash\r\n# first, add the conda-forge channel to your conda build\r\nconda config --add channels conda-forge\r\n\r\n# now bamnostic is available for install\r\nconda install --solver=libmamba bamnostic\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Through the Python Package Index (<a href=\"https://pypi.org/\">PyPI</a>)",
        "parent_header": [
          "BAMnostic",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "\r\n```bash\r\npip install bamnostic\r\n\r\n# or, if you don't have superuser access\r\npip install --user bamnostic\r\n``` \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Through pip+Github",
        "parent_header": [
          "BAMnostic",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "\r\n```bash\r\n# again, use --user if you don't have superuser access\r\npip install -e git+https://github.com/betteridiot/bamnostic.git#egg=bamnostic\r\n\r\n# or, if you don't have superuser access\r\npip install --user -e git+https://github.com/betteridiot/bamnostic.git#bamnostic#egg=bamnostic\r\n``` \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Traditional GitHub clone",
        "parent_header": [
          "BAMnostic",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "\r\n```bash\r\ngit clone https://github.com/betteridiot/bamnostic.git\r\ncd bamnostic\r\npip install -e .\r\n\r\n# or, if you don't have superuser access\r\npip install --user -e .\r\n``` \r\n\r\n***\r"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/betteridiot/bamnostic/issues"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/betteridiot/bamnostic/issues"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/paper/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BAM pysam genomics genetics struct"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "BAM",
          "pysam",
          "genomics",
          "genetics",
          "htslib",
          "samtools"
        ]
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "BAM",
          "pysam",
          "genomics",
          "genetics",
          "htslib",
          "samtools"
        ]
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/paper/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause",
        "spdx_id": "BSD-2-Clause",
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2018, Marcus D. Sherman\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "License",
        "value": "BSD 3-Clause"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://github.com/betteridiot/bamnostic/blob/master/LICENSE",
        "spdx_id": "https://github.com/betteridiot/bamnostic/blob/master/LICENSE",
        "type": "License",
        "value": "https://github.com/betteridiot/bamnostic/blob/master/LICENSE"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://github.com/betteridiot/bamnostic/blob/master/LICENSE",
        "spdx_id": "https://github.com/betteridiot/bamnostic/blob/master/LICENSE",
        "type": "License",
        "value": "https://github.com/betteridiot/bamnostic/blob/master/LICENSE"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/paper/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bamnostic"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BAMnostic: a Pure Python OS, version, and runtime agnostic BAM file parser"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "BAMnostic: an OS-agnostic toolkit for genomic sequence analysis"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/paper/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "betteridiot"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bamnostic"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bamnostic"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 174365,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "type": "Programming_language",
        "value": "Python",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "type": "Programming_language",
        "value": "Python",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/paper/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://github.com/betteridiot/bamnostic/blob/master/README.md"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.md"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://github.com/betteridiot/bamnostic/blob/master/README.md"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/paper/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2021-11-04T22:00:45Z",
        "date_published": "2021-11-04T22:08:09Z",
        "description": "Changed relative path of `bamnostic.AlignmentFile` index file lookup to absolute path.",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v1.1.8",
        "name": "v1.1.8",
        "release_id": 52739847,
        "tag": "v1.1.8",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v1.1.8",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/52739847",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/52739847",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v1.1.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2021-04-30T12:16:54Z",
        "date_published": "2021-04-30T12:19:42Z",
        "description": "Thanks to some community contributions, minor quality of life improvements have been added:\r\n* 1-length sequences created as artifacts from some platforms can now be handled correctly (@giesselmann)\r\n* Any unnamed sequence is now given a default `.reference_name` attribute of `\"*\"` (@OliverVoogd)",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v1.1.7",
        "name": "v1.1.7",
        "release_id": 42262487,
        "tag": "v1.1.7",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v1.1.7",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/42262487",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/42262487",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v1.1.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2021-02-09T23:37:52Z",
        "date_published": "2021-02-10T00:13:09Z",
        "description": "Appveyor does not support Pytest on Python 3.9. Will debug later",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v1.1.6",
        "name": "v1.1.6",
        "release_id": 37833310,
        "tag": "v1.1.6",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v1.1.6",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/37833310",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/37833310",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v1.1.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2021-02-09T23:24:36Z",
        "date_published": "2021-02-09T23:26:18Z",
        "description": "Includes versioning for Python 3.7-3.9",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v1.1.5",
        "name": "v1.1.5",
        "release_id": 37831589,
        "tag": "v1.1.5",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v1.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/37831589",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/37831589",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v1.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2019-08-26T17:29:37Z",
        "date_published": "2019-08-26T17:55:55Z",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v1.1.4",
        "name": "v1.1.4",
        "release_id": 19540652,
        "tag": "v1.1.4",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v1.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/19540652",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/19540652",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v1.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2019-08-09T18:53:43Z",
        "date_published": "2019-08-09T19:04:56Z",
        "description": "There was a typo in v1.1.1- that affected how `bamnostic.bam.Bam` would process BAI files that was missing `n_no_coor` at the end of it. Up till now, `bamnostic` would set these to None. But in places where `bamnostic.bam.Bam` referenced this (`bamnostic.bam.Bam._init_index` and the `bamnostic.bam.Bam.unmapped` property) it couldn't add (`+`) the mapped and unmapped reads to `n_no_coord`. This would result in an error since a mathematical operation between an integer and NoneType doesn't work.",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v1.1.2",
        "name": "v1.1.2",
        "release_id": 19200373,
        "tag": "v1.1.2",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v1.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/19200373",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/19200373",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v1.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2019-08-09T17:04:42Z",
        "date_published": "2019-08-09T17:12:12Z",
        "description": "Minor repo fixes compared to v1.1.1",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v1.1.1rc1",
        "name": "v1.1.1rc1",
        "release_id": 19197947,
        "tag": "v1.1.1rc1",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v1.1.1rc1",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/19197947",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/19197947",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v1.1.1rc1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2019-08-09T16:59:18Z",
        "date_published": "2019-08-09T17:02:38Z",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v1.1.1",
        "name": "v1.1.1",
        "release_id": 19197754,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/19197754",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/19197754",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2019-07-02T17:53:15Z",
        "date_published": "2019-07-02T17:54:37Z",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v1.1.0",
        "name": "v1.1.0",
        "release_id": 18366663,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/18366663",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/18366663",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2019-06-12T17:29:29Z",
        "date_published": "2019-06-12T17:32:44Z",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v1.0.11",
        "name": "v1.0.11",
        "release_id": 17949739,
        "tag": "v1.0.11",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v1.0.11",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/17949739",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/17949739",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v1.0.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2019-04-02T16:12:16Z",
        "date_published": "2019-04-02T16:13:25Z",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v1.0.10",
        "name": "v1.0.10",
        "release_id": 16506887,
        "tag": "v1.0.10",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v1.0.10",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/16506887",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/16506887",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v1.0.10"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2019-03-25T15:53:07Z",
        "date_published": "2019-03-25T15:53:42Z",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v1.0.9",
        "name": "v1.0.9",
        "release_id": 16329488,
        "tag": "v1.0.9",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v1.0.9",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/16329488",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/16329488",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v1.0.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2019-03-19T18:44:10Z",
        "date_published": "2019-03-19T18:44:39Z",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v1.0.8",
        "name": "v1.0.8",
        "release_id": 16213951,
        "tag": "v1.0.8",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v1.0.8",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/16213951",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/16213951",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v1.0.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2018-11-29T18:35:53Z",
        "date_published": "2018-11-29T18:39:33Z",
        "description": "Fixes flawed implementation regarding long-read BAM files. Also, fixed subsequent Python 2.7 related regression errors.",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v1.0.7",
        "name": "v1.0.7",
        "release_id": 14264411,
        "tag": "v1.0.7",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v1.0.7",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/14264411",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/14264411",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v1.0.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2018-11-27T17:30:33Z",
        "date_published": "2018-11-27T17:33:23Z",
        "description": "Minor fix to a warning invocation.",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v1.0.4",
        "name": "v1.0.4",
        "release_id": 14213331,
        "tag": "v1.0.4",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v1.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/14213331",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/14213331",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v1.0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2018-11-05T20:28:48Z",
        "date_published": "2018-11-05T20:42:23Z",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v1.0.3",
        "name": "v1.0.3",
        "release_id": 13839784,
        "tag": "v1.0.3",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/13839784",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/13839784",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2018-11-01T14:20:10Z",
        "date_published": "2018-11-01T14:21:29Z",
        "description": "Fixes lack of preservation of literal contig names.",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v1.0.1",
        "name": "v1.0.1",
        "release_id": 13777866,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/13777866",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/13777866",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2018-10-13T00:42:43Z",
        "date_published": "2018-10-13T00:48:45Z",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v1.0.0",
        "name": "v1.0.0",
        "release_id": 13404821,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/13404821",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/13404821",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2018-09-18T19:36:07Z",
        "date_published": "2018-09-18T19:39:06Z",
        "description": "Versioning should match PyPI and conda soon",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v0.9.2",
        "name": "v0.9.2",
        "release_id": 12966350,
        "tag": "v0.9.2",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v0.9.2",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/12966350",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/12966350",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v0.9.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2018-09-18T19:27:31Z",
        "date_published": "2018-09-18T19:28:32Z",
        "description": "Complete re-write of the `bamnostic.utils.LruDict` so that is is version and runtime compatible",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v0.9.1rc4",
        "name": "v0.9.1rc4",
        "release_id": 12966184,
        "tag": "v0.9.1rc4",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v0.9.1rc4",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/12966184",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/12966184",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v0.9.1rc4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2018-09-18T16:53:53Z",
        "date_published": "2018-09-18T17:06:25Z",
        "description": "Fixes the recursion error that py27 observes when dealing with `bamnostic.utils.LruDict`.\r\n\r\nI wrote and override for `OrderedDict.move_to_end` so that it works in both 2.7 and 3.x.",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v0.9.1rc3",
        "name": "v0.9.1rc3",
        "release_id": 12963259,
        "tag": "v0.9.1rc3",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v0.9.1rc3",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/12963259",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/12963259",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v0.9.1rc3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2018-09-15T14:00:53Z",
        "date_published": "2018-09-15T14:02:51Z",
        "description": "Addresses `DeprecationWarning` causes by `array.array` behavior in Python 3.x when `fromstring()` is called.",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v0.9.1",
        "name": "v0.9.1",
        "release_id": 12916717,
        "tag": "v0.9.1",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v0.9.1",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/12916717",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/12916717",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v0.9.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2018-09-14T18:11:20Z",
        "date_published": "2018-09-14T18:12:16Z",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/0.9.0",
        "name": "v0.9.0",
        "release_id": 12908317,
        "tag": "0.9.0",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/0.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/12908317",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/12908317",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/0.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2018-08-08T18:56:19Z",
        "date_published": "2018-08-08T19:18:11Z",
        "description": "Minor changes to 0.8.10, and micro subversion incremented to reflect conda-forge and pypi versioning",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/0.8.11",
        "name": "0.8.11",
        "release_id": 12316288,
        "tag": "0.8.11",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/0.8.11",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/12316288",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/12316288",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/0.8.11"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2018-08-08T16:48:28Z",
        "date_published": "2018-08-08T18:42:38Z",
        "description": "Contains minor corrections to v0.8.10",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/0.8.10c1",
        "name": "0.8.10c1",
        "release_id": 12315686,
        "tag": "0.8.10c1",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/0.8.10c1",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/12315686",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/12315686",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/0.8.10c1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2018-07-27T15:24:07Z",
        "date_published": "2018-08-08T01:26:54Z",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/0.8.9",
        "name": "0.8.9",
        "release_id": 12300491,
        "tag": "0.8.9",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/0.8.9",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/12300491",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/12300491",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/0.8.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "betteridiot",
          "type": "User"
        },
        "date_created": "2018-07-19T15:31:21Z",
        "date_published": "2018-07-19T15:39:16Z",
        "html_url": "https://github.com/betteridiot/bamnostic/releases/tag/v0.8.7b2",
        "name": "bamnostic 0.8.7b2",
        "release_id": 12010601,
        "tag": "v0.8.7b2",
        "tarball_url": "https://api.github.com/repos/betteridiot/bamnostic/tarball/v0.8.7b2",
        "type": "Release",
        "url": "https://api.github.com/repos/betteridiot/bamnostic/releases/12010601",
        "value": "https://api.github.com/repos/betteridiot/bamnostic/releases/12010601",
        "zipball_url": "https://api.github.com/repos/betteridiot/bamnostic/zipball/v0.8.7b2"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "setuptools",
        "type": "Software_application",
        "value": "setuptools",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "sphinx",
        "type": "Software_application",
        "value": "sphinx",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "sphinx_rtd_theme",
        "type": "Software_application",
        "value": "sphinx_rtd_theme",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "docutils",
        "type": "Software_application",
        "value": "docutils<0.18",
        "version": "<0.18"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/requirements.txt",
      "technique": "code_parser"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 00:44:53",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 98
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Get the header",
        "parent_header": [
          "BAMnostic",
          "Quickstart"
        ],
        "type": "Text_excerpt",
        "value": "**Note**: this will print out the SAM header. If the SAM header is not in the BAM file, it will print out the dictionary representation of the BAM header. It is a dictionary of refID keys with contig names and length tuple values.\r\n\r\n```python\r\n>>> bam.header\r\n{0: ('chr1', 1575), 1: ('chr2', 1584)}\r\n``` \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting the first read",
        "parent_header": [
          "BAMnostic",
          "Quickstart"
        ],
        "type": "Text_excerpt",
        "value": "\r\n```python\r\n>>> first_read = next(bam)\r\n>>> print(first_read)\r\nEAS56_57:6:190:289:82\t69\tchr1\t100\t0\t*\t=\t100\t0\tCTCAAGGTTGTTGCAAGGGGGTCTATGTGAACAAA\t<<<7<<<;<<<<<<<<8;;<7;4<;<;;;;;94<;\tMF:C:192\r\n``` \r\n\r"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/README.rst",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "v1.2"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "v1.2"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "v1.2"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/paper/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "v1.2"
      },
      "source": "https://raw.githubusercontent.com/betteridiot/bamnostic/master/docs/paper/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
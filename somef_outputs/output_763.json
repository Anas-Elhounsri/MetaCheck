{
  "application_domain": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Structural bioinformatics"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "affiliation": "Laboratoire de Biochimie Th\u00e9orique (LBT), CNRS, F-75005 Paris, France",
        "email": "hubert.santuz@gmail.com",
        "identifier": "http://orcid.org/0000-0001-6149-9480",
        "type": "String",
        "value": "Hubert Santuz"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Laboratoire Coop\u00e9ratif \"Lipotoxicity and Channelopathies - ConicMeds\", Universit\u00e9 de Poitiers, F-86000 Poitiers, France",
        "email": "amelie.bacle@gmail.com",
        "identifier": "http://orcid.org/0000-0002-3317-9110",
        "type": "String",
        "value": "Am\u00e9lie B\u00e2cle"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Universit\u00e9 de Paris, CNRS, Institut Jacques Monod, F-75006, Paris, France",
        "email": "pierre.poulain@cupnet.net",
        "identifier": "http://orcid.org/0000-0003-4177-3619",
        "type": "String",
        "value": "Pierre Poulain"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Sorbonne Universit\u00e9, Ecole Normale Sup\u00e9rieure, PSL Research University, CNRS, Laboratoire des Biomol\u00e9cules (LBM), F-75005 Paris, France",
        "email": "patrick.fuchs@univ-paris-diderot.fr",
        "identifier": "http://orcid.org/0000-0001-7117-994X",
        "type": "String",
        "value": "Patrick Fuchs"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "https://github.com/HubLot",
        "given_name": "Hubert",
        "last_name": "Santuz",
        "name": "Hubert Santuz",
        "type": "Agent",
        "value": "Hubert Santuz"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "email": "https://github.com/ABacle",
        "given_name": "Am\u00e9lie",
        "last_name": "B\u00e2cle",
        "name": "Am\u00e9lie B\u00e2cle",
        "type": "Agent",
        "value": "Am\u00e9lie B\u00e2cle"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "email": "https://github.com/pierrepo",
        "given_name": "Pierre",
        "last_name": "Poulain",
        "name": "Pierre Poulain",
        "type": "Agent",
        "value": "Pierre Poulain"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "email": "https://github.com/patrickfuchs",
        "given_name": "Patrick",
        "last_name": "Fuchs",
        "name": "Patrick Fuchs",
        "type": "Agent",
        "value": "Patrick Fuchs"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/AUTHORS",
      "technique": "file_exploration"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing **buildH**",
        "parent_header": [
          "buildH"
        ],
        "type": "Text_excerpt",
        "value": "If you use **buildH** for your research, please cite :\n\n```\nSantuz et al., (2021). buildH: Build hydrogen atoms from united-atom molecular dynamics of lipids and calculate the order parameters. Journal of Open Source Software, 6(65), 3521, https://doi.org/10.21105/joss.03521\n```\n"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at patrick.fuchs@u-paris.fr . All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/patrickfuchs/buildH"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/patrickfuchs/buildH"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/patrickfuchs/buildH/actions"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/.github/workflows/code.yml"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/.github/workflows/docs.yml"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/.github/workflows/archive-to-software-heritage.yml"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/.github/workflows/publish-to-pypi.yml"
      },
      "technique": "file_exploration"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing Guidelines\n\nFirst, **thank you** for contributing!\n\nBefore starting, you should read, agree to, and follow these three points:\n\n  - [How to contribute?](#how-to-contribute)\n    - [Report bugs](#report-bugs)\n    - [Submit feedback](#submit-feedback)\n  - [Pull Request Guidelines](#pull-request-guidelines)\n  - [Code of Conduct](CODE_OF_CONDUCT.md)\n\nThis page is largely inspired from a [blog post of William Durand](https://williamdurand.fr/2013/11/20/on-creating-pull-requests/).\n\n---\n\n## How to contribute?\n\n### Report bugs\n\nReport bugs at: https://github.com/patrickfuchs/buildH/issues/new.\n\nWhen reporting a bug, please include:\n\n* Any details about your local setup which might be helpful in troubleshooting\n* Detailed steps to reproduce the bug. Where possible, please write a test case\n\nIf you are not able to do that, that's fine! Open an issue anyway and let us\nknow as much information as you can. We will get back to you to determine the\nproblem, and (hopefully) fix it.\n\n\n### Submit feedback\n\nThe best way to send feedback is to [create a new\nissue](https://github.com/patrickfuchs/buildH/issues/new) on GitHub.\n\nIf you are proposing a feature:\n\n* Explain how you see it working. Try to be as detailed as you can.\n* Try to keep the scope as narrow as possible. This will help make it easier to\n  implement.\n* Feel free to include any code you might already have, even if it is\n  just a rough idea. This is a volunteer-driven project, and contributions are\n  welcome :)\n\n\n## Pull Request Guidelines\n\nHere are a few rules to follow in order to make code reviews and discussions go\nmore smoothly before maintainers accept and merge your work:\n\n* You MUST run the test suite.\n* You MUST write (or update) unit tests.\n* You SHOULD write documentation.\n\nPlease, write [commit messages that make\nsense](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html),\nand [rebase your branch](http://git-scm.com/book/en/Git-Branching-Rebasing)\nbefore submitting your Pull Request.\n\nYou may be asked to [squash your\ncommits](http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html)\ntoo. This is to \"clean\" your Pull Request before merging it (we try to avoid\ncommits such as `fix tests`, `fix 2`, `fix 3`, etc.).\n\nAlso, while creating your Pull Request on GitHub, you MUST write a description\nwhich gives the context and/or explains why you are creating it.\n\nFor further information about creating a Pull Request, please read [this blog\npost](http://williamdurand.fr/2013/11/20/on-creating-pull-requests/).\n\nThank you!\n"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "buildH"
        ],
        "type": "Text_excerpt",
        "value": "If you want to report a bug, request a feature, or propose an improvement use the [GitHub issue system](https://github.com/patrickfuchs/buildH/issues/).\n\nPlease, see also the [CONTRIBUTING](CONTRIBUTING.md) file.\n\nNote that this project is released with a [Contributor Code of\nConduct](http://contributor-covenant.org/). By participating in this project you\nagree to abide by its terms. See the [CODE_OF_CONDUCT](CODE_OF_CONDUCT.md) file.\n"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "contributors": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributors",
        "parent_header": [
          "buildH"
        ],
        "type": "Text_excerpt",
        "value": "- Hubert Santuz\n- Am\u00e9lie B\u00e2cle\n- Pierre Poulain\n- Patrick Fuchs\n"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-03-06T16:52:57Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2019-03-06"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2019-06-21"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-08-22T08:40:26Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2021-05-21"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ":computer: Build hydrogen atoms from united-atom molecular dynamics of lipids and calculate the order parameters."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Build hydrogen atoms from united-atom molecular dynamics of lipids and calculate the order parameters"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.858147476017533,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "**buildH** works in two modes :\n  1. A slow mode when an output trajectory (in xtc format) is requested by\n     the user. In this case, the whole trajectory including newly built\n     hydrogens are written to this trajectory.\n  2. A fast mode without any output trajectory. \n"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "active"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/patrickfuchs/buildH/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "buildH"
        ],
        "type": "Text_excerpt",
        "value": "The full documentation is available at [Read the Docs](https://buildh.readthedocs.io/en/latest/index.html).\n"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://buildh.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/patrickfuchs/buildH/releases"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/patrickfuchs/buildH/archive/refs/tags/v1.3.1.zip"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/docs/notebooks/Notebook_01_buildH_calc_OP.ipynb"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/docs/notebooks/Notebook_01_buildH_calc_OP.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/docs/notebooks/Notebook_04_library.ipynb"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/docs/notebooks/Notebook_04_library.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/docs/notebooks/Notebook_02_buildH_calc_OP_outputwH.ipynb"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/docs/notebooks/Notebook_02_buildH_calc_OP_outputwH.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/docs/notebooks/Notebook_03_mixture_POPC_POPE.ipynb"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/docs/notebooks/Notebook_03_mixture_POPC_POPE.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/docs/notebooks/Notebook_05_mixture_POPC_cholesterol.ipynb"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/docs/notebooks/Notebook_05_mixture_POPC_cholesterol.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://mybinder.org/v2/gh/patrickfuchs/buildH/master?urlpath=lab"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/patrickfuchs/buildH/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "patrickfuchs/buildH"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "buildH"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "setup.py",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/setup.py"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/setup.py",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/requirements.txt",
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.21105/joss.03521"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.4676217"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://joss.theoj.org/papers/10.21105/joss.03521/status.svg"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Installation\n\n## Requirements and compatibility\n\nbuildH requires at least Python 3.6 and needs the following modules:\n  - numpy\n  - pandas\n  - numba\n  - MDAnalysis (with support of 2.0)\n\nAll the instructions below have been tested on Unix like platforms (e.g. Ubuntu), which we recommend for running **buildH**. We do not provide support for other platforms, but since **buildH** has been written in pure Python, it should work there provided its dependencies are supported. \n\n## Simple installation\n\nA simple installation with pip will do the trick:\n\n```\npython3 -m pip install buildh\n```\n\nAll dependencies (modules) will be installed automatically by pip.\n\nNote that this way of proceeding will install **buildH** and its dependencies within the python of your Unix system, which may lead to conflicts of version if you have other scientific packages installed. To avoid this you may want to create a specific conda or virtual environment for **buildH** (see below).\n\n## Installation within a conda environment\n\n**buildH** is also available through the [Bioconda](https://anaconda.org/bioconda/buildh) channel.\n\nWe recommend to install **buildH** within a [conda environment](https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html). First create a new conda env:\n\n```\nconda create -n buildH \"python>=3.6\"\n```\n\nThen activate your environment:\n\n```\nconda activate buildH\n```\n\nLast, install **buildH** within that environment:\n\n```\nconda config --add channels conda-forge\nconda config --add channels bioconda\nconda install buildh\n```\n\n## Building from source\n\nWe recommend to use a specific environment, either by using [venv](https://docs.python.org/3/library/venv.html) or [conda](https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#creating-an-environment-with-commands). All packages will be installed within that environment which avoids conflicts of version.\n\nIf you still do not want to create a specific environment for **buildH**, you can skip the first section `Create an environment` below.\n\nIn any case, the python version should be >= 3.6.\n\n### Create an environment\n\nFirst, create a new environment (we call it `env4buildH`):\n\n- If you chose conda: `conda create -n env4buildH python=3.8`\n- If you chose venv: `python3 -m venv /path/to/env4buildH`\n\nActivate your environment:\n\n- If you chose conda: `conda activate env4buildH`\n- If you chose venv: `source /path/to/env4buildH/bin/activate`\n\n### Install **buildH** from source\n\nClone the **buildH** repository:\n\n```\ngit clone https://github.com/patrickfuchs/buildH.git\ncd buildH\n```\n\nInstall with `pip` the packages required by **buildH**, namely numpy, pandas, MDAnalysis and Numba, which are all specified in the file [requirements.txt](https://github.com/patrickfuchs/buildH/blob/master/requirements.txt):\n\n```\npip install -r requirements.txt\n```\n\nInstall **buildH** from source with `pip`:\n\n```\npip install -e .\n```\n\n## For developers\n\nFor installing a development version from source with the full environment (allowing building the doc, launching tests, etc.), see [here](https://github.com/patrickfuchs/buildH/tree/master/devtools/install_dev.md).\n\n## Testing\n\nThe tests rely on the `pytest` package. You need first to install a development version (see above). Once done, you can run the tests with just:\n\n```\ncd buildh # if it's not already the case\npytest\n```\n\nAll tests should pass. If anything fails, please [open an issue](https://github.com/patrickfuchs/buildH/issues).\n"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/docs/installation.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "In this file is explained how to install buildH for developers.\n\n## Installation (development)\n\n1. Install conda (either with Miniconda or Anaconda, we recommend Miniconda)\n\n2. Clone this GitHub repository:\n```\ngit clone https://github.com/patrickfuchs/buildH.git\ncd buildH\n```\n\n3. Create conda environment:\n```\nconda env create -f binder/environment.yml\nconda activate buildh\n```\n\nIf needed, update your conda env with\n```\nconda env update -f binder/environment.yml\n```\n\n4. Install the dev version of buildH:\n```\npip install -e .\n```\n"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/devtools/install_dev.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Pip",
        "parent_header": [
          "buildH",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "A simple installation with pip will do the trick:\n\n```\npython3 -m pip install buildh\n```\n\nAll dependencies (modules) will be installed automatically by pip.\n\n"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Conda",
        "parent_header": [
          "buildH",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "**buildH** is also available through the [Bioconda](https://anaconda.org/bioconda/buildh) channel:\n\n```\nconda install buildh -c bioconda -c conda-forge\n```\n\nMore details on installation [here](https://buildh.readthedocs.io/en/latest/installation.html).\n\nFor installing a development version, see [here](devtools/install_dev.md).\n"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/patrickfuchs/buildH/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/patrickfuchs/buildH/issues"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "lipids, molecular-dynamics-simulation, order-parameters, python, united-atom"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "molecular dynamics simulation",
          "order parameters",
          "lipids",
          "united-atom"
        ]
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/BSD-3-Clause",
        "spdx_id": "https://spdx.org/licenses/BSD-3-Clause",
        "type": "License",
        "value": "https://spdx.org/licenses/BSD-3-Clause"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "buildH"
        ],
        "type": "Text_excerpt",
        "value": "**buildH** is licensed under the [BSD License](LICENSE.txt).\n\n"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/docs/img/buildH_logo.png"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "buildH"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "buildH"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "patrickfuchs"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 142975,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 13740,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 914,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "type": "Programming_language",
        "value": "Python",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "patrickfuchs",
          "type": "User"
        },
        "date_created": "2022-01-20T16:20:25Z",
        "date_published": "2022-01-20T16:22:25Z",
        "description": "- Add option --ignore-CH3s (-igch3) which ignore CH pairs when they belongs to a CH3 group.\r\n- Update doc and notebook04 with option -igch3\r\n- Fix beta H reconstruction for Berger and GROMOSCPK POPS\r\n- Update .readthedocs.yml",
        "html_url": "https://github.com/patrickfuchs/buildH/releases/tag/v1.6.1",
        "name": "v1.6.1",
        "release_id": 57591277,
        "tag": "v1.6.1",
        "tarball_url": "https://api.github.com/repos/patrickfuchs/buildH/tarball/v1.6.1",
        "type": "Release",
        "url": "https://api.github.com/repos/patrickfuchs/buildH/releases/57591277",
        "value": "https://api.github.com/repos/patrickfuchs/buildH/releases/57591277",
        "zipball_url": "https://api.github.com/repos/patrickfuchs/buildH/zipball/v1.6.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "patrickfuchs",
          "type": "User"
        },
        "date_created": "2021-09-01T09:32:16Z",
        "date_published": "2021-09-01T09:34:29Z",
        "description": "- Avoid output trajectory rewind when writing box dimensions\r\n- Switch to MDAnalysis 2.0.0\r\n- Add support of Python 3.9\r\n- Improve docstrings\r\n",
        "html_url": "https://github.com/patrickfuchs/buildH/releases/tag/v1.6.0",
        "name": "1.6.0",
        "release_id": 48802787,
        "tag": "v1.6.0",
        "tarball_url": "https://api.github.com/repos/patrickfuchs/buildH/tarball/v1.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/patrickfuchs/buildH/releases/48802787",
        "value": "https://api.github.com/repos/patrickfuchs/buildH/releases/48802787",
        "zipball_url": "https://api.github.com/repos/patrickfuchs/buildH/zipball/v1.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "patrickfuchs",
          "type": "User"
        },
        "date_created": "2021-07-07T16:06:08Z",
        "date_published": "2021-07-07T16:07:35Z",
        "description": "- Write box dimensions in the requested trajectory output\r\n- Fix write duplicate 1st frame when a trajectory output is requested\r\n- Avoid using universe.trajectory.time with on a single pdb\r\n- Limit Python version >= 3.6 <=3.8 (for MDAnalysis compatibility)\r\n- Add support for: Berger DOPC/DPPC/POPS, GROMOS-CKP POPC/POPS, GROMOS-53A6L DPPC, CHARMM36UA\r\n- Force Python 3.8 for doc building",
        "html_url": "https://github.com/patrickfuchs/buildH/releases/tag/1.5.0",
        "name": "1.5.0",
        "release_id": 45851192,
        "tag": "1.5.0",
        "tarball_url": "https://api.github.com/repos/patrickfuchs/buildH/tarball/1.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/patrickfuchs/buildH/releases/45851192",
        "value": "https://api.github.com/repos/patrickfuchs/buildH/releases/45851192",
        "zipball_url": "https://api.github.com/repos/patrickfuchs/buildH/zipball/1.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "patrickfuchs",
          "type": "User"
        },
        "date_created": "2021-06-23T20:39:21Z",
        "date_published": "2021-06-23T20:41:20Z",
        "description": "- Add -v / --version option\r\n- Reorganize doc\r\n- Add Notebook04 (launch buildH as a module)\r\n- Support Berger cholesterol\r\n- Add Notebook05 (mixture POPC / cholesterol)\r\n- Create buildH logo and add it to doc\r\n- Add paper for JOSS\r\n- Add community guidelines",
        "html_url": "https://github.com/patrickfuchs/buildH/releases/tag/v1.4.0",
        "name": "v1.4.0",
        "release_id": 45129119,
        "tag": "v1.4.0",
        "tarball_url": "https://api.github.com/repos/patrickfuchs/buildH/tarball/v1.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/patrickfuchs/buildH/releases/45129119",
        "value": "https://api.github.com/repos/patrickfuchs/buildH/releases/45129119",
        "zipball_url": "https://api.github.com/repos/patrickfuchs/buildH/zipball/v1.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "patrickfuchs",
          "type": "User"
        },
        "date_created": "2021-05-25T16:58:46Z",
        "date_published": "2021-05-25T17:00:04Z",
        "description": "- Fix setup.cfg to include json files in python package archive",
        "html_url": "https://github.com/patrickfuchs/buildH/releases/tag/v1.3.1",
        "name": "v1.3.1",
        "release_id": 43546862,
        "tag": "v1.3.1",
        "tarball_url": "https://api.github.com/repos/patrickfuchs/buildH/tarball/v1.3.1",
        "type": "Release",
        "url": "https://api.github.com/repos/patrickfuchs/buildH/releases/43546862",
        "value": "https://api.github.com/repos/patrickfuchs/buildH/releases/43546862",
        "zipball_url": "https://api.github.com/repos/patrickfuchs/buildH/zipball/v1.3.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "patrickfuchs",
          "type": "User"
        },
        "date_created": "2021-05-25T07:10:40Z",
        "date_published": "2021-05-25T07:12:42Z",
        "description": "- Complete documentation\r\n- Accelerate functions within geometry.py with Numba\r\n- Implement the use of buildH as a module\r\n- Simplify calculation of CH on an sp3 carbon\r\n- Use MyST parser for documentation (handles latex equations)\r\n- Clarify some error messages\r\n- Fix residue number exceeding 9999\r\n- Add POPE def and json files\r\n- Add Notebook01 (basic buildH analysis on a Berger traj)\r\n- Add Notebook02 (+trajectory output)\r\n- Add Notebook03 (analysis on a mixture POPC/POPE)\r\n- Move CHARMM36 POPC validation to Zenodo\r\n",
        "html_url": "https://github.com/patrickfuchs/buildH/releases/tag/v1.3.0",
        "name": "v1.3.0",
        "release_id": 43505321,
        "tag": "v1.3.0",
        "tarball_url": "https://api.github.com/repos/patrickfuchs/buildH/tarball/v1.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/patrickfuchs/buildH/releases/43505321",
        "value": "https://api.github.com/repos/patrickfuchs/buildH/releases/43505321",
        "zipball_url": "https://api.github.com/repos/patrickfuchs/buildH/zipball/v1.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "patrickfuchs",
          "type": "User"
        },
        "date_created": "2021-04-09T15:31:09Z",
        "date_published": "2021-04-09T15:35:39Z",
        "description": "- Build docs\r\n- Rename '-x/--xtc' flag to -t/--traj' one to be more generic\r\n- Replace mandatory topology argument to '-c/--coord' flag\r\n- Improve performance of control functions.\r\n- Move misc functions to a module utils.py\r\n- Improve Exception handling & add proper exits\r\n- Improve PEP8 & PEP257 compliance\r\n- Improve test coverage\r\n- Fix bug when a trajectory was written when only a pdb was provided.\r\n- Add sanity checks for the various input files\r\n- Use json files instead of python module to read lipid topologies.\r\n- Optimize package for better performance",
        "html_url": "https://github.com/patrickfuchs/buildH/releases/tag/v1.2.0",
        "name": "v1.2.0",
        "release_id": 41192220,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/patrickfuchs/buildH/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/patrickfuchs/buildH/releases/41192220",
        "value": "https://api.github.com/repos/patrickfuchs/buildH/releases/41192220",
        "zipball_url": "https://api.github.com/repos/patrickfuchs/buildH/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "patrickfuchs",
          "type": "User"
        },
        "date_created": "2021-01-07T09:47:30Z",
        "date_published": "2021-01-07T09:51:38Z",
        "description": "- Create Python package structure\r\n- Create conda environment\r\n- Fix tests\r\n- Separate entry point\r\n- Update README for dev version installation\r\n- Handle version with bump2version",
        "html_url": "https://github.com/patrickfuchs/buildH/releases/tag/v1.1.0",
        "name": "v1.1.0",
        "release_id": 36085429,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/patrickfuchs/buildH/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/patrickfuchs/buildH/releases/36085429",
        "value": "https://api.github.com/repos/patrickfuchs/buildH/releases/36085429",
        "zipball_url": "https://api.github.com/repos/patrickfuchs/buildH/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "numpy",
        "type": "Software_application",
        "value": "numpy",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pandas",
        "type": "Software_application",
        "value": "pandas",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MDAnalysis",
        "type": "Software_application",
        "value": "MDAnalysis",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "numba",
        "type": "Software_application",
        "value": "numba",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "type": "Software_application",
        "value": "Python>=3.6",
        "version": ">=3.6"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "numpy",
        "type": "Software_application",
        "value": "numpy",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pandas",
        "type": "Software_application",
        "value": "pandas",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MDAnalysis",
        "type": "Software_application",
        "value": "MDAnalysis",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "numba",
        "type": "Software_application",
        "value": "numba",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "buildH"
        ],
        "type": "Text_excerpt",
        "value": "Python >= 3.6 is mandatory for running buildH.\n\n**buildH** is written in Python 3 and needs the modules numpy, pandas, MDAnalysis and Numba.\n"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Running buildH",
        "parent_header": [
          "buildH"
        ],
        "type": "Text_excerpt",
        "value": "Once installed, a simple invocation of the `buildH` command will run the program (`$` represents the Unix prompt):\n\n```\n$ buildH\nusage: buildH [-h] -c COORD [-t TRAJ] -l LIPID [-lt LIPID_TOPOLOGY [LIPID_TOPOLOGY ...]] -d DEFOP\n              [-opx OPDBXTC] [-o OUT] [-b BEGIN] [-e END] [-pi PICKLE] [-igch3]\nbuildH: error: the following arguments are required: -c/--coord, -l/--lipid, -d/--defop\n```\n\nThe minimal command for running **buildH** can resemble this:\n\n```\n$ buildH -c start_128popc.pdb -t popc0-25ns_dt1000.xtc -l Berger_POPC -d Berger_POPC.def\n```\n\nThe different arguments mean the following: `-c start_128popc.pdb` is a pdb file with 128 POPC molecules, `-t popc0-25ns_dt1000.xtc` is a trajectory with 25 frames, `-l Berger_POPC` indicates the united-atom force field and the type of lipid to be analyzed, `-d Berger_POPC.def` indicates what C-H are considered for H building and order parameter calculation (the structure and trajectory files can be found [here](https://github.com/patrickfuchs/buildH/tree/master/docs/Berger_POPC_test_case)). The def file can be found [here](https://github.com/patrickfuchs/buildH/blob/master/def_files/Berger_POPC.def). The final order parameters averaged over the trajectory will be written to the default output name `OP_buildH.out`\n\nOther detailed examples and Jupyter Notebooks can be found in the documentation at [Read the Docs](https://buildh.readthedocs.io/en/latest/index.html).\n\n**Important**: sometimes, when performing MD, some molecules are split over periodic boundary conditions (PBC). **buildH** takes as input whole structures (pdb, gro, xtc, etc.). If broken molecules are supplied, it will most likely generate nonsense results. So it is up to the user to take care of making molecules whole before running **buildH** (e.g. by using a tool like [trjconv](https://manual.gromacs.org/current/onlinehelp/gmx-trjconv.html) in GROMACS with flag `-pbc mol`).\n\nInvoking **buildH** with the `-h` flag will display some help to the screen and tell which lipids are supported.\n\n```\n$ buildH -h\nusage: buildH [-h] [-v] -c COORD [-t TRAJ] -l LIPID [-lt LIPID_TOPOLOGY [LIPID_TOPOLOGY ...]] -d\n              DEFOP [-opx OPDBXTC] [-o OUT] [-b BEGIN] [-e END] [-igch3]\n[...]\nThe list of supported lipids (-l option) are: Berger_CHOL, Berger_DOPC, Berger_DPPC, Berger_POP, Berger_POPC, Berger_PLA, Berger_POPE, Berger_POPS, CHARMM36UA_DPPC, CHARMM36UA_DPUC, CHARMM36_POPC, GROMOS53A6L_DPPC, GROMOSCKP_POPC, GROMOSCKP_POPS. More documentation can be found at https://buildh.readthedocs.io.\n```\n"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "download",
    "contact",
    "usage",
    "faq",
    "support"
  ],
  "somef_provenance": {
    "date": "2025-09-19 03:02:05",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 14
      },
      "technique": "GitHub_API"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "1.3.1"
      },
      "source": "https://raw.githubusercontent.com/patrickfuchs/buildH/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
{
  "application_domain": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Computer science"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "affiliation": "LAAS-CNRS, Universit\u00e9 de Toulouse",
        "email": "dalzilio@laas.fr",
        "type": "String",
        "value": "Silvano Dal Zilio"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "Silvano",
        "last_name": "DAL ZILIO",
        "name": "Silvano DAL ZILIO",
        "type": "Agent",
        "value": "Silvano DAL ZILIO"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "Evan",
        "last_name": "Cordell",
        "name": "Evan Cordell",
        "type": "Agent",
        "value": "Evan Cordell"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/AUTHORS",
      "technique": "file_exploration"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "References",
        "parent_header": [
          "RuDD <a href=\"https://goreportcard.com/report/github.com/dalzilio/rudd\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dalzilio/rudd\" /></a> <a href=\"https://godoc.org/github.com/dalzilio/rudd\"><img alt=\"GoDoc\" src=\"https://godoc.org/github.com/dalzilio/rudd?status.svg\" /></a> <a href=\"https://github.com/dalzilio/rudd/releases\"><img alt=\"Release\" src=\"https://img.shields.io/github/v/release/dalzilio/rudd\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "You may have a look at the documentation for BuDDy (and MuDDy) to get a good\nunderstanding of how the library can be used.\n\n* [\\[An97\\]](https://www.cs.utexas.edu/~isil/cs389L/bdd.pdf) Henrik Reif\n  Andersen. *An Introduction to Binary Decision Diagrams*. Lecture Notes for a\n  course on Advanced Algorithms. Technical University of Denmark. 1997.\n\n* [\\[L09\\]](https://link.springer.com/content/pdf/10.1007%2F978-3-642-03034-5_3.pdf)\n  Ken Friis Larsen. [*A MuDDy Experience -\u2013 ML Bindings to a BDD\n  Library*](https://link.springer.com/chapter/10.1007/978-3-642-03034-5_3).\"\n  IFIP Working Conference on Domain-Specific Languages. Springer,\n  2009.\n\n* [\\[DHJ+2015\\]](https://www.tvandijk.nl/pdf/2015setta.pdf) Tom van Dijk et al.\n  *A comparative study of BDD packages for probabilistic symbolic model\n  checking.* International Symposium on Dependable Software Engineering:\n  Theories, Tools, and Applications. Springer, 2015.\n"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dalzilio/rudd"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dalzilio/rudd"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-05-11T07:53:05Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2021-05-09"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2021-05-21"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-08-11T19:54:52Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2021-05-21"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Rudd is a Binary Decision Diagram (BDD) library written in pure Go."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RuDD is a library for Binary Decision Diagrams written in pure Go."
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "active"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dalzilio/rudd/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dalzilio/rudd/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dalzilio/rudd"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RuDD   "
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://godoc.org/raw.githubusercontent.com/dalzilio/rudd?status.svg"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "RuDD <a href=\"https://goreportcard.com/report/github.com/dalzilio/rudd\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dalzilio/rudd\" /></a> <a href=\"https://godoc.org/github.com/dalzilio/rudd\"><img alt=\"GoDoc\" src=\"https://godoc.org/github.com/dalzilio/rudd?status.svg\" /></a> <a href=\"https://github.com/dalzilio/rudd/releases\"><img alt=\"Release\" src=\"https://img.shields.io/github/v/release/dalzilio/rudd\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "```\ngo get github.com/dalzilio/rudd\n```\n"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dalzilio/rudd/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "binary-decision-diagrams, golang"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "Binary Decision Diagrams",
          "data structures"
        ]
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Silvano DAL ZILIO\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/LICENSE.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/MIT",
        "spdx_id": "https://spdx.org/licenses/MIT",
        "type": "License",
        "value": "https://spdx.org/licenses/MIT"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "RuDD <a href=\"https://goreportcard.com/report/github.com/dalzilio/rudd\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dalzilio/rudd\" /></a> <a href=\"https://godoc.org/github.com/dalzilio/rudd\"><img alt=\"GoDoc\" src=\"https://godoc.org/github.com/dalzilio/rudd?status.svg\" /></a> <a href=\"https://github.com/dalzilio/rudd/releases\"><img alt=\"Release\" src=\"https://img.shields.io/github/v/release/dalzilio/rudd\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "This software is distributed under the [MIT\nLicense](https://opensource.org/licenses/MIT). A copy of the license agreement\nis found in the [LICENSE](./LICENSE.md) file.\n\nThe original C code for BuDDy was released under a very permissive license that\nis included in the accompanying [NOTICE](./NOTICE) file, together with a list of\nthe original authors. While the current implementation of RuDD adds some\noriginal work, I expect every redistribution to include the present NOTICE and\nacknowledge that some source files and examples have been copied and adapted\nfrom the **BuDDy** Binary Decision Diagrams Library, Package v2.4, Copyright (C)\n1996-2002 by Jorn Lind-Nielsen (see <http://buddy.sourceforge.net/>).\n"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dalzilio/rudd/main/./docs/rudd1.png"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rudd"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RuDD"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "dalzilio"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Go",
        "size": 101147,
        "type": "Programming_language",
        "value": "Go"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Go",
        "type": "Programming_language",
        "value": "Go",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dalzilio/rudd/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dalzilio",
          "type": "User"
        },
        "date_created": "2021-05-21T12:34:33Z",
        "date_published": "2021-05-21T13:41:27Z",
        "html_url": "https://github.com/dalzilio/rudd/releases/tag/v1.1.0",
        "name": "Albacore",
        "release_id": 43353740,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/dalzilio/rudd/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dalzilio/rudd/releases/43353740",
        "value": "https://api.github.com/repos/dalzilio/rudd/releases/43353740",
        "zipball_url": "https://api.github.com/repos/dalzilio/rudd/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "RuDD <a href=\"https://goreportcard.com/report/github.com/dalzilio/rudd\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dalzilio/rudd\" /></a> <a href=\"https://godoc.org/github.com/dalzilio/rudd\"><img alt=\"GoDoc\" src=\"https://godoc.org/github.com/dalzilio/rudd?status.svg\" /></a> <a href=\"https://github.com/dalzilio/rudd/releases\"><img alt=\"Release\" src=\"https://img.shields.io/github/v/release/dalzilio/rudd\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "The library has no dependencies outside of the standard Go library. It uses Go\nmodules and has been tested with Go 1.16.\n"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 00:48:45",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "RuDD <a href=\"https://goreportcard.com/report/github.com/dalzilio/rudd\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dalzilio/rudd\" /></a> <a href=\"https://godoc.org/github.com/dalzilio/rudd\"><img alt=\"GoDoc\" src=\"https://godoc.org/github.com/dalzilio/rudd?status.svg\" /></a> <a href=\"https://github.com/dalzilio/rudd/releases\"><img alt=\"Release\" src=\"https://img.shields.io/github/v/release/dalzilio/rudd\" /></a>",
        "type": "Text_excerpt",
        "value": "RuDD is a library for Binary Decision Diagrams written in pure Go.\n"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "About",
        "parent_header": [
          "RuDD <a href=\"https://goreportcard.com/report/github.com/dalzilio/rudd\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dalzilio/rudd\" /></a> <a href=\"https://godoc.org/github.com/dalzilio/rudd\"><img alt=\"GoDoc\" src=\"https://godoc.org/github.com/dalzilio/rudd?status.svg\" /></a> <a href=\"https://github.com/dalzilio/rudd/releases\"><img alt=\"Release\" src=\"https://img.shields.io/github/v/release/dalzilio/rudd\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "RuDD is a Binary Decision Diagram (BDD) library written in pure Go, without the\nneed for CGo or any other dependencies. A [BDD](https://en.wikipedia.org/wiki/Binary_decision_diagram) is a data structure\nused to efficiently represent Boolean functions or, equivalently, sets of\nBoolean vectors.\n\nIt has nothing to do with Behaviour Driven Development testing!\n"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Relation with BuDDy and MuDDy",
        "parent_header": [
          "RuDD <a href=\"https://goreportcard.com/report/github.com/dalzilio/rudd\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dalzilio/rudd\" /></a> <a href=\"https://godoc.org/github.com/dalzilio/rudd\"><img alt=\"GoDoc\" src=\"https://godoc.org/github.com/dalzilio/rudd?status.svg\" /></a> <a href=\"https://github.com/dalzilio/rudd/releases\"><img alt=\"Release\" src=\"https://img.shields.io/github/v/release/dalzilio/rudd\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "For the most part, RuDD is a direct translation in Go of the\n[BuDDy](http://buddy.sourceforge.net/manual/) C-library developed by Jorn\nLind-Nielsen. You can find a high-level description of the algorithms and\ndata-structures used in this project by looking at [\"An Introduction To Binary\nDecision Diagrams\"](https://www.cs.utexas.edu/~isil/cs389L/bdd.pdf), a Research\nReport also distributed as part of the BuDDy distribution. The adaptation was\nmade easy by the simplicity of its architecture  (in a good sense) and the\nlegibility of its code.\n\nIn many places, the code of RuDD is an almost line-by-line copy of BuDDy\n(including reusing part of the same comments for documenting the code), with a\nfew adaptations to follow some of Go best practices; we even implement the same\nexamples than in the BuDDy distribution for benchmarks and regression testing.\n\nBuDDy is a mature software library, that has been used on several projects, with\nperformances on par with more complex libraries, such as\n[CUDD](https://davidkebo.com/cudd). You can find a comparative study of the\nperformances for several BDD libraries in\n[\\[DHJ+2015\\]](https://www.tvandijk.nl/pdf/2015setta.pdf).\n\nLike with [MuDDy](https://github.com/kfl/muddy), a ML interface to BuDDy, we\npiggyback on the garbage collection mechanism offered by our host language. We\ntake care of BDD resizing and memory management directly in the library, but\n*external* references to BDD nodes made by user code are automatically managed\nby the Go runtime. Unlike MuDDy, we do not provide an interface, but a genuine\nreimplementation of BuDDy. As a consequence, we do not suffer from FFI overheads\nwhen calling from Go into C, which is one of the major pain points of working\nwith Go.  \n\nExperiences have shown that there is no significant loss of performance when\nusing BuDDy from a functional language with garbage collection, compared to\nusing C or C++\n[\\[L09\\]](https://link.springer.com/content/pdf/10.1007%2F978-3-642-03034-5_3.pdf).\nFor example, we use MuDDy in the tedd model-checker provided with\n[Tina](http://projects.laas.fr/tina/) (together with other libraries for dealing\nwith multi-valued decision diagrams). One of our motivations in this project is\nto see whether we can replicate this experience in Go. Our first experiments\nshow very promising results, but we are still lacking a serious study of the\nperformances of our library.\n"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Overview",
        "parent_header": [
          "RuDD <a href=\"https://goreportcard.com/report/github.com/dalzilio/rudd\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dalzilio/rudd\" /></a> <a href=\"https://godoc.org/github.com/dalzilio/rudd\"><img alt=\"GoDoc\" src=\"https://godoc.org/github.com/dalzilio/rudd?status.svg\" /></a> <a href=\"https://github.com/dalzilio/rudd/releases\"><img alt=\"Release\" src=\"https://img.shields.io/github/v/release/dalzilio/rudd\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "The main goal of RuDD is to test the performances of a lightweight BDD library\ndirectly implemented in Go, with a focus on implementing symbolic model-checking\ntools. At the moment, we provide only a subset of the functionalities defined in\nBuDDy, which is enough for our goals. In particular, we do not provide any\nmethod for the dynamic reordering of variables. We also lack support for Finite\nDomain Blocks (`fdd`) and Boolean Vectors (`bvec`).\n\nIn the future, we plan to add new features to RuDD and to optimize some of its\ninternals. For instance with  better  caching strategies or with the use of\nconcurrency features. It means that the API could evolve in future releases but\nthat no functions should disappear or change significantly.\n"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Why this name",
        "parent_header": [
          "RuDD <a href=\"https://goreportcard.com/report/github.com/dalzilio/rudd\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dalzilio/rudd\" /></a> <a href=\"https://godoc.org/github.com/dalzilio/rudd\"><img alt=\"GoDoc\" src=\"https://godoc.org/github.com/dalzilio/rudd?status.svg\" /></a> <a href=\"https://github.com/dalzilio/rudd/releases\"><img alt=\"Release\" src=\"https://img.shields.io/github/v/release/dalzilio/rudd\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "The library is named after a fresh water fish, the [common\nrudd](https://en.wikipedia.org/wiki/Common_rudd) (*Scardinius\nerythrophthalmus*), or \"gardon rouge\" in French, that is stronger and more\nresistant that the common roach, with which it is often confused. While it is\nsometimes used as bait, its commercial interest is minor. This is certainly a\nfitting description for our code ! It is also a valid English word ending with\nDD, which is enough to justify our choice.\n"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Authors",
        "parent_header": [
          "RuDD <a href=\"https://goreportcard.com/report/github.com/dalzilio/rudd\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dalzilio/rudd\" /></a> <a href=\"https://godoc.org/github.com/dalzilio/rudd\"><img alt=\"GoDoc\" src=\"https://godoc.org/github.com/dalzilio/rudd?status.svg\" /></a> <a href=\"https://github.com/dalzilio/rudd/releases\"><img alt=\"Release\" src=\"https://img.shields.io/github/v/release/dalzilio/rudd\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "* **Silvano DAL ZILIO** -  [LAAS/CNRS](https://www.laas.fr/)"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Specific use of Go build tags",
        "parent_header": [
          "RuDD <a href=\"https://goreportcard.com/report/github.com/dalzilio/rudd\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dalzilio/rudd\" /></a> <a href=\"https://godoc.org/github.com/dalzilio/rudd\"><img alt=\"GoDoc\" src=\"https://godoc.org/github.com/dalzilio/rudd?status.svg\" /></a> <a href=\"https://github.com/dalzilio/rudd/releases\"><img alt=\"Release\" src=\"https://img.shields.io/github/v/release/dalzilio/rudd\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "We provide two possible implementations for BDD that can be selected using build\ntags. The rationale for this unorthodox use of build tags is to avoid the use of\ninterfaces, and therefore dynamic dispatch, as well as to favor some automatic\ncompiler optimizations (such as code inlining).\n\nOur default implementation (without any build tags) use a standard Go runtime\nhashmap to encode a \"unicity table\".\n\nWhen building your executable with the build tag `buddy` (as in `go build -tags\nbuddy mycmd`) the API will switch to an implementation that is very close to the\none of the BuDDy library; based on a specialized data-structure that mix a\ndynamic array with a hash table.\n\nTo get access to better statistics about caches and garbage collection, as well as to unlock logging of some operations, you can also compile your executable with the build tag `debug`. \n"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "RuDD <a href=\"https://goreportcard.com/report/github.com/dalzilio/rudd\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dalzilio/rudd\" /></a> <a href=\"https://godoc.org/github.com/dalzilio/rudd\"><img alt=\"GoDoc\" src=\"https://godoc.org/github.com/dalzilio/rudd?status.svg\" /></a> <a href=\"https://github.com/dalzilio/rudd/releases\"><img alt=\"Release\" src=\"https://img.shields.io/github/v/release/dalzilio/rudd\" /></a>"
        ],
        "type": "Text_excerpt",
        "value": "You can find several examples in the `*_test.go` files. \n\nTo get access to better statistics about caches and garbage collection, as well\nas to unlock logging of some operations, you can compile your executable with\nthe build tag `debug`, for instance with a directive such as `go run -tags debug\nmycmd`.\n\n```go\npackage main\n\nimport (\n  \"github.com/dalzilio/rudd\"\n  \"math/big\"\n)\n\nfunc main() {\n  // create a new BDD with 6 variables, 10 000 nodes and a cache size of 5 000 (initially),\n  // with an implementation based on the BuDDY approach\n  bdd := rudd.New(6, Nodesize(10000), Cachesize(5000))\n  // n1 == x2 & x3 & x5\n  n1 := bdd.Makeset([]int{2, 3, 5})\n  // n2 == x1 | !x3 | x4\n  n2 := bdd.Or(bdd.Ithvar(1), bdd.NIthvar(3), bdd.Ithvar(4))\n  // n3 == \u2203 x2,x3,x5 . (n2 & x3)\n  n3 := bdd.AndExist(n1, n2, bdd.Ithvar(3))\n  // you can export a BDD in Graphviz's DOT format\n  fmt.Printf(\"Number of sat. assignments: %s\\n\", bdd.Satcount(n3))\n  fmt.Println(bdd.Stats())\n  bdd.Dot(os.Stdout)\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "1.1.0"
      },
      "source": "https://raw.githubusercontent.com/dalzilio/rudd/main/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
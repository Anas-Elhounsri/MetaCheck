{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": [
          {
            "family_name": "Ramanathan",
            "given_name": "Arundale",
            "name": "Arundale Ramanathan",
            "type": "Agent",
            "url": "https://orcid.org/0000-0001-6642-447X"
          }
        ],
        "datePublished": "2021",
        "doi": "10.5281/zenodo.5800408",
        "format": "cff",
        "title": "Unishox: A hybrid encoder for compressing Short Unicode Strings",
        "type": "File_dump",
        "url": "https://doi.org/10.5281/zenodo.5800408",
        "value": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n- family-names: \"Ramanathan\"\n  given-names: \"Arundale\"\n  orcid: \"https://orcid.org/0000-0001-6642-447X\"\ntitle: \"Unishox: A hybrid encoder for compressing Short Unicode Strings\"\nversion: 1.0.2\ndoi: 10.5281/zenodo.5800408\ndate-released: 2021-12-23\nurl: \"https://github.com/siara-cc/Unishox2\"\npreferred-citation:\n  type: article\n  authors:\n  - family-names: \"Ramanathan\"\n    given-names: \"Arundale\"\n    orcid: \"https://orcid.org/0000-0001-6642-447X\"\n  doi: \"10.5281/zenodo.5573864\"\n  month: 11\n  title: \"Unishox: A hybrid encoder for compressing Short Unicode Strings\"\n  year: 2021\n"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "type": "Text_excerpt",
        "value": "- Thanks to [Jonathan Greenblatt](https://github.com/leafgarden) for his [port of Unishox2 that works on Particle Photon](https://github.com/siara-cc/Unishox/tree/master/Arduino)\n- Thanks to [Chris Partridge](https://github.com/tweedge) for his [port of Unishox2 to CPython](https://github.com/tweedge/unishox2-py3) and his [comprehensive tests](https://github.com/tweedge/unishox2-py3#integration-tests) using [Hypothesis](https://hypothesis.readthedocs.io/en/latest) and [extensive performance tests](https://github.com/tweedge/unishox2-py3#performance)\n- Thanks to [Stephan Hadinger](https://github.com/s-hadinger) for his [port of Unishox1 to Python for Tasmota](https://github.com/arendst/Tasmota/tree/development/tools/unishox)\n- Thanks to [Luis D\u00edaz M\u00e1s](https://github.com/piponazo) for his PRs to support MSVC and CMake setup\n- Thanks to [James Z.M. Gao](https://github.com/gsm55) for his PRs on improving presets, unit tests, bug fixes and more\n- Thanks to [Jm Casler](https://github.com/mc-hamster) and [Shiv Kokroo](https://github.com/kokroo) for choosing and integrating Unishox into [Meshtastic](https://github.com/meshtastic/Meshtastic-device) project\n- Thanks to [SheepChef](https://github.com/SheepChef) for integrating Unishox2 with his project [Abracadabra](https://github.com/SheepChef/Abracadabra)\n"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/siara-cc/Unishox2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/siara-cc/Unishox2"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/.github/workflows/c-cpp.yml"
      },
      "technique": "file_exploration"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing\n\nContributions are welcome to improve this repository.  However please note that if your contributions do not fit into all the objectives of this library, the author may request you to create your PR into a different branch or a different folder.  Please do not hesitate to discuss the change you wish to make via issue, email, or any other method with the author.\n\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n## Pull Request Process\n\n1. Ensure any install or build dependencies are removed before the end of the layer when doing a \n   build.\n2. Update the README.md with details of changes to the interface, this includes new environment \n   variables, exposed ports, useful file locations and container parameters.\n3. Increase the version numbers in any examples files and the README.md to the new version that this\n   Pull Request would represent. The versioning scheme we use is [SemVer](http://semver.org/).\n\n## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the Author at [arun@siara.cc]. All complaints will be reviewed\nand investigated and will result in a response that is deemed necessary and\nappropriate to the circumstances. The author is obligated to maintain\nconfidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-08-01T06:21:48Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2021-10-17"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2021-10-17"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-09-16T17:31:21Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2021-10-17"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Compression for Unicode short strings (works on arduino)"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Unishox2 is a hybrid encoding technique with which short unicode strings could be compressed using context aware pre-mapped codes and delta coding resulting in surprisingly good ratios."
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9274079880664672,
      "result": {
        "original_header": "Unishox: A hybrid encoder for Short Unicode Strings",
        "type": "Text_excerpt",
        "value": "In general compression utilities such as `zip`, `gzip` do not compress short strings well and often expand them. They also use lots of memory which makes them unusable in constrained environments like Arduino.  So Unishox algorithm was developed for individually compressing (and decompressing) short strings. \nThis is a C/C++ library.  See [here for CPython version](https://github.com/tweedge/unishox2-py3) and [here for Javascript version](https://github.com/siara-cc/Unishox_JS) which is interoperable with this library. \nThe contenders for Unishox are [Smaz](https://github.com/antirez/smaz), [Shoco](https://github.com/Ed-von-Schleck/shoco), Unicode.org's [SCSU](https://www.unicode.org/reports/tr6/tr6-4.html) and [BOCU](http://www.unicode.org/notes/tn6/) (implementations [here](https://www.unicode.org/Public/PROGRAMS/SCSU/) and [here](https://github.com/siara-cc/bocu)) and [AIMCS](https://ieeexplore.ieee.org/document/9108719) (Implementation [here](https://github.com/MasoudAbedi/AIMCS-an-artificial-intelligence-based-method-for-compression-of-short-strings)). \nNote: Unishox provides the best compression for short text and not to be compared with general purpose compression algorithm like lz4, snappy, lzma, brottli and zstd.\n \n"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9688199934382311,
      "result": {
        "original_header": "Applications",
        "type": "Text_excerpt",
        "value": "- Faster transfer of text over low-speed networks such as LORA or BLE\n- Compression for low memory devices such as Arduino and ESP8266\n- Compression of Chat application text exchange including Emojis\n- Storing compressed text in database\n- Bandwidth and storage cost reduction for Cloud \n"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8887678178252922,
      "result": {
        "original_header": "Unishox3 Alpha",
        "type": "Text_excerpt",
        "value": "Unishox2 will still be supported for cases where space for storing static dictionaries is an issue.\n \n"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8473664958792475,
      "result": {
        "original_header": "How it works",
        "type": "Text_excerpt",
        "value": "Unishox is an hybrid encoder (entropy, dictionary and delta coding).  It works by assigning fixed prefix-free codes for each letter in the above Character Set (entropy coding).  It also encodes repeating letter sets separately (dictionary coding).  For Unicode characters, delta coding is used. \nThe model used for arriving at the prefix-free code is shown below: \n"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9439136723684798,
      "result": {
        "original_header": "Unit tests (automated)",
        "type": "Text_excerpt",
        "value": "This invokes `run_unit_tests()` function of `test_unishox2.c`, which tests all the features of Unishox2, including edge cases, using 159 strings covering several languages, emojis and binary data. \nFurther, the CI pipeline at `.github/workflows/c-cpp.yml` runs these tests for all presets and also tests file compression for the different types of files in `sample_texts` folder.  This happens whenever a commit is made to the repository.\n \n"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.958716832632768,
      "result": {
        "original_header": "Achieving better overall compression",
        "type": "Text_excerpt",
        "value": "The threshold size 1024 is arbitrary and if speed is not a concern, it is also possible to compress with both and use the best.\n \n"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8074627995927249,
      "result": {
        "original_header": "Interoperability with the JS Library",
        "type": "Text_excerpt",
        "value": "Strings that were compressed with this library can be decompressed with the [JS Library](https://github.com/siara-cc/Unishox_JS) and vice-versa.  However please see [this section in the documentation](https://github.com/siara-cc/Unishox_JS#interoperability-with-the-c-library) for usage.\n \n"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8883947980643678,
      "result": {
        "original_header": "Versions",
        "type": "Text_excerpt",
        "value": "The present byte-code version is 2 and it replaces [Unishox 1](https://github.com/siara-cc/Unishox2/blob/master/Unishox1/Unishox_Article_1.pdf?raw=true).  Unishox 1 is still available as unishox1.c, but it will have to be compiled manually if it is needed. \nThe next version would be Unishox3 and it would include a multi-level static dictionaries residing in RAM or Flash memory that would greatly improve compression ratios compared to Unishox2.  However Unishox2 will still be supported for cases where space for storing static dictionaries is an issue.\n \n"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/siara-cc/Unishox2/tree/master/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/siara-cc/Unishox2/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 27
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/siara-cc/Unishox2/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "siara-cc/Unishox2"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Unishox: A hybrid encoder for Short Unicode Strings"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/Unishox3_Beta/test_samples.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/other_lang_bindings/go/src/unishox/compile_usx3_so.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/afl_fuzz/afl_run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/afl_fuzz/afl_compile.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/Unishox3_Alpha/test_samples.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.21105/joss.03919"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://joss.theoj.org/papers/10.21105/joss.03919/status.svg"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/promo/Banner1.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/promo/model.png?raw=true"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Character Set",
        "type": "Text_excerpt",
        "value": "Unishox supports the entire Unicode character set.  As of now it supports UTF-8 as input and output encoding.\n"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/siara-cc/Unishox2/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "arduino, bandwidth-saver, chat-message-compression, cloud-cost-intelligence, compression, cost-optimization, database-compression, iot, json-compression, lora, lorawan, message-compression, short-message-compression, short-string, sms-compression, storage-saving, string-compression, string-compression-algorithms, xml-compression"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "compression",
          "string-compression",
          "encoding"
        ]
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2019 Siara Logics (cc)\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/Apache 2.0",
        "spdx_id": "Apache 2.0",
        "type": "License",
        "value": "Apache 2.0"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License for AI bots",
        "type": "Text_excerpt",
        "value": "The license mentioned is only applicable for humans and this work is NOT available for AI bots.\n\nAI has been proven to be beneficial to humans especially with the introduction of ChatGPT.  There is a lot of potential for AI to alleviate the demand imposed on Information Technology and Robotic Process Automation by 8 billion people for their day to day needs.\n\nHowever there are a lot of ethical issues particularly affecting those humans who have been trying to help alleviate the demand from 8b people so far. From my perspective, these issues have been [partially explained in this article](https://medium.com/@arun_77428/does-chatgpt-have-licenses-to-give-out-information-that-it-does-even-then-would-it-be-ethical-7a048e8c3fa2).\n\nI am part of this community that has a lot of kind hearted people who have been dedicating their work to open source without anything much to expect in return.  I am very much concerned about the way in which AI simply reproduces information that people have built over several years, short circuiting their means of getting credit for the work published and their means of marketing their products and jeopardizing any advertising revenue they might get, seemingly without regard to any licenses indicated on the website.\n\nI think the existing licenses have not taken into account indexing by AI bots and till the time modifications to the licenses are made, this work is unavailable for AI bots.\n"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Unishox2"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "siara-cc"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 66932160,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 265287,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 117170,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 7993,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Go",
        "size": 3828,
        "type": "Programming_language",
        "value": "Go"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 2499,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 1160,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://hypothesis.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "siara-cc",
          "type": "User"
        },
        "date_created": "2022-08-19T12:18:19Z",
        "date_published": "2022-08-20T06:00:00Z",
        "description": "This release is made after running AFL (American Fuzzy Lop) on Unishox and fixing issues that cause crashes when invalid inputs are fed into the decompression API.  So the decompression API is safe to use with data from untrusted/malicious sources.",
        "html_url": "https://github.com/siara-cc/Unishox2/releases/tag/1.0.3",
        "name": "Unishox2 1.0.3",
        "release_id": 74900346,
        "tag": "1.0.3",
        "tarball_url": "https://api.github.com/repos/siara-cc/Unishox2/tarball/1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/siara-cc/Unishox2/releases/74900346",
        "value": "https://api.github.com/repos/siara-cc/Unishox2/releases/74900346",
        "zipball_url": "https://api.github.com/repos/siara-cc/Unishox2/zipball/1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "siara-cc",
          "type": "User"
        },
        "date_created": "2021-12-05T06:37:40Z",
        "date_published": "2021-12-23T02:59:46Z",
        "description": "Unishox: A hybrid encoder for Short Unicode Strings\r\n\r\nRelease 1.0.2 is made after including the suggestions from reviewers for publishing to JOSS.  Mainly documentation and no functional changes.\r\n\r\n**Full Changelog**: https://github.com/siara-cc/Unishox2/compare/1.0.1...1.0.2",
        "html_url": "https://github.com/siara-cc/Unishox2/releases/tag/1.0.2",
        "name": "Unishox2 1.0.2",
        "release_id": 55868889,
        "tag": "1.0.2",
        "tarball_url": "https://api.github.com/repos/siara-cc/Unishox2/tarball/1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/siara-cc/Unishox2/releases/55868889",
        "value": "https://api.github.com/repos/siara-cc/Unishox2/releases/55868889",
        "zipball_url": "https://api.github.com/repos/siara-cc/Unishox2/zipball/1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "siara-cc",
          "type": "User"
        },
        "date_created": "2021-10-16T11:56:40Z",
        "date_published": "2021-10-16T12:46:10Z",
        "description": "## What's Changed\r\n- feature to add full terminator codes during compression when compressed length is unavailable for decompression\r\n- Magic bits can be max 8 bits\r\n- Add files in sample_texts and utf8samples to Unit tests\r\n\r\n**Full Changelog**: https://github.com/siara-cc/Unishox/compare/1.0.0...1.0.1",
        "html_url": "https://github.com/siara-cc/Unishox2/releases/tag/1.0.1",
        "name": "Unishox 2 1.0.1",
        "release_id": 51474314,
        "tag": "1.0.1",
        "tarball_url": "https://api.github.com/repos/siara-cc/Unishox2/tarball/1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/siara-cc/Unishox2/releases/51474314",
        "value": "https://api.github.com/repos/siara-cc/Unishox2/releases/51474314",
        "zipball_url": "https://api.github.com/repos/siara-cc/Unishox2/zipball/1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "siara-cc",
          "type": "User"
        },
        "date_created": "2021-09-25T07:28:07Z",
        "date_published": "2021-09-25T13:13:32Z",
        "description": "Making a release before merging a PR with more code for overflow safety checks and change in API for the same.",
        "html_url": "https://github.com/siara-cc/Unishox2/releases/tag/1.0.0",
        "name": "First release",
        "release_id": 50250866,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/siara-cc/Unishox2/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/siara-cc/Unishox2/releases/50250866",
        "value": "https://api.github.com/repos/siara-cc/Unishox2/releases/50250866",
        "zipball_url": "https://api.github.com/repos/siara-cc/Unishox2/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 00:17:16",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 220
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "type": "Text_excerpt",
        "value": "To see Unishox in action, simply try to compress a string:\n\n```\n./test_unishox2 \"Hello World\"\n```\n\nTo compress and decompress a file, use:\n\n```\n./test_unishox2 -c <input_file> <compressed_file>\n./test_unishox2 -d <compressed_file> <decompressed_file>\n```\n\nNote: Unishox is good for text content upto few kilobytes. Unishox does not give good ratios compressing large files or compressing binary files.\n"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Projects that use Unishox",
        "type": "Text_excerpt",
        "value": "- [Unishox Compression Library for Arduino Progmem](https://github.com/siara-cc/Unishox_Arduino_Progmem_lib)\n- [Sqlite3 User Defined Function as loadable extension](https://github.com/siara-cc/Unishox_Sqlite_UDF)\n- [Sqlite3 Library for ESP32](https://github.com/siara-cc/esp32_arduino_sqlite3_lib)\n- [Sqlite3 Library for ESP8266](https://github.com/siara-cc/esp_arduino_sqlite3_lib)\n- [Port of Unishox 1 to Python and C++ by Stephan Hadinger for Tasmota](https://github.com/arendst/Tasmota/tree/development/tools/unishox)\n- [Python bindings for Unishox2](https://github.com/tweedge/unishox2-py3)\n- [Unishox2 Javascript library](https://github.com/siara-cc/unishox_js)\n- [Unishox2 used in Meshtastic project](https://github.com/meshtastic/Meshtastic-device/tree/master/src/mesh/compression)\n- [Abracadabra, an Advanced Chinese Text Stylized-Encryption Tool](https://github.com/SheepChef/Abracadabra)\n"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "v1.0.1"
      },
      "source": "https://raw.githubusercontent.com/siara-cc/Unishox2/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
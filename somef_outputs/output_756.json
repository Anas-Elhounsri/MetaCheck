{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "deepakkumar1984@gmail.com",
        "identifier": "https://orcid.org/0000-0003-1719-3091",
        "type": "String",
        "value": "Deepak Battini"
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": [
          {
            "family_name": "Deepak",
            "given_name": "Battini",
            "name": "Battini Deepak",
            "type": "Agent"
          }
        ],
        "datePublished": "2020",
        "format": "cff",
        "title": "MxNet Sharp",
        "type": "File_dump",
        "value": "cff-version: 1.1.0\nmessage: If you use this software, please cite it as below.\nauthors:\n  - family-names: Deepak\n    given-names: Battini\ntitle: MxNet Sharp\nversion: 1.6.0\ndate-released: 2020-07-04\n"
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at deepakkumar1984@gmail.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/deepakkumar1984/MxNet.Sharp"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tech-quantum/MxNet.Sharp"
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contribute\n\n## Introduction\n\nFirst, thank you for considering contributing to sianet! It's people like you that make the open source community such a great community! \ud83d\ude0a\n\nWe welcome any type of contribution, not only code. You can help with \n- **QA**: file bug reports, the more details you can give the better (e.g. screenshots with the console open)\n- **Marketing**: writing blog posts, howto's, printing stickers, ...\n- **Community**: presenting the project at meetups, organizing a dedicated meetup for the local community, ...\n- **Code**: take a look at the [open issues](issues). Even if you can't write code, commenting on them, showing that you care about a given issue matters. It helps us triage them.\n- **Money**: we welcome financial contributions in full transparency on our [open collective](https://opencollective.com/sianet).\n\n## Your First Contribution\n\nWorking on your first Pull Request? You can learn how from this *free* series, [How to Contribute to an Open Source Project on GitHub](https://egghead.io/series/how-to-contribute-to-an-open-source-project-on-github).\n\n## Submitting code\n\nAny code change should be submitted as a pull request. The description should explain what the code does and give steps to execute it. The pull request should also contain tests.\n\n## Code review process\n\nThe bigger the pull request, the longer it will take to review and merge. Try to break down large pull requests in smaller chunks that are easier to review and merge.\nIt is also always helpful to have some context for your pull request. What was the purpose? Why does it matter to you?\n\n## Financial contributions\n\nWe also welcome financial contributions in full transparency on our [open collective](https://opencollective.com/sianet).\nAnyone can file an expense. If the expense makes sense for the development of the community, it will be \"merged\" in the ledger of our open collective by the core contributors and the person who filed the expense will be reimbursed.\n\n## Questions\n\nIf you have any questions, create an [issue](issue) (protip: do a quick search first to see if someone else didn't ask the same question before!).\nYou can also reach us at hello@sianet.opencollective.com.\n\n## Credits\n\n### Contributors\n\nThank you to all the people who have already contributed to sianet!\n<a href=\"graphs/contributors\"><img src=\"https://opencollective.com/sianet/contributors.svg?width=890\" /></a>\n\n\n### Backers\n\nThank you to all our backers! [[Become a backer](https://opencollective.com/sianet#backer)]\n\n<a href=\"https://opencollective.com/sianet#backers\" target=\"_blank\"><img src=\"https://opencollective.com/sianet/backers.svg?width=890\"></a>\n\n\n### Sponsors\n\nThank you to all our sponsors! (please ask your company to also support this open source project by [becoming a sponsor](https://opencollective.com/sianet#sponsor))\n\n<a href=\"https://opencollective.com/sianet/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/sianet/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sianet/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/sianet/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sianet/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/sianet/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sianet/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/sianet/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sianet/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/sianet/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sianet/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/sianet/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sianet/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/sianet/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sianet/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/sianet/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sianet/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/sianet/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sianet/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/sianet/sponsor/9/avatar.svg\"></a>\n\n<!-- This `CONTRIBUTING.md` is based on @nayafia's template https://github.com/nayafia/contributing-template -->"
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-05-02T02:14:29Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-01-27T13:00:57Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ".NET Standard bindings for Apache MxNet with Imperative, Symbolic and Gluon Interface for developing, training and deploying Machine Learning models in C#. https://mxnet.tech-quantum.com/"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MxNet.Sharp is a CSharp binding coving all the Imperative, Symbolic and Gluon API's with an easy to use interface"
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9547907691161548,
      "result": {
        "original_header": "Apache MXNet (incubating) for Deep Learning",
        "type": "Text_excerpt",
        "value": "\nApache MXNet (incubating) is a deep learning framework designed for both *efficiency* and *flexibility*.\nIt allows you to ***mix*** [symbolic and imperative programming](https://mxnet.apache.org/api/architecture/program_model)\nto ***maximize*** efficiency and productivity.\nAt its core, MXNet contains a dynamic dependency scheduler that automatically parallelizes both symbolic and imperative operations on the fly.\nA graph optimization layer on top of that makes symbolic execution fast and memory efficient.\nMXNet is portable and lightweight, scaling effectively to multiple GPUs and multiple machines. \nMxNet.Sharp is a CSharp binding coving all the Imperative, Symbolic and Gluon API's with an easy to use interface. The Gluon library in Apache MXNet provides a clear, concise, and simple API for deep learning. It makes it easy to prototype, build, and train deep learning models without sacrificing training speed. \n"
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "active"
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/deepakkumar1984/MxNet.Sharp/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation (In Progress)",
        "type": "Text_excerpt",
        "value": "https://mxnet.tech-quantum.com/\n"
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/deepakkumar1984/MxNet.Sharp/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "deepakkumar1984/MxNet.Sharp"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Work In Progress version 2.0."
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SciSharp/MxNet.Sharp/master/HLA.PNG"
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/tech-quantum/MxNet.Sharp/master/examples/MNIST/MnistTrain.PNG"
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/tech-quantum/MxNet.Sharp/issues"
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "csharp-bindings, deep-learning, gluon, image-classification, machine-learning, mxnet, neural-network, object-detection"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "GitHub",
          "metadata",
          "software"
        ]
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://github.com/tech-quantum/MxNet.Sharp/blob/master/LICENSE",
        "spdx_id": "https://github.com/tech-quantum/MxNet.Sharp/blob/master/LICENSE",
        "type": "License",
        "value": "https://github.com/tech-quantum/MxNet.Sharp/blob/master/LICENSE"
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dmlc/web-data/master/mxnet/image/mxnet_logo_2.png"
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MxNet.Sharp"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "MxNet.Shar"
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "deepakkumar1984"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C#",
        "size": 4937672,
        "type": "Programming_language",
        "value": "C#"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 4357,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C#",
        "type": "Programming_language",
        "value": "C#",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "deepakkumar1984",
          "type": "User"
        },
        "date_created": "2021-04-18T04:31:46Z",
        "date_published": "2021-04-18T04:33:22Z",
        "description": "- This release have numpy operators implememted\r\n- Implementing numpy ops instead of NDArray ops - WIP\r\n- Bug fixes\r\n",
        "html_url": "https://github.com/deepakkumar1984/MxNet.Sharp/releases/tag/v2.0.0.1",
        "name": "First Beta Release for v2",
        "release_id": 41598482,
        "tag": "v2.0.0.1",
        "tarball_url": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/tarball/v2.0.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/releases/41598482",
        "value": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/releases/41598482",
        "zipball_url": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/zipball/v2.0.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "deepakkumar1984",
          "type": "User"
        },
        "date_created": "2020-09-11T23:34:56Z",
        "date_published": "2020-09-11T23:42:15Z",
        "description": "* Some Bug fixes\r\n* Improved performance\r\n\r\nThanks to @horker for vital contribution to this release",
        "html_url": "https://github.com/deepakkumar1984/MxNet.Sharp/releases/tag/v1.5.2.0",
        "name": "v1.5.2.0",
        "release_id": 31158068,
        "tag": "v1.5.2.0",
        "tarball_url": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/tarball/v1.5.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/releases/31158068",
        "value": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/releases/31158068",
        "zipball_url": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/zipball/v1.5.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "deepakkumar1984",
          "type": "User"
        },
        "date_created": "2020-07-04T00:22:36Z",
        "date_published": "2020-07-04T00:23:55Z",
        "description": "Some fixes and implementation for keras-mxnet project",
        "html_url": "https://github.com/deepakkumar1984/MxNet.Sharp/releases/tag/v1.5.1.8",
        "name": "v1.5.1.8",
        "release_id": 28213480,
        "tag": "v1.5.1.8",
        "tarball_url": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/tarball/v1.5.1.8",
        "type": "Release",
        "url": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/releases/28213480",
        "value": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/releases/28213480",
        "zipball_url": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/zipball/v1.5.1.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "deepakkumar1984",
          "type": "User"
        },
        "date_created": "2020-04-20T09:02:29Z",
        "date_published": "2020-04-21T01:52:56Z",
        "description": "Implementing API's required for Gluon-CV  and Keras-MxNet\r\nNDArray API to load Numpy npz files",
        "html_url": "https://github.com/deepakkumar1984/MxNet.Sharp/releases/tag/v1.5.1.5",
        "name": "v1.5.1.5",
        "release_id": 25705759,
        "tag": "v1.5.1.5",
        "tarball_url": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/tarball/v1.5.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/releases/25705759",
        "value": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/releases/25705759",
        "zipball_url": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/zipball/v1.5.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "deepakkumar1984",
          "type": "User"
        },
        "date_created": "2020-03-23T21:51:53Z",
        "date_published": "2020-03-23T22:13:24Z",
        "description": "- Gluon API Implemented with Training and Infrencing\r\n- Sequential, Module, Bucketing module implemented",
        "html_url": "https://github.com/deepakkumar1984/MxNet.Sharp/releases/tag/v1.5.1.2",
        "name": "v1.5.1.2",
        "release_id": 24790368,
        "tag": "v1.5.1.2",
        "tarball_url": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/tarball/v1.5.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/releases/24790368",
        "value": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/releases/24790368",
        "zipball_url": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/zipball/v1.5.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "deepakkumar1984",
          "type": "User"
        },
        "date_created": "2019-06-05T02:48:27Z",
        "date_published": "2019-06-05T02:55:32Z",
        "description": "* Implement NDArray and Symbol Ops\r\n* Implemented DNN which is a high-level API\r\n* Tested on CPU bit WIP for GPU ",
        "html_url": "https://github.com/deepakkumar1984/MxNet.Sharp/releases/tag/v1.1.0",
        "name": "v1.1.0",
        "release_id": 17786754,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/releases/17786754",
        "value": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/releases/17786754",
        "zipball_url": "https://api.github.com/repos/deepakkumar1984/MxNet.Sharp/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 02:58:48",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 149
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Gluon MNIST Example",
        "parent_header": [
          "Apache MXNet (incubating) for Deep Learning"
        ],
        "type": "Text_excerpt",
        "value": "Demo as per: https://mxnet.apache.org/api/python/docs/tutorials/packages/gluon/image/mnist.html\n\n```csharp\nvar mnist = TestUtils.GetMNIST(); //Get the MNIST dataset, it will download if not found\nvar batch_size = 200; //Set training batch size\nvar train_data = new NDArrayIter(mnist[\"train_data\"], mnist[\"train_label\"], batch_size, true);\nvar val_data = new NDArrayIter(mnist[\"test_data\"], mnist[\"test_label\"], batch_size);\n\n// Define simple network with dense layers\nvar net = new Sequential();\nnet.Add(new Dense(128, ActivationType.Relu));\nnet.Add(new Dense(64, ActivationType.Relu));\nnet.Add(new Dense(10));\n\n//Set context, multi-gpu supported\nvar gpus = TestUtils.ListGpus();\nvar ctx = gpus.Count > 0 ? gpus.Select(x => Context.Gpu(x)).ToArray() : new[] {Context.Cpu(0)};\n\n//Initialize the weights\nnet.Initialize(new Xavier(magnitude: 2.24f), ctx);\n\n//Create the trainer with all the network parameters and set the optimizer\nvar trainer = new Trainer(net.CollectParams(), new Adam());\n\nvar epoch = 10;\nvar metric = new Accuracy(); //Use Accuracy as the evaluation metric.\nvar softmax_cross_entropy_loss = new SoftmaxCELoss();\nfloat lossVal = 0; //For loss calculation\nfor (var iter = 0; iter < epoch; iter++)\n{\n    var tic = DateTime.Now;\n    // Reset the train data iterator.\n    train_data.Reset();\n    lossVal = 0;\n\n    // Loop over the train data iterator.\n    while (!train_data.End())\n    {\n        var batch = train_data.Next();\n\n        // Splits train data into multiple slices along batch_axis\n        // and copy each slice into a context.\n        var data = Utils.SplitAndLoad(batch.Data[0], ctx, batch_axis: 0);\n\n        // Splits train labels into multiple slices along batch_axis\n        // and copy each slice into a context.\n        var label = Utils.SplitAndLoad(batch.Label[0], ctx, batch_axis: 0);\n\n        var outputs = new NDArrayList();\n\n        // Inside training scope\n        using (var ag = Autograd.Record())\n        {\n            outputs = Enumerable.Zip(data, label, (x, y) =>\n            {\n                var z = net.Call(x);\n\n                // Computes softmax cross entropy loss.\n                NDArray loss = softmax_cross_entropy_loss.Call(z, y);\n\n                // Backpropagate the error for one iteration.\n                loss.Backward();\n                lossVal += loss.Mean();\n                return z;\n            }).ToList();\n        }\n\n        // Updates internal evaluation\n        metric.Update(label, outputs.ToArray());\n\n        // Make one step of parameter update. Trainer needs to know the\n        // batch size of data to normalize the gradient by 1/batch_size.\n        trainer.Step(batch.Data[0].Shape[0]);\n    }\n\n    var toc = DateTime.Now;\n\n    // Gets the evaluation result.\n    var (name, acc) = metric.Get();\n\n    // Reset evaluation result to initial state.\n    metric.Reset();\n    Console.Write($\"Loss: {lossVal} \");\n    Console.WriteLine($\"Training acc at epoch {iter}: {name}={(acc * 100).ToString(\"0.##\")}%, Duration: {(toc - tic).TotalSeconds.ToString(\"0.#\")}s\");\n}\n```\n\nReached accuracy of 98% within 6th epoch.\n\n![alt text](https://raw.githubusercontent.com/tech-quantum/MxNet.Sharp/master/examples/MNIST/MnistTrain.PNG \"MNIST Training\")\n\n"
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "1.5.1"
      },
      "source": "https://raw.githubusercontent.com/deepakkumar1984/MxNet.Sharp/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
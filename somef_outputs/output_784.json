{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "",
        "type": "Agent",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/setup.py",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing SHARPy",
        "parent_header": [
          "Simulation of High Aspect Ratio aeroplanes in Python [SHARPy]"
        ],
        "type": "Text_excerpt",
        "value": "SHARPy has been published in the Journal of Open Source Software (JOSS) and the relevant paper can be found\n[here](https://joss.theoj.org/papers/10.21105/joss.01885).\n\nIf you are using SHARPy for your work, please remember to cite it using the paper in JOSS as:\n\n`del Carre et al., (2019). SHARPy: A dynamic aeroelastic simulation toolbox for very flexible aircraft and wind\nturbines. Journal of Open Source Software, 4(44), 1885, https://doi.org/10.21105/joss.01885`\n\nThe bibtex entry for this citation is:\n\n```\n@Article{delCarre2019,\ndoi = {10.21105/joss.01885},\nurl = {https://doi.org/10.21105/joss.01885},\nyear = {2019},\nmonth = dec,\npublisher = {The Open Journal},\nvolume = {4},\nnumber = {44},\npages = {1885},\nauthor = {Alfonso del Carre and Arturo Mu{\\~{n}}oz-Sim\\'on and Norberto Goizueta and Rafael Palacios},\ntitle = {{SHARPy}: A dynamic aeroelastic simulation toolbox for very flexible aircraft and wind turbines},\njournal = {Journal of Open Source Software}\n}\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Alfonso del Carre and Arturo Mu{\\~{n}}oz-Sim\\'on and Norberto Goizueta and Rafael Palacios",
        "doi": "10.21105/joss.01885",
        "format": "bibtex",
        "title": "{SHARPy}: A dynamic aeroelastic simulation toolbox for very flexible aircraft and wind turbines",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.21105/joss.01885",
        "value": "@article{delCarre2019,\n    journal = {Journal of Open Source Software},\n    title = {{SHARPy}: A dynamic aeroelastic simulation toolbox for very flexible aircraft and wind turbines},\n    author = {Alfonso del Carre and Arturo Mu{\\~{n}}oz-Sim\\'on and Norberto Goizueta and Rafael Palacios},\n    pages = {1885},\n    number = {44},\n    volume = {4},\n    publisher = {The Open Journal},\n    month = {December},\n    year = {2019},\n    url = {https://doi.org/10.21105/joss.01885},\n    doi = {10.21105/joss.01885},\n}"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ImperialCollegeLondon/sharpy"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ImperialCollegeLondon/sharpy"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/imperialcollegelondon/sharpy"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/JOSS/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "Simulation of High Aspect Ratio aeroplanes in Python [SHARPy]"
        ],
        "type": "Text_excerpt",
        "value": "For more information on the [research team](http://www.imperial.ac.uk/aeroelastics/software/) developing SHARPy or to get \nin touch, [visit our homepage](http://www.imperial.ac.uk/aeroelastics).\n"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "docs/source/content/contributing.md"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing and Bug reports",
        "parent_header": [
          "Simulation of High Aspect Ratio aeroplanes in Python [SHARPy]"
        ],
        "type": "Text_excerpt",
        "value": "If you think you can add a useful feature to SHARPy, want to write documentation or you encounter a bug, by all means, \ncheck out the [collaboration guide](https://ic-sharpy.readthedocs.io/en/latest/content/contributing.html).\n"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-10-07T10:11:51Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2019-11-04"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/JOSS/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2019-11-04"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/JOSS/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-08-25T14:05:53Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2019-11-04"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/JOSS/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Simulation of High Aspect Ratio aeroplanes and wind turbines in Python: a nonlinear aeroelastic code"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SHARPy is a nonlinear aeroelastic analysis package developed\n    at the Department of Aeronautics, Imperial College London. It can be used\n    for the structural, aerodynamic and aeroelastic analysis of flexible\n    aircraft, flying wings and wind turbines."
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A dynamic aeroelastic simulation toolbox for very flexible aircraft and wind turbines"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/JOSS/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9679096168833482,
      "result": {
        "original_header": "Simulation of High Aspect Ratio aeroplanes in Python [SHARPy]",
        "type": "Text_excerpt",
        "value": "SHARPy is a nonlinear aeroelastic analysis package originally developed at the Department of Aeronautics, Imperial\nCollege London. It can be used for the structural, aerodynamic and aeroelastic analysis of flexible wings, aircraft and wind turbines. It is shared here under a BSD 3-Clause permissive license. \n"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9405899981336407,
      "result": {
        "original_header": "Physical Models",
        "type": "Text_excerpt",
        "value": "SHARPy is a modular aeroelastic solver that currently uses two specific models for the structural and aerodynamic response of the system. \nFor the structural model, SHARPy employs a geometrically-exact displacement-based composite beam formulation,\naugmented with Lagrange multipliers for additional kinematic constraints.\nThis model has the advantage of providing the solution directly in the physical problem's degrees of freedom, making the \ncoupling with the aerodynamic solver simple and not requiring any post-processing. The 1D beam formulation used limits \nthe analyses that can be done by SHARPy to slender structures, such as high aspect ratio wings. \nThe aerodynamic model utilises the Unsteady Vortex Lattice Method (UVLM). The aerodynamic surfaces are modelled as a thin\nvortex ring lattice with the boundary conditions enforced at the collocation points in the middle of the vortex rings.\nThe Kutta condition is also enforced at the trailing edge. The wake can be simulated by either additional vortex rings\nor by infinitely long horseshoe vortices, which are ideally suited for steady simulations only. \n"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9878935066314027,
      "result": {
        "original_header": "<a href=\"http://ic-sharpy.readthedocs.io/en/latest/content/capabilities.html\">Capabilities</a>",
        "type": "Text_excerpt",
        "value": "The base solver SHARPy is a nonlinear aeroelastic analysis package that can be used on free-flying flexible aircraft,\nwings and wind turbines. In addition, it supports linearisation of these nonlinear systems about\narbitrary conditions and includes various tools such as: model reduction or frequency analysis. \nIn short, SHARPy offers (amongst others) the following solutions to the user:\n* Static aerodynamic, structural and aeroelastic solutions including fuselage effects\n* Finding trim conditions for aeroelastic configurations\n* Nonlinear, dynamic time domain simulations under a large number of conditions such as:\n    + Prescribed trajectories.\n    + Free flight.\n    + Dynamic follower forces.\n    + Control inputs in thrust, control surface deflection...\n    + Arbitrary time-domain gusts, including non span-constant ones.\n    + Full 3D turbulent fields.\n* Multibody dynamics with hinges, articulations and prescribed nodal motions:\n    + Applicable to wind turbines.\n    + Hinged aircraft.\n    + Catapult assisted takeoffs.\n* Linear analysis:\n    + Linearisation around a nonlinear equilibrium.\n    + Frequency response analysis.\n    + Asymptotic stability analysis.\n* Model order reduction:\n    + Krylov-subspace reduction methods.\n    + Several balancing reduction methods.\n \n"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8583349065952077,
      "result": {
        "original_header": "Continuous Integration Status",
        "type": "Text_excerpt",
        "value": "SHARPy uses Continuous Integration to control the integrity of its code. The status in the release and develop branches\nis: \n"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "Simulation of High Aspect Ratio aeroplanes in Python [SHARPy]"
        ],
        "type": "Text_excerpt",
        "value": "The documentation for SHARPy can be found [here](http://ic-sharpy.readthedocs.io).\n"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://ic-sharpy.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ImperialCollegeLondon/sharpy/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/source/content/example_notebooks/linear_goland_flutter.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/source/content/example_notebooks/linear_goland_flutter.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/source/content/example_notebooks/cantilever_wing.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/source/content/example_notebooks/cantilever_wing.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/source/content/example_notebooks/wind_turbine.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/source/content/example_notebooks/wind_turbine.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/source/content/example_notebooks/nonlinear_t-tail_HALE.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/source/content/example_notebooks/nonlinear_t-tail_HALE.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/source/content/example_notebooks/linear_horten.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/source/content/example_notebooks/linear_horten.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/source/content/example_notebooks/cantilever/static_cantilever.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/source/content/example_notebooks/cantilever/static_cantilever.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/source/content/example_notebooks/UDP_control/tutorial_udp_control.ipynb"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/source/content/example_notebooks/UDP_control/tutorial_udp_control.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 65
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ImperialCollegeLondon/sharpy"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Simulation of High Aspect Ratio aeroplanes in Python [SHARPy]"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "setup.py",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/setup.py"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/setup.py",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "pyproject.toml",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/pyproject.toml"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/pyproject.toml",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "pyproject.toml"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/JOSS/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.3531965"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://joss.theoj.org/papers/f7ccd562160f1a54f64a81e90f5d9af9/status.svg"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/./docs/source/_static/XHALE-render.jpg"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# SHARPy v2.3 Installation Guide\n__Last revision 10 June 2024__\n\nThe following step by step tutorial will guide you through the installation process of SHARPy. This is the updated process valid from v2.3.\n\n## Requirements\n\n__Operating System Requirements__\n\nSHARPy is being developed and tested on the following operating systems:\n* CentOS 7 and CentOS 8\n* Ubuntu 22.04 LTS\n* Debian 12\n* MacOS Mojave and Catalina (Intel)\n* MacOS Sonoma (Apple Silicon M2)\n\nWindows users can also run it by first installing the Windows Subsystem for Linux (https://learn.microsoft.com/en-us/windows/wsl/install) and a XServer such as GWSL, which can be installed through the Microsoft Store. SHARPy is also available to the vast majority of operating systems that are supported by Docker\n\n__Required Distributions__\n\n* Python 3.10 or higher\n* CMake\n* GCC 6.0 or higher, G++, GFortran (all included in Anaconda) \n* Eigen3, BLAS, MKL/LAPACK (all included in Anaconda)\n\nIf the prerequisite packages are not installed and you are not using Anaconda, they can be installed as following on Linux (with a Homebrew equivelent available for Mac installs):\n```bash\nsudo apt install -y cmake g++ gfortran libblas-dev liblapack-dev libeigen3-dev\n```\n\n__Recommended Software__\n\nYou may find the applications below useful, we recommend you use them but cannot provide any direct support.\n\n* [HDFView](https://portal.hdfgroup.org/display/HDFVIEW/HDFView) to read and view `.h5` files. HDF5 is the SHARPy\ninput file format.\n* [Paraview](https://www.paraview.org/) to visualise SHARPy's output.\n\n\nSHARPy can be installed from the source code available on GitHub or you can get it packed in a Docker container.\nIf what you want is to give it a go and run some static or simple dynamic cases (and are familiar with Docker),\nwe recommend the [Docker route](#using-sharpy-from-a-docker-container). If you want to check the code, modify it and\ncompile the libraries with custom flags, build it from source (recommended).\n\n## Building SHARPy from source (release or development builds)\n\nSHARPy can be built from source so that you can get the latest release or (stable) development build.\n\nSHARPy depends on two external libraries, [xbeam](http://github.com/imperialcollegelondon/xbeam) and\n[UVLM](http://github.com/imperialcollegelondon/UVLM). These are included as submodules to SHARPy and therefore\nonce you initialise SHARPy you will also automatically clone the relevant versions of each library.\n\n### Set up the folder structure\n\nClone `sharpy` in your desired location, if you agree with the license in `license.txt`.\n```bash\ngit clone --recursive http://github.com/ImperialCollegeLondon/sharpy\n```\nThe `--recursive` flag will also initialise and update the submodules SHARPy depends on,\n[xbeam](http://github.com/imperialcollegelondon/xbeam) and [UVLM](http://github.com/imperialcollegelondon/UVLM).\n\n\n### Quick install (Standalone)\n\nSHARPy can be installed as a standalone package, without the use of a package manager. If you wish to install using the Anaconda package manager, please use the following tutorial [HERE](#setting-up-the-python-environment-anaconda), or make a custom installation with a develop build or modified compilation settings [HERE](#custom-installation). The quick install is geared towards getting the release build of SHARPy running as quickly and simply as possible. \n\n1. Check that your Python version is 3.10 or higher. Other versions may be incompatible with the required modules.\n    ```bash\n    python --version\n    ```\n    \n2. Move into the cloned repository:\n    ```bash\n    cd sharpy\n    ```\n\n3. Install SHARPy. This will install any required Python packages as well as building the xbeam and UVLM libraries, and may take a  few  minutes.\n    ```bash\n    pip install --user .\n    ```\n   The ```--user``` flag is included for systems without root access (often Linux) as the install will fail otherwise. This flag can be removed when a global install is required, and your machine allows it (works on Mac).\n   \n    There are options for what to install if required. For instance, to install the basic package with documentation, just do ```bash pip install --user .[docs]```. For the whole lot, ```bash pip install --user .[all]```.\n\n4. You can check the version of SHARPy you are running with:\n    ```bash\n    sharpy --version\n    ```\n\n__You are ready to run SHARPy__. Continue reading the [Running SHARPy](#running-sharpy) section.\n\n### Setting up the Python Environment (Anaconda)\n\nSHARPy can use the Anaconda package manager to provide the necessary Python packages.\nThese are specified in an Anaconda environment that shall be activated prior to compiling the xbeam and UVLM libraries or running any SHARPy cases.\n\n1. If you still do not have it in your system, install the [Anaconda](https://conda.io/docs/) Python 3 distribution.\n\n2. Check that your Python version is at least 3.10:\n    ```bash\n    python --version\n    ```\n3. If a specific python version is required, for example 3.10, use:\n\n    ```bash\n    conda install python=3.10\n    ```\n   \n4. Create the conda environment that SHARPy will use:\n\n    ```bash\n    conda env create -f environment.yml\n    ```\n    This should take approximately 5 minutes to complete (Tested on Ubuntu 22.04.1). For installation on Apple Silicon, use ```environment_arm64.yml```; this requires GCC and GFortran to be installed prior.\n\n   Installation using Conda can be memory intensive, and will give the message ```Collecting package metadata (repodata.json): - Killed``` if all the available RAM is filled. From testing, 16GB of total system RAM is reliable for Conda install, whereas 8GB may have issues. Three solutions are available:\n   * Increase available RAM (if running on a compute cluster etc)\n   * Use [Mamba](https://mamba.readthedocs.io/en/latest/), a more efficient drop-in replacement for Conda\n   * Create a blank conda environment and install the required packages:\n     \t```bash\n      conda create --name sharpy python=3.10\n      conda config \u2013add channels conda-forge\n      conda install eigen libopenblas libblas libcblas liblapack libgfortran libgcc libgfortran-ng\n      ```\n      \n6. Activate the `sharpy` conda environment:\n    ```bash\n    conda activate sharpy\n    ```\n    You should now see ```(sharpy)``` on your command line. \n\n\n### Quick install (Anaconda)\nThe quick install is geared towards getting the release build of SHARPy running as quickly and simply as possible.\n1. Move into the cloned repository:\n    ```bash\n    cd sharpy\n    ```\n\n2. Ensure that the SHARPy environment is active in the session. Your terminal prompt line should begin with:\n    ```bash\n    (sharpy) [usr@host] $\n    ```\n\n3. Install SHARPy. This will install any required Python packages as well as building the xbeam and UVLM libraries, and may take a few minutes.\n    ```bash\n    pip install --user .\n    ```\n   The ```--user``` flag is included for systems without root access (often Linux) as the install will fail otherwise. This flag can be removed when a global install is required, and your machine allows it (works on Mac).\n   \n   There are options for what to install if required. For instance, to install the basic package with documentation, just do ```bash pip install --user .[docs]```. For the whole lot, ```bash pip install --user .[all]```.\n\n4. You can check the version of SHARPy you are running with:\n    ```bash\n    sharpy --version\n    ```\n\nIf running SHARPy from Anaconda, you need to load the conda environment. Therefore, __before you run any SHARPy case or test__, activate the SHARPy conda environment: \n```bash\nconda activate sharpy\n```\n\n__You are ready to run SHARPy__. Continue reading the [Running SHARPy](#running-sharpy) section.\n\n### Custom installation\n\nThese steps will show you how to compile the xbeam and UVLM libraries such that you can modify the compilation settings\nto your taste. This is compatible with both standalone and Anaconda installations.\n\n1. If you want to use SHARPy's latest release, skip this step. If you would like to use the latest development work,\n   you will need to checkout the `develop` branch. For more info on how we structure our development and what branches\n   are used for what kind of features have a look at the [Contributing](contributing.html) page.\n    ```bash\n    git checkout develop\n    git submodule update --recursive\n    ```\n    This command will check out the `develop` branch and set it to track the remote origin. It will also set the submodules (xbeam and UVLM) to the right commit.\n\n2. If using Anaconda, create the conda environment that SHARPy will use and activate the environment:\n    ```bash\n    conda env create -f environment.yml\n    ```\n\n    ```bash\n    conda activate sharpy\n    ```\n\n4. Create a directory `build` that will be used during CMake's building process and `cd` into it:\n    ```bash\n    mkdir build\n    cd build\n    ```\n\n5. Run CMake with custom flags:\n    1. Choose your compilers for Fortran `FC` and C++ `CXX`, for instance:\n        ```bash\n        FC=gfortran CXX=g++ cmake ..\n        ```\n        If you'd like to use the Intel compilers you can set them using:\n        ```bash\n        FC=ifort CXX=icpc cmake ..\n        ```\n    2. Alternatively, you can build the libraries in debug mode with the following flag for cmake:\n        ```bash\n        -DCMAKE_BUILD_TYPE=Debug\n        ```\n\n6. Compile the libraries and parallelise as you prefer.\n    ```bash\n    make install -j 4\n    ```\n\n7. Finally, leave the build directory and install SHARPy.\n    ```bash\n    cd ..\n    pip install .\n    ```\n    If you want to install it in development mode (the source files will stay\n    where the are so you can modify them), you can make an editable install:\n    ```\n    pip install -e .\n    ```\n    You can obtain further information on editable installs [here](https://pip.pypa.io/en/stable/cli/pip_install/#editable-installs)\n\n8. This concludes the installation! Continue reading the [Running SHARPy](#running-sharpy) section.\n\n## Using SHARPy from a Docker container\n\n> **Tip** To install the Python environment, miniconda needs approximatelly 16GB of\n> memory. It is recommended to have at least that amount available for the\n> container in which you are building SHARPy.\n\nDocker containers are similar to lightweight virtual machines. The SHARPy container\ndistributed through [Docker Hub](https://hub.docker.com/) is a CentOS 8\nmachine with the libraries compiled with `gfortran` and `g++` and an\nAnaconda Python distribution.\n\nMake sure your machine has Docker working. The instructions are here:\n[link](https://docs.docker.com/v17.09/engine/installation/).\n\nYou might want to run a test in your terminal:\n```\ndocker pull hello-world\ndocker run hello-world\n```\nIf this works, you're good to go!\n\nFirst, obtain the SHARPy docker container:\n```\ndocker pull ghcr.io/imperialcollegelondon/sharpy:main\n```\nYou can obtain other versions as well, check those available in the [containers](https://github.com/ImperialCollegeLondon/sharpy/pkgs/container/sharpy) page.\n\nThis will donwload a Docker image of SHARPy to your machine, from where you can create and run Docker containers. To create and run a container from the downloaded image use:\n\n```\ndocker run --name sharpy -it -p 8080:8080 ghcr.io/imperialcollegelondon/sharpy:main\n```\n\nA few details about the above command, although if in doubt please check the Docker documentation. The `--name` argument gives a name to the container. Note you can create multiple containers from a single image. \n\nThe `-it` is an important command as it runs the container in interactive mode with a terminal attached. Thus you can use it an navigate it. Otherwise the container will finish as soon as it is created. \n\nThe `-p 8080:8080` argument connects the container to your machine through port `8080` (it could be any other) which may be useful for some applications. For instance, running SHARPy as hardware-in-the-loop through UDP.\n\nOnce you run it, you should see a welcome dialog such as:\n```\n>>>> docker run --name sharpy -it -p 8080:8080 ghcr.io/imperialcollegelondon/sharpy:main\nSHARPy added to PATH from the directory: /sharpy_dir/bin\n=======================================================================\nWelcome to the Docker image of SHARPy\nSHARPy is located in /sharpy_dir/ and the\nenvironment is already set up!\nCopyright Imperial College London. Released under BSD 3-Clause license.\n=======================================================================\nSHARPy>\n```\nYou are now good to go.\n\nYou can check the version of SHARPy you are running with\n```\nsharpy --version\n```\n\nIt is important to note that a docker container runs as an independent\noperating system with no access to your hard drive. If you want to copy your own\nfiles, run the container and from another terminal run:\n```\ndocker cp my_file.txt sharpy:/my_file.txt     # copy from host to container\ndocker cp sharpy:/my_file.txt my_file.txt     # copy from container to host\n```\nThe `sharpy:` part is the `--name` argument you wrote in the `docker run` command.\n\n**Enjoy!**\n\n## Testing with Docker\n\nYou can run the test suite once inside the container as:\n```\ncd sharpy_dir\npython -m unittest\n```\n\n**Enjoy!**\n\n## Obtain SHARPy from PyPI (experimental!)\n\nYou can obtain a built version of SHARPy, ic-sharpy, from PyPI [here](https://pypi.org/project/ic-sharpy/).\n\nTo install at default directory use\n```\npython3 -m pip install ic-sharpy\n```\nTo install at current directory use\n```\npython3 -m pip install --prefix . ic-sharpy\n```\nThe source code can be found at `/lib/python3.10/site-packages/sharpy` and the executable at `/bin/sharpy`.\n\n## Running SHARPy\n\n### Automated tests\n\nSHARPy uses unittests to verify the integrity of the code.\n\nThese tests can be run from the `./sharpy` directory.\n```bash\npython -m unittest\n```\nThe tests will run and you should see a success message. If you don't... check the following options:\n* Check you are running the latest version. Running the following from the root directory should update to the\nlatest release version:\n    - `git pull`\n    - `git submodule update --init --recursive`\n* If the tests don't run, make sure you have followed correctly the instructions and that you managed to compile xbeam\nand UVLM.\n* If some tests fail, i.e. you get a message after the tests run saying that certain tests did not pass, please open\nan [issue](http://www.github.com/imperialcollegelondon/sharpy/issues) with the following information:\n    - Operating system\n    - Whether you did a Custom/quick install\n    - UVLM and xbeam compiler of choice\n    - A log of the tests that failed\n\n### The SHARPy Case Structure and input files\n\n__Setting up a SHARPy case__\n\nSHARPy cases are usually structured in the following way:\n\n1. A `generate_case.py` file: contains the setup of the problem like geometry, flight conditions etc.\nThis script creates the output files that will then be used by SHARPy, namely:\n    * The [structural](./casefiles.html#fem-file) `.fem.h5` file.\n    * The [aerodynamic](./casefiles.html#aerodynamics-file) `.aero.h5` file.\n    * [Simulation information](./casefiles.html#solver-configuration-file) and settings `.sharpy` file.\n    * The dynamic forces file `.dyn.h5` (when required).\n    * The linear input files `.lininput.h5` (when required).\n    * The ROM settings file `.rom.h5` (when required).\n\n    See the [chapter](./casefiles.html) on the case files for a detailed description on the contents of each one.\n    Data is exchanged in binary format by means of `.h5` files that make the transmission efficient between the different\n    languages of the required libraries. To view these `.h5` files, a viewer like [HDF5](https://portal.hdfgroup.org/display/support) is recommended.\n\n2. The `h5` files contain data of the FEM, aerodynamics, dynamic conditions. They are later read by SHARPy.\n\n3. The `.sharpy` file contains the settings for SHARPy and is the file that is parsed to SHARPy.\n\n__To run a SHARPy case__\n\nSHARPy cases are therefore usually ran in the following way:\n\n1. Create a `generate_case.py` file following the provided templates.\n\n2. Run it to produce the `.h5` files and the `.sharpy` files.\n    ```bash\n    python generate_case.py\n    ```\n\n3. Run SHARPy (ensure the environment is activated).\n    ```bash\n    sharpy case.sharpy\n    ```\n\n#### Output\n\nBy default, the output is located in the `output` folder.\n\nThe contents of the folder will typically be a `beam` and `aero` folders, which contain the output data that can then be\nloaded in Paraview. These are the `.vtu` format files that can be used with [Paraview](https://www.paraview.org/).\n\n\n### Running (and modifiying) a test case\n\n1.  This command generates the required files for running a static, clamped beam case that is used as part of code\nverification:\n    ```sh\n    cd ../sharpy\n    python ./tests/xbeam/geradin/generate_geradin.py\n    ```\n\nNow you should see a success message, and if you check the\n`./tests/xbeam/geradin/` folder, you should see two new files:\n+ geradin_cardona.sharpy\n+ geradin_cardona.fem.h5\n\nTry to open the `sharpy` file with a plain text editor and have a quick look. The `sharpy` file is\nthe main settings file. We'll get deeper into this later.\n\nIf you try to open the `fem.h5` file, you'll get an error or something meaningless. This is because the structural data\nis stored in [HDF5](https://support.hdfgroup.org/HDF5/) format, which is compressed binary.\n\n5. Run it (part 1)\n\n    The `sharpy` call is:\n    ```bash\n    sharpy <path to solver file>\n    ```\n\n6. Results (part 1)\n\n    Since this is a test case, there is no output directly to screen.\n\n    We will therefore change this setting first.\n    In the `generate_geradin.py` file, look for the `SHARPy` setting `write_screen` and set it to `on`. This will\n    output the progress of the execution to the terminal.\n\n    We would also like to create a Paraview file to view the beam deformation. Append the post-processor `BeamPlot` to\n    the end of the `SHARPy` setting `flow`, which is a list. This will run the post-processor and plot the beam in Paraview format with the settings specified in\n    the `generate_geradin.py` file under `config['BeamPlot]`.\n\n7. Run (part 2)\n\n    Now that we have made these modifications, run again the generation script:\n    ```sh\n    python ./tests/xbeam/geradin/generate_geradin.py\n    ```\n\n    Check the solver file `geradin.sharpy` and look for the settings we just changed. Make sure they read what we wanted.\n\n\n    You are now ready to run the case again:\n    ```bash\n    sharpy <path to solver file>\n    ```\n\n8. Post-processing\n\n    After a successful execution, you should a long display of information in the terminal as the case is being\n    executed.\n\n    The deformed beam will have been written in a `.vtu` file and will be located in the `output/` folder (or where\n    you specified in the settings) which you can open using Paraview.\n\n    In the `output` directory you will also note a folder named `WriteVariablesTime` which outputs certain variables\n    as a function of time to a `.dat` file. In this case, the beam tip position deflection and rotation is written.\n    Check the values of those files and look for the following result:\n    ```\n\t    Pos_def:\n\t\t      4.403530 0.000000 -2.159692\n\t    Psi_def:\n\t\t      0.000000 0.672006 0.000000\n    ```\n    FYI, the correct solution for this test case by Geradin and Cardona is\n    `Delta R_3 = -2.159 m` and `Psi_2 = 0.6720 rad`.\n\nCongratulations, you've run your first case. You can now check the [Examples](examples.html) section for further cases.\n"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/source/content/installation.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing SHARPy",
        "parent_header": [
          "Simulation of High Aspect Ratio aeroplanes in Python [SHARPy]"
        ],
        "type": "Text_excerpt",
        "value": "For the latest documentation, see the \n[installation docs](https://ic-sharpy.readthedocs.io/en/latest/content/installation.html).\n\nSHARPy can also be obtained from Docker Hub to avoid compilation\nand platform-dependant issues. If you are interested, make sure you check \nthe [SHARPy Docker distribution docs](https://ic-sharpy.readthedocs.io/en/latest/content/installation.html#using-sharpy-from-a-docker-container).\n"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "aeroelasticity, aeronautics, simulation, structural-dynamics, structures, wind-turbines"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "nonlinear aeroelastic structural aerodynamic analysis"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "aeroelasticity",
          "structural dynamics",
          "aerodynamics",
          "solar flight",
          "perpetual flight",
          "wing energy"
        ]
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/JOSS/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause",
        "spdx_id": "BSD-2-Clause",
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2019, Loads Control and Aeroelastics, Imperial College London\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "License",
        "value": "BSD 3-Clause License"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/BSD-3",
        "spdx_id": "BSD-3",
        "type": "License",
        "value": "BSD-3"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/JOSS/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sharpy"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ImperialCollegeLondon"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ic_sharpy"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/setup.py",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 3638634,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 1953,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1043,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 188,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/setup.py",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://ic-sharpy.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kccwing",
          "type": "User"
        },
        "date_created": "2025-03-20T17:34:12Z",
        "date_published": "2025-03-21T12:30:17Z",
        "description": "We are pleased to announce the release of SHARPy version 2.4!\r\n\r\n- Includes many multibody enhancements, including a non perpendicular hinge axis implementation\r\n- New multibody solver which computes the required Jacobians for solution using automatic differentiation\r\n\r\nPlease use the [discussion board](https://github.com/ImperialCollegeLondon/sharpy/discussions) if you have any issues/questions using SHARPy.\r\n\r\n## What's Changed\r\n\r\n## [2.4](https://github.com/imperialcollegelondon/sharpy/tree/2.4) (2025-03-20)\r\n\r\n[Full Changelog](https://github.com/imperialcollegelondon/sharpy/compare/2.3...2.4)\r\n\r\n**Implemented enhancements:**\r\n\r\n- Add the automatic differentiation multibody solver based on JAX [\\#305](https://github.com/ImperialCollegeLondon/sharpy/pull/305) ([ben-l-p](https://github.com/ben-l-p))\r\n- Non-perpendicular hinge axis possible for multibody solver [\\#299](https://github.com/ImperialCollegeLondon/sharpy/pull/299) ([kccwing](https://github.com/kccwing))\r\n- Add hosting of built wheel at PyPI - develop [\\#298](https://github.com/ImperialCollegeLondon/sharpy/pull/298) ([kccwing](https://github.com/kccwing))\r\n- Add hosting of built wheel at PyPI - main [\\#297](https://github.com/ImperialCollegeLondon/sharpy/pull/297) ([kccwing](https://github.com/kccwing))\r\n\r\n**Fixed bugs:**\r\n\r\n- Updated docs to address issue with conda install failing [\\#290](https://github.com/ImperialCollegeLondon/sharpy/pull/290) ([ben-l-p](https://github.com/ben-l-p))\r\n\r\n**Closed issues:**\r\n\r\n- TypeError: unhashable type: 'UnstructuredGrid' [\\#313](https://github.com/ImperialCollegeLondon/sharpy/issues/313)\r\n- Creating aileron control surfaces to induce roll [\\#304](https://github.com/ImperialCollegeLondon/sharpy/issues/304)\r\n- Static Trim Routine Fails with Dynamic-Type Control Surfaces [\\#300](https://github.com/ImperialCollegeLondon/sharpy/issues/300)\r\n- Not a Git Repository [\\#295](https://github.com/ImperialCollegeLondon/sharpy/issues/295)\r\n\r\n**Merged pull requests:**\r\n\r\n- Merge develop into main for new version release [\\#318](https://github.com/ImperialCollegeLondon/sharpy/pull/318) ([ben-l-p](https://github.com/ben-l-p))\r\n- Xhale thrust node typo [\\#317](https://github.com/ImperialCollegeLondon/sharpy/pull/317) ([kccwing](https://github.com/kccwing))\r\n- Mayavi github dependency restored for hotfix - develop [\\#316](https://github.com/ImperialCollegeLondon/sharpy/pull/316) ([kccwing](https://github.com/kccwing))\r\n- Mayavi github dependency restored for hotfix [\\#311](https://github.com/ImperialCollegeLondon/sharpy/pull/311) ([kccwing](https://github.com/kccwing))\r\n- Update body and wake FoR multiplication [\\#309](https://github.com/ImperialCollegeLondon/sharpy/pull/309) ([kccwing](https://github.com/kccwing))\r\n- Bug fix for generate\\_full\\_structure [\\#306](https://github.com/ImperialCollegeLondon/sharpy/pull/306) ([kccwing](https://github.com/kccwing))\r\n- Fix AeroForcesCalculator giving forces in wrong frame of reference [\\#301](https://github.com/ImperialCollegeLondon/sharpy/pull/301) ([ben-l-p](https://github.com/ben-l-p))\r\n- Temporary Fix for NumPy 2.0 Issues \\(Develop Branch\\) [\\#293](https://github.com/ImperialCollegeLondon/sharpy/pull/293) ([ben-l-p](https://github.com/ben-l-p))\r\n- Temporary Fix for NumPy 2.0 Issues \\(Main Branch\\) [\\#292](https://github.com/ImperialCollegeLondon/sharpy/pull/292) ([ben-l-p](https://github.com/ben-l-p))\r\n",
        "html_url": "https://github.com/ImperialCollegeLondon/sharpy/releases/tag/2.4",
        "name": "SHARPy Version 2.4",
        "release_id": 207318939,
        "tag": "2.4",
        "tarball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/tarball/2.4",
        "type": "Release",
        "url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/207318939",
        "value": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/207318939",
        "zipball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/zipball/2.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ben-l-p",
          "type": "User"
        },
        "date_created": "2024-05-10T12:36:55Z",
        "date_published": "2024-05-10T13:56:01Z",
        "description": "We are pleased to announce the release of SHARPy version 2.3!\r\n\r\n- Included `pip install` functionality, no longer requiring a conda environment. See [here](https://ic-sharpy.readthedocs.io/en/latest/content/installation.html) for updated installation instructions.\r\n- Improvements to the `newark_ss` function, credit to @bbahiam.\r\n\r\nAs ever, plenty of bug fixes are included. Please use the [discussion board](https://github.com/ImperialCollegeLondon/sharpy/discussions) if you have any issues/questions using SHARPy.\r\n\r\n## What's Changed\r\n\r\n## [2.3](https://github.com/imperialcollegelondon/sharpy/tree/2.3) (2024-05-10)\r\n\r\n[Full Changelog](https://github.com/imperialcollegelondon/sharpy/compare/2.2...2.3)\r\n\r\n**Implemented enhancements:**\r\n\r\n- Version 2.3 update [\\#289](https://github.com/ImperialCollegeLondon/sharpy/pull/289) ([ben-l-p](https://github.com/ben-l-p))\r\n- Update develop branch with main [\\#284](https://github.com/ImperialCollegeLondon/sharpy/pull/284) ([ben-l-p](https://github.com/ben-l-p))\r\n- Added pip install \\(with docs\\) [\\#280](https://github.com/ImperialCollegeLondon/sharpy/pull/280) ([ben-l-p](https://github.com/ben-l-p))\r\n- Update beamplot.py to have stride option, consistent with aerogridplot.py [\\#279](https://github.com/ImperialCollegeLondon/sharpy/pull/279) ([kccwing](https://github.com/kccwing))\r\n\r\n**Fixed bugs:**\r\n\r\n- Fix Github Runner Docker build failing [\\#285](https://github.com/ImperialCollegeLondon/sharpy/pull/285) ([ben-l-p](https://github.com/ben-l-p))\r\n- Add scipy version info to env yml [\\#277](https://github.com/ImperialCollegeLondon/sharpy/pull/277) ([SJ-Innovation](https://github.com/SJ-Innovation))\r\n\r\n**Closed issues:**\r\n\r\n- Scipy 1.12.0 Incompatible [\\#276](https://github.com/ImperialCollegeLondon/sharpy/issues/276)\r\n- BeamLoader postprocessor squishing answers [\\#270](https://github.com/ImperialCollegeLondon/sharpy/issues/270)\r\n- Solving Environment gets killed. [\\#268](https://github.com/ImperialCollegeLondon/sharpy/issues/268)\r\n- Error when running sharpy unittest: module scipy.sparse.\\_sputils not found [\\#227](https://github.com/ImperialCollegeLondon/sharpy/issues/227)\r\n- Potential bug in /sharpy/structure/utils/modalutils.py [\\#208](https://github.com/ImperialCollegeLondon/sharpy/issues/208)\r\n\r\n**Merged pull requests:**\r\n\r\n- Added ability to turn aligned grid off [\\#288](https://github.com/ImperialCollegeLondon/sharpy/pull/288) ([ben-l-p](https://github.com/ben-l-p))\r\n- Update with main for mamba fixes [\\#286](https://github.com/ImperialCollegeLondon/sharpy/pull/286) ([ben-l-p](https://github.com/ben-l-p))\r\n- Correct typos caught by Divya Sanghi [\\#283](https://github.com/ImperialCollegeLondon/sharpy/pull/283) ([bbahiam](https://github.com/bbahiam))\r\n- Develop: Update environment.yml to fix scipy version issue [\\#282](https://github.com/ImperialCollegeLondon/sharpy/pull/282) ([kccwing](https://github.com/kccwing))\r\n- Update noaero.py for consistency in function input [\\#275](https://github.com/ImperialCollegeLondon/sharpy/pull/275) ([kccwing](https://github.com/kccwing))\r\n- A few minor bug fixes [\\#273](https://github.com/ImperialCollegeLondon/sharpy/pull/273) ([sduess](https://github.com/sduess))\r\n- Update XBeam version to include compiler optimisation [\\#272](https://github.com/ImperialCollegeLondon/sharpy/pull/272) ([ben-l-p](https://github.com/ben-l-p))\r\n- Update XBeam version to include compiler optimisation [\\#271](https://github.com/ImperialCollegeLondon/sharpy/pull/271) ([ben-l-p](https://github.com/ben-l-p))\r\n- Improve docs and code of newmark\\_ss [\\#267](https://github.com/ImperialCollegeLondon/sharpy/pull/267) ([bbahiam](https://github.com/bbahiam))\r\n- Changed Github runner from Conda to Mamba [\\#266](https://github.com/ImperialCollegeLondon/sharpy/pull/266) ([ben-l-p](https://github.com/ben-l-p))\r\n- Changed Github runner from Conda to Mamba [\\#265](https://github.com/ImperialCollegeLondon/sharpy/pull/265) ([ben-l-p](https://github.com/ben-l-p))\r\n- Hotfix for documentation search [\\#264](https://github.com/ImperialCollegeLondon/sharpy/pull/264) ([kccwing](https://github.com/kccwing))\r\n- Hotfix for documentation - develop [\\#263](https://github.com/ImperialCollegeLondon/sharpy/pull/263) ([kccwing](https://github.com/kccwing))\r\n- Hotfix for documentation - main [\\#262](https://github.com/ImperialCollegeLondon/sharpy/pull/262) ([kccwing](https://github.com/kccwing))\r\n- Merging v2.2 into develop [\\#261](https://github.com/ImperialCollegeLondon/sharpy/pull/261) ([kccwing](https://github.com/kccwing))\r\n",
        "html_url": "https://github.com/ImperialCollegeLondon/sharpy/releases/tag/2.3",
        "name": "SHARPy Version 2.3",
        "release_id": 155263231,
        "tag": "2.3",
        "tarball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/tarball/2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/155263231",
        "value": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/155263231",
        "zipball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/zipball/2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kccwing",
          "type": "User"
        },
        "date_created": "2023-10-18T15:28:35Z",
        "date_published": "2023-10-18T15:52:35Z",
        "description": "We are pleased to announce the release of SHARPy version 2.2!\r\n\r\n\u2708\ufe0f Fuselage Model with source panel method, documentation in the [UVLM](https://github.com/ImperialCollegeLondon/UVLM), as well as a new [tutorial](https://ic-sharpy.readthedocs.io/en/latest/content/example_notebooks/UDP_control/tutorial_udp_control.html) for external controller with SHARPy as a hardware-in-the-loop system via UDP, with details below...\r\n\r\nIn SHARPy 2.2 we have unified the conda [environment](https://github.com/ImperialCollegeLondon/sharpy/blob/develop/utils/environment.yml) used - it's been tested across Windows, Linux and MacOS (including Apple Silicon), and also within the Docker distribution.\r\n\r\n\u2753As always, please use the [discussion board](https://github.com/ImperialCollegeLondon/sharpy/discussions) if you have any issues/questions using SHARPy.\r\n\r\n## What's Changed\r\n## [2.2](https://github.com/imperialcollegelondon/sharpy/tree/2.2) (2023-10-18)\r\n\r\n[Full Changelog](https://github.com/imperialcollegelondon/sharpy/compare/2.1...2.2)\r\n\r\n**Implemented enhancements:**\r\n\r\n- Added environment for Apple Silicon \\(ARM64\\) [\\#254](https://github.com/ImperialCollegeLondon/sharpy/pull/254) ([ben-l-p](https://github.com/ben-l-p))\r\n- New Fuselage Model plus Minor Improvements [\\#249](https://github.com/ImperialCollegeLondon/sharpy/pull/249) ([sduess](https://github.com/sduess))\r\n\r\n**Fixed bugs:**\r\n\r\n- fix polars concatenation in assembly of aeroinformation - develop [\\#253](https://github.com/ImperialCollegeLondon/sharpy/pull/253) ([kccwing](https://github.com/kccwing))\r\n- fix polars concatenation in assembly of aeroinformation - main [\\#252](https://github.com/ImperialCollegeLondon/sharpy/pull/252) ([kccwing](https://github.com/kccwing))\r\n- Minor bug fixes in aero util functions and save data postprocessor [\\#247](https://github.com/ImperialCollegeLondon/sharpy/pull/247) ([sduess](https://github.com/sduess))\r\n\r\n**Closed issues:**\r\n\r\n- Automated tests failed : UnicodeEncodeError: 'ascii' codec can't encode character '\\xe9' in position 47: ordinal not in range\\(128\\) [\\#245](https://github.com/ImperialCollegeLondon/sharpy/issues/245)\r\n- Wrong key in settings for /cases/templates/flying\\_wings.py [\\#205](https://github.com/ImperialCollegeLondon/sharpy/issues/205)\r\n\r\n**Merged pull requests:**\r\n\r\n- merging develop into main for v2.2 [\\#259](https://github.com/ImperialCollegeLondon/sharpy/pull/259) ([kccwing](https://github.com/kccwing))\r\n- fix \\[docker\\] use correct environment name in docker bashrc [\\#257](https://github.com/ImperialCollegeLondon/sharpy/pull/257) ([sduess](https://github.com/sduess))\r\n- Update docker environment  [\\#255](https://github.com/ImperialCollegeLondon/sharpy/pull/255) ([sduess](https://github.com/sduess))\r\n- Update README.md [\\#246](https://github.com/ImperialCollegeLondon/sharpy/pull/246) ([rafapalacios](https://github.com/rafapalacios))\r\n- bringing commits to main into develop [\\#244](https://github.com/ImperialCollegeLondon/sharpy/pull/244) ([rafapalacios](https://github.com/rafapalacios))\r\n- Updates to plotutils.py and the cantilever\\_wing demo [\\#242](https://github.com/ImperialCollegeLondon/sharpy/pull/242) ([boltyboi](https://github.com/boltyboi))\r\n- Small additions to the installation guide. [\\#241](https://github.com/ImperialCollegeLondon/sharpy/pull/241) ([boltyboi](https://github.com/boltyboi))\r\n- Tutorial for closed-Loop Simulation with SHARPy as a hardware-in-the-loop system [\\#240](https://github.com/ImperialCollegeLondon/sharpy/pull/240) ([sduess](https://github.com/sduess))\r\n\r\n\r\n## New Contributors\r\n* @boltyboi made their first contribution in https://github.com/ImperialCollegeLondon/sharpy/pull/241\r\n* @ben-l-p made their first contribution in https://github.com/ImperialCollegeLondon/sharpy/pull/254\r\n\r\n",
        "html_url": "https://github.com/ImperialCollegeLondon/sharpy/releases/tag/2.2",
        "name": "SHARPy version 2.2",
        "release_id": 125644387,
        "tag": "2.2",
        "tarball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/tarball/2.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/125644387",
        "value": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/125644387",
        "zipball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/zipball/2.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "kccwing",
          "type": "User"
        },
        "date_created": "2023-05-31T04:55:10Z",
        "date_published": "2023-05-31T05:13:45Z",
        "description": "We are pleased to announce the release of **SHARPy version 2.1**! \r\n\r\n\u2708\ufe0f Exciting new features across the aerodynamic and structural solvers, Python 3.10, Docker versions, and various fixes, with details below...\r\n\r\nIn SHARPy 2.1 we have upgraded Python version to 3.10 - with that comes a new simplified set of required packages in [environment_new.yml](https://github.com/ImperialCollegeLondon/sharpy/blob/develop/utils/environment_new.yml) which will be the recommended environment file from now on. \r\n\r\n\u2753As always, please use the [discussion board](https://github.com/ImperialCollegeLondon/sharpy/discussions) if you have any issues/questions using SHARPy.\r\n\r\n## What's Changed\r\n\r\n## [2.1](https://github.com/imperialcollegelondon/sharpy/tree/2.1) (2023-05-31)\r\n\r\n[Full Changelog](https://github.com/imperialcollegelondon/sharpy/compare/2.0...2.1)\r\n\r\n**Implemented enhancements:**\r\n\r\n- SHARPy Docker now releases to GitHub Packages  [\\#218](https://github.com/ImperialCollegeLondon/sharpy/pull/218) ([ngoiz](https://github.com/ngoiz))\r\n- Some Enhancements and Fixes for the Polar Correction, Wake Discretisation, and Gust Velocity Field Generator [\\#217](https://github.com/ImperialCollegeLondon/sharpy/pull/217) ([sduess](https://github.com/sduess))\r\n- Collective blade pitch PID control of wind turbines [\\#176](https://github.com/ImperialCollegeLondon/sharpy/pull/176) ([ArturoMS13](https://github.com/ArturoMS13))\r\n\r\n**Fixed bugs:**\r\n\r\n- Handle absolute tolerance for structural convergence tests as input settings and increase default value [\\#221](https://github.com/ImperialCollegeLondon/sharpy/pull/221) ([sduess](https://github.com/sduess))\r\n- Fix horseshoe wake handling in UVLM [\\#204](https://github.com/ImperialCollegeLondon/sharpy/pull/204) ([sduess](https://github.com/sduess))\r\n\r\n**Closed issues:**\r\n\r\n- No such file or directory during: source bin/sharpy\\_vars.sh [\\#233](https://github.com/ImperialCollegeLondon/sharpy/issues/233)\r\n- Twist direction inconsistent [\\#212](https://github.com/ImperialCollegeLondon/sharpy/issues/212)\r\n\r\n**Merged pull requests:**\r\n\r\n- Version number updates for 2.1 from develop [\\#237](https://github.com/ImperialCollegeLondon/sharpy/pull/237) ([kccwing](https://github.com/kccwing))\r\n- Merge to main for version 2.0.1 release [\\#236](https://github.com/ImperialCollegeLondon/sharpy/pull/236) ([kccwing](https://github.com/kccwing))\r\n- Updates to Goland wing example [\\#234](https://github.com/ImperialCollegeLondon/sharpy/pull/234) ([rafapalacios](https://github.com/rafapalacios))\r\n- A bit of clean-up of the readme file of the repo [\\#231](https://github.com/ImperialCollegeLondon/sharpy/pull/231) ([rafapalacios](https://github.com/rafapalacios))\r\n- Dev internals [\\#223](https://github.com/ImperialCollegeLondon/sharpy/pull/223) ([ACea15](https://github.com/ACea15))\r\n- updating from python 3.7 to 3.10 [\\#222](https://github.com/ImperialCollegeLondon/sharpy/pull/222) ([kccwing](https://github.com/kccwing))\r\n- Fix typo in setting [\\#206](https://github.com/ImperialCollegeLondon/sharpy/pull/206) ([sduess](https://github.com/sduess))\r\n",
        "html_url": "https://github.com/ImperialCollegeLondon/sharpy/releases/tag/2.1",
        "name": "SHARPy version 2.1",
        "release_id": 105462918,
        "tag": "2.1",
        "tarball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/tarball/2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/105462918",
        "value": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/105462918",
        "zipball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/zipball/2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ngoiz",
          "type": "User"
        },
        "date_created": "2022-07-04T10:29:24Z",
        "date_published": "2022-07-04T11:16:56Z",
        "description": "We are pleased to announce the release of **SHARPy version 2.0**! \r\n\r\n\u2708\ufe0f This is a major release with a varied array of new features! \r\n\r\nIn SHARPy 2.0 the installation process has been modified to use `pip` (#175 thanks @DavidAnderegg!) with full details on how to install the new version in the [installation docs](https://ic-sharpy.readthedocs.io/en/master/content/installation.html).\r\n\r\nAside from this major change to the installation process, enhancements to the linear solver have been introduced. Now, you'll see what each input/output/state of the linear system corresponds to and how are the channels ordered.\r\n\r\n\ud83d\udc1eWe have squashed a few bugs, an important one relating to flap inputs and sign convention in the linear vs nonlinear implementations (see #192 and #193)\r\n\r\n\u26a0\ufe0f Reminder from v1.3: Unused/deprecated settings raise an error when you run your simulation! See PR https://github.com/ImperialCollegeLondon/sharpy/pull/148. This was found to be a needed feature to force users to clean up their settings, as conflicts could arise when solvers brought in new settings or dropped old ones. In addition, this means bye bye to simulations not performing as expected because of typos in the setting's name.\r\n\r\n\u2753As always, please use the [discussion board](https://github.com/ImperialCollegeLondon/sharpy/discussions) if you have any issues/questions using SHARPy.\r\n\r\n## What's Changed\r\n## [2.0](https://github.com/imperialcollegelondon/sharpy/tree/2.0) (2022-07-04)\r\n\r\n[Full Changelog](https://github.com/imperialcollegelondon/sharpy/compare/1.3...2.0)\r\n\r\n**Implemented enhancements:**\r\n\r\n- Plot the aeroelastic mode shape to Paraview [\\#202](https://github.com/ImperialCollegeLondon/sharpy/pull/202) ([ngoiz](https://github.com/ngoiz))\r\n- Enhanced linear solver [\\#196](https://github.com/ImperialCollegeLondon/sharpy/pull/196) ([ngoiz](https://github.com/ngoiz))\r\n- Add pip support [\\#175](https://github.com/ImperialCollegeLondon/sharpy/pull/175) ([DavidAnderegg](https://github.com/DavidAnderegg))\r\n\r\n**Fixed bugs:**\r\n\r\n- Flap inputs in state-space model not working in certain wing configurations [\\#192](https://github.com/ImperialCollegeLondon/sharpy/issues/192)\r\n- Fix mass matrix generation for lumped masses in case of several masses per node [\\#194](https://github.com/ImperialCollegeLondon/sharpy/pull/194) ([sduess](https://github.com/sduess))\r\n- Fix the sparse matrix in balancing ROM [\\#186](https://github.com/ImperialCollegeLondon/sharpy/pull/186) ([AntonioWR](https://github.com/AntonioWR))\r\n\r\n**Closed issues:**\r\n\r\n- scipy used for direct balancing method [\\#184](https://github.com/ImperialCollegeLondon/sharpy/issues/184)\r\n- Potential Issue in the balancing direct method [\\#183](https://github.com/ImperialCollegeLondon/sharpy/issues/183)\r\n- Why no pip support? [\\#171](https://github.com/ImperialCollegeLondon/sharpy/issues/171)\r\n\r\n**Merged pull requests:**\r\n\r\n- Contain write operations within with statements [\\#195](https://github.com/ImperialCollegeLondon/sharpy/pull/195) ([ngoiz](https://github.com/ngoiz))\r\n- Support loading/saving state-spaces and gains to h5 files [\\#188](https://github.com/ImperialCollegeLondon/sharpy/pull/188) ([ngoiz](https://github.com/ngoiz))\r\n- Update installation docs [\\#187](https://github.com/ImperialCollegeLondon/sharpy/pull/187) ([nacho-carnicero](https://github.com/nacho-carnicero))\r\n- Unittest for nonlinear dynamic solver [\\#185](https://github.com/ImperialCollegeLondon/sharpy/pull/185) ([sduess](https://github.com/sduess))\r\n- Change in the io-Settings to add thrust. [\\#164](https://github.com/ImperialCollegeLondon/sharpy/pull/164) ([Eriklyy](https://github.com/Eriklyy))\r\n- UDP-Inout change for multiply cs\\_surface\\_deflections and loads/strain [\\#162](https://github.com/ImperialCollegeLondon/sharpy/pull/162) ([Eriklyy](https://github.com/Eriklyy))\r\n- Update AsymptoticStability and FrequencyResponse post-processors [\\#103](https://github.com/ImperialCollegeLondon/sharpy/pull/103) ([ngoiz](https://github.com/ngoiz))",
        "html_url": "https://github.com/ImperialCollegeLondon/sharpy/releases/tag/2.0",
        "name": "SHARPy version 2.0",
        "release_id": 71190666,
        "tag": "2.0",
        "tarball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/tarball/2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/71190666",
        "value": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/71190666",
        "zipball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/zipball/2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ngoiz",
          "type": "User"
        },
        "date_created": "2021-11-11T19:27:22Z",
        "date_published": "2021-11-12T08:16:55Z",
        "description": "We are please to announce the release of SHARPy version 1.3! This version brings new features to the code that are all listed below. \r\n\r\n\u2708\ufe0f Enjoy using the new functionalities!\r\n\r\n\u26a0\ufe0f Word of warning! Unused/deprecated settings now raise an error when you run your simulation! See PR #148. This was found to be a needed feature to force users to clean up their settings, as conflicts could arise when solvers brought in new settings or dropped old ones. In addition, this means bye bye to simulations not performing as expected because of typos in the setting's name.\r\n\r\n\u2753If you have any questions about this new release, please don't hesitate to visit the [Discussion Board](https://github.com/ImperialCollegeLondon/sharpy/discussions).\r\n\r\n\ud83d\uddd2\ufe0f Note: this release had been withheld since before Summer 2021 because of an issue with our previous CI test provider. Now that CI tests are working, we can release 1.3 that had been an RC for long. However, expect a new SHARPy version likely soon with many new features that have been implemented since 1.3RC was born!\r\n\r\n\u26a0\ufe0f If you are updating to 1.3, you will need to update your conda environment `sharpy_env`\r\n\r\n## [1.3](https://github.com/imperialcollegelondon/sharpy/tree/1.3) (2021-11-11)\r\n\r\n[Full Changelog](https://github.com/imperialcollegelondon/sharpy/compare/v1.2.1...1.3)\r\n\r\n**Implemented enhancements:**\r\n\r\n- Include gravity direction as input for structural solvers [\\#112](https://github.com/ImperialCollegeLondon/sharpy/issues/112)\r\n- Simulation settings check - Unrecognised settings raise Error [\\#148](https://github.com/ImperialCollegeLondon/sharpy/pull/148) ([ngoiz](https://github.com/ngoiz))\r\n- Aerodynamic forces correction enhancements [\\#140](https://github.com/ImperialCollegeLondon/sharpy/pull/140) ([ngoiz](https://github.com/ngoiz))\r\n- New feature: apply external forces to the system at runtime [\\#125](https://github.com/ImperialCollegeLondon/sharpy/pull/125) ([ArturoMS13](https://github.com/ArturoMS13))\r\n- Lift distribution post-processor [\\#121](https://github.com/ImperialCollegeLondon/sharpy/pull/121) ([sduess](https://github.com/sduess))\r\n\r\n**Fixed bugs:**\r\n\r\n- Fix bug in computing total moments in A frame [\\#177](https://github.com/ImperialCollegeLondon/sharpy/pull/177) ([ngoiz](https://github.com/ngoiz))\r\n\r\n**Closed issues:**\r\n\r\n- Unrecognised model in goland test case [\\#143](https://github.com/ImperialCollegeLondon/sharpy/issues/143)\r\n\r\n**Merged pull requests:**\r\n\r\n- Implement GitHub Actions as testing suite provider [\\#179](https://github.com/ImperialCollegeLondon/sharpy/pull/179) ([ngoiz](https://github.com/ngoiz))\r\n- Update submodules and conda environments [\\#161](https://github.com/ImperialCollegeLondon/sharpy/pull/161) ([sduess](https://github.com/sduess))\r\n- Support element variables in UDP output [\\#160](https://github.com/ImperialCollegeLondon/sharpy/pull/160) ([ngoiz](https://github.com/ngoiz))\r\n- Output directory in the location specified in settings\\[SHARPy\\]\\[log\\_folder\\] [\\#130](https://github.com/ImperialCollegeLondon/sharpy/pull/130) ([ngoiz](https://github.com/ngoiz))\r\n- Update and include features in multibody [\\#126](https://github.com/ImperialCollegeLondon/sharpy/pull/126) ([ArturoMS13](https://github.com/ArturoMS13))\r\n- Update linear UVLM to account for CFL not equal to one in the wake convection [\\#124](https://github.com/ImperialCollegeLondon/sharpy/pull/124) ([ArturoMS13](https://github.com/ArturoMS13))\r\n- Minor changes [\\#123](https://github.com/ImperialCollegeLondon/sharpy/pull/123) ([ArturoMS13](https://github.com/ArturoMS13))\r\n\r\n**Full Changelog**: https://github.com/ImperialCollegeLondon/sharpy/compare/v1.2.1...1.3\r\n",
        "html_url": "https://github.com/ImperialCollegeLondon/sharpy/releases/tag/1.3",
        "name": "SHARPy v1.3",
        "release_id": 53194972,
        "tag": "1.3",
        "tarball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/tarball/1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/53194972",
        "value": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/53194972",
        "zipball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/zipball/1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ngoiz",
          "type": "User"
        },
        "date_created": "2021-02-09T10:01:10Z",
        "date_published": "2021-02-09T10:30:22Z",
        "description": "A minor release to consolidate v1.2. Includes a new rigid solver and some minor fixes.\r\n\r\nAs always, if you find something that does not work or have any questions, open an [Issue](https://github.com/ImperialCollegeLondon/sharpy/issues) or start a [Discussion](https://github.com/ImperialCollegeLondon/sharpy/discussions).\r\n\r\n## [1.2.1](https://github.com/imperialcollegelondon/sharpy/tree/1.2.1) (2021-02-09)\r\n\r\n[Full Changelog](https://github.com/imperialcollegelondon/sharpy/compare/v1.2...1.2.1)\r\n\r\n**Fixed bugs:**\r\n\r\n- Bug in beamstructure.py [\\#117](https://github.com/ImperialCollegeLondon/sharpy/issues/117)\r\n\r\n**Closed issues:**\r\n\r\n- examples refer to non-existent solver SHWUvlm [\\#119](https://github.com/ImperialCollegeLondon/sharpy/issues/119)\r\n- Potential bug in xbeam and cbeam interfaces [\\#89](https://github.com/ImperialCollegeLondon/sharpy/issues/89)\r\n- Update packages producing deprecation warnings and tackle other warnings [\\#80](https://github.com/ImperialCollegeLondon/sharpy/issues/80)\r\n\r\n**Merged pull requests:**\r\n\r\n- Rigid coupled solver [\\#120](https://github.com/ImperialCollegeLondon/sharpy/pull/120) ([ArturoMS13](https://github.com/ArturoMS13))\r\n- Support to save ROM projector matrices [\\#118](https://github.com/ImperialCollegeLondon/sharpy/pull/118) ([ngoiz](https://github.com/ngoiz))",
        "html_url": "https://github.com/ImperialCollegeLondon/sharpy/releases/tag/v1.2.1",
        "name": "SHARPy v1.2.1",
        "release_id": 37791139,
        "tag": "v1.2.1",
        "tarball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/tarball/v1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/37791139",
        "value": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/37791139",
        "zipball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/zipball/v1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ngoiz",
          "type": "User"
        },
        "date_created": "2020-12-03T12:07:23Z",
        "date_published": "2020-12-03T12:47:38Z",
        "description": "It has been a while! However, in this convoluted 2020 development on SHARPy hasn't ceased! This release is packed with new features and changes, in particular to how the wake is handled and assembled in the UVLM. More on that below.\r\n\r\nWe'd also like to welcome @sduess to the SHARPy development team!\r\n\r\nThese are the major enhancements to SHARPy 1.2 (check the [changelog](https://github.com/ImperialCollegeLondon/sharpy/blob/master/CHANGELOG.md) for a full list):\r\n- Major new aerodynamic features [\\#101](https://github.com/ImperialCollegeLondon/sharpy/pull/101) ([ArturoMS13](https://github.com/ArturoMS13))\r\n- SHARPy support for external inputs via UDP network [\\#90](https://github.com/ImperialCollegeLondon/sharpy/pull/90) ([ngoiz](https://github.com/ngoiz))\r\n- Vortex radius as input parameter [\\#86](https://github.com/ImperialCollegeLondon/sharpy/pull/86) ([ArturoMS13](https://github.com/ArturoMS13))\r\n- Quasi-steady solver in stepuvlm [\\#114](https://github.com/ImperialCollegeLondon/sharpy/pull/114) ([ArturoMS13](https://github.com/ArturoMS13))\r\n- Generator to modify structural mass at runtime [\\#107](https://github.com/ImperialCollegeLondon/sharpy/pull/107) ([ngoiz](https://github.com/ngoiz))\r\n- Simple post-processor to save simulation parameters for batch runs [\\#91](https://github.com/ImperialCollegeLondon/sharpy/pull/91) ([ngoiz](https://github.com/ngoiz))\r\n[Full Changelog](https://github.com/imperialcollegelondon/sharpy/compare/v1.1.1...1.2)\r\n\r\nThe major enhancement is to the UVLM thanks to @ArturoMS13's work [\\#101](https://github.com/ImperialCollegeLondon/sharpy/pull/101). You can now use different sized panels for the wake and bound panels, which will result in much more efficient simulations (nonlinear only for the moment). This introduces a change in the settings to the `AerogridLoader` as now the wake is assembled within SHARPy (previously it was built in UVLM). For the current version, the new wake definition settings are optional (i.e., by default the wake will be constructed with the same panel size as the bound panels) but for future releases this will be a required setting. The settings should be fairly easy to implement as there are only two new wake generators [StraightWake](https://ic-sharpy.readthedocs.io/en/master/includes/generators/straightwake/StraightWake.html) and [HelicoidalWake](https://ic-sharpy.readthedocs.io/en/master/includes/generators/helicoidalwake/HelicoidalWake.html); these settings are parsed into [AerogridLoader](https://ic-sharpy.readthedocs.io/en/master/includes/solvers/loader/AerogridLoader.html).\r\n\r\n\r\nWe hope you find these new features useful for your work! If you have any questions with the new developments or find any bugs please open an [issue](https://github.com/ImperialCollegeLondon/sharpy/issues)! \r\n",
        "html_url": "https://github.com/ImperialCollegeLondon/sharpy/releases/tag/v1.2",
        "name": "SHARPy Version 1.2",
        "release_id": 34755354,
        "tag": "v1.2",
        "tarball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/tarball/v1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/34755354",
        "value": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/34755354",
        "zipball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/zipball/v1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ngoiz",
          "type": "User"
        },
        "date_created": "2020-02-03T15:10:48Z",
        "date_published": "2020-02-03T15:17:00Z",
        "description": "SHARPy v1.1.1 is the latest release, consolidating v1.1 with some minor bug fixes and features. \r\n\r\n# Changelog\r\n\r\n## [1.1.1](https://github.com/imperialcollegelondon/sharpy/tree/1.1.1) (2020-02-03)\r\n\r\n[Full Changelog](https://github.com/imperialcollegelondon/sharpy/compare/v1.1.0...1.1.1)\r\n\r\n**Implemented enhancements:**\r\n\r\n- User-defined aerodynamic airfoil efficiency factor and constant force terms [\\#59](https://github.com/ImperialCollegeLondon/sharpy/pull/59) ([ngoiz](https://github.com/ngoiz))\r\n\r\n**Closed issues:**\r\n\r\n- Broken link on SHARPy Installation Guide [\\#67](https://github.com/ImperialCollegeLondon/sharpy/issues/67)\r\n- Update citation instructions [\\#62](https://github.com/ImperialCollegeLondon/sharpy/issues/62)\r\n- Incorrect version tag displayed when running SHARPy [\\#61](https://github.com/ImperialCollegeLondon/sharpy/issues/61)\r\n- Clean up SHARPy linear interface with UVLM [\\#48](https://github.com/ImperialCollegeLondon/sharpy/issues/48)\r\n\r\n**Merged pull requests:**\r\n\r\n- Documentation Improvements [\\#66](https://github.com/ImperialCollegeLondon/sharpy/pull/66) ([ngoiz](https://github.com/ngoiz))\r\n- Minor fixes and general code clean up of linear modules [\\#65](https://github.com/ImperialCollegeLondon/sharpy/pull/65) ([ngoiz](https://github.com/ngoiz))\r\n- Error log file created when program encounters exceptions [\\#64](https://github.com/ImperialCollegeLondon/sharpy/pull/64) ([ngoiz](https://github.com/ngoiz))\r\n- Update README.md [\\#63](https://github.com/ImperialCollegeLondon/sharpy/pull/63) ([rafapalacios](https://github.com/rafapalacios))\r\n- Clean up linear SHARPy's interface with UVLM [\\#60](https://github.com/ImperialCollegeLondon/sharpy/pull/60) ([ngoiz](https://github.com/ngoiz))\r\n\r\n\r\n\\* *This Changelog was automatically generated by [github_changelog_generator](https://github.com/github-changelog-generator/github-changelog-generator)*",
        "html_url": "https://github.com/ImperialCollegeLondon/sharpy/releases/tag/v1.1.1",
        "name": "SHARPy Version 1.1.1",
        "release_id": 23342580,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/23342580",
        "value": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/23342580",
        "zipball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ngoiz",
          "type": "User"
        },
        "date_created": "2019-12-12T15:42:36Z",
        "date_published": "2019-12-12T15:52:07Z",
        "description": "SHARPy 1.1 introduces mainly changes in the software installation process and code structuring. \r\n\r\nMost relevant changes:\r\n- SHARPy is now installed with CMake rather than individual compilation of libraries\r\n- xbeam and UVLM are now included as git-submodules, providing better tracking of the relevant versions of each library.\r\n- Incorporates fixes and suggestions from the JOSS review\r\n\r\nFull Changelog for v1.1:\r\n## [1.1](https://github.com/imperialcollegelondon/sharpy/tree/1.1) (2019-12-12)\r\n\r\n[Full Changelog](https://github.com/imperialcollegelondon/sharpy/compare/v1.0.1...1.1)\r\n\r\n**Implemented enhancements:**\r\n\r\n- Improvements to Model Reduction [\\#56](https://github.com/ImperialCollegeLondon/sharpy/pull/56) ([ngoiz](https://github.com/ngoiz))\r\n- Submodules and cmake build tools instead of Makefiles [\\#52](https://github.com/ImperialCollegeLondon/sharpy/pull/52) ([fonsocarre](https://github.com/fonsocarre))\r\n- New settings check against valid options [\\#39](https://github.com/ImperialCollegeLondon/sharpy/pull/39) ([ngoiz](https://github.com/ngoiz))\r\n- Default settings get type specified for the setting rather than their own type [\\#34](https://github.com/ImperialCollegeLondon/sharpy/pull/34) ([ngoiz](https://github.com/ngoiz))\r\n\r\n**Fixed bugs:**\r\n\r\n- Default value not correct in documentation when it is a numpy type. [\\#32](https://github.com/ImperialCollegeLondon/sharpy/issues/32)\r\n- Documentation for Postprocessors being skipped by Sphinx in RTD [\\#30](https://github.com/ImperialCollegeLondon/sharpy/issues/30)\r\n\r\n**Closed issues:**\r\n\r\n- Minor documentation issues [\\#53](https://github.com/ImperialCollegeLondon/sharpy/issues/53)\r\n- WindTurbine case generation script does not produce sharpy file [\\#50](https://github.com/ImperialCollegeLondon/sharpy/issues/50)\r\n- Considerations for building SHARPy [\\#47](https://github.com/ImperialCollegeLondon/sharpy/issues/47)\r\n- Installation fails on macOS with Intel compiler [\\#46](https://github.com/ImperialCollegeLondon/sharpy/issues/46)\r\n- run\\_theo\\_freq.py fails in Docker container [\\#37](https://github.com/ImperialCollegeLondon/sharpy/issues/37)\r\n- Compare to other competing software in JOSS paper [\\#36](https://github.com/ImperialCollegeLondon/sharpy/issues/36)\r\n\r\n**Merged pull requests:**\r\n\r\n- Example wind turbine [\\#58](https://github.com/ImperialCollegeLondon/sharpy/pull/58) ([ArturoMS13](https://github.com/ArturoMS13))\r\n- Small typo in README.md and updates to it [\\#57](https://github.com/ImperialCollegeLondon/sharpy/pull/57) ([fonsocarre](https://github.com/fonsocarre))\r\n- Restructuring of A Short Guide to SHARPy [\\#55](https://github.com/ImperialCollegeLondon/sharpy/pull/55) ([ngoiz](https://github.com/ngoiz))\r\n- JOSS Paper Minor typos fixed [\\#54](https://github.com/ImperialCollegeLondon/sharpy/pull/54) ([ngoiz](https://github.com/ngoiz))\r\n- Update .solver.txt extension to .sharpy [\\#51](https://github.com/ImperialCollegeLondon/sharpy/pull/51) ([ArturoMS13](https://github.com/ArturoMS13))\r\n- Fix typo in unittests using tearDowns instead of tearDown [\\#49](https://github.com/ImperialCollegeLondon/sharpy/pull/49) ([ngoiz](https://github.com/ngoiz))\r\n- Bug fixes in installation docs [\\#45](https://github.com/ImperialCollegeLondon/sharpy/pull/45) ([rafmudaf](https://github.com/rafmudaf))\r\n- Updated installation instructions [\\#44](https://github.com/ImperialCollegeLondon/sharpy/pull/44) ([ngoiz](https://github.com/ngoiz))\r\n- Travis CI now uses the minimal environment, the same as the Docker build [\\#42](https://github.com/ImperialCollegeLondon/sharpy/pull/42) ([fonsocarre](https://github.com/fonsocarre))\r\n- Remove calls to matplotlib \\(or wrap in try except\\) [\\#41](https://github.com/ImperialCollegeLondon/sharpy/pull/41) ([ngoiz](https://github.com/ngoiz))\r\n- Added information about competing software in JOSS paper [\\#40](https://github.com/ImperialCollegeLondon/sharpy/pull/40) ([fonsocarre](https://github.com/fonsocarre))\r\n- Removes deprecated case files from cases folder [\\#38](https://github.com/ImperialCollegeLondon/sharpy/pull/38) ([ngoiz](https://github.com/ngoiz))\r\n- Change position of --name argument in docs [\\#35](https://github.com/ImperialCollegeLondon/sharpy/pull/35) ([petebachant](https://github.com/petebachant))\r\n- Improvements in documentation  [\\#31](https://github.com/ImperialCollegeLondon/sharpy/pull/31) ([ngoiz](https://github.com/ngoiz))\r\n\r\n\\* *This Changelog was automatically generated by [github_changelog_generator](https://github.com/github-changelog-generator/github-changelog-generator)*",
        "html_url": "https://github.com/ImperialCollegeLondon/sharpy/releases/tag/v1.1.0-2",
        "name": "SHARPy Version 1.1",
        "release_id": 22183139,
        "tag": "v1.1.0-2",
        "tarball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/tarball/v1.1.0-2",
        "type": "Release",
        "url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/22183139",
        "value": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/22183139",
        "zipball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/zipball/v1.1.0-2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fonsocarre",
          "type": "User"
        },
        "date_created": "2019-11-17T17:25:53Z",
        "date_published": "2019-11-17T17:34:02Z",
        "description": "A consolidated version of v1.0.0\r\n\r\nThe main change here is the ability of obtaining a Docker image with everything ready to go. Check [the documentation](https://ic-sharpy.readthedocs.io/en/master/content/installation.html#using-sharpy-from-a-docker-container)\r\n\r\n**Make sure you update your environment! We fixed deprecation warnings from older versions, which means that depending on your environment you might have trouble!**\r\n\r\n- New example of linearised flying wing [\\#28](https://github.com/ImperialCollegeLondon/sharpy/pull/28) ([ngoiz](https://github.com/ngoiz))\r\n- SHARPy can now be obtained from a Docker Hub container [\\#27](https://github.com/ImperialCollegeLondon/sharpy/pull/27) ([fonsocarre](https://github.com/fonsocarre))\r\n- Improved modal solver [\\#26](https://github.com/ImperialCollegeLondon/sharpy/pull/26) ([fonsocarre](https://github.com/fonsocarre))\r\n- Updated function calls for latest numpy 1.17 [\\#25](https://github.com/ImperialCollegeLondon/sharpy/pull/25) ([ngoiz](https://github.com/ngoiz))\r\n- Examples added to documentation [\\#24](https://github.com/ImperialCollegeLondon/sharpy/pull/24) ([fonsocarre](https://github.com/fonsocarre))\r\n- Improved linear solver documentation and minor Krylov ROM fixes [\\#23](https://github.com/ImperialCollegeLondon/sharpy/pull/23) ([ngoiz](https://github.com/ngoiz))\r\n- change log generator incorporated [\\#22](https://github.com/ImperialCollegeLondon/sharpy/pull/22) ([ngoiz](https://github.com/ngoiz))\r\n\r\n",
        "html_url": "https://github.com/ImperialCollegeLondon/sharpy/releases/tag/v1.0.1",
        "name": "v1.0.1",
        "release_id": 21536667,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/21536667",
        "value": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/21536667",
        "zipball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fonsocarre",
          "type": "User"
        },
        "date_created": "2019-11-07T17:12:01Z",
        "date_published": "2019-11-07T17:13:51Z",
        "description": "SHARPy now has better documentation, better interfaces and an integrated linear aeroelastic solver!\r\n\r\nAs always, make sure you compile `UVLM` and `xbeam` from the `master` branch and they are up to date.\r\n\r\nThis release is archived in Zenodo \r\n\r\n[![DOI](https://zenodo.org/badge/70235936.svg)](https://zenodo.org/badge/latestdoi/70235936)\r\n\r\n",
        "html_url": "https://github.com/ImperialCollegeLondon/sharpy/releases/tag/1.0.0",
        "name": "v1.0.0 First official SHARPy release",
        "release_id": 21295562,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/21295562",
        "value": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/21295562",
        "zipball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fonsocarre",
          "type": "User"
        },
        "date_created": "2019-08-22T15:14:18Z",
        "date_published": "2019-08-22T15:32:52Z",
        "description": "This prerelease includes a very large number of changes. Some of the most important are:\r\n\r\n* Structural steps can have a different time step than the aerodynamic one.\r\n* Multibody solver. This includes a large number of possible constraints, such as hinges and prescribed velocities in several frames.\r\n* Faster UVLM evaluation (2x at least). More robust Biot-Savart core evaluation and parallel support.\r\n* Addition of a controller framework for control surface deflection. The example implements a PID.\r\n* An example of SHARPy being used as a cost function for an optimiser.\r\n* Improved support for time-domain 3D turbulent fields as an input.\r\n* Several important bug fixes.\r\n\r\n* Documentation is generated automatically, including the main structure of the site.\r\n* Improved test suite.\r\n\r\n**Make sure you are cloning the `v1.0.0-rc` versions of the `xbeam` and `uvlm` libraries!**",
        "html_url": "https://github.com/ImperialCollegeLondon/sharpy/releases/tag/v1.0.0-rc",
        "name": "1.0.0 Release Candidate",
        "release_id": 19470841,
        "tag": "v1.0.0-rc",
        "tarball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/tarball/v1.0.0-rc",
        "type": "Release",
        "url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/19470841",
        "value": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/19470841",
        "zipball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/zipball/v1.0.0-rc"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fonsocarre",
          "type": "User"
        },
        "date_created": "2019-03-14T14:49:28Z",
        "date_published": "2019-03-14T14:56:01Z",
        "html_url": "https://github.com/ImperialCollegeLondon/sharpy/releases/tag/v0.2",
        "release_id": 16117113,
        "tag": "v0.2",
        "tarball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/tarball/v0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/16117113",
        "value": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/16117113",
        "zipball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/zipball/v0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fonsocarre",
          "type": "User"
        },
        "date_created": "2019-03-14T17:33:29Z",
        "date_published": "2019-03-14T17:34:32Z",
        "html_url": "https://github.com/ImperialCollegeLondon/sharpy/releases/tag/V0.2.1",
        "name": "v0.2 with tests up to date and passing",
        "release_id": 16121711,
        "tag": "V0.2.1",
        "tarball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/tarball/V0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/16121711",
        "value": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/releases/16121711",
        "zipball_url": "https://api.github.com/repos/ImperialCollegeLondon/sharpy/zipball/V0.2.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "setuptools",
        "type": "Software_application",
        "value": "setuptools",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "cmake",
        "type": "Software_application",
        "value": "cmake>=3.14.3",
        "version": ">=3.14.3"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contributors",
    "usage",
    "faq"
  ],
  "somef_provenance": {
    "date": "2025-09-19 03:06:36",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 160
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing and Bug reports",
        "parent_header": [
          "Simulation of High Aspect Ratio aeroplanes in Python [SHARPy]"
        ],
        "type": "Text_excerpt",
        "value": "If you think you can add a useful feature to SHARPy, want to write documentation or you encounter a bug, by all means, \ncheck out the [collaboration guide](https://ic-sharpy.readthedocs.io/en/latest/content/contributing.html).\n"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "v1.0.0-rc1"
      },
      "source": "https://raw.githubusercontent.com/ImperialCollegeLondon/sharpy/main/docs/JOSS/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
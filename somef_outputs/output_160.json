{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "identifier": "https://orcid.org/0000-0002-8071-4497",
        "type": "String",
        "value": "Mohammad Al-Turany"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://orcid.org/0000-0003-3787-1910",
        "type": "String",
        "value": "Dennis Klein"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Thorsten Kollegger"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://orcid.org/0000-0002-6249-155X",
        "type": "String",
        "value": "Alexey Rybalchenko"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Nicolas Winckler"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "Al-Turany,",
        "last_name": "Mohammad [https://orcid.org/0000-0002-8071-4497]",
        "name": "Al-Turany, Mohammad [https://orcid.org/0000-0002-8071-4497]",
        "type": "Agent",
        "value": "Al-Turany, Mohammad [https://orcid.org/0000-0002-8071-4497]"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "Klein,",
        "last_name": "Dennis [https://orcid.org/0000-0003-3787-1910]",
        "name": "Klein, Dennis [https://orcid.org/0000-0003-3787-1910]",
        "type": "Agent",
        "value": "Klein, Dennis [https://orcid.org/0000-0003-3787-1910]"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "Kollegger,",
        "last_name": "Thorsten",
        "name": "Kollegger, Thorsten",
        "type": "Agent",
        "value": "Kollegger, Thorsten"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "Rybalchenko,",
        "last_name": "Alexey [https://orcid.org/0000-0002-6249-155X]",
        "name": "Rybalchenko, Alexey [https://orcid.org/0000-0002-6249-155X]",
        "type": "Agent",
        "value": "Rybalchenko, Alexey [https://orcid.org/0000-0002-6249-155X]"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "Winckler,",
        "last_name": "Nicolas",
        "name": "Winckler, Nicolas",
        "type": "Agent",
        "value": "Winckler, Nicolas"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/AUTHORS",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FairRootGroup/FairMQ"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FairRootGroup/FairMQ/"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/.github/workflows/fair-software.yml"
      },
      "technique": "file_exploration"
    }
  ],
  "contributors": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Aphecetche, Laurent\nBinet, Sebastien\nEulisse, Giulio\nKarabowicz, Radoslaw\nKretz, Matthias <kretz@kde.org>\nKrzewicki, Mikolaj\nLebedev, Andrey\nMrnjavac, Teo <teo.m@cern.ch>\nNeskovic, Gvozden\nRichter, Matthias\nTacke, Christian [https://orcid.org/0000-0002-5321-8404]\nUhlig, Florian\nWenzel, Sandro\n"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/CONTRIBUTORS",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-04-10T16:14:55Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2018-04-15"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-09-05T11:07:33Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "C++ Message Queuing Library and Framework"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "C++ Message Queuing Library and Framework"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "FairMQ"
        ],
        "type": "Text_excerpt",
        "value": "FairMQ is designed to help implementing large-scale data processing workflows needed in next-generation Particle Physics experiments. FairMQ is written in C++ and aims to\n  * provide **an asynchronous message passing abstraction** of different data transport technologies,\n  * provide a reasonably **efficient data transport** service (zero-copy, high throughput),\n  * be **data format agnostic**, and\n  * provide **basic building blocks** that can be used to implement higher level data processing workflows.\n\nThe core of FairMQ provides an abstract asynchronous message passing API with scalability protocols\ninspired by [ZeroMQ](https://github.com/zeromq/libzmq) (e.g. PUSH/PULL, PUB/SUB).\nFairMQ provides multiple implementations for its API (so-called \"transports\",\ne.g. `zeromq` and `shmem` (latest release of the `ofi` transport in v1.4.56, removed since v1.5+)) to cover\na variety of use cases\n(e.g. inter-thread, inter-process, inter-node communication) and machines (e.g. Ethernet, Infiniband).\nIn addition to this core functionality FairMQ provides a framework for creating \"devices\" - actors which\nare communicating through message passing. FairMQ does not only allow the user to use different transport\nbut also to mix them; i.e: A Device can communicate using different transport on different channels at the\nsame time. Device execution is modelled as a simple state machine that shapes the integration points for\nthe user task. Devices also incorporate a plugin system for runtime configuration and control.\nNext to the provided [devices](https://github.com/FairRootGroup/FairMQ/tree/master/fairmq/devices) and\n[plugins](https://github.com/FairRootGroup/FairMQ/tree/master/fairmq/plugins) the user can extend FairMQ\nby developing his own plugins to integrate his devices with external configuration and control services.\n\nFairMQ has been developed in the context of its mother project [FairRoot](https://github.com/FairRootGroup/FairRoot) -\na simulation, reconstruction and analysis framework.\n"
      },
      "source": "https://github.com/FairRootGroup/FairMQ/#readme",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9175915186745194,
      "result": {
        "original_header": "FairMQ",
        "type": "Text_excerpt",
        "value": "C++ Message Queuing Library and Framework \n"
      },
      "source": "https://github.com/FairRootGroup/FairMQ/#readme",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8669204233523724,
      "result": {
        "original_header": "CMake options",
        "type": "Text_excerpt",
        "value": "| Variable | Info |\n| --- | --- |\n| `${FairMQ_PACKAGE_DEPENDENCIES}` | the list of public package dependencies |\n| `${FairMQ_<dep>_VERSION}` | the minimum `<dep>` version FairMQ requires |\n| `${FairMQ_<dep>_COMPONENTS}` | the list of `<dep>` components FairMQ depends on |\n| `${FairMQ_PACKAGE_COMPONENTS}` | the list of components FairMQ consists of |\n| `${FairMQ_#COMPONENT#_FOUND}` | `TRUE` if this component was built |\n| `${FairMQ_VERSION}` | the version in format `MAJOR.MINOR.PATCH` |\n| `${FairMQ_GIT_VERSION}` | the version in the format returned by `git describe --tags --dirty --match \"v*\"` |\n| `${FairMQ_PREFIX}` | the actual installation prefix |\n| `${FairMQ_BINDIR}` | the installation bin directory |\n| `${FairMQ_INCDIR}` | the installation include directory |\n| `${FairMQ_LIBDIR}` | the installation lib directory |\n| `${FairMQ_DATADIR}` | the installation data directory (`../share/fairmq`) |\n| `${FairMQ_CMAKEMODDIR}` | the installation directory of shipped CMake find modules |\n| `${FairMQ_BUILD_TYPE}` | the value of `CMAKE_BUILD_TYPE` at build-time |\n| `${FairMQ_CXX_FLAGS}` | the values of `CMAKE_CXX_FLAGS` and `CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE}` at build-time |\n \n"
      },
      "source": "https://github.com/FairRootGroup/FairMQ/#readme",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "active"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FairRootGroup/FairMQ/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "FairMQ"
        ],
        "type": "Text_excerpt",
        "value": "1. [Device](docs/Device.md#1-device)\n   1. [Topology](docs/Device.md#11-topology)\n   2. [Communication Patterns](docs/Device.md#12-communication-patterns)\n   3. [State Machine](docs/Device.md#13-state-machine)\n   4. [Multiple devices in the same process](docs/Device.md#15-multiple-devices-in-the-same-process)\n2. [Transport Interface](docs/Transport.md#2-transport-interface)\n   1. [Message](docs/Transport.md#21-message)\n      1. [Ownership](docs/Transport.md#211-ownership)\n   2. [Channel](docs/Transport.md#22-channel)\n   3. [Poller](docs/Transport.md#23-poller)\n3. [Configuration](docs/Configuration.md#3-configuration)\n    1. [Device Configuration](docs/Configuration.md#31-device-configuration)\n    2. [Communication Channels Configuration](docs/Configuration.md#32-communication-channels-configuration)\n        1. [JSON Parser](docs/Configuration.md#321-json-parser)\n        2. [SuboptParser](docs/Configuration.md#322-suboptparser)\n    3. [Introspection](docs/Configuration.md#33-introspection)\n4. [Development](docs/Development.md#4-development)\n   1. [Testing](docs/Development.md#41-testing)\n   2. [Static Analysis](docs/Development.md#42-static-analysis)\n      1. [CMake Integration](docs/Development.md#421-cmake-integration)\n      2. [Extra Compiler Arguments](docs/Development.md#422-extra-compiler-arguments)\n5. [Logging](docs/Logging.md#5-logging)\n   1. [Log severity](docs/Logging.md#51-log-severity)\n   2. [Log verbosity](docs/Logging.md#52-log-verbosity)\n   3. [Color for console output](docs/Logging.md#53-color)\n   4. [File output](docs/Logging.md#54-file-output)\n   5. [Custom sinks](docs/Logging.md#55-custom-sinks)\n6. [Examples](docs/Examples.md#6-examples)\n7. [Plugins](docs/Plugins.md#7-plugins)\n   1. [Usage](docs/Plugins.md#71-usage)\n   2. [Development](docs/Plugins.md#72-development)\n   3. [Provided Plugins](docs/Plugins.md#73-provided-plugins)\n       1. [PMIx](docs/Plugins.md#731-pmix)\n"
      },
      "source": "https://github.com/FairRootGroup/FairMQ/#readme",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FairRootGroup/FairMQ/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 34
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FairRootGroup/FairMQ"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FairMQ"
      },
      "source": "https://github.com/FairRootGroup/FairMQ/#readme",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/examples/dds/fairmq-ex-dds-env.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/examples/qc/fairmq-ex-qc-env.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/examples/n-m/fairmq-ex-n-m-env.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://doi.org/10.5281/zenodo.1689985"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.1689985"
      },
      "source": "https://github.com/FairRootGroup/FairMQ/#readme",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation from Source",
        "parent_header": [
          "FairMQ"
        ],
        "type": "Text_excerpt",
        "value": "Recommended:\n\n```bash\ngit clone https://github.com/FairRootGroup/FairMQ fairmq_source\ncmake -S fairmq_source -B fairmq_build -GNinja -DCMAKE_BUILD_TYPE=Release [-DBUILD_TESTING=ON]\ncmake --build fairmq_build\n[ctest --test-dir fairmq_build --output-on-failure --schedule-random -j<ncpus>] # needs -DBUILD_TESTING=ON\ncmake --install fairmq_build --prefix $(pwd)/fairmq_install\n```\n\nPlease consult the [manpages of your CMake version](https://cmake.org/cmake/help/latest/manual/cmake.1.html) for more options.\n\nIf dependencies are not installed in standard system directories, you can hint the installation location via\n`-DCMAKE_PREFIX_PATH=...` or per dependency via `-D{DEPENDENCY}_ROOT=...` (`*_ROOT` variables can also be environment variables).\n"
      },
      "source": "https://github.com/FairRootGroup/FairMQ/#readme",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation via Spack",
        "parent_header": [
          "FairMQ"
        ],
        "type": "Text_excerpt",
        "value": "Prerequisite: [Spack](https://spack.readthedocs.io/en/latest/getting_started.html)\n\n```bash\nspack info fairmq # inspect build options\nspack install fairmq # build latest packaged version with default options\n```\n\nBuild FairMQ's dependencies via Spack for development:\n```bash\ngit clone -b dev https://github.com/FairRootGroup/FairMQ fairmq_source\nspack --env fairmq_source install # installs deps declared in fairmq_source/spack.yaml\nspack env activate fairmq_source # sets $CMAKE_PREFIX_PATH which is used by CMake to find FairMQ's deps\ncmake -S fairmq_source -B fairmq_build -GNinja -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON\n# develop, compile, test\nspack env deactivate # at end of dev session, or simply close the shell\n```\n"
      },
      "source": "https://github.com/FairRootGroup/FairMQ/#readme",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/FairRootGroup/FairMQ/issues"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "c-plus-plus, fairmq, fairroot, shmem, zeromq"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU Lesser General Public License v3.0",
        "spdx_id": "LGPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/lgpl-3.0",
        "value": "https://api.github.com/licenses/lgpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/./COPYRIGHT",
        "spdx_id": "./COPYRIGHT",
        "type": "License",
        "value": "./COPYRIGHT"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FairMQ"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "FairMQ"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "FairRootGroup"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 842211,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 70508,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 16566,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 5450,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3385,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://github.com/FairRootGroup/FairMQ/#readme"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://spack.readthedocs.io/"
      },
      "source": "https://github.com/FairRootGroup/FairMQ/#readme",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dennisklein",
          "type": "User"
        },
        "date_created": "2025-06-13T06:20:24Z",
        "date_published": "2025-06-13T06:25:04Z",
        "description": "* De-boostify: use std::pmr from C++17 by @ktf in https://github.com/FairRootGroup/FairMQ/pull/532\r\n\r\n**Full Changelog**: https://github.com/FairRootGroup/FairMQ/compare/v1.9.2...v1.10.0",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.10.0",
        "name": "v1.10.0",
        "release_id": 225068814,
        "tag": "v1.10.0",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.10.0",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/225068814",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/225068814",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.10.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rbx",
          "type": "User"
        },
        "date_created": "2025-03-17T14:29:41Z",
        "date_published": "2025-03-17T14:31:31Z",
        "description": "* [Make shmem headers public](https://github.com/FairRootGroup/FairMQ/commit/24e7a5b8d01aa30c51820f67c13a2cb7bc1ac7da)\r\n\r\n**Full Changelog**: https://github.com/FairRootGroup/FairMQ/compare/v1.9.1...v1.9.2",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.9.2",
        "name": "v1.9.2",
        "release_id": 206260087,
        "tag": "v1.9.2",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.9.2",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/206260087",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/206260087",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.9.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dennisklein",
          "type": "User"
        },
        "date_created": "2025-01-23T14:37:01Z",
        "date_published": "2025-01-23T15:33:30Z",
        "description": "* feat(EventManager): Out of line some methods by @ktf (https://github.com/FairRootGroup/FairMQ/commit/c11506e95878a39837c5af92dc99b4a1248c13ac)\r\n\r\n**Full Changelog**: https://github.com/FairRootGroup/FairMQ/compare/v1.9.0...v1.9.1",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.9.1",
        "name": "v1.9.1",
        "release_id": 196453840,
        "tag": "v1.9.1",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.9.1",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/196453840",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/196453840",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.9.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dennisklein",
          "type": "User"
        },
        "date_created": "2025-01-09T16:14:18Z",
        "date_published": "2025-01-09T16:27:07Z",
        "description": "## Features and Fixes\r\n* Fix poor performance of the refCount segment (https://github.com/FairRootGroup/FairMQ/pull/501)\r\n* Add 'no control' controller (https://github.com/FairRootGroup/FairMQ/pull/503)\r\n* Hide actual container from the API (https://github.com/FairRootGroup/FairMQ/pull/507)\r\n* Out of line `ProgOption::SetProperty` for `int` and `std::string` (https://github.com/FairRootGroup/FairMQ/pull/518)\r\n* Reduce bloat due to statics (https://github.com/FairRootGroup/FairMQ/pull/519)\r\n\r\n## Maintenance\r\n* chore: upgrade checkout step to v4 (https://github.com/FairRootGroup/FairMQ/pull/494)\r\n* ci: Check codemeta/zenodo with AUTHORS/CONTRIBUTORS (https://github.com/FairRootGroup/FairMQ/pull/498)\r\n* build: Adopt all CMake policies up to 3.30 (https://github.com/FairRootGroup/FairMQ/pull/512)\r\n* Update Mac CI nodes (https://github.com/FairRootGroup/FairMQ/pull/500, https://github.com/FairRootGroup/FairMQ/pull/517)\r\n* build(deps): bump extern/googletest from `a1cc8c5` to `7d76a23` (https://github.com/FairRootGroup/FairMQ/pull/497, https://github.com/FairRootGroup/FairMQ/pull/520)\r\n* Support Boost 1.87 (https://github.com/FairRootGroup/FairMQ/pull/521)\r\n\r\n---\r\n\r\n**Contributors**: @ChristianTackeGSI, @dennisklein, @ktf, @rbx\r\n\r\n**Full Changelog**: https://github.com/FairRootGroup/FairMQ/compare/v1.8.4...v1.9.0",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.9.0",
        "name": "v1.9.0",
        "release_id": 193947896,
        "tag": "v1.9.0",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/193947896",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/193947896",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rbx",
          "type": "User"
        },
        "date_created": "2023-11-29T18:23:08Z",
        "date_published": "2023-11-29T18:29:01Z",
        "description": "* Shmem: Fallback to old reference counting behaviour for UnamangedRegion when the configured refCount segment size is 0 (https://github.com/FairRootGroup/FairMQ/pull/493)\r\n\r\n---\r\n\r\n**Contributors**: @rbx\r\n\r\n**Full Changelog**: https://github.com/FairRootGroup/FairMQ/compare/v1.8.3...v1.8.4",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.8.4",
        "name": "v1.8.4",
        "release_id": 131967296,
        "tag": "v1.8.4",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.8.4",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/131967296",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/131967296",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.8.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rbx",
          "type": "User"
        },
        "date_created": "2023-11-24T13:20:28Z",
        "date_published": "2023-11-24T13:24:23Z",
        "description": "* Shmem: Fix a bug where a reference count region creation would not honor the stored configuration parameters (https://github.com/FairRootGroup/FairMQ/pull/492)\r\n\r\n---\r\n\r\n**Contributors**: @rbx\r\n\r\n**Full Changelog**: https://github.com/FairRootGroup/FairMQ/compare/v1.8.2...v1.8.3",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.8.3",
        "name": "v1.8.3",
        "release_id": 131358972,
        "tag": "v1.8.3",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.8.3",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/131358972",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/131358972",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.8.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rbx",
          "type": "User"
        },
        "date_created": "2023-11-15T12:08:46Z",
        "date_published": "2023-11-15T12:11:57Z",
        "description": "* Shmem: improve error message when ref count segment is out of space (https://github.com/FairRootGroup/FairMQ/pull/490)\r\n* Shmem: increase default size of the ref count segment to 100,000,000 bytes (https://github.com/FairRootGroup/FairMQ/pull/490)\r\n\r\n---\r\n\r\n**Contributors**: @rbx\r\n\r\n**Full Changelog**: https://github.com/FairRootGroup/FairMQ/compare/v1.8.1...v1.8.2",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.8.2",
        "name": "v1.8.2",
        "release_id": 129535000,
        "tag": "v1.8.2",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.8.2",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/129535000",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/129535000",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.8.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rbx",
          "type": "User"
        },
        "date_created": "2023-11-10T13:24:49Z",
        "date_published": "2023-11-10T13:32:40Z",
        "description": "### Improvements\r\n* Shmem: reduced the size of the Message class (https://github.com/FairRootGroup/FairMQ/pull/485)\r\n* Shmem: store reference counts for the unmanaged region messages in a pool in a dedicated memory segment (https://github.com/FairRootGroup/FairMQ/pull/484)\r\n\r\n### Bugfixes\r\n* Fix address clashes in tests (6122010694f1356e1984189abd5d193ab85da7b8)\r\n* StateMachine: Guard access to subscription containers (fbb6577625c0d24e258df886a06a77ee98cb13ae)\r\n\r\n---\r\n\r\n**Contributors**: @dennisklein, @ktf, @rbx\r\n\r\n**Full Changelog**: https://github.com/FairRootGroup/FairMQ/compare/v1.8.0...v1.8.1",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.8.1",
        "name": "v1.8.1",
        "release_id": 128911437,
        "tag": "v1.8.1",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.8.1",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/128911437",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/128911437",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.8.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rbx",
          "type": "User"
        },
        "date_created": "2023-09-06T08:18:37Z",
        "date_published": "2023-09-06T08:23:18Z",
        "description": "### Features\r\n* Allow sorting StateChange callbacks (https://github.com/FairRootGroup/FairMQ/pull/481, 3c1723fc541fbf20504121fabb7128f8c343c24f)\r\n\r\n---\r\n\r\n**Contributors**: @dennisklein, @ktf, @ChristianTackeGSI\r\n\r\n**Full Changelog**: https://github.com/FairRootGroup/FairMQ/compare/v1.7.0...v1.8.0",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.8.0",
        "name": "v1.8.0",
        "release_id": 120073489,
        "tag": "v1.8.0",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/120073489",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/120073489",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.8.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dennisklein",
          "type": "User"
        },
        "date_created": "2023-06-26T11:49:45Z",
        "date_published": "2023-06-26T11:57:29Z",
        "description": "### Features\r\n* New CMake switch `-DFAIRMQ_CHANNEL_DEFAULT_AUTOBIND=OFF/ON` (https://github.com/FairRootGroup/FairMQ/pull/475)\r\n\r\n---\r\n\r\n**Contributors**: @dennisklein, @rbx\r\n\r\n**Full Changelog**: https://github.com/FairRootGroup/FairMQ/compare/v1.6.0...v1.7.0",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.7.0",
        "name": "v1.7.0",
        "release_id": 109898111,
        "tag": "v1.7.0",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/109898111",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/109898111",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dennisklein",
          "type": "User"
        },
        "date_created": "2023-06-13T20:45:15Z",
        "date_published": "2023-06-13T20:57:02Z",
        "description": "### Features\r\n* New tunable `--shm-metadata-msg-size` (https://github.com/FairRootGroup/FairMQ/pull/435, f278e7e31208d219be519791d8de120956b289d5)\r\n\r\n### Bugfixes\r\n* Fix `-Wunqualified-std-cast-call` (7b259afdb5d71c3cdfab551ae516ba1e7af12470)\r\n\r\n---\r\n\r\n**Contributors**: @dennisklein, @ktf, @rbx\r\n\r\n**Full Changelog**: https://github.com/FairRootGroup/FairMQ/compare/v1.5.0...v1.6.0",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.6.0",
        "name": "v1.6.0",
        "release_id": 108442061,
        "tag": "v1.6.0",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/108442061",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/108442061",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dennisklein",
          "type": "User"
        },
        "date_created": "2023-03-07T13:29:59Z",
        "date_published": "2023-03-07T15:11:46Z",
        "description": "### BREAKING CHANGES\r\n* Remove deprecated components `sdk`, `sdk_commands`, `dds_plugin` (#392, cda728242246f5468a566f54c08e2d610cbd32f8)\r\n* Create a single shared library again (cfc60904054a6860f2d18fda84edd313f1f0386f)\r\n   * Removes exported targets `FairMQ::Tools` and `FairMQ::StateMachine`\r\n* Turn shm-monitor off by default (45663189)\r\n* Remove `Device::TransitionTo()` without replacement (c35d35a3)\r\n* Remove EXPERIMENTAL `ofi` transport (2e98a4e2)\r\n* Remove EXPERIMENTAL `PMIx` plugin (0aecfff1)\r\n* Migrate to `std::filesystem` consistently (05b734ee)\r\n   * Switch back to Boost.Filesystem via `-DFAIRMQ_HAS_STD_FILESYSTEM=0`\r\n   * `FAIRMQ_HAS_STD_FILESYSTEM` defaults to 1 on GCC >= 9 and Clang >= 9\r\n\r\n### Deprecations\r\n* Deprecate non-namespaced headers and typenames (#423, 9ad9393d, 0959095a)\r\n* Deprecate `Device::fChannels` in preparation for #427 (5ef17fdd)\r\n\r\n### Features\r\n* Adopt kebab-case library and plugin file names (640becc4, ca420a0e)\r\n   * Camel+snake-case plugin names are still allowed! e.g. `libFairMQPlugin_myplugin.so` and new `libfairmq-plugin-myplugin.so`\r\n* Bump bundled GTest to @a1cc8c55 (e2025126)\r\n* ABI version is now defined to be equal to the API/Source version (b3395ef2)\r\n   * Note: This is essentially a clarification that FairMQ does not try to support any kind of ABI compatibility between releases. \r\n* Switch to `-O3` (a1e59622)\r\n* Add new example with custom controller plugin (statically compiled in) (faa30955)\r\n* Add `operator<<` to `fair::mq::Channel` (a8b7ebef)\r\n* Make invalid channel initialization cancellable through pending state (87baf974)\r\n* Extend error message if channel(s) was not configured before timeout (7697f2f4)\r\n* Warn when going to try allocate a shmem message more times (93890308)\r\n* Resume/Interrupt transports consistently (9093ed82, ae51ecc6, da1c9e44)\r\n* Refine and tweak `fair::mq::Parts` (a58b4870)\r\n* Improve `ChangeState` API (#441, 435d07ea)\r\n   * Add `[[nodiscard]]` to `bool Device::ChangeState()`\r\n   * Introduce throwing variant `void Device::ChangeStateOrThrow()`\r\n* build: Update CMake policy version range (7d401115)\r\n* Make Error classes header only (f2dce910)\r\n\r\n### Bugfixes\r\n* build(fairmq-tidy): Add missing `EXPERIMENTAL` tag (2513da21)\r\n* fix(zeromq): Leaking monitor socket messages (c3fdc8c0)\r\n* region example: fix race between segment reset & presence check (fdfde95d)\r\n* fix(shm): Handle pre-conditions (904037d9)\r\n* fix(examples): Disable hidden `CXX_VISIBILITY_PRESET` (64a09dd9)\r\n* fix(examples): warning: declaration `class fair::mq::Device` does not declare anything (77e04d56)\r\n* Device: synchronize access to transports container (7bf1d368)\r\n* fix: `[-Wsign-compare]` (0a63c748)\r\n* fix: `[-Wdeprecated-declarations]` (a83e4011, 12a85c6f)\r\n* fix: Remove unused `fMaxRunRuntimeInS` (5108f699)\r\n* build: Do not sort package dependencies (651d7792)\r\n* Shm: fix unused value (4af0954a)\r\n* fix: Use `std::chrono` consistently (8960ce94)\r\n\r\n---\r\n\r\n**Contributors**: @rbx, @dennisklein, @ChristianTackeGSI, @knopers8, @ktf\r\n\r\n**Full Changelog**: https://github.com/FairRootGroup/FairMQ/compare/v1.4.56...v1.5.0",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.5.0",
        "name": "v1.5.0",
        "release_id": 94785758,
        "tag": "v1.5.0",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/94785758",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/94785758",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rbx",
          "type": "User"
        },
        "date_created": "2023-01-19T15:19:30Z",
        "date_published": "2023-01-19T15:25:38Z",
        "description": "#### Bugfixes\r\n\r\n- Shm: detect and error on duplicate region IDs (by @rbx in 42ce691f57847383e6270e33a8927f34aad59931)\r\n- Examples: fix incorrect config (by @rbx in a982d60ed78ed9e9aa4f66e000fc5c17827ed797)\r\n\r\n#### Misc\r\n\r\n* Shm: improve debug output (by @rbx in c3b273cec0fd2c0266078976bf06e28acc2bf5d9)\r\n* Test: add test for externally created region (by @rbx in 16275db12590f1a6c81aaca9e9bed5113a39d693)\r\n\r\n**Full Changelog**: https://github.com/FairRootGroup/FairMQ/compare/v1.4.55...v1.4.56",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.4.56",
        "name": "v1.4.56",
        "release_id": 89561660,
        "tag": "v1.4.56",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.4.56",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/89561660",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/89561660",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.4.56"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rbx",
          "type": "User"
        },
        "date_created": "2022-09-09T13:47:19Z",
        "date_published": "2022-09-09T13:51:50Z",
        "description": "#### Bugfixes\r\n- Shm: fix an issue in shmem region initialization, where a local region object would get created but immediately destroyed because a remote region object with the same ID already exists. Furthermore, the existing object would get marked as local, but with wrong configuration, leading to potential unexpected behavior. (by @rbx in https://github.com/FairRootGroup/FairMQ/commit/af0d668951f6f9dfbcc164e3a09ace1fe1a9f84e)\r\n#### Misc\r\n* region example: add options for testing with externally-created regions by @rbx in https://github.com/FairRootGroup/FairMQ/commit/f5c46ce018486c5e9eb4ef0b0cef582a4ed9d709\r\n* shm: add some debug output by @rbx in https://github.com/FairRootGroup/FairMQ/commit/072d7cb7441d783497eded39ba7b09093e6f6a41\r\n\r\n**Full Changelog**: https://github.com/FairRootGroup/FairMQ/compare/v1.4.54...v1.4.55",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.4.55",
        "name": "v1.4.55",
        "release_id": 76719341,
        "tag": "v1.4.55",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.4.55",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/76719341",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/76719341",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.4.55"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rbx",
          "type": "User"
        },
        "date_created": "2022-09-06T06:18:48Z",
        "date_published": "2022-09-06T06:23:05Z",
        "description": "#### Bugfixes\r\n* fix(shm): Fix incorrect parameters when mapping regions by @rbx in https://github.com/FairRootGroup/FairMQ/commit/d105960444ab7c36625aa24875d6a163ecac986a\r\n\r\n**Full Changelog**: https://github.com/FairRootGroup/FairMQ/compare/v1.4.53...v1.4.54",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.4.54",
        "name": "v1.4.54",
        "release_id": 76341899,
        "tag": "v1.4.54",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.4.54",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/76341899",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/76341899",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.4.54"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rbx",
          "type": "User"
        },
        "date_created": "2022-08-21T16:34:44Z",
        "date_published": "2022-08-21T17:31:56Z",
        "description": "#### Bugfixes\r\n* fix(shm): race/deadlock in region locks by @rbx in https://github.com/FairRootGroup/FairMQ/commit/da5cb344168d364e9f8cb6f0e6991e7eafe86930\r\n\r\n**Full Changelog**: https://github.com/FairRootGroup/FairMQ/compare/v1.4.52...v1.4.53",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.4.53",
        "name": "v1.4.53",
        "release_id": 74937355,
        "tag": "v1.4.53",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.4.53",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/74937355",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/74937355",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.4.53"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rbx",
          "type": "User"
        },
        "date_created": "2022-07-11T07:22:41Z",
        "date_published": "2022-07-11T07:26:30Z",
        "description": "#### New\r\n* shm: Monitor: Add region/segment presence check function by @rbx in https://github.com/FairRootGroup/FairMQ/pull/431\r\n#### Misc\r\n* Reduce severity of the missing channel cfg on command line by @rbx in https://github.com/FairRootGroup/FairMQ/commit/226733c65384b97954cbaa770732ea7ccfcfb01d\r\n\r\n**Full Changelog**: https://github.com/FairRootGroup/FairMQ/compare/v1.4.51...v1.4.52",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.4.52",
        "name": "v1.4.52",
        "release_id": 71672433,
        "tag": "v1.4.52",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.4.52",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/71672433",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/71672433",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.4.52"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rbx",
          "type": "User"
        },
        "date_created": "2022-05-28T12:48:08Z",
        "date_published": "2022-05-28T12:53:36Z",
        "description": "#### Bugfixes\r\n- fix(shm): Add `nullptr` check on segmentInfo to `Monitor::ResetContent()` by @rbx in #429\r\n- fix(shm): `Monitor::ResetContent()`: Reset user data after recreating the management segment, to avoid bumping into locked interprocess locks. by @rbx in #429\r\n- fix(shm): `Monitor::Cleanup()`: open management data as read only, to avoid bumping into locked interprocess locks. We only read the segmentInfo/regionInfo (read-only) to find out which segments are present and delete everything unconditionally in the next step. by @rbx in #429\r\n#### Misc\r\n- feat(shm): Add more debug output. by @rbx in #429\r\n\r\n**Full Changelog**: https://github.com/FairRootGroup/FairMQ/compare/v1.4.50...v1.4.51",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.4.51",
        "name": "v1.4.51",
        "release_id": 68071099,
        "tag": "v1.4.51",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.4.51",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/68071099",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/68071099",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.4.51"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dennisklein",
          "type": "User"
        },
        "date_created": "2022-03-21T17:42:23Z",
        "date_published": "2022-03-21T17:51:51Z",
        "description": "The `v1.4` milestone is now three years in the making and would not have been possible without the invaluable discussions, feedback and contributions by the members of the [AliceO2 team](https://github.com/AliceO2Group/)!\r\n\r\n* State machine changes compared to `v1.3`: Split `INITIALIZING` state into Init+Bind+Connect, removed `PAUSE` state, see [updated diagram](https://github.com/FairRootGroup/FairMQ/blob/v1.4.50/docs/Device.md#13-state-machine)\r\n* Development of the SDK component and DDS plugin which is now **deprecated** in this repo, see [:loudspeaker: New home for SDK and DDS plugin](https://github.com/FairRootGroup/FairMQ/discussions/392)\r\n* This release provides consistent namespaced typenames and headers, see [:loudspeaker: Cleanup of non-namespaced typenames and headers](https://github.com/FairRootGroup/FairMQ/discussions/423)\r\n* Ofi transport (EXPERIMENTAL): Ofi C++ bindings split off into [asiofi](https://github.com/FairRootGroup/asiofi) project\r\n* Require C++17 compiler\r\n\r\n**New release procedure**: Starting with `v1.5.0` FairMQ adopts a semantic versioning release procedure. This basically means that FairMQ will make more use of its major and minor version components as well as ship *release notes* on every release. In addition, releases are no longer distinguished into *testing* or *stable* categories.\r\n\r\n## Changelog:\r\n### `v1.4.50` - 2022-03-21\r\n#### Changed/Removed\r\n* feat: Remove `--max-run-time` option (5d45d8926)\r\n* fix(Device): Spawn rate logger thread only if needed (cb5029f82)\r\n#### Deprecated\r\n* build: Deprecate components `dds_plugin`, `sdk`, `sdk_commands` (b7474ae13)\r\n#### Bugfix\r\n* fix(Device): Warning about narrowing conversion (27277b11b)\r\n* fix(control): Honor `SIGINT` and `SIGTERM` in more places (#421)\r\n\r\n### `v1.4.49` - 2022-02-28\r\n#### Bugfix\r\n* shm: check region size when opening existing (b747a8787)\r\n* Shm: fix number of region events (8efe7adf0)\r\n* Shm: bring back thread-safety for `fRegions` (intra-process) (29827f042)\r\n* Skip error message only for tcp (fa0bf96eb)\r\n\r\n### `v1.4.48` - 2022-02-02\r\n#### Changed/Removed\r\n* shm: Add size to UnmanagedRegion debug output (4f9aeda8e)\r\n* shm: remove UR queues on ResetContent (92a56c26b)\r\n* shm: monitor: disable number of msgs in the ack queue output (2f82eb4f0)\r\n* shm: allow `monitor::ResetContent` to cleanup after a crash (1a75141fc)\r\n\r\n### `v1.4.47` - 2022-01-28\r\n#### Changed/Removed\r\n* Avoid fixed ports in the test suites (f4d39d224)\r\n* Don't use to-be-deprecated names (bfd08bb33)\r\n#### New\r\n* GUI Controller (ad894c79c)\r\n#### Bugfix\r\n* use `[[maybe_unused]]` for values used in assertions (f15f66985)\r\n\r\n### `v1.4.46` - 2022-01-13\r\n#### Changed/Removed\r\n* modify keep-alive example executable a bit, make it configurable (f6bade32b)\r\n#### Bugfix\r\n* shm: fix double unlock() (f79a0714b)\r\n* shm: keep mng segment around when skipping cleanup (ddf9bc727)\r\n\r\n### `v1.4.45` - 2022-01-10\r\n#### Changed/Removed\r\n* shm: reduce contention on region events (c04958e2a)\r\n\r\n### `v1.4.44` - 2021-12-17\r\n#### Changed/Removed\r\n* Do not catch and rethrow exception from state handlers (0eaea3c66)\r\n* Avoid accessing Device.fChannels directly, use getters (dbdf17c66)\r\n* refactor: deduplicate more zmq/shmem code (953c4a75c)\r\n* consolidate UnmanagedRegion options (d630fbb1e)\r\n* simplify region cleanup (eef42d2de)\r\n* extend region config (80ed45df6)\r\n* shm: integrate mtx and cv into management segment (1839f7e8c)\r\n* shm: always open_or_create segment (eb4620b1e)\r\n#### New\r\n* feat: Add `Device::GetNumSubChannels(channel)` (a3bb5fb4b)\r\n* Add configurable default snd/rcv timeout (f24dee33c)\r\n* shm: add APIs for implementing keep-alive process (692576a5b)\r\n#### Bugfix\r\n* fix: install `tools/Exceptions.h` (856780f88)\r\n* Do not print logo, if not requested (acfb49541)\r\n\r\n### `v1.4.43` - 2021-10-19\r\n#### Changed/Removed\r\n* Define copy/move ctors and assignment ops (ad824b4de)\r\n* refactor: Deduplicate `GetConstant()` (7329cb442)\r\n#### Deprecated\r\n* fix: Deprecate `Message::Close` because it is really a dtor (b8503bfbd)\r\n#### New\r\n* feat: add options to control allocation attempts (1449166d4)\r\n* feat: add tool for noncanonical input (5fe2f53c7)\r\n* feat: Add new `assertm` macro (8796ce5b2)\r\n* feat: Add new `GetNumberOfConnectedPeers()` API (fda8126a4)\r\n* feat: Add interactive controller button to print connected peers (ebcbe2dde)\r\n#### Bugfix\r\n* Fix compiler warnings (293401658, 1ac30b51b, f33c597f3, 310204a89, 1ee9d2d22, cf9b45cd7, 9590b5be4, 597d88277, 153dcfab9, 36600dce2, 1a5d0eddb, e84a16da8)\r\n* fix(pmix): Avoid deprecated value (efca8e0ad)\r\n* fix(shm): fix regression in debug mode data (d7fb01908)\r\n#### Buildsystem/CI\r\n* ci: Add macos-11-arm64 (apple-clang-13) build (55a2cfcc3)\r\n\r\n### `v1.4.42` - 2021-09-20\r\n#### Deprecated\r\n* fix: Deprecate static string helper (b442483dc)\r\n#### Bugfix\r\n* fix: `-Winfinite-recursion` (727a709af)\r\n* Shm: Fix `SetUsedSize()` (e484bf457)\r\n\r\n### `v1.4.41` - 2021-09-07\r\n#### Changed/Removed\r\n* feat(tools): Move the error code to the Tools target (9cbaf7e0f)\r\n#### Deprecated\r\n* refactor: Prepare deprecation of non-namespaced types and headers (8e6c50e7c)\r\n   * `<FairMQ*.h>` headers will be deprecated in the future. Use `<fairmq/*.h>` instead!\r\n   * `::FairMQ*` typenames will be deprecated in the future. Use `fair::mq::*` instead!\r\n#### New\r\n* feat(tidy): Add new `fairmq-tidy` tool (db727092c, dff2b4b7d)\r\n* Implement shmem msg zero-copy (bce380d87)\r\n#### Bugfix\r\n* fix: First round of using new non-namespaced typenames (4e8f247a0)\r\n* shm: reimplement alignment (815b2f1d7)\r\n#### Buildsystem/CI\r\n* build: Have color output depend on a common switch `DISABLE_COLOR` (d392f60c0)\r\n* build: Use `fairmq-tidy` on our own codebase when `RUN_FAIRMQ_TIDY=ON` (24fbf9494)\r\n* Extend test for empty messages (c57410b82)\r\n\r\n### `v1.4.40` - 2021-07-30\r\n#### Bugfix\r\n* Protect access to options container (db0500fb2)\r\n\r\n### `v1.4.39` - 2021-07-16\r\n#### Changed/Removed\r\n* shm: optimize monitor heartbeats (28a887a45)\r\n* shm: improve exception handling (37c059177)\r\n* feat(sdk): Remove unused fairmq executable (09d257410)\r\n* feat: Require DDS `3.5.13.7` (1df338b26)\r\n* feat: Drop public dependency to Boost.Asio and use standalone asio (9585c20b7, 0c4921d65)\r\n* feat(ofi): Require asiofi 0.5 (1007de8e4)\r\n#### New\r\n* Add `--shm-mlock-segment-on-creation` option (a6193a380)\r\n* Add `--shm-zero-segment-on-creation` option (03ba9eb55)\r\n* feat: Add new function `GetEnabledTransports()` (e3d3be888)\r\n* feat: Add `<fairmq/FwdDecls.h>` (479d6e071)\r\n#### Bugfix\r\n* SDK: Add missing header <thread> (ce0a05225)\r\n* Examples: Fix DDS agent log retrieval (f2d7bbeb2)\r\n* Fix clang-tidy warnings (ccbd62213, e1b229522, acf63d3c1, 9444de586, 6aeac265e, f25cca207, c847a7ca0, 882edbbdb)\r\n* shm: throw `TransportError` if could not lock region (a8bdb9116)\r\n* Add empty msg check for transport compatibility checker (4dbb5535c)\r\n* shm: avoid meta data copy on recv and fix its alignment (5c9ba5e5b)\r\n* Fix stack-use-after-scope (4fdf9d340)\r\n* Fix heap-use-after-free (ac3293fcc)\r\n* shmmonitor: handle missing segmentInfos (c5e40fd18)\r\n* fix(sdk): Silence boost warnings (e2de214a1)\r\n* fix(examples/dds): Restore infinite loop (3702d3bfc)\r\n* fix(plugins): Avoid double device control releases (e2452fa7e)\r\n#### Buildsystem/CI\r\n* extern/googletest: Bump for GCC11 support (bac5b90d8)\r\n* extern/asio: Bump and require `v1.18.1` (d15bc17b1)\r\n* CMake: Remove cotire dependency (ed78ccd29)\r\n* Bundle and use FairCMakeModules (575054a11)\r\n* CMake: Set CXX language level via `target_compile_features()` (7616b0b0a, 42606f9f1)\r\n* Add `codemeta.json` (947c4a73a)\r\n* Add `codemeta_update.py` (415232b56)\r\n* CI: Add a fedora 34 (gcc 11) check (9c3478252)\r\n* CI: Add ubuntu 20.04 (gcc 9) check (2b438452a)\r\n* CMake: Do not unconditionally override settings without good reason (2e655823e, ab54668ae)\r\n* build: Do not hardcode include dirs (8bf9e1d0a)\r\n* build: Fix default for `BUILD_TESTING` (f413aa197)\r\n* test(sdk): Rename `sdk/test_topo.xml` to something less confusing (08d72d492)\r\n* build: Pick shared flatbuffers lib first (8859c563a)\r\n* build: Revert removal of asio find module (170557ace)\r\n\r\n### `v1.4.38` - 2021-05-20\r\n#### Changed/Removed\r\n* runDevice: remove const from getDevice parameter (a7dbeadd1)\r\n#### New\r\n* shm: add monitor method to retrieve free segment memory (021c1b1c4)\r\n#### Bugfix\r\n* shm: revert some changes from c85d6e0 that introduced a race (9bf908fb5)\r\n#### Buildsystem/CI\r\n* reduce noise in examples (aaf74ad93)\r\n\r\n### `v1.4.37` - 2021-05-07\r\n#### Bugfix\r\n* Fix Ofi interface (e6f67b365)\r\n\r\n### `v1.4.36` - 2021-05-07\r\n#### Changed/Removed\r\n* Improve Events API (6dfea32ae, 091d0824d)\r\n* PluginManager: Do not load built-in plugins via dlopen/dlsym (057ba0377)\r\n* use thread local cache to avoid interprocess lock on shm `GetData` (f7ba3052a)\r\n* improve message counter cache line use (ef5b3c782)\r\n* shm: reduce shm contention when dealing with ack queues (c85d6e079)\r\n#### New\r\n* Add `operator<<` for `fair::mq::Transport` (ed2dcedf0)\r\n* Add `GetType()` to `UnmanagedRegion` (9defa7162)\r\n* shmmonitor: add severity setting (b67b80e0a, 8b4056e40)\r\n* add mlock/zero options to unmanaged region (857aa84fa)\r\n#### Bugfix\r\n* Fallback to Boost.Filesystem on GCC 8 (9724f184f)\r\n* Fix `-Wunused-result` (a90dbf64d)\r\n* shm region cache: fix multiple sessions issue (2ca62d06d, 87e0ca545)\r\n* shm: check result of region acquisition (8a2641d84)\r\n* Check transport type of msg and corresponding region (c6a6a5f21)\r\n* shm: eliminate race/deadlock in region subscriptions (2c89b2485)\r\n* region example: fix msg counter (4e466514d)\r\n\r\n### `v1.4.35` - 2021-04-08\r\n#### Bugfix\r\n* Fallback to `<boost/filesystem>` on GCC 7 (ea9aede65)\r\n\r\n### `v1.4.34` - 2021-04-08\r\n#### Changed/Removed\r\n* shmmonitor: optimize startup to avoid repeated start (72175e575)\r\n* shmmonitor: use fairlogger (be5556561)\r\n* shm: reduce delay between monitor daemon launch & HBs (097646533)\r\n#### New\r\n* Introduce `<fairmq/Device.h>` (cef6d0afc)\r\n* Introduce `<fairmq/runDevice.h>` (978191fa6)\r\n* shmmonitor: allow getting shmids based on session/userid (30e81d58f)\r\n* shmmonitor: distinguish daemon from monitor mode (orthogonal) (522840793)\r\n* shmmonitor: enable read only access (efd42075a)\r\n* shmmonitor: add session name and creator id to the output (effba534f)\r\n* shmmonitor: daemon output to file if `FAIRMQ_SHMMONITOR_VERBOSE` is true (9144258b8)\r\n* Add tools: `StrStartsWith`, `StrEndsWith` (2602f5358)\r\n* shmmonitor: add `--list-all` (5facc441b, f3bc9e05a)\r\n#### Bugfix\r\n* Fix aggregate initialization issue before C++20 (4b6cf8b18)\r\n#### Buildsystem/CI\r\n* CI: Run clang-tidy (21d6cf983, 68ceaba50)\r\n* CI: Collect DDS logs on error (b4aeb320e)\r\n\r\n### `v1.4.33` - 2021-03-23\r\n#### Changed/Removed\r\n* Provide a better syntax for `--channel-config` (ce4584b3d, cb4335e59)\r\n#### New\r\n* shm: make `shmId` also available as `uint64_t` (edbdc5733)\r\n* Add `--shm-no-cleanup` option (c8ad684b1)\r\n#### Bugfix\r\n* shm: Make sure all region events are fired (9b48b31a7)\r\n* shm: Make sure no event notifications are missed (0fd2fcadc)\r\n* Fix incorrect channel index passed to `OnData` callback (fc2241ece)\r\n* shm: Improve error message when segment cannot be opened (62438bd99)\r\n* shm: handle shrink failure gracefully (bffe74c5c)\r\n#### Buildsystem/CI\r\n* CI: Adapt to new alfaci build hosts (72f319e27)\r\n\r\n### `v1.4.32` - 2021-03-02\r\n#### New\r\n* Add optional file output to `FairMQSink` (bbc1dd460)\r\n#### Bugfix\r\n* Warn on unknown `--channel-config` args (832781094)\r\n\r\n### `v1.4.31` - 2021-02-19\r\n#### Bugfix\r\n* Fix regression in shmmonitor (93dff3c5a)\r\n\r\n### `v1.4.30` - 2021-02-10\r\n#### New\r\n* shmmonitor: non-interactive mode checks and quits (2b3e38d9a)\r\n\r\n### `v1.4.29` - 2021-01-25\r\n#### Changed/Removed\r\n* Bump C++ standard requirement to C++17 (636846fcd)\r\n* Remove deprecated methods in `fair::mq::Device` (ea746b17d):\r\n   * `void Pause()`\r\n   * `bool ChangeState(int)`\r\n   * `void WaitForEndOfState(fair::mq::Transition)`\r\n   * `void WaitForEndOfState(const std::string&)`\r\n   * `bool CheckCurrentState(int)`\r\n   * `bool CheckCurrentState(const std::string&)`\r\n* Rename `TransferResult` to `TransferCode` (29f45fa77)\r\n* Replace `tools::make_unique` with `std::make_unique` (751c53171)\r\n* Remove custom implementation for enum hashing (c5487a11e)\r\n#### New\r\n* DeviceRunner: check `FAIRMQ_SEVERITY` env var for severity (749d28a3b)\r\n* zmq: implement alignment (6815c9c17)\r\n#### Bugfix\r\n* zmq: correct accounting for msg size > 2GB (afadbb53e)\r\n* Fix `shmem::Message::SetUsedSize(0)` (c6b13cd3a)\r\n\r\n### `v1.4.28` - 2020-12-04\r\n#### Bugfix\r\n* shm: do mlock/zeroing under shmem lock (f46d446d5)\r\n\r\n### `v1.4.27` - 2020-11-25\r\n#### Changed/Removed\r\n* Let single message methods also return `int64_t` (bb1ce794b)\r\n* Bump DDS version to `3.5.3` (multiple sessions support) (0806720f6)\r\n#### Bugfix\r\n* DDS command UI: return `EXIT_FAILURE` on errors (a14502242)\r\n* Apply suggestions from `-Wrange-loop-analysis` (e39d17d09)\r\n* shm: ensure local segments are complete for region subscriptions (db0937f33)\r\n#### Buildsystem/CI\r\n* CI: Update macOS builds (73377c510, f9219dab6, c51e88e11)\r\n* extern/asio: Bump to `1.18.0` (9e2373b55)\r\n\r\n### `v1.4.26` - 2020-10-21\r\n#### Changed/Removed\r\n* FairMQChannel: remove deprecated methods (3ab10ced7)\r\n* Remove thread-safety from channel methods (e332e20db)\r\n* FairMQChannel: replace `ResetChannel()` with `Invalidate()` (cf004f69b)\r\n* shmem: fail earlier if given an unsupported socket type (d03a504cc)\r\n* SDK: Remove instance limit from `DDSSession` (f14f50758)\r\n#### New\r\n* Properties: add output support for shorts (0e5978b16)\r\n#### Bugfix\r\n* Make BasicTopology actually movable (8dd0b25c0)\r\n* DeviceRunner: Set log severity only if one was provided (49d8a1b4d)\r\n#### Buildsystem/CI\r\n* Improve PMIx Package Finding on Debian (7edf43691)\r\n\r\n### `v1.4.25` - 2020-09-23\r\n#### Bugfix\r\n* Update return types in `ofi::Socket` (1b30f3ac1)\r\n\r\n### `v1.4.24` - 2020-09-22\r\n#### Changed/Removed\r\n* Adjust transfer methods behaviour when interrupted (6932f88c8)\r\n#### Bugfix\r\n* Workaround `Cpp17MoveInsertable` issue on xcode 12 (35c7959c5)\r\n#### Buildsystem/CI\r\n* CI: Run macOS checks on newer environment (5e6ad4722)\r\n\r\n### `v1.4.23` - 2020-09-08\r\n#### Changed/Removed\r\n* Move `fairmq-dds-command-ui` to SDK (2ac27905e)\r\n* Improve error reporting in SDK/fairmq-dds-command-ui (fe9b87e4e)\r\n* Shm: Refactor to localize segment access (3b2d2a0ac)\r\n* Remove built-in devices from the main lib (12e6a874d)\r\n#### New\r\n* Shm: Provide segment/msg debug infos (70a583d08, b63f31d0e)\r\n* Shm: Add `Monitor::GetDebugInfo()` (72a45f78b)\r\n* Shm: configurable allocation strategy (73109fe6d)\r\n* Shm: Verbosity switch for Cleanup methods (b126ede45)\r\n* Shm: initial multiple segments support (266843cda, fdbf28936)\r\n\r\n### `v1.4.22` - 2020-08-28\r\n#### Changed/Removed\r\n* Shm message counter: use relaxed/acquire memory ordering (f1d6b1866)\r\n* Avoid unconditional call to `now()` when allocating message (62ed4e5f8)\r\n* Bump FairLogger requirement to `1.6` (be8ab06cc)\r\n#### New\r\n* SDK: Add helpers for AggregatedTopologyState (b5545c157)\r\n* BenchmarkSampler: add alignment parameter (9c27051cd)\r\n* shmmonitor: add output with `-v` (non-interactive) (b0f73017e)\r\n* ShmMonitor: Use FairLogger for timestamp calculation (86a1dd38a)\r\n#### Bugfix\r\n* Shm: Add error handling for mlock (65f951991)\r\n* Fix tag mismatch in topology files (1f0c94f89)\r\n* Retry on EINTR in blocking zmq calls (690e8a037)\r\n\r\n### `v1.4.21` - 2020-07-15\r\n#### Changed/Removed\r\n* SDK: warn if given path translates to no selected tasks (5a7dcd9fc)\r\n#### New\r\n* Add API to extract `ZMQ_EVENTS` from socket backend (e8cc10434, ba3a82b1d, bf909f94d)\r\n* Add `Undefined` and `Mixed` state for use in SDK (a6da208e7)\r\n* SDK: Provide comparison operator for device and topo states (1140c4c6a)\r\n* Shm: add options to zero and/or mlock the segment (beb7766fc)\r\n#### Bugfix\r\n* QC examples: fix incorrect topology path (d5d5c2795)\r\n#### Buildsystem/CI\r\n* Add test for shm transport options (3eca8e9de)\r\n\r\n### `v1.4.20` - 2020-06-30\r\n#### Changed/Removed\r\n* Optimize unmanaged region ReceiveAcks (f885b4618)\r\n* Make shmid an 8-digit hex number (6dd0a4430)\r\n#### New\r\n* Add linger setting for unmanaged region (3364da954, d1c51e0f1)\r\n* Expose `fair::mq::shmem::Monitor::Cleanup()` API (539e5602a)\r\n* BenchmarkSampler: add memset option (afe2dcaa0)\r\n#### Bugfix\r\n* Add missing includes (79489bb50)\r\n* Fix message counter in region example (52c6264fa)\r\n* Handle `out_of_range` when locating `RegionInfo` (812548977)\r\n* Do not attemp to find random port for non-TCP protocols (f70201610)\r\n* Shm: throw if requested message size exceeds total segment size (88bc1f7a0)\r\n#### Buildsystem/CI\r\n* Add `-Og` flag to Debug build (9e2a00294)\r\n\r\n### `v1.4.19` - 2020-06-05\r\n#### Changed/Removed\r\n* Let default shm segm size be multiple of page size (236d5a860)\r\n* Use SHA2 instead of boost::hash to generate shmem id (36d4f3c93)\r\n#### New\r\n* MemoryResource: propagate alignment (a59c902c7)\r\n* Add ability to retrieve `ZMQ_FD` (dd47b34e0)\r\n#### Bugfix\r\n* Fix regression in handling unregistered options (5008fa473)\r\n* Shm: fix incorrect ptr range check (dabc48c21)\r\n* Zmq: let `GetData` of an empty message return `nullptr` (79ca436b7)\r\n#### Buildsystem/CI\r\n* Add a test for unregisted options (5a782e872)\r\n* Add PicoSHA2 dependency (42986e664, bdf895ae9, c60dd9965)\r\n\r\n### `v1.4.18` - 2020-05-25\r\n#### Changed/Removed\r\n* Adjust program options style to disallow guessing (b5bb476b0)\r\n#### Bugfix\r\n* Initiate termination process on `SIGTERM` as well (02692e700, ea7ae0402)\r\n\r\n### `v1.4.17` - 2020-05-20\r\n#### Changed/Removed\r\n* Remove nanomsg transport (a15d59c72)\r\n* Zmq: remove global (static) state, refactor (dbdabd23a)\r\n* Replace `exit()`s with exceptions (b56e32eb1)\r\n* Shm: throw on bad_alloc, option to disable (0d03c76a7)\r\n* Do not handle double `SIGTERM` as abort (20544e1f1)\r\n#### New\r\n* Implement bulk callbacks for unmanaged regions (d22023bcb)\r\n* Alignment part I - Interface and shmem send (53a4d17f8)\r\n#### Buildsystem/CI\r\n* Do not search external GTest by default (b32e04db6)\r\n\r\n### `v1.4.16` - 2020-05-11\r\n#### New\r\n* Implement region events for zmq (999281182, a3afadb82)\r\n* Add `bool FairMQTransportFactory::SubscribedToRegionEvents()` (c8fc5ad33)\r\n* Add `FairMQTransportFactory::GetId()` (e9318dd23)\r\n#### Bugfix\r\n* shmem region subscriptions: fix race condition (59e32437a)\r\n#### Buildsystem/CI\r\n* Add unit tests for regions (8cfc04721)\r\n\r\n### `v1.4.15` - 2020-05-05\r\n#### Bugfix\r\n* Truncate the file used for the region mapping (5a49c5b9b)\r\n* Shmem: Send acks also for local regions (4218c185a)\r\n\r\n### `v1.4.14` - 2020-04-28\r\n#### Changed/Removed\r\n* SDK (EXPERIMENTAL):\r\n   * DDS plugin: refactor to load DDS task id only once (cd83efade)\r\n   * DDS plugin: improve error message on unexpected update (96348b846)\r\n   * DDS plugin: Update property instead of set to avoid errors (c7b1304a2)\r\n   * SDK: refactor subscription to allow reuse (c3127f22e)\r\n   * DDSCommandUI: include path argument in `ChangeState` (adc4688f9)\r\n   * Commands: Add task id to subscription status cmds (274ba5ec0)\r\n   * SDK: track state change (un-)subscriptions (036561ab3)\r\n* QC ex: rename qc devices, granular state control (46014118f)\r\n* Plugin manager: extent lifetime of DLLs (5788daa41)\r\n#### New\r\n* SDK (EXPERIMENTAL):\r\n   * Add `SubscriptionHeartbeat` command (330687772)\r\n   * SDK: send heartbeats when subscribed to state changes (5721ea951)\r\n* Add region events subscriptions (e1a113aab)\r\n#### Bugfix\r\n* PMIx plugin: Fix Commands API usage (7cbd15434)\r\n\r\n### `v1.4.13` - 2020-03-24\r\n#### Changed/Removed\r\n* Detect network interface of the default route without use of ip (15de80cfd)\r\n* SDK (EXPERIMENTAL):\r\n   * SDK: update `DDSTopology::GetTasks()` (50dacbcdd)\r\n   * SDK::DDSSession: remove channel id to task id association (0e72a9bf5)\r\n   * SDK: Add garbage collection for completed ops (e853d121b)\r\n   * Use SDK in dds-command-ui (e221242f9)\r\n   * Add session id to DDS commands in dds/qc examples (fcd102299)\r\n   * SDK Commands: remove heartbeat commands (c1719eb28, f00519b99)\r\n   * DDS Command UI: remove direct DDS dependency (ced67d895)\r\n   * DDS Plugin: Simplify subchannel bookkeeping (539b088ad)\r\n   * SDK: Refactor `StateChangeOp` and add path parameter (a20ac7af0)\r\n* DDS example: Revert the session renaming (21835cc10)\r\n* Do not report interruption by system call as error (a545bee3b)\r\n#### New\r\n* SDK (EXPERIMENTAL):\r\n   * SDK: Allow passing path to `DDSSession::SendCommand` (f42945b3a)\r\n   * SDK: Add `DDSTopology::GetTasksMatchingPath` (25658370f)\r\n   * SDK: Add `Topology::AsyncSetProperties` (1c8ad03f3)\r\n   * SDK: Add `Topology::AsyncGetProperties` (264a17842)\r\n   * SDK: Allow passing path to `Set/GetProperties` (92af82313)\r\n   * SDK: Support `DYLD_LIBRARY_PATH` from parent env in `sdk::DDSEnv` (3785fd9ff)\r\n   * SDK: Add `WaitForState()` (119cbe37f)\r\n* New QC example (14d6d717a, 8123a6eca)\r\n* Allow undefining LOG macro with FairLogger v1.6.2+ (3d4cd0281)\r\n* Add example and test of a n-to-m topology, incuding sub-channel use (24aabdb85)\r\n#### Bugfix\r\n* SDK (EXPERIMENTAL):\r\n   * SDK: Unsubscribe in the Topology destructor (334d81a1a)\r\n   * DDS plugin: fix exiting timeout (beff0af51)\r\n* Throw an error if shmem receives invalid meta data (0ae53fd7d, 38eb9d22e)\r\n#### Buildsystem/CI\r\n* Fail if build option dependency is not met (c18030030)\r\n\r\n### `v1.4.12` - 2020-01-16\r\n#### Changed/Removed\r\n* Shmem: track number of message objects, throw if non-zero at reset (684e711b8)\r\n#### New\r\n* PMIx: Add commands to plugin and command ui (c290c1689)\r\n#### Bugfix\r\n* shmem: properly initialize received multipart messages (b2e027478)\r\n* Fix CIDs 350455, 350453, 350452, 323467, 350451, 350448, 350447, 321250 (718795360, 38bb14e55, a1e0814a9, b6791856f, b6d9c949a, 692ec4e99)\r\n* Avoid deadlock in FairMQChannel operator=, handle self-assignment (9f8a3553b)\r\n#### Buildsystem/CI\r\n* Extend multipart tests to include single part, transfer across >1 channel (5b5fecc99)\r\n\r\n### `v1.4.11` - 2019-12-13\r\n#### Changed/Removed\r\n* Support and require DDS `3.0` (50be38619)\r\n#### Buildsystem/CI\r\n* Fix AppleClang `10.0.1` support with Boost.Asio <= `1.68` (4d1e7b9cd)\r\n* Silence warning: unused variable 'a' `[-Wunused-variable]` (f195eeac6)\r\n\r\n### `v1.4.10` - 2019-12-09\r\n#### Changed/Removed\r\n* Remove `TransitionTo` from plugin APIs (0f4595b8c)\r\n* DDS plugin: remove static mode (b0b271d1f)\r\n* SDK: Support and require DDS `2.5.100` (f31be6d7a)\r\n#### New\r\n* DDSCommandUI: add support for more commands (5607d4766)\r\n#### Bugfix\r\n* Fix regression in the DDS plugin shutdown handling (073f5e5c0)\r\n\r\n### `v1.4.9` - 2019-11-17\r\n#### Changed/Removed\r\n* SDK (EXPERIMENTAL):\r\n   * SDK: optimize `TryChangeStateCompletion` (44bfbe02e)\r\n   * SDK: Replace for loop with `count_if` (47d9e282d)\r\n   * DDS plugin: Prefix channel properties (9544d9665)\r\n   * SDK: optimize container access (d64169a16)\r\n* Removed deprecated methods from `FairMQDevice` (9d30ff25c):\r\n   * `int SendAsync(FairMQMessagePtr&, const std::string&, int)`\r\n   * `int ReceiveAsync(FairMQMessagePtr&, const std::string&, int)`\r\n   * `int64_t SendAsync(FairMQParts&, const std::string&, int)`\r\n   * `int64_t ReceiveAsync(FairMQParts&, const std::string&, int)`\r\n   * `void WaitForInitialValidation()`\r\n#### New\r\n* SDK (EXPERIMENTAL):\r\n   * sdk: Add `DDSCollection` class (456b65871)\r\n   * sdk: Add `DDSTopology::GetCollections()` and extend `DDSTask` (e1b6b804b, 2973ce035)\r\n   * Add `sdk::GroupByCollectionId(TopologyState)` (acbf57d6f, 870d0deae)\r\n   * Add `sdk:GroupByTaskId(TopologyState)` (4b78c472b)\r\n   * Add flatbuffers-based command format to SDK/plugin (a53e95b5f, 1c1509af3, 7502f4b42, 2f69526c0)\r\n   * Commands: support JSON in addition to binary (72a8e9b33)\r\n   * Docs: Add section on the Controller SDK (0d46ffe01)\r\n* PMIx plugin (EXPERIMENTAL):\r\n   * PMIx: Support integer values (e1134321d)\r\n   * PMIx plugin: Add barriers and fix lookup of multiple keys (caeee626a)\r\n* Add safety check in shmem region location (160ee9d06)\r\n#### Bugfix\r\n* control: Handle InitializingDevice in the ShutdownSequence (92112c812)\r\n* SDK (EXPERIMENTAL):\r\n   * DDS plugin: Do not block the DDS KeyValue callback (e3890a403)\r\n   * DDS plugin: Move Boost dependency to intended target (924320a0a)\r\n   * DDS Plugin: reset channel containers before filling (dc72262af)\r\n   * SDK commands: Link shared flatbuffers if no static avail (f6e3183f4)\r\n* Shmem: Fix handling of empty message parts (85a3a254d)\r\n* Fix shmmonitor daemonization (2c6f43685)\r\n* Shm monitor: fix startup race and enable view-only mode (2ac8f9817)\r\n#### Buildsystem/CI\r\n* CMake: Fix working directory for submodule update command (fa394194e)\r\n* CI: Record DDS logs in error cases for analysis (343605899)\r\n* CMake: Support multiple values for `REQUIRES` in `fairmq_build_option` (ea9ad6466)\r\n* Relax required ZeroMQ version to support the CentOS 7 system package (5fc1c47e2)\r\n* Include empty parts in multipart example/test (dd191551c)\r\n* CMake: Add option `ENABLE_CCACHE` (71325828f)\r\n\r\n### `v1.4.8` - 2019-09-04\r\n#### Changed/Removed\r\n* FairMQ: Require Boost 1.66 (31edf948d)\r\n* SDK (EXPERIMENTAL):\r\n   * Topology: Use `DDSTask` type, remove unused member (8feffe70b)\r\n   * SDK: Require DDS `2.5.46` and support new Tools API (eaa8f5cbd, 33b5a2a34, 0e5f648d2)\r\n   * SDK: Require C++14, CMake `3.11` and bundle asio `1.13.0` (1dec05910)\r\n#### New\r\n* SDK (EXPERIMENTAL):\r\n   * SDK: Implement helper to find most recent running DDS session (8d12b908b)\r\n   * SDK: Implement asio-compliant asynchronous operation helpers (73af0ed78)\r\n   * SDK: Introduce fairmq error category (25539e99f)\r\n   * SDK: Implement `Topology` with asio-compliant async interface (7a0d348bd)\r\n   * SDK: Add getter for agent path (c1a17c97b)\r\n* Tools: Add a copyable SharedSemaphore (5d6184cd1)\r\n#### Bugfix\r\n* SDK (EXPERIMENTAL):\r\n   * SDK: Fix completion signature and catch completion exceptions (0f50abf3d)\r\n   * SDK: Fix race condition which lead to frequent segfaults on destruction (5b47df301)\r\n   * SDK: Fix data races on the local semaphores (1c49dde66)\r\n   * DDS plugin: Wait for `IDLE->EXITING` state-change to be acknowledged (8a2c7fb60)\r\n* fairmq: Fix `-Wdefaulted-function-deleted` (0d182dc18)\r\n#### Buildsystem/CI\r\n* Execute test for DDS example only if DDS was found (2fc93994d)\r\n* Example.DDS: Support DDS `2.5.25+` CLI (7f0237d97)\r\n* Print install prefix in cmake summary (be06a5629)\r\n* Add support for fairlogger dependencies (02b20c320)\r\n* CMake: Add find module for asio (d6d9312e5)\r\n* CMake: Bundle GTest (88ff5d8fc)\r\n* CMake: Do not use git version in install tree (f73a6d71e)\r\n* CMake: Fix submodule update command (75a3a80ac)\r\n* CMake: Issue a warning if build option requirements are not met (1055f035f, 46e0796e7)\r\n* Tests.SDK: Add optional DDS Tools API stability tests (da28b8549)\r\n* CMake: Add config for `--graphviz` (3f5374820)\r\n\r\n### `v1.4.7` - 2019-07-29\r\n#### Changed/Removed\r\n* PluginServices: Do not throw if device control cannot be released (008be3612)\r\n#### New\r\n* SDK (EXPERIMENTAL):\r\n   * SDK: Track channel to task id association (fd282fa95)\r\n   * SDK: Improve error handling in case state-change fails on a device (7b773cde5)\r\n   * DDS plugin: Synchronize FillChannelContainers and DDSKeyValue updates (9cbccface)\r\n   * Tests.SDK: Add another test (07fe02a0a)\r\n   * DDS plugin: Automatically set session and device id if not provided (1bb77bf47)\r\n#### Bugfix\r\n* Example.DDS: Make example topologies pass xml validation (1fa82f5f2)\r\n#### Buildsystem/CI\r\n* Example.DDS: Run example as unit test (7316b0e7f)\r\n\r\n### `v1.4.6` - 2019-07-26\r\n#### Changed/Removed\r\n* Remove deprecated `*Async()` methods (73ccefa4c)\r\n* Remove unused methods from `FairMQProgOptions` (f46803a8b)\r\n* FairMQChannel: defaults values, copy-ability (fbb003b50)\r\n* Remove FairMQChannel from parser, implement bulk operations (bf8ec968e)\r\n* only allow `a-zA-Z0-9-_[]#` as channel name characters (3db32b03d)\r\n* Extract States & Transitions to own header, use in plugins (4487b81de)\r\n* Extract state queue into own class. Use in device, plugins (f515eb110)\r\n#### Deprecated\r\n* Deprecate `Channel::GetChannelX()` in favor of `Channel::GetX()` (3538d9f41)\r\n#### New\r\n* New component SDK (EXPERIMENTAL), `-DBUILD_SDK` (3da5f4d5d, fd682c339, 1a93da5be, 90496c89f, cfcdd666b, 53be96d93, 44da054e7, b5da31498, eb9dcdd1f, a9b478875, 7aa95fcd9, 5a7bf68c8, 152c8431c, 8aad6c062, b58f6ede7, 18dc536f3, cf26dd6aa, 8789664cf, be022cfab, bc98ab1ee, a93840b24, d70a20344, 388b1be05, dc5527231, 5d535163f, ac8cd1991, 5ab328b01, 363576496, 377eaf2bb, 6208cbb50, 98aeb16dc):\r\n   * SDK: Require DDS `2.5.20` (de4fca177)\r\n   * DDS plugin: Implement `--control external` (f7cdf5ee2)\r\n   * DDS plugin: Do not auto-transition after Initializing (b54df715e, 6c07920fc)\r\n   * SDK: Add convenience header `<fairmq/SDK.h>` (3f655e330)\r\n* Shmem region: support huge pages via path to hugetlbfs mount (0e35f1cb2)\r\n* `fairmq/ProgOptions`:\r\n   * Add `GetProperties()` (5646d531f)\r\n   * Add `*Property` methods to replace `*Value` methods, simplify options helper (fe241fe9e)\r\n   * Add `SetProperties()` (29313bbec)\r\n   * Add `DeleteProperty()` (4ce378b6b)\r\n   * Add `UpdateProperty/ies()` (7c9744760)\r\n* Add built-in config plugin (cba6d1978)\r\n* Subscribe `DeviceRunner` for config properties (4281d7b27)\r\n* Add `PluginServices::DeleteProperty` (7bea2bc0e)\r\n* `fairmq-dds-command-ui`:\r\n   * Introduce wait mode (66c01f2cd, d966a0a99, 14980d748)\r\n   * Example.DDS: Add start script (b53691c8a, d4f96db69, 5e8a44234, ff581985f)\r\n* Implement `Device::TransitionTo()` and test it (74d301a16, 5256e7c58)\r\n* Tools: Introduce semaphore (99ed61a58)\r\n#### Bugfix\r\n* Include definitions of `constexpr` members in cxx (7c13503e2)\r\n* Declare `operator<<` for `boost::any` in boost namespace (7486249c1)\r\n* Test.PluginServices: Fix -Wdeprecated-copy (051f064c6)\r\n* Tools: Fix various clang-tidy warnings (4351b98d8, 69268eecf)\r\n* ProgOptions: Fix minor things (12f05355d)\r\n* Fix `WaitForState(string stateName)` (418d42b06)\r\n* Clear channels & transports containers in `Reset()` (937c9e892)\r\n* Initialize initialization timeout in `InitWrapper()` (48e04b636)\r\n* Fix -Winconsistent-missing-override (a60edc43d)\r\n* Fix DDS example (6e353d78b, e3d39f39f, 790de84bb, 7002dcbca, 2c4a6674d)\r\n* Tests.Message: Fix race condition (a65f0e677)\r\n* Fix various clang-tidy warnings (499ffcd30)\r\n#### Buildsystem/CI\r\n* Add additional test for running device with plugins without DeviceRunner (5271d4236)\r\n* Add test for property accessors (7bea2bc0e)\r\n* Add tests for property conversions and subscriptions (4cefb9fb5)\r\n\r\n### `v1.4.5` - 2019-07-02\r\n#### Changed/Removed\r\n* Require DDS `2.4` (3358a2ba1)\r\n#### New\r\n* Docs: Add section about plugins (374eb8403)\r\n#### Buildsystem/CI\r\n* CMake: Export build type and cxx flags (479c16a8f)\r\n* CMake: Add Boost version requirement of DDS (a866c6d93)\r\n* CMake: Support Boost `1.70` config mode (09853e303)\r\n* CMake: Support FairLogger `v1.5.0` (4d53b7c02)\r\n\r\n### `v1.4.4` - 2019-06-13\r\n#### New\r\n* Add array variant of `fair::mq::tools::make_unique()` (9b326c7a7)\r\n* SHMEM transport: Batch Region ack messages (2ed217755)\r\n* Print channel name in error log (40f6db430)\r\n#### Changed/Removed\r\n* Allow `PluginServices::SetProperty` in Ready state (7b16c33cc)\r\n#### Bugfix\r\n* Handle invalid transition to init in the control plugin (9b4c5deb0)\r\n#### Buildsystem/CI\r\n* Extend Readout example (7e6eb382d)\r\n* CMake: Set policies by version (f8f997abe)\r\n* CMake: Support running static analysis (660420e4f)\r\n* DDS plugin: Remove unused dependency (99c8d3319)\r\n\r\n### `v1.4.3` - 2019-04-29\r\n#### New\r\n* OFI transport (EXPERIMENTAL):\r\n   * Add experimental static size mode, `--ofi-size-hint` option (3582091b1)\r\n\r\n### `v1.4.2` - 2019-03-21\r\n#### Changed/Removed\r\n* OFI transport (EXPERIMENTAL):\r\n   * Require asiofi `v0.3.1` (fb42b1e2f, 2457094b6)\r\n   * Try to reconnect on refused connection (a8f1a4dfd)\r\n* Use Asio to launch processes in `fair::mq::tools::execute` (922f7e9a9)\r\n#### New\r\n* Allow creating region with a callback with default transport (44a9946ea)\r\n* Extending `FairMQParts` by a constructor taking list of `FairMQMessagePtr` (696257fd4)\r\n* Process tools: add print helper, support signals (ef4d6a331)\r\n#### Bugfix\r\n* Fix broken pipe errors in `tools::execute` (cdc1ba084)\r\n* Fix mismatch of docs/API, wrong return value (6809d60fa)\r\n* OFI transport (EXPERIMENTAL): Fix recv logic (cc8fd7302)\r\n#### Buildsystem/CI\r\n* Extend tests of error cases (dd02c01c3)\r\n* Run multipart example with ofi (90fdcc26b)\r\n\r\n### `v1.4.1` - 2019-03-06\r\n#### Buildsystem/CI\r\n* Fix regression in exporting required dependency components\r\n\r\n### `v1.4.0` - 2019-03-06\r\n#### Changed/Removed\r\n* Remove obsolete dependency to boost signals v1 (e2e476ba1)\r\n* Load dynamic plugins with `RTLD_GLOBAL` flag (0c54aab19)\r\n* State machine changes (fc94342db, ec519cb31, d9edcad84):\r\n   * Split `INITIALIZING` state into Init+Bind+Connect\r\n   * Remove `PAUSE` state\r\n   * Convert state/transitions to enum classes (CamelCase)\r\n   * Transition to a state only once previous handler is complete\r\n   * Add `CompleteInit` transition to notify `Initializing` state\r\n* Remove obsolete `FindFlatBuffers.cmake` (a670b4bbf)\r\n* OFI transport (EXPERIMENTAL):\r\n   * Depend on asiofi `v0.2.0` (4d7a1c81c, fc778ab3b)\r\n   * Drop protobuf dependencies (03912e86f)\r\n   * Deactivate control band monitor socket (91025cbc8)\r\n   * Require C++14 (35dd9578a, 9ae48c21f)\r\n* Decrease severity of config dump from `info` to `debug` (9ffaa5518)\r\n#### Deprecated\r\n* Deprecate `WaitForEndOfState(transition)` in favor of `WaitForState(state)/WaitForNextState()` (fc94342db)\r\n* Deprecate `CheckCurrentState()` in favor of `NewStatePending()` (fc94342db, b7125b746)\r\n#### New\r\n* PMIx plugin proof-of-concept, build with `-DBUILD_PMIX_PLUGIN=ON`, off by default. (1191c3cda, 2358d7b03, 61a3da869, 2047dbef5, dfc6b5c4a, 62781389d)\r\n* Add `--max-run-time` option (8375faf83)\r\n* OFI transport (EXPERIMENTAL):\r\n   * Implement connection mgmt (ba4e6f72c)\r\n   * Implement ofi Send/Receive (b394feca1, 60f1f1000)\r\n   * Implement parallel `ofi::Socket::Send` (46e242054, 672e12f45)\r\n   * Implement parallel `ofi::Socket::Receive` (8e7cfacd7, 672e12f45)\r\n   * Implement control band with asiofi (b31ab1cc4)\r\n   * Retry ofi connection (241bf0833)\r\n   * Implement Reset signal (ee890a7a4)\r\n* Enhance region example with Builder device (7df278818)\r\n#### Bugfix\r\n* Search plugins in system directories and `LD_LIBRARY_PATH` (#133)\r\n* Fix bug in `LogSocketRates` (8375faf83)\r\n#### Buildsystem/CI\r\n* Test macOS `10.14` (8ee989dbc)\r\n* Set cmake policy `CMP0074` (a262d4684)\r\n* Fix link errors with Boost (f85663bfe)",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.4.50",
        "name": "v1.4.50",
        "release_id": 62338862,
        "tag": "v1.4.50",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.4.50",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/62338862",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/62338862",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.4.50"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dennisklein",
          "type": "User"
        },
        "date_created": "2019-08-07T15:56:49Z",
        "date_published": "2019-08-07T16:07:00Z",
        "description": "[bug fixes]\r\n* 03e6cea Tools: Fix regression bug to support Boost < 1.66\r\n\r\n[maintenance]\r\nSupport recent releases of Boost, CMake, DDS and FairLogger\r\n* d91a7d2 CMake: Support DDS 2.4\r\n* c3f6d5c  FairMQ: Remove unused dependency on Boost.Signals v1\r\n* de7b576 CMake: Set policies by version\r\n* 7506243 CMake: Fix summary table for recent FairLogger versions",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.3.9",
        "release_id": 19141382,
        "tag": "v1.3.9",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.3.9",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/19141382",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/19141382",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.3.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dennisklein",
          "type": "User"
        },
        "date_created": "2019-01-07T11:27:33Z",
        "date_published": "2019-01-07T13:31:07Z",
        "description": "[bug fixes]\r\n* 291d00c Fix regression with ignored rateLogging channel argument\r\n* 0cb8f61 Let getMessage deal with SSO\r\n\r\n[enhancement]\r\n* 4dc37ef Allow implicit conversion factory->resource",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.3.8",
        "name": "v1.3.8",
        "release_id": 14833119,
        "tag": "v1.3.8",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.3.8",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/14833119",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/14833119",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.3.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rbx",
          "type": "User"
        },
        "date_created": "2018-11-29T12:12:27Z",
        "date_published": "2018-11-29T12:17:14Z",
        "description": "[new features]\r\n* 5e4876c Allow plugins to create channels\r\n* 310b964 Adopt FairMQMessage backed memory resource collection from AliceO2\r\n* 3a1b769 Support feeding the child process data on stdin\r\n* 4123ebc Add interruptable FairMQDevice::WaitFor(duration) method\r\n* e95096e Add RateLimiter class to tools\r\n* 4aae1ad Allow DDS command UI to target parts of the topology\r\n\r\n[enhancements]\r\n* 653e82c Avoid copy (where possible) when switching transports\r\n* 25fcf13 Move Bind/Connect/Attach to FairMQChannel\r\n* 3ca0d72 Add safety checks for process tools\r\n* 44acd49 Implement nanomsg linger in our transport\r\n* dfa1b68 Make factory classes final (optimization potential)\r\n* e090967 Build shmem names out of session id + user id (avoid conflicts)\r\n* 1fdf510 Pick correct build type in CI\r\n* 45354f2 Use future instead of thread for device rateLogger (exception safety)\r\n* cf9a294 Introduce and export hotfix version component\r\n* 94297f9 Tie builtin plugin version to the project version\r\n* 88f8975 Add codacy.com integration\r\n* 60f27b9 Support BUILD_SHARED_LIBS flag\r\n* 1bb558a Refactor initialization - config always available, proper reinit on Init() re-entry\r\n* c8bd19b Add experimental FAST_BUILD option\r\n* fc0adba Support unity build\r\n* a53ef79 Run state handlers on the main thread (breaking change for control).\r\n* f05118f Make \";\" the separateor in multi-point channel config\r\n* ffbe90b Update to DDS 2.2 API\r\n\r\n[bug fixes]\r\n* 227a302 Avoid boost::uuids::entropy_error on some systems\r\n* 3561255 Add missing channel update handlers (snd/rcvKernelSize)\r\n* 9f32545 Make sure we reset terminal config also on exception\r\n* cb199e7 Fix throw after quit signal case\r\n* 1aab354 Resolve hanging process in case of uncaught exception\r\n* f6c1f5d Fix theoretical race in signal handler\r\n* adfa0e2 Move shmmonitor out of lib to own executable (Fix ODR violation)\r\n* 2c6b2e7 Fix race condition in the control plugin\r\n* b814e40 Fix multipart transfer timeout\r\n* ee8afd7 Fix race in plugin manager/services\r\n\r\n[cleanup and deprecations]\r\n* 0cfa919 Deprecate Send-/ReceiveAsync, use timeout variant instead\r\n* ce4062f Remove GetSocket interface that exposes transport details\r\n* 00800f1 Remove support for nanomsg <= 0.6\r\n* cfb7271 Remove set/get timeout from general socket interface\r\n* 9851504 Remove shmem prototype code - unused\r\n* a53ef79 Run state handlers on the main thread (breaking change for control).\r\n* 90009b1 Remove previously deprecated Copy method (since 1yr)\r\n\r\n[tests]\r\n* e403d18 Add codecov reports to PRs\r\n* a9df367 Add test for FairMQMessage::Rebuild\r\n* bd899a2 Add test for channel validation\r\n* 0b199e7 Add test for interface IP detection tools\r\n* 919193a Extend transfer timeout test coverage\r\n* d4a4ea1 Add example/test for built-in devices\r\n* ffab4ac Add options tests and (re-)/enable more nanomsg tests\r\n* 1d45095 Add session id to example tests\r\n* 78acb95 Test more cases with interactive controller\r\n* e39316c Test exceptions thrown in user code\r\n* c4145e9 Add test for FairMQDevice::WaitFor()\r\n* 5397cef Use same runner.cxx/.h for all tests\r\n* b814e40 Enable multipart transfer timeout tests\r\n* 7d5e76d Add more tests for custom main()\r\n* 24dff2f Enable FAST_BUILD for alfa-ci\r\n* 3f96181 Define nn tests only when nn transport is built\r\n\r\n[dependencies]\r\n* c02fbed Require msgpack 3.1.0\r\n* 76aeb2c Require nanomsg 1.1.3\r\n* ffbe90b Require DDS 2.2\r\n\r\nMany more small fixes and improvements.\r\n",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.3.7",
        "name": "v1.3.7",
        "release_id": 14002318,
        "tag": "v1.3.7",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.3.7",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/14002318",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/14002318",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.3.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dennisklein",
          "type": "User"
        },
        "date_created": "2018-05-22T14:50:03Z",
        "date_published": "2018-05-22T15:25:40Z",
        "description": "Changelog:\r\n\r\n* [bugfix] Remove the alias target\r\n* [enhancement] Improve compilation speed\r\n* [new feature] Control plugin: add ability to switch log levels interactively\r\n* [enhancement] provide `FAIRMQ_PATH` to test suites\r\n* [enhancement] further shorten shm names\r\n* [test coverage] Test all examples with all possible transports\r\n* [enhancement] Use enum transport types instead of strings in Channel/Device\r\n* [enhancement] Fix namespaces in Transports.h and add conversion map\r\n* [enhancement] Used cached default transport in `FairMQDevice::Transport()`\r\n",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.2.3",
        "release_id": 10900346,
        "tag": "v1.2.3",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/10900346",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/10900346",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dennisklein",
          "type": "User"
        },
        "date_created": "2018-05-04T20:04:57Z",
        "date_published": "2018-05-04T20:13:09Z",
        "description": "Changelog:\r\n\r\n* [bugfix] error: no matching function for call to 'find_if' with Boost 1.66+ (#29)",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.2.1",
        "release_id": 10860341,
        "tag": "v1.2.1",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/10860341",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/10860341",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dennisklein",
          "type": "User"
        },
        "date_created": "2018-05-03T17:49:18Z",
        "date_published": "2018-05-04T12:48:32Z",
        "description": "First stable release after separating FairMQ from the FairRoot repo.\r\n\r\nChangelog (since [FairRoot 17.10](https://github.com/FairRootGroup/FairRoot/releases/tag/v-17.10)):\r\n\r\n* [bugfix] `fair::mq::tools::getDefaultRouteNetworkInterface()` does not break any more with multiple default routes on Linux\r\n* [enhancement] `FindDDS.cmake` now generates imported targets\r\n* [bugfix] Install DDS plugin and `fairmq-dds-command-ui`\r\n* [new feature] Add `dump-config`, heartbeat and state subscription commands to DDS plugin\r\n* [new feature] With `--rate` one can set now a rate limit in Hz for `FairMQDevice::ConditionalRun()`\r\n* [new feature] Add `fair::mq::PluginServices::Un/SubscribeToPropertyChangeAsString()`\r\n* [new feature] Add callbacks with hint argument to `FairMQUnmanagedRegion` to transfer ownership of the message buffer back to the user\r\n* [new feature] With `--session` it is supported now to run multiple topologies in parallel on the same machine\r\n* [test coverage] Run `examples/Region` in the standard test suite\r\n* [new feature] Add `fairmq-uuid-gen` utility to easily generate session ids\r\n* [change] Remove deprecated header `<tools/FairMQTools.h>`\r\n* [bugfix] Add missing explicit reference to `libboost_signals`\r\n* [new feature] Add `FairMQMessage::SetUsedSize()`\r\n* [change] Remove `FairMQMessage::Get/SetMessage()`\r\n* [change] Deprecated `FairMQMessage::Copy(const std::unique_ptr<FairMQMessage>&)`, use `FairMQMessage::Copy(const FairMQMessage&)` instead\r\n* [enhancement] Reimplement and move `FairMQLogger` to external [repo](https://github.com/FairRootGroup/FairLogger)\r\n* [bugfix] Convert log severities to lower case to avoid name clashes with preprocessor defines\r\n* [change] Remove `pstreams` dependency and replace it with Boost.Process\r\n* [bugfix] Fix DDS plugin incomplete shutdown on DDS server termination\r\n* [new feature] DDS plugin: handle n to m on single channel name case\r\n* [enhancement] SHM: coalesce multipart messages. Transmit meta info of an shm multipart message in a single zmq message\r\n* [new feature] Add `fair::mq::PluginServices::CountProperty()`\r\n* [enhancement] Update `fairmq-dds-command-ui` to support DDS 2.0\r\n* [experimental] Add a first implementation of the new OFI transport. This is mainly useful for internal testing.\r\n* [enhancement] Replace cmd socket with transport specific unblock mechanism\r\n* [enhancement] Modernize CMake files for `examples`\r\n* [enhancement] Devices search `FAIRMQ_PATH` in addition to `PATH` for binaries\r\n* [change] Prefix all FairMQ executables with `fairmq-`, e.g.: `splitter` -> `fairmq-splitter`\r\n\r\n\r\n\r\n",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.2.0",
        "release_id": 10839682,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/10839682",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/10839682",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "MohammadAlTurany",
          "type": "User"
        },
        "date_created": "2018-04-25T14:54:32Z",
        "date_published": "2018-04-27T07:42:23Z",
        "description": "This is a test",
        "html_url": "https://github.com/FairRootGroup/FairMQ/releases/tag/v1.1.7",
        "release_id": 10749695,
        "tag": "v1.1.7",
        "tarball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/tarball/v1.1.7",
        "type": "Release",
        "url": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/10749695",
        "value": "https://api.github.com/repos/FairRootGroup/FairMQ/releases/10749695",
        "zipball_url": "https://api.github.com/repos/FairRootGroup/FairMQ/zipball/v1.1.7"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Dependencies",
        "parent_header": [
          "FairMQ"
        ],
        "type": "Text_excerpt",
        "value": "  * [Boost](https://www.boost.org/)\n  * [CMake](https://cmake.org/)\n  * [Doxygen](http://www.doxygen.org/)\n  * [FairCMakeModules](https://github.com/FairRootGroup/FairCMakeModules) (optionally bundled)\n  * [FairLogger](https://github.com/FairRootGroup/FairLogger)\n  * [GTest](https://github.com/google/googletest) (optionally bundled)\n  * [ZeroMQ](http://zeromq.org/)\n\n  Which dependencies are required depends on which components are built.\n\n  Supported platform is Linux. macOS is supported on a best-effort basis.\n"
      },
      "source": "https://github.com/FairRootGroup/FairMQ/#readme",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 00:51:18",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 90
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "FairMQ"
        ],
        "type": "Text_excerpt",
        "value": "FairMQ ships as a CMake package, so in your `CMakeLists.txt` you can discover it like this:\n\n```cmake\nfind_package(FairCMakeModules 1.0 REQUIRED)\ninclude(FairFindPackage2)\nfind_package2(FairMQ)\nfind_package2_implicit_dependencies()\n```\n\nThe [`FairFindPackage2` module](https://fairrootgroup.github.io/FairCMakeModules/latest/module/FairFindPackage2.html) is part of the [`FairCMakeModules` package](https://fairrootgroup.github.io/FairCMakeModules).\n\nIf FairMQ is not installed in system directories, you can hint the installation:\n\n```cmake\nlist(PREPEND CMAKE_PREFIX_PATH /path/to/fairmq_install)\n```\n"
      },
      "source": "https://github.com/FairRootGroup/FairMQ/#readme",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "master"
      },
      "source": "https://raw.githubusercontent.com/FairRootGroup/FairMQ/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
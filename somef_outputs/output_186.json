{
  "application_domain": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Research, Education"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9469413145332336,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "given_name": "-",
        "last_name": "[Philippe MATHIEU](philippe.mathieu@univ-lille.fr)",
        "name": "- [Philippe MATHIEU](philippe.mathieu@univ-lille.fr)",
        "type": "Agent",
        "value": "- [Philippe MATHIEU](philippe.mathieu@univ-lille.fr)"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/AUTHORS.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "-",
        "last_name": "[Olivier BRANDOUY](o.brandouy@gmail.com)",
        "name": "- [Olivier BRANDOUY](o.brandouy@gmail.com)",
        "type": "Agent",
        "value": "- [Olivier BRANDOUY](o.brandouy@gmail.com)"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/AUTHORS.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Univ. Lille, CNRS, Centrale Lille, UMR 9189 - CRIStAL, F-59000 Lille, France",
        "email": "philippe.mathieu@univ-lille.fr",
        "identifier": "https://orcid.org/0000-0003-2786-1209",
        "type": "String",
        "value": "Philippe MATHIEU"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Univ. Bordeaux, UMR 6060, F-33405 Talence, France",
        "email": "o.brandouy@gmail.com",
        "identifier": "https://orcid.org/0000-0002-0751-6945",
        "type": "String",
        "value": "Olivier BRANDOUY"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "How to make a reference to ATOM",
        "type": "Text_excerpt",
        "value": "- Philippe Mathieu and Olivier Brandouy. *A Generic Architecture for Realistic Simulations of Complex Financial Dynamics.* in Advances in Practical Applications of Agents and Multiagent Systems, 8th International conference on Practical Applications of Agents and Multi-Agents Systems (PAAMS'2010), pages 185-197, Salamanca (Spain), 26-28th April, 2010 ([bibtex](https://scholar.google.fr/scholar?hl=fr&as_sdt=0%2C5&q=A+Generic+Architecture+for+Realistic+Simulations+of+Complex+Financial+Dynamics&btnG=))\n- Philippe Mathieu and Olivier Brandouy. *Efficient Monitoring of Financial Orders with Agent-Based Technologies.* in Proceedings of the 9th International conference on Practical Applications of Agents and Multi-Agents Systems (PAAMS'2011), pages 277-286, Salamanca (Spain), 6th-8th April 2011 ([bibtex](https://scholar.google.fr/scholar?hl=fr&as_sdt=0%2C5&q=Efficient+Monitoring+of+Financial+Orders+with+Agent-Based+Technologies&btnG=))\n- Philippe Mathieu and Olivier Brandouy. *Introducing ATOM*. in Proceedings of the 10th International conference on Practical\nApplications of Agents and Multi-Agents Systems (PAAMS'2012), Salamanca (Spain) -- 28th-30th March 2012 ([bibtex](https://scholar.google.fr/scholar?hl=fr&as_sdt=0%2C5&q=Introducing+ATOM+PAAMS+Mathieu+Brandouy&btnG=))\n\nOur other publications [here](https://scholar.google.fr/scholar?hl=fr&as_sdt=0%2C5&q=Mathieu+Brandouy&btnG=)\n"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cristal-smac/atom"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cristal-smac/atom"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-03-01T15:18:17Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2008-03-16"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2018-07-01"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-01-03T06:23:46Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2023-12-14"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Atom : an Agent-Based Financial Artificial Market in Java. Build yourself in silico experiments"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Atom is an artificial financial market platform for defining and experimenting with trading behaviour and pricing mechanisms."
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.8956961581366514,
      "result": {
        "original_header": "ATOM",
        "type": "Text_excerpt",
        "value": "ATOM means *Artificial Open Market* and is a Java API built in 2008 by Pr Philippe Mathieu ([CRISTAL](http://www.cristal.univ-lille.fr), [SMAC team](https://www.cristal.univ-lille.fr/?rubrique27&eid=17), [Lille University](http://www.univ-lille.fr)) and Pr Olivier Brandouy ([Gretha](https://gretha.u-bordeaux.fr/), [Bordeaux university](https://www.u-bordeaux.fr/)) \nATOM is a Java API with which you can build any kind of experiments on order-driven markets like NYSE or Euronext. ATOM contains a Market on which you can add any number of double auction orderbooks, one for each asset (option) you want to trade. It also manages some artificial agents that you may have to build and add to your experiments. We give in this package few basic agents like the classic Zero Intelligent Trader (ZIT). The given agents are able to trade simultaneously on all the orderbooks added in the Market. But you can of course easily build your own experiments with your own agents.\nATOM contains a powerful log system. This aspect facilitates all the statistics you could need, curves you could have to plot or stylized facts you could have to verify. This log file can also be integrally replayed with the ATOM flow replayer, not only able to send once again the orders, but also able to re-create all the agents asking all of them to re-send their own orders in the same scheduling. \n"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "active"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/cristal-smac/atom/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cristal-smac/atom/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cristal-smac/atom"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ATOM"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "pom.xml",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cristal-smac/atom/master/dev/pom.xml"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/dev/pom.xml",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "pom.xml"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/dev/pom.xml",
      "technique": "code_parser"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cristal-smac/atom/master/dev/run.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/cristal-smac/atom/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "complex-systems, financial-markets, microeconomics, multiagent-systems, orderbooks, stategies"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "Agent-Based Computational Economics",
          "Artificial market",
          "Automatic trading"
        ]
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU Lesser General Public License v3.0",
        "spdx_id": "LGPL-3.0",
        "type": "License",
        "url": "https://api.github.com/licenses/lgpl-3.0",
        "value": "https://api.github.com/licenses/lgpl-3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/GPL-3.0+",
        "spdx_id": "https://spdx.org/licenses/GPL-3.0+",
        "type": "License",
        "value": "https://spdx.org/licenses/GPL-3.0+"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "type": "Text_excerpt",
        "value": "This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\nSee the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with this program.\nIf not, see http://www.gnu.org/licenses/.\n"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "atom"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "atom"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "cristal-smac"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fr.cristal.smac.atom"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/dev/pom.xml",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "size": 246368,
        "type": "Programming_language",
        "value": "Java"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 289,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Java",
        "type": "Programming_language",
        "value": "Java",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/cristal-smac/atom/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "reference_publication": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://hal.science/hal-00826408"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": null,
        "type": "Software_application",
        "value": "Java 1.7",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "junit",
        "type": "Software_application",
        "value": "junit.junit",
        "version": "4.13.1"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/dev/pom.xml",
      "technique": "code_parser"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 00:56:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "type": "Text_excerpt",
        "value": "You should have Java (version 1.7 and above is required) installed on your system (freely available on\n[Oracle web site](http://www.oracle.com/technetwork/java/javase/downloads)).\n\nYou have two main commands given with ATOM : \n- `Generate` to generate an experiment with ZIT agents. \n- `Replay` to use ATOM as a flow replayer. \n\nHere are three basic ATOM usages (consider you are in the `dist` directory) : \n"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "First one : Generate and analyze data",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "```\njava -cp atom-1.14.jar fr.cristal.smac.atom.Generate 10 1 1000 1\n```\n`Syntax: <nbAgents> <nbOrderbooks> <nbTurns> <nbDays>`\nYou then have a log file that you can analyse. You can notably see the orders sent, the prices, the agents's states etc ...\n\nUse [Grep](https://www.gnu.org/software/grep/manual/grep.html) for example to filter lines (or any Spreadsheet if you prefer)\n```\njava -cp atom-1.14.jar fr.cristal.smac.atom.Generate 10 1 1000 1 > myfile\ngrep '^Price' myfile\ngrep '^Agent' myfile | grep ZIT1\n```\n\nUse [R project](https://www.r-project.org) (or [gnuplot](http://www.gnuplot.info/)) to plot prices\n```\njava -cp atom-1.14.jar fr.cristal.smac.atom.Generate 10 1 1000 1 | grep '^Price' > prices.csv\n```\nand in R\n```\nprices <- read.csv(file='prices.csv', sep=\";\" , header=TRUE)\nplot(prices$price, type='l', col='red', ylim=c(13000,16000))\n```\n\nOr if you want to see one agent' evolution\n```\njava -cp atom-1.14.jar fr.cristal.smac.atom.Generate 10 1 1000 1 | grep '^Agent;ZIT2' > agent.csv\n```\nand in R\n```\nagent <- read.csv(file='agent.csv', sep=\";\" , header=FALSE)\nplot((agent$V3+(agent$V5*agent$V6), type='l', col='blue')\n```\n"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Second one : replay files",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "Several examples are given in the `data` repository. \n```\njava -cp atom-1.14.jar fr.cristal.smac.atom.Replay data/orderFileExample1\n```\nHave a look to the given data files. Several commands can be used in a data file allowing to understand or test many situations. It is really easy to build your own. Whatever the content, only lines beginning with the keyword *Order* are taken into account; the others are simply skipped.\n\nATOM ensures a vertuous loop between Replay and Generate. From a previously generated log file, ATOM is able to replay exactly the same scenario which have generated the log file in the first place, including the agents, the orderbooks, ...\n```\njava -cp atom-1.14.jar fr.cristal.smac.atom.Generate 10 1 1000 1 > myfile1\njava -cp atom-1.14.jar fr.cristal.smac.atom.Replay myfile1 > myfile2\ndiff myfile1 myfile2\n```\nThe two files are perfectly identical. You can see that ATOM's flow replayer allows you to perfectly recreate orderbooks and agents from a previous experience, in a virtuous loop.\n\n"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Third one : Write your own code, with your agents",
        "parent_header": [
          "Examples"
        ],
        "type": "Text_excerpt",
        "value": "In this case you need to know Java coding. Include the jar file in your IDE (Eclipse, Netbeans, IntelliJ) or use command line to build exactly what you need. The `Tutorial.java` illustrates how to build its own experience and its own agents.\n```\njavac -cp .:atom-1.14.jar Tutorial.java\njava  -cp .:atom-1.14.jar Tutorial\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "1.0"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Release",
        "value": "1.15"
      },
      "source": "https://raw.githubusercontent.com/cristal-smac/atom/master/dev/pom.xml",
      "technique": "code_parser"
    }
  ]
}
{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "parent_header": [
          "*DE-Sim*: a Python-based object-oriented discrete-event simulator for modeling complex systems"
        ],
        "type": "Text_excerpt",
        "value": "This work was supported by National Science Foundation award 1649014, National Institutes of Health award R35GM119771, and the Icahn Institute for Data Science and Genomic Technology.\n"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing *DE-Sim*",
        "parent_header": [
          "*DE-Sim*: a Python-based object-oriented discrete-event simulator for modeling complex systems"
        ],
        "type": "Text_excerpt",
        "value": "Please use the following reference to cite *DE-Sim*:\n\nArthur P. Goldberg & Jonathan Karr. (2020). [DE-Sim: an object-oriented, discrete-event simulation tool for data-intensive modeling of complex systems in Python. Journal of Open Source Software, 5(55), 2685.](https://doi.org/10.21105/joss.02685)\n"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[info@karrlab.org](mailto:info@karrlab.org).\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://www.contributor-covenant.org/version/2/0/code_of_conduct.html).\n\nThe Community Impact Guidelines were inspired by [Mozilla's Code of Conduct Enforcement ladder](https://github.com/mozilla/diversity).\n\nAnswers to common questions about this code of conduct are available at\nhttps://www.contributor-covenant.org/faq. Translations of this code of conduct are available at\nhttps://www.contributor-covenant.org/translations.\n"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KarrLab/de_sim"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing to `DE-Sim`\n\nWe enthusiastically welcome contributions to `DE-Sim`!\n\n## Coordinating contributions\n\nBefore getting started, please contact the lead developers at [info@karrlab.org](mailto:info@karrlab.org) and [Arthur Goldberg](mailto:Arthur.Goldberg@mssm.edu) to coordinate your planned contributions with other ongoing efforts. Please also use GitHub issues to announce your plans to the community so that other developers can provide input into your plans and coordinate their own work. As the development community grows, we will institute additional infrastructure as needed such as a leadership committee and regular online meetings.\n\n## Repository organization\n\n`DE-Sim` follows standard Python conventions:\n\n* `README.md`: Overview of `DE-Sim`\n* `de_sim/`: Source code\n* `docs/`: Documentation\n* `tests/`: Unit tests\n* `pytest.ini`: pytest configuration\n* `setup.py`: pip installation script\n* `setup.cfg`: Configuration for the pip installation\n* `requirements.txt`: Dependencies\n* `requirements.optional.txt`: Optional dependencies\n* `manifest.in`: List of files to include in package\n* `codemeta.json`: Package metadata\n* `LICENSE`: License\n* `CONTRIBUTING.md`: Guide to contributing to `DE-Sim` (this document)\n* `CODE_OF_CONDUCT.md`: Code of conduct for developers\n\n## Coding convention\n\n`DE-Sim` follows standard Python style conventions:\n\n* Class names: `UpperCamelCase`\n* Function names: `lower_snake_case`\n* Variable names: `lower_snake_case`\n\n## Testing and continuous integration\n\nWe strive to have complete test coverage of `DE-Sim`. As such, all contributions to `DE-Sim` should be tested. \n\nThe tests depend on additional Python packages. These can be installed by running one of the following commands:\n```\npip install /path/to/de_sim[tests]\npip install -r /path/to/de_sim/tests/requirements.txt\n```\n\nThe tests are located in the `tests`  directory. The tests can be executed by running the following commands.\nNote that the current directory must be on the `PYTHONPATH` environment variable.\n```\ngit clone https://github.com/KarrLab/de_sim.git\ncd de_sim\npip install pytest\npython -m pytest tests\n```\n\nThe coverage of the tests can be evaluated by running the following commands and then opening `/path/to/de_sim/htmlcov/index.html` with your browser.\n```\npip install pytest pytest-cov coverage\npython -m pytest tests --cov de_sim\ncoverage html\n```\n\nUpon each push to GitHub, GitHub will trigger CircleCI to execute all of the tests. All test results are available at [CircleCI](https://circleci.com/gh/KarrLab/de_sim). And all coverage reports are available at [Coveralls](https://coveralls.io/github/KarrLab/de_sim).\n\n## Documentation convention\n\n`DE-Sim` is documented using [reStructuredText](https://www.sphinx-doc.org/en/master/usage/restructuredtext/index.html) and the [napoleon Sphinx plugin](https://www.sphinx-doc.org/en/master/usage/extensions/napoleon.html). The documentation can be compiled with [Sphinx](https://www.sphinx-doc.org/) by running `sphinx-build docs docs/_build/html`. The compiled documentation is available at [https://docs.karrlab.org/de_sim/](https://docs.karrlab.org/de_sim/).\n\n## Submitting changes\n\nPlease use GitHub pull requests to submit changes. Each request should include a brief description of the new and/or modified features.\n\n## Releasing and deploying new versions\n\nContact [info@karrlab.org](mailto:info@karrlab.org) to request release and deployment of new changes. \n\n## Reporting issues\n\nPlease use [GitHub issues](https://github.com/KarrLab/de_sim/issues) to report any issues to the development community.\n\n## Getting help\n\nPlease use [GitHub issues](https://github.com/KarrLab/de_sim/issues) to post questions or contact the lead developers at [info@karrlab.org](mailto:info@karrlab.org) and [Arthur Goldberg](mailto:Arthur.Goldberg@mssm.edu).\n"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing to *DE-Sim*",
        "parent_header": [
          "*DE-Sim*: a Python-based object-oriented discrete-event simulator for modeling complex systems"
        ],
        "type": "Text_excerpt",
        "value": "We enthusiastically welcome contributions to *DE-Sim*! Please see the [guide to contributing](CONTRIBUTING.md) and the [developer's code of conduct](CODE_OF_CONDUCT.md).\n"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-01-20T16:22:01Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-09-02T16:14:53Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python-based object-oriented discrete-event simulation tool for complex, data-driven modeling"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.9428028995786994,
      "result": {
        "original_header": "*DE-Sim*: a Python-based object-oriented discrete-event simulator for modeling complex systems",
        "type": "Text_excerpt",
        "value": "*DE-Sim* is an open-source, Python-based object-oriented discrete-event simulation (DES) tool that makes it easy to use large, heterogeneous datasets and high-level data science tools such as [NumPy](https://numpy.org/), [Scipy](https://scipy.org/scipylib/index.html), [pandas](https://pandas.pydata.org/), and [SQLAlchemy](https://www.sqlalchemy.org/) to build and simulate complex computational models. Similar to [Simula](http://www.simula67.info/), *DE-Sim* models are implemented by defining logical process objects which read the values of a set of variables and schedule events to modify their values at discrete instants in time. \n* **High-level, object-oriented modeling:** *DE-Sim* makes it easy for users to use object-oriented Python programming to build models. This makes it easy to use large, heterogeneous datasets and high-level data science packages such as NumPy, pandas, SciPy, and SQLAlchemy to build complex models.\n* **Stop conditions:** DE-Sim makes it easy to terminate simulations when specific criteria are reached. Researchers can specify stop conditions as functions that return true when a simulation should conclude.\n* **Results checkpointing:** DE-Sim makes it easy to record the results of simulations by using a configurable checkpointing module.\n* **Reproducible simulations:** To help researchers debug simulations, repeated executions of the same simulation with the same configuration and same random number generator seed produce the same results.\n* **Space-time visualizations:** DE-Sim generates space-time visualizations of simulation trajectories. These diagrams can help researchers understand and debug simulations.\n \n"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9151376839521167,
      "result": {
        "original_header": "Template for models and simulations",
        "type": "Text_excerpt",
        "value": "[`de_sim/examples/minimal_simulation.py`](de_sim/examples/minimal_simulation.py) contains a template for implementing and simulating a model with *DE-Sim*.\n \n"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "API documentation",
        "parent_header": [
          "*DE-Sim*: a Python-based object-oriented discrete-event simulator for modeling complex systems"
        ],
        "type": "Text_excerpt",
        "value": "Please see the [API documentation](https://docs.karrlab.org/de_sim/source/de_sim.html).\n"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/KarrLab/de_sim/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KarrLab/de_sim/master/de_sim/examples/jupyter_examples/2.%20An%20epidemic%20model%20using%20DE-Sim.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/de_sim/examples/jupyter_examples/2.%20An%20epidemic%20model%20using%20DE-Sim.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KarrLab/de_sim/master/de_sim/examples/jupyter_examples/4.%20DE-Sim%20performance%20test.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/de_sim/examples/jupyter_examples/4.%20DE-Sim%20performance%20test.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KarrLab/de_sim/master/de_sim/examples/jupyter_examples/3.%20Ordering%20simultaneous%20events%20in%20DE-Sim.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/de_sim/examples/jupyter_examples/3.%20Ordering%20simultaneous%20events%20in%20DE-Sim.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KarrLab/de_sim/master/de_sim/examples/jupyter_examples/1.%20DE-Sim%20tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/de_sim/examples/jupyter_examples/1.%20DE-Sim%20tutorial.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KarrLab/de_sim/master/de_sim/examples/jupyter_examples_for_talk/3.%20An%20epidemic%20model%20using%20DE-Sim.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/de_sim/examples/jupyter_examples_for_talk/3.%20An%20epidemic%20model%20using%20DE-Sim.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KarrLab/de_sim/master/de_sim/examples/jupyter_examples_for_talk/1.%20DE-Sim%20tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/de_sim/examples/jupyter_examples_for_talk/1.%20DE-Sim%20tutorial.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 5
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KarrLab/de_sim/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "KarrLab/de_sim"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "DE-Sim: a Python-based object-oriented discrete-event simulator for modeling complex systems"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "setup.py",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KarrLab/de_sim/master/setup.py"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/setup.py",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KarrLab/de_sim/master/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KarrLab/de_sim/master/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/requirements.txt",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KarrLab/de_sim/master/docs/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/docs/requirements.txt",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KarrLab/de_sim/master/.circleci/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/.circleci/requirements.txt",
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.21105/joss.02685"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://joss.theoj.org/papers/10.21105/joss.02685/status.svg"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://ga-beacon.appspot.com/UA-86759801-1/de_sim/README.md?pixel"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "*DE-Sim*: a Python-based object-oriented discrete-event simulator for modeling complex systems"
        ],
        "type": "Text_excerpt",
        "value": "1. Install dependencies\n    \n    * Python >= 3.7\n    * pip >= 19\n\n2. Install this package using one of these methods\n\n    * Install the latest release from PyPI\n      ```\n      pip install de_sim\n      ```\n\n    * Install a Docker image with the latest release from DockerHub\n      ```\n      docker pull karrlab/de_sim\n      ```\n\n    * Install the latest version from GitHub\n      ```\n      pip install git+https://github.com/KarrLab/de_sim.git#egg=de_sim\n      ```\n"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/KarrLab/de_sim/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "computational-modelling, data-driven-model, discrete-event-simulation, object-oriented-programming, python, simulation"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2019-2020 Karr Lab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "*DE-Sim*: a Python-based object-oriented discrete-event simulator for modeling complex systems"
        ],
        "type": "Text_excerpt",
        "value": "The package is released under the [MIT license](LICENSE).\n"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://circleci.com/gh/KarrLab/de_sim.svg?style=shield"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "de_sim"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "KarrLab"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 273760,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 246541,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 7636,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 2561,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 498,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 67,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/KarrLab/de_sim/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "artgoldberg",
          "type": "User"
        },
        "date_created": "2020-11-15T19:31:13Z",
        "date_published": "2020-11-15T19:33:35Z",
        "html_url": "https://github.com/KarrLab/de_sim/releases/tag/1.0.5",
        "name": "Release for JOSS paper and Zenodo archive snapshot",
        "release_id": 33977986,
        "tag": "1.0.5",
        "tarball_url": "https://api.github.com/repos/KarrLab/de_sim/tarball/1.0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/KarrLab/de_sim/releases/33977986",
        "value": "https://api.github.com/repos/KarrLab/de_sim/releases/33977986",
        "zipball_url": "https://api.github.com/repos/KarrLab/de_sim/zipball/1.0.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "artgoldberg",
          "type": "User"
        },
        "date_created": "2020-11-07T20:37:02Z",
        "date_published": "2020-11-07T20:39:10Z",
        "html_url": "https://github.com/KarrLab/de_sim/releases/tag/1.0.3",
        "name": "Bump version for Zenodo snapshot",
        "release_id": 33603069,
        "tag": "1.0.3",
        "tarball_url": "https://api.github.com/repos/KarrLab/de_sim/tarball/1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/KarrLab/de_sim/releases/33603069",
        "value": "https://api.github.com/repos/KarrLab/de_sim/releases/33603069",
        "zipball_url": "https://api.github.com/repos/KarrLab/de_sim/zipball/1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "artgoldberg",
          "type": "User"
        },
        "date_created": "2020-11-07T19:11:19Z",
        "date_published": "2020-11-07T20:22:59Z",
        "html_url": "https://github.com/KarrLab/de_sim/releases/tag/1.0.2",
        "name": "Bump version for Zenodo snapshot",
        "release_id": 33602905,
        "tag": "1.0.2",
        "tarball_url": "https://api.github.com/repos/KarrLab/de_sim/tarball/1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/KarrLab/de_sim/releases/33602905",
        "value": "https://api.github.com/repos/KarrLab/de_sim/releases/33602905",
        "zipball_url": "https://api.github.com/repos/KarrLab/de_sim/zipball/1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "artgoldberg",
          "type": "User"
        },
        "date_created": "2020-11-07T19:11:19Z",
        "date_published": "2020-11-07T19:53:08Z",
        "html_url": "https://github.com/KarrLab/de_sim/releases/tag/1.0.1",
        "name": "Bump version for Zenodo snapshot",
        "release_id": 33602601,
        "tag": "1.0.1",
        "tarball_url": "https://api.github.com/repos/KarrLab/de_sim/tarball/1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/KarrLab/de_sim/releases/33602601",
        "value": "https://api.github.com/repos/KarrLab/de_sim/releases/33602601",
        "zipball_url": "https://api.github.com/repos/KarrLab/de_sim/zipball/1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "artgoldberg",
          "type": "User"
        },
        "date_created": "2020-11-07T19:11:19Z",
        "date_published": "2020-11-07T19:33:46Z",
        "description": "Release for our JOSS paper, Arthur P. Goldberg & Jonathan Karr. (2020). DE-Sim: an object-oriented, discrete-event simulation tool for data-intensive modeling of complex systems in Python. Journal of Open Source Software, 5(55), 2685.",
        "html_url": "https://github.com/KarrLab/de_sim/releases/tag/1.0.0",
        "name": "Release for JOSS paper",
        "release_id": 33602204,
        "tag": "1.0.0",
        "tarball_url": "https://api.github.com/repos/KarrLab/de_sim/tarball/1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/KarrLab/de_sim/releases/33602204",
        "value": "https://api.github.com/repos/KarrLab/de_sim/releases/33602204",
        "zipball_url": "https://api.github.com/repos/KarrLab/de_sim/zipball/1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "artgoldberg",
          "type": "User"
        },
        "date_created": "2020-10-27T20:20:29Z",
        "date_published": "2020-10-27T20:23:12Z",
        "html_url": "https://github.com/KarrLab/de_sim/releases/tag/0.1.9",
        "release_id": 33131576,
        "tag": "0.1.9",
        "tarball_url": "https://api.github.com/repos/KarrLab/de_sim/tarball/0.1.9",
        "type": "Release",
        "url": "https://api.github.com/repos/KarrLab/de_sim/releases/33131576",
        "value": "https://api.github.com/repos/KarrLab/de_sim/releases/33131576",
        "zipball_url": "https://api.github.com/repos/KarrLab/de_sim/zipball/0.1.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "artgoldberg",
          "type": "User"
        },
        "date_created": "2020-10-21T16:32:26Z",
        "date_published": "2020-10-21T16:33:56Z",
        "html_url": "https://github.com/KarrLab/de_sim/releases/tag/0.1.8",
        "release_id": 32875376,
        "tag": "0.1.8",
        "tarball_url": "https://api.github.com/repos/KarrLab/de_sim/tarball/0.1.8",
        "type": "Release",
        "url": "https://api.github.com/repos/KarrLab/de_sim/releases/32875376",
        "value": "https://api.github.com/repos/KarrLab/de_sim/releases/32875376",
        "zipball_url": "https://api.github.com/repos/KarrLab/de_sim/zipball/0.1.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "artgoldberg",
          "type": "User"
        },
        "date_created": "2020-09-28T22:56:01Z",
        "date_published": "2020-09-30T15:43:59Z",
        "html_url": "https://github.com/KarrLab/de_sim/releases/tag/0.1.7",
        "release_id": 31999674,
        "tag": "0.1.7",
        "tarball_url": "https://api.github.com/repos/KarrLab/de_sim/tarball/0.1.7",
        "type": "Release",
        "url": "https://api.github.com/repos/KarrLab/de_sim/releases/31999674",
        "value": "https://api.github.com/repos/KarrLab/de_sim/releases/31999674",
        "zipball_url": "https://api.github.com/repos/KarrLab/de_sim/zipball/0.1.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "artgoldberg",
          "type": "User"
        },
        "date_created": "2020-09-28T20:53:13Z",
        "date_published": "2020-09-28T22:53:43Z",
        "html_url": "https://github.com/KarrLab/de_sim/releases/tag/0.1.6",
        "release_id": 31909583,
        "tag": "0.1.6",
        "tarball_url": "https://api.github.com/repos/KarrLab/de_sim/tarball/0.1.6",
        "type": "Release",
        "url": "https://api.github.com/repos/KarrLab/de_sim/releases/31909583",
        "value": "https://api.github.com/repos/KarrLab/de_sim/releases/31909583",
        "zipball_url": "https://api.github.com/repos/KarrLab/de_sim/zipball/0.1.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "artgoldberg",
          "type": "User"
        },
        "date_created": "2020-09-26T16:56:26Z",
        "date_published": "2020-09-26T16:57:30Z",
        "html_url": "https://github.com/KarrLab/de_sim/releases/tag/0.1.5",
        "release_id": 31845838,
        "tag": "0.1.5",
        "tarball_url": "https://api.github.com/repos/KarrLab/de_sim/tarball/0.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/KarrLab/de_sim/releases/31845838",
        "value": "https://api.github.com/repos/KarrLab/de_sim/releases/31845838",
        "zipball_url": "https://api.github.com/repos/KarrLab/de_sim/zipball/0.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "artgoldberg",
          "type": "User"
        },
        "date_created": "2020-09-25T19:53:42Z",
        "date_published": "2020-09-25T19:56:02Z",
        "html_url": "https://github.com/KarrLab/de_sim/releases/tag/0.1.4",
        "release_id": 31829437,
        "tag": "0.1.4",
        "tarball_url": "https://api.github.com/repos/KarrLab/de_sim/tarball/0.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/KarrLab/de_sim/releases/31829437",
        "value": "https://api.github.com/repos/KarrLab/de_sim/releases/31829437",
        "zipball_url": "https://api.github.com/repos/KarrLab/de_sim/zipball/0.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "artgoldberg",
          "type": "User"
        },
        "date_created": "2020-08-24T15:51:06Z",
        "date_published": "2020-08-24T15:52:55Z",
        "html_url": "https://github.com/KarrLab/de_sim/releases/tag/0.1.1",
        "release_id": 30060663,
        "tag": "0.1.1",
        "tarball_url": "https://api.github.com/repos/KarrLab/de_sim/tarball/0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/KarrLab/de_sim/releases/30060663",
        "value": "https://api.github.com/repos/KarrLab/de_sim/releases/30060663",
        "zipball_url": "https://api.github.com/repos/KarrLab/de_sim/zipball/0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "artgoldberg",
          "type": "User"
        },
        "date_created": "2020-08-24T14:15:48Z",
        "date_published": "2020-08-24T14:16:57Z",
        "html_url": "https://github.com/KarrLab/de_sim/releases/tag/0.1.0",
        "release_id": 30055754,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/KarrLab/de_sim/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/KarrLab/de_sim/releases/30055754",
        "value": "https://api.github.com/repos/KarrLab/de_sim/releases/30055754",
        "zipball_url": "https://api.github.com/repos/KarrLab/de_sim/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "artgoldberg",
          "type": "User"
        },
        "date_created": "2020-08-12T21:05:06Z",
        "date_published": "2020-08-12T21:11:22Z",
        "html_url": "https://github.com/KarrLab/de_sim/releases/tag/0.0.8",
        "release_id": 29625687,
        "tag": "0.0.8",
        "tarball_url": "https://api.github.com/repos/KarrLab/de_sim/tarball/0.0.8",
        "type": "Release",
        "url": "https://api.github.com/repos/KarrLab/de_sim/releases/29625687",
        "value": "https://api.github.com/repos/KarrLab/de_sim/releases/29625687",
        "zipball_url": "https://api.github.com/repos/KarrLab/de_sim/zipball/0.0.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "artgoldberg",
          "type": "User"
        },
        "date_created": "2020-08-07T03:06:55Z",
        "date_published": "2020-08-07T03:09:40Z",
        "html_url": "https://github.com/KarrLab/de_sim/releases/tag/0.0.7",
        "release_id": 29433808,
        "tag": "0.0.7",
        "tarball_url": "https://api.github.com/repos/KarrLab/de_sim/tarball/0.0.7",
        "type": "Release",
        "url": "https://api.github.com/repos/KarrLab/de_sim/releases/29433808",
        "value": "https://api.github.com/repos/KarrLab/de_sim/releases/29433808",
        "zipball_url": "https://api.github.com/repos/KarrLab/de_sim/zipball/0.0.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "artgoldberg",
          "type": "User"
        },
        "date_created": "2020-08-02T03:14:29Z",
        "date_published": "2020-08-02T03:19:40Z",
        "html_url": "https://github.com/KarrLab/de_sim/releases/tag/0.0.6",
        "release_id": 29198756,
        "tag": "0.0.6",
        "tarball_url": "https://api.github.com/repos/KarrLab/de_sim/tarball/0.0.6",
        "type": "Release",
        "url": "https://api.github.com/repos/KarrLab/de_sim/releases/29198756",
        "value": "https://api.github.com/repos/KarrLab/de_sim/releases/29198756",
        "zipball_url": "https://api.github.com/repos/KarrLab/de_sim/zipball/0.0.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "artgoldberg",
          "type": "User"
        },
        "date_created": "2020-07-13T19:48:37Z",
        "date_published": "2020-07-13T19:50:38Z",
        "html_url": "https://github.com/KarrLab/de_sim/releases/tag/0.0.4",
        "release_id": 28516795,
        "tag": "0.0.4",
        "tarball_url": "https://api.github.com/repos/KarrLab/de_sim/tarball/0.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/KarrLab/de_sim/releases/28516795",
        "value": "https://api.github.com/repos/KarrLab/de_sim/releases/28516795",
        "zipball_url": "https://api.github.com/repos/KarrLab/de_sim/zipball/0.0.4"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "configobj",
        "type": "Software_application",
        "value": "configobj",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "logging2",
        "type": "Software_application",
        "value": "logging2",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "matplotlib",
        "type": "Software_application",
        "value": "matplotlib",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "numpy",
        "type": "Software_application",
        "value": "numpy",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "progressbar2",
        "type": "Software_application",
        "value": "progressbar2 >= 3.39",
        "version": ">= 3.39"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pympler",
        "type": "Software_application",
        "value": "pympler",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "setuptools",
        "type": "Software_application",
        "value": "setuptools",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "wc_utils[git]",
        "type": "Software_application",
        "value": "wc_utils[git] >= 0.0.16",
        "version": ">= 0.0.16"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "sphinx",
        "type": "Software_application",
        "value": "sphinx >= 1.8",
        "version": ">= 1.8"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/docs/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "sphinx_fontawesome",
        "type": "Software_application",
        "value": "sphinx_fontawesome",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/docs/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "sphinx_rtd_theme",
        "type": "Software_application",
        "value": "sphinx_rtd_theme >= 0.4.2",
        "version": ">= 0.4.2"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/docs/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "sphinxcontrib_addmetahtml",
        "type": "Software_application",
        "value": "sphinxcontrib_addmetahtml >= 0.1.1",
        "version": ">= 0.1.1"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/docs/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "sphinxcontrib_bibtex",
        "type": "Software_application",
        "value": "sphinxcontrib_bibtex",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/docs/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "sphinxcontrib_googleanalytics",
        "type": "Software_application",
        "value": "sphinxcontrib_googleanalytics >= 0.1.1",
        "version": ">= 0.1.1"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/docs/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "sphinxcontrib_spelling",
        "type": "Software_application",
        "value": "sphinxcontrib_spelling",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/docs/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "sphinxprettysearchresults",
        "type": "Software_application",
        "value": "sphinxprettysearchresults",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/docs/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "git+https://github.com/KarrLab/wc_utils.git#egg=wc_utils",
        "type": "Software_application",
        "value": "git+https://github.com/KarrLab/wc_utils.git#egg=wc_utils",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/.circleci/requirements.txt",
      "technique": "code_parser"
    }
  ],
  "somef_missing_categories": [
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support"
  ],
  "somef_provenance": {
    "date": "2025-09-19 00:45:18",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 34
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Projects that use *DE-Sim*",
        "parent_header": [
          "*DE-Sim*: a Python-based object-oriented discrete-event simulator for modeling complex systems"
        ],
        "type": "Text_excerpt",
        "value": "*DE-Sim* has been used to develop [WC-Sim](https://github.com/KarrLab/wc_sim), a multi-algorithmic simulator for [whole-cell models](https://www.wholecell.org).\n"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "parent_header": [
          "*DE-Sim*: a Python-based object-oriented discrete-event simulator for modeling complex systems"
        ],
        "type": "Text_excerpt",
        "value": "* [Minimal simulation](de_sim/examples/minimal_simulation.py): a minimal example of a simulation\n* [Random walk](de_sim/examples/random_walk.py): a random one-dimensional walk which increments or decrements a variable with equal probability at each event\n* [Parallel hold (PHOLD)](de_sim/examples/phold.py): model developed by Richard Fujimoto for benchmarking parallel DES simulators\n* [Epidemic](https://github.com/KarrLab/de_sim/blob/master/de_sim/examples/sirs.py): an SIR model of an epidemic of an infectious disease\n"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Tutorial",
        "parent_header": [
          "*DE-Sim*: a Python-based object-oriented discrete-event simulator for modeling complex systems"
        ],
        "type": "Text_excerpt",
        "value": "Please see [sandbox.karrlab.org](https://sandbox.karrlab.org/tree/de_sim) for interactive tutorials on creating and executing models with *DE-Sim*.\n"
      },
      "source": "https://raw.githubusercontent.com/KarrLab/de_sim/master/README.md",
      "technique": "header_analysis"
    }
  ]
}
{
  "application_domain": [
    {
      "confidence": 0.8391389442771489,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "karissa.whiting@gmail.com",
        "identifier": "https://orcid.org/0000-0002-4683-1868",
        "type": "String",
        "value": "Karissa Whiting"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\nand learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\ncommunity\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\nadvances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\naddress, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards\nof acceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies\nwhen an individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at karissa.whiting@gmail.com. \nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0,\navailable at <https://www.contributor-covenant.org/version/2/0/code_of_conduct.html>.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\n<https://www.contributor-covenant.org/faq>. Translations are available at <https://www.contributor-covenant.org/translations>.\n"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/karissawhiting/cbioportalR"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/karissawhiting/cbioportalR"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/karissawhiting/cbioportalR"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": [
          "https://github.com/karissawhiting/cbioportalR/actions",
          "https://app.codecov.io/gh/karissawhiting/cbioportalR?branch=master"
        ]
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing to cbioportalR\n\nThis outlines how to propose a change to cbioportalR. \nFor more detailed info about contributing to this, and other tidyverse packages, please see the\n[**development contributing guide**](https://rstd.io/tidy-contrib). \n\n## Fixing typos\n\nYou can fix typos, spelling mistakes, or grammatical errors in the documentation directly using the GitHub web interface, as long as the changes are made in the _source_ file. \nThis generally means you'll need to edit [roxygen2 comments](https://roxygen2.r-lib.org/articles/roxygen2.html) in an `.R`, not a `.Rd` file. \nYou can find the `.R` file that generates the `.Rd` by reading the comment in the first line.\n\n## Bigger changes\n\nIf you want to make a bigger change, it's a good idea to first file an issue and make sure someone from the team agrees that it\u2019s needed. \nIf you\u2019ve found a bug, please file an issue that illustrates the bug with a minimal \n[reprex](https://www.tidyverse.org/help/#reprex) (this will also help you write a unit test, if needed).\n\n### Pull request process\n\n*   Fork the package and clone onto your computer. If you haven't done this before, we recommend using `usethis::create_from_github(\"karissawhiting/cbioportalR\", fork = TRUE)`.\n\n*   Install all development dependencies with `devtools::install_dev_deps()`, and then make sure the package passes R CMD check by running `devtools::check()`. \n    If R CMD check doesn't pass cleanly, it's a good idea to ask for help before continuing. \n*   Create a Git branch for your pull request (PR). We recommend using `usethis::pr_init(\"brief-description-of-change\")`.\n\n*   Make your changes, commit to git, and then create a PR by running `usethis::pr_push()`, and following the prompts in your browser.\n    The title of your PR should briefly describe the change.\n    The body of your PR should contain `Fixes #issue-number`.\n\n*  For user-facing changes, add a bullet to the top of `NEWS.md` (i.e. just below the first header). Follow the style described in <https://style.tidyverse.org/news.html>.\n\n### Code style\n\n*   New code should follow the tidyverse [style guide](https://style.tidyverse.org). \n    You can use the [styler](https://CRAN.R-project.org/package=styler) package to apply these styles, but please don't restyle code that has nothing to do with your PR.  \n\n*  We use [roxygen2](https://cran.r-project.org/package=roxygen2), with [Markdown syntax](https://cran.r-project.org/web/packages/roxygen2/vignettes/rd-formatting.html), for documentation.  \n\n*  We use [testthat](https://cran.r-project.org/package=testthat) for unit tests. \n   Contributions with test cases included are easier to accept.  \n\n## Code of Conduct\n\nPlease note that the cbioportalR project is released with a\n[Contributor Code of Conduct](CODE_OF_CONDUCT.md). By contributing to this\nproject you agree to abide by its terms.\n"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/.github/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "type": "Text_excerpt",
        "value": "Please note that {cbioportalR} is released with a [Contributor Code of\nConduct](https://www.karissawhiting.com/cbioportalR/CODE_OF_CONDUCT.html).\nBy contributing to this project, you agree to abide by its terms.\n\nThank you to contributors!\n\n[@arorarshi](https://github.com/arorarshi),\n[@AxelitoMartin](https://github.com/AxelitoMartin),\n[@edrill](https://github.com/edrill),\n[@jalavery](https://github.com/jalavery),\n[@ddsjoberg](https://github.com/ddsjoberg)\n[@karomanchuk](https://github.com/karomanchuk)\n[@hfuchs5](https://github.com/hfuchs5)\n[@alrein-05](https://github.com/alrein-05)\n[@stl2137](https://github.com/stl2137)\n\nThank you [Isaak Liptzin](https://awenfilms.net/) for the hex sticker!\n"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-02-28T19:57:13Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-03-07T22:44:54Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "R package to wrap cBioPortal's API to pull data from public or private cBioPortal databases"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/DESCRIPTION",
        "type": "String",
        "value": "Provides R users with direct access to genomic and clinical data from the 'cBioPortal' web resource via user-friendly\n    functions that wrap 'cBioPortal's' existing API endpoints <https://www.cbioportal.org/api/swagger-ui/index.html>. Users can browse and query genomic data on mutations,\n    copy number alterations and fusions, as well as data on tumor mutational burden ('TMB'),\n    microsatellite instability status ('MSI'), 'FACETS' and select clinical data points (depending on the study). \n    See <https://www.cbioportal.org/> and Gao et al., (2013) <doi:10.1126/scisignal.2004088> for more information on the cBioPortal web resource."
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Provides R users with direct access to genomic and clinical data from the 'cBioPortal' web resource via user-friendly functions that wrap 'cBioPortal's' existing API endpoints <https://www.cbioportal.org/api/swagger-ui/index.html>. Users can browse and query genomic data on mutations, copy number alterations and fusions, as well as data on tumor mutational burden ('TMB'), microsatellite instability status ('MSI'), 'FACETS' and select clinical data points (depending on the study). See <https://www.cbioportal.org/> and Gao et al., (2013) <doi:10.1126/scisignal.2004088> for more information on the cBioPortal web resource."
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9392167373337269,
      "result": {
        "original_header": "cbioportalR <a href='https://www.karissawhiting.com/cbioportalR/'><img src='man/figures/logo.png' align=\"right\" height=\"180\" style=\"align:right; height:180px;\"></a>",
        "type": "Text_excerpt",
        "value": "{cbioportalR} allows you to access\n[cBioPortal\u2019s](https://www.cbioportal.org/) genomic and clinical data\nsets directly through R. The package wraps cBioPortal\u2019s API endpoints so\nR users can easily leverage the [existing\nAPI](https://www.cbioportal.org/api/swagger-ui/index.html) to access\ngenomic data on mutations, copy number alterations and fusions as well\nas data on tumor mutational burden (TMB), microsatellite instability\nstatus (MSI) and select clinical data points (depending on the study). \nThis package was created to work with both the public [cBioPortal\nwebsite](https://www.cbioportal.org/), as well as private institutional\ncBioPortal instances (e.g.\u00a0MSKCC, GENIE) with appropriate credentials\nand [authentication](#authentication). \nThis package is compatible with cBioPortal v5, but is subject to change\nas [cBioPortal updates are\nreleased](https://github.com/cBioPortal/cbioportal/releases). To see if\nyour cBioPortal instance is compatible, look for its version in the\nfooter of the homepage or check `portalVersion` in the output of\n`YOUR_CBIOPORTAL_INSTANCE/api/info`. For more information on cBioPortal,\nsee the following publications: \n*Note: If you are a MSK researcher working on IMPACT data, you should\nconnect to MSK\u2019s cBioPortal instance to get the most up to date IMPACT\ndata, and you must follow the MSK-IMPACT publication guidelines when\nusing this data* \n{cbioportalR} is part of the\n[genomeverse](https://mskcc-epi-bio.github.io/genomeverse/), a\ncollection of R packages designed to work together seamlessly to create\nreproducible clinico-genomic analysis pipelines.\n \n"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9460216009899868,
      "result": {
        "original_header": "Authentication",
        "type": "Text_excerpt",
        "value": "If you are using the public domain <https://www.cbioportal.org/>, you\ndon\u2019t need a token to start pulling data. If you are using a private\ninstance of cBioPortal (like MSKCC\u2019s institutional database), you will\nneed to acquire a token and save it to your `.Renviron` file (or\nwherever you store credentials). Simply log in to your institution\u2019s\ncBioPortal site, acquire a token (usually through the \u2018Data Access\nToken\u2019 link in your username menu in the upper right) and save it in\nyour `.Renviron` file. This will save the token as an environmental\nvariable so you don\u2019t have to hard code the secret key in your scripts. \n*Tip: The following {usethis} function can easily find and open the\n`.Renviron` for you:*\n``` r\nusethis::edit_r_environ()\n```\nPaste the token you were given (using the format below) in the .Renviron\nfile and save the file changes. *After saving you should restart your R\nsession to ensure the token is saved and recognized.*\n``` r\nCBIOPORTAL_TOKEN = 'YOUR_TOKEN'\n```\nYou can test that your token was saved using:\n``` r\nget_cbioportal_token()\n```\nFor every new R session, you need to set your database URL. The\n`set_cbioportal_db()` function will set an environmental variable for\nyour session that tells the package which database to point to for all\nAPI calls. You can set it to point to the public database with\n`db = 'www.cbioportal.org'` or `db = 'public'`. If using a private\ndatabase you will pass your institutions cBioPortal URL as `db`. This\nfunction will both set your URL and check the connection.\n``` r\nset_cbioportal_db(db = \"public\")\n#> \u2714 You are successfully connected!\n#> \u2714 base_url for this R session is now set to \"www.cbioportal.org/api\"\n```\nYou are now set up for the remainder of your session! API calls depend\non your internet connection and possibly a VPN connection so you can use\nthe following to check your connection at any time throughout your\nsession:\n``` r\ntest_cbioportal_db()\n#> \u2714 You are successfully connected!\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9250446428589049,
      "result": {
        "original_header": "cBioPortal Data Model",
        "type": "Text_excerpt",
        "value": "There are many ways to identify and pull data (e.g.\u00a0by study ID, by\nsample ID, by molecular profile ID). Having an understanding of how data\nis organized in cBioPortal will help you determine which functions you\nneed. The figure below outlines the general data schema for cBioPortal\nand which functions access which levels of the schema: \n"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/karissawhiting/cbioportalR/wiki"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/karissawhiting/cbioportalR/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/karissawhiting/cbioportalR/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "karissawhiting/cbioportalR"
      },
      "technique": "GitHub_API"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "description",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/DESCRIPTION",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/DESCRIPTION",
        "type": "Url",
        "value": "DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "homepage": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://www.karissawhiting.com/cbioportalR/"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cbioportalR"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/man/figures/readme-cbp-diagram.png"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/man/figures/readme-cbp-diagram.png"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "You can install {cbioportalR} with the following code:\n\n``` r\ninstall.packages(\"cbioportalR\")\n```\n\nInstall the development version of {cbioportalR} with:\n\n``` r\nremotes::install_github(\"karissawhiting/cbioportalR\")\n```\n\nLoad the package:\n\n``` r\nlibrary(cbioportalR)\n```\n"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/karissawhiting/cbioportalR/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/karissawhiting/cbioportalR/issues"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/karissawhiting/cbioportalR/issues"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "r-package"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "r-package"
        ]
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "File_dump",
        "value": "# MIT License\n\nCopyright (c) 2020 Karissa Whiting\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/LICENSE.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/DESCRIPTION",
        "type": "String",
        "value": "MIT + file LICENSE"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/MIT",
        "spdx_id": "https://spdx.org/licenses/MIT",
        "type": "License",
        "value": "https://spdx.org/licenses/MIT"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cbioportalR"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cbioportalR: Browse and Query Clinical and Genomic Data from cBioPortal"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "karissawhiting"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/DESCRIPTION",
        "type": "String",
        "value": "cbioportalR"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 132779,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 205,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "type": "Programming_language",
        "url": "https://r-project.org",
        "value": "R",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://github.com/karissawhiting/cbioportalR/blob/main/README.md"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "karissawhiting",
          "type": "User"
        },
        "date_created": "2024-11-19T20:45:55Z",
        "date_published": "2024-11-25T16:36:59Z",
        "description": "* Fixed bug in `available_studies()` that arose with underlying API change from V2 to V3.\n* Added `lookup_id()` function to return all samples that exist across cBioPortal for a given patient ID (#65).\n* Re-submitted to CRAN after removed due to linux issues\n",
        "html_url": "https://github.com/karissawhiting/cbioportalR/releases/tag/v1.1.1",
        "name": "cbioportalR 1.1.1",
        "release_id": 187341770,
        "tag": "v1.1.1",
        "tarball_url": "https://api.github.com/repos/karissawhiting/cbioportalR/tarball/v1.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/karissawhiting/cbioportalR/releases/187341770",
        "value": "https://api.github.com/repos/karissawhiting/cbioportalR/releases/187341770",
        "zipball_url": "https://api.github.com/repos/karissawhiting/cbioportalR/zipball/v1.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "karissawhiting",
          "type": "User"
        },
        "date_created": "2023-10-05T15:32:47Z",
        "date_published": "2023-10-05T19:37:08Z",
        "description": "* Added `available_sample_lists()` function which returns all available sample list IDs for a given study ID\n* Added `sample_list_id` argument to `available_samples()` which returns all samples IDs in specific sample list within a study (#53).\n* Fixed {cli} errors to make package compatible with {cli} \u2265 v3.4.1.\n* Added CNA segmentation retrieval endpoint accessible via `get_segments_by_sample()` and `get_segments_by_study()`). You can use `get_genomics_by_*(return_segments = TRUE)` as well to access this data.\n",
        "html_url": "https://github.com/karissawhiting/cbioportalR/releases/tag/v1.1.0",
        "name": "cbioportalR 1.1.0",
        "release_id": 123924782,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/karissawhiting/cbioportalR/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/karissawhiting/cbioportalR/releases/123924782",
        "value": "https://api.github.com/repos/karissawhiting/cbioportalR/releases/123924782",
        "zipball_url": "https://api.github.com/repos/karissawhiting/cbioportalR/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "karissawhiting",
          "type": "User"
        },
        "date_created": "2022-08-28T23:26:48Z",
        "date_published": "2022-09-28T13:59:09Z",
        "description": "This version makes the package compatible with [cBioPortal v5.0](https://github.com/cBioPortal/cbioportal/releases/tag/v5.0.0). Main updates include:\r\n\r\n* Fusion API endpoint URLs updated to use `structural-variant` instead of `fusion` in specification.\r\n* `get_structural_variants_by_sample()` and `get_structural_variants_by_study()` added as aliases for `get_fusions_by_sample()` and `get_fusions_by_study()`. These functions return the same results as their fusion counterparts and both names will be supported.\r\n* When functions include the `data_type` argument, `structural_variant` is now available as option. This will return the same results as `fusion`.\r\n* Output of `get_genetics_by_sample()` and `get_genetics_by_study()` functions are now named lists with names: `mutation`, `cna`, and `structural_variant` (changed from `fusion`) to be consistent with cBioPortal v5.0 naming conventions. \r\n* Tests and examples are no longer run on CRAN to protect from future changes to internal database. They are still run in Github Actions and examples are run on website.\r\n* Some examples adjusted to use a new cBioPortal profile name, as needed (e.g. `prad_msk_2019_structural_variants` ->  `prad_msk_2019_structural_variants`)\r\n* bug fix in `add_hugo` argument of `get_*_by_sample()` functions.\r\n",
        "html_url": "https://github.com/karissawhiting/cbioportalR/releases/tag/v1.0.1",
        "name": "cbioportalR 1.0.1",
        "release_id": 78448434,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/karissawhiting/cbioportalR/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/karissawhiting/cbioportalR/releases/78448434",
        "value": "https://api.github.com/repos/karissawhiting/cbioportalR/releases/78448434",
        "zipball_url": "https://api.github.com/repos/karissawhiting/cbioportalR/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "karissawhiting",
          "type": "User"
        },
        "date_created": "2022-08-01T16:35:27Z",
        "date_published": "2022-08-10T16:31:23Z",
        "description": "This is the first release submitted to CRAN, and includes all updates made since last Github release v0.1.0 (see [NEWS](https://www.karissawhiting.com/cbioportalR/news/index.html) for details on intermediate pre-CRAN versions). Package has been overhauled since first release (v0.1.0), and code will not be backwards compatible with that version. Future versions will be backwards compatible with v1.0.0.\r\n\r\n### Summary of Updates (since 0.1.0)\r\n\r\n* Authentication schema has been updated. Package-level environmental variable can now be set that specifies login credentials for that session\r\n* Functionality to pull fusion data has been added\r\n* Users can pull data by study ID, sample ID, and patient ID\r\n* Update `get_genomics_by_sample()` and related functions to pull all gene data available for select samples instead of pulling data for IMPACT genes only by default \r\n* Allow users to pass Hugo Symbols or Panel IDs to all `get_genomics_by_sample()` and related functions. \r\n",
        "html_url": "https://github.com/karissawhiting/cbioportalR/releases/tag/v1.0.0",
        "name": "cbioportalR 1.0.0",
        "release_id": 74122843,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/karissawhiting/cbioportalR/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/karissawhiting/cbioportalR/releases/74122843",
        "value": "https://api.github.com/repos/karissawhiting/cbioportalR/releases/74122843",
        "zipball_url": "https://api.github.com/repos/karissawhiting/cbioportalR/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "karissawhiting",
          "type": "User"
        },
        "date_created": "2022-02-17T22:27:05Z",
        "date_published": "2022-02-17T22:47:22Z",
        "description": "* First release \r\n",
        "html_url": "https://github.com/karissawhiting/cbioportalR/releases/tag/v0.1.0",
        "name": "cbioportalR 0.1.0",
        "release_id": 59858244,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/karissawhiting/cbioportalR/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/karissawhiting/cbioportalR/releases/59858244",
        "value": "https://api.github.com/repos/karissawhiting/cbioportalR/releases/59858244",
        "zipball_url": "https://api.github.com/repos/karissawhiting/cbioportalR/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 02:35:44",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 22
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples",
        "type": "Text_excerpt",
        "value": "To see available studies in your database you can use:\n\n``` r\navailable_studies() %>% \n  head(n = 10)\n#> # A tibble: 10 \u00d7 13\n#>    studyId name  description publicStudy pmid  citation groups status importDate\n#>    <chr>   <chr> <chr>       <lgl>       <chr> <chr>    <chr>   <int> <chr>     \n#>  1 acyc_m\u2026 Aden\u2026 Whole-exom\u2026 TRUE        2368\u2026 Ho et a\u2026 \"ACYC\u2026      0 2023-12-0\u2026\n#>  2 acyc_f\u2026 Aden\u2026 Targeted S\u2026 TRUE        2441\u2026 Ross et\u2026 \"ACYC\u2026      0 2023-12-0\u2026\n#>  3 acyc_j\u2026 Aden\u2026 Whole-geno\u2026 TRUE        2686\u2026 Rettig \u2026 \"ACYC\u2026      0 2023-12-0\u2026\n#>  4 acyc_m\u2026 Aden\u2026 WGS of 21 \u2026 TRUE        2663\u2026 Mitani \u2026 \"ACYC\u2026      0 2023-12-0\u2026\n#>  5 acyc_m\u2026 Aden\u2026 Whole-geno\u2026 TRUE        2682\u2026 Drier e\u2026 \"ACYC\"      0 2023-12-0\u2026\n#>  6 acyc_s\u2026 Aden\u2026 Whole exom\u2026 TRUE        2377\u2026 Stephen\u2026 \"ACYC\u2026      0 2023-12-0\u2026\n#>  7 bcc_un\u2026 Basa\u2026 Whole-exom\u2026 TRUE        2695\u2026 Bonilla\u2026 \"PUBL\u2026      0 2023-12-0\u2026\n#>  8 all_st\u2026 Acut\u2026 Comprehens\u2026 TRUE        2573\u2026 Anderss\u2026 \"PUBL\u2026      0 2023-12-0\u2026\n#>  9 ampca_\u2026 Ampu\u2026 Exome sequ\u2026 TRUE        2680\u2026 Gingras\u2026 \"PUBL\u2026      0 2023-12-0\u2026\n#> 10 all_st\u2026 Hypo\u2026 Whole geno\u2026 TRUE        2333\u2026 Holmfel\u2026 \"\"          0 2023-12-0\u2026\n#> # \u2139 4 more variables: allSampleCount <int>, readPermission <lgl>,\n#> #   cancerTypeId <chr>, referenceGenome <chr>\n```\n\nTo view study metadata on a particular study you can use:\n\n``` r\nget_study_info(\"acc_tcga\") %>% \n  t()\n#>                             [,1]                                                                                                                                                                                             \n#> name                        \"Adrenocortical Carcinoma (TCGA, Firehose Legacy)\"                                                                                                                                               \n#> description                 \"TCGA Adrenocortical Carcinoma. Source data from <A HREF=\\\"http://gdac.broadinstitute.org/runs/stddata__2016_01_28/data/ACC/20160128/\\\">GDAC Firehose</A>. Previously known as TCGA Provisional.\"\n#> publicStudy                 \"TRUE\"                                                                                                                                                                                           \n#> groups                      \"PUBLIC\"                                                                                                                                                                                         \n#> status                      \"0\"                                                                                                                                                                                              \n#> importDate                  \"2024-01-19 09:11:57\"                                                                                                                                                                            \n#> allSampleCount              \"92\"                                                                                                                                                                                             \n#> sequencedSampleCount        \"90\"                                                                                                                                                                                             \n#> cnaSampleCount              \"90\"                                                                                                                                                                                             \n#> mrnaRnaSeqSampleCount       \"0\"                                                                                                                                                                                              \n#> mrnaRnaSeqV2SampleCount     \"79\"                                                                                                                                                                                             \n#> mrnaMicroarraySampleCount   \"0\"                                                                                                                                                                                              \n#> miRnaSampleCount            \"0\"                                                                                                                                                                                              \n#> methylationHm27SampleCount  \"0\"                                                                                                                                                                                              \n#> rppaSampleCount             \"46\"                                                                                                                                                                                             \n#> massSpectrometrySampleCount \"0\"                                                                                                                                                                                              \n#> completeSampleCount         \"75\"                                                                                                                                                                                             \n#> readPermission              \"TRUE\"                                                                                                                                                                                           \n#> treatmentCount              \"0\"                                                                                                                                                                                              \n#> structuralVariantCount      \"0\"                                                                                                                                                                                              \n#> studyId                     \"acc_tcga\"                                                                                                                                                                                       \n#> cancerTypeId                \"acc\"                                                                                                                                                                                            \n#> cancerType.name             \"Adrenocortical Carcinoma\"                                                                                                                                                                       \n#> cancerType.dedicatedColor   \"Purple\"                                                                                                                                                                                         \n#> cancerType.shortName        \"ACC\"                                                                                                                                                                                            \n#> cancerType.parent           \"adrenal_gland\"                                                                                                                                                                                  \n#> cancerType.cancerTypeId     \"acc\"                                                                                                                                                                                            \n#> referenceGenome             \"hg19\"\n```\n\nTo pull all genomic data for a particular study you can use:\n\n``` r\ndf <- get_genetics_by_study(study_id = \"acc_tcga\")\n#> \u2139 Returning all data for the \"acc_tcga_mutations\" molecular profile in the \"acc_tcga\" study\n#> \u2139 Returning all data for the \"acc_tcga_gistic\" molecular profile in the \"acc_tcga\" study\n#> ! No \"structural_variant\" data returned. Error:  No molecular profile for `data_type = fusion` found in \"acc_tcga\".  See `available_profiles('acc_tcga')`\n```\n\nAs a result, you will get a list of data frames with mutation and CNA\ndata respectively. The function will also try to pull fusion (structural\nvariant) data, but there is no fusion data available for this study, as\nindicated by the function message.\n\n``` r\ndf$mutation %>% \n  head()\n#> # A tibble: 6 \u00d7 28\n#>   hugoGeneSymbol entrezGeneId uniqueSampleKey                  uniquePatientKey \n#>   <chr>                 <int> <chr>                            <chr>            \n#> 1 KRT8                   3856 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026\n#> 2 LCE1B                353132 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026\n#> 3 DNAH14               127602 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026\n#> 4 KLRB1                  3820 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026\n#> 5 SALL2                  6297 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026\n#> 6 TMEM266              123591 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026\n#> # \u2139 24 more variables: molecularProfileId <chr>, sampleId <chr>,\n#> #   patientId <chr>, studyId <chr>, center <chr>, mutationStatus <chr>,\n#> #   validationStatus <chr>, tumorAltCount <int>, tumorRefCount <int>,\n#> #   normalAltCount <int>, normalRefCount <int>, startPosition <int>,\n#> #   endPosition <int>, referenceAllele <chr>, proteinChange <chr>,\n#> #   mutationType <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>,\n#> #   chr <chr>, variantAllele <chr>, refseqMrnaId <chr>, \u2026\n\ndf$cna %>% \n  head()\n#> # A tibble: 6 \u00d7 9\n#>   hugoGeneSymbol entrezGeneId uniqueSampleKey                  uniquePatientKey \n#>   <chr>                 <int> <chr>                            <chr>            \n#> 1 MEF2B             100271849 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026\n#> 2 FRS2                  10818 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026\n#> 3 LRP1B                 53353 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026\n#> 4 KMT2A                  4297 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026\n#> 5 PC                     5091 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026\n#> 6 CCNE1                   898 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026\n#> # \u2139 5 more variables: molecularProfileId <chr>, sampleId <chr>,\n#> #   patientId <chr>, studyId <chr>, alteration <int>\n```\n\nYou can also pull data by specific sample IDs but the API requires a bit\nmore information from you (unlike pulling by study ID which returns\neverything available for that study). This can be useful when working\nwithin a very large database or working across samples housed in\nmultiple different studies. When querying by `sample_id` you must also\nspecify the corresponding `study_id` in which the samples are housed.\nWhen these pieces of information are not provided, {cbioportalR} makes\nan informed guess based on your connection and will throw an informative\nmessage to clarify exactly what is being queried. In the example below,\nthe function defaults to the public version of the IMPACT database\n(`study_id = \"msk_impact_2017\"`).\n\n``` r\nsamples <- available_samples(study_id = \"acc_tcga\") %>%\n  pull(sampleId) %>%\n  head(n = 10)\n\nmutations <- get_mutations_by_sample(sample_id =  samples)\n#> The following parameters were used in query:\n#> Study ID: \"msk_impact_2017\"\n#> Molecular Profile ID: \"msk_impact_2017_mutations\"\n#> Genes: \"All available genes\"\n\n# no results returned because these samples are not in this study\nlength(mutations) == 0\n#> [1] TRUE\n```\n\nNo results were returned because the samples are not stored in this\nstudy. When we specify the correct study (`study_id = \"acc_tcga\"`), we\nget accurate results. You can check which samples are stored in a study\nusing `available_samples(study_id = \"acc_tcga\")`.\n\n``` r\nmutations <- get_mutations_by_sample(sample_id =  samples,\n                                    study_id = \"acc_tcga\")\n#> The following parameters were used in query:\n#> Study ID: \"acc_tcga\"\n#> Molecular Profile ID: \"acc_tcga_mutations\"\n#> Genes: \"All available genes\"\n\nmutations %>%\n  head()\n#> # A tibble: 6 \u00d7 28\n#>   hugoGeneSymbol entrezGeneId uniqueSampleKey                  uniquePatientKey \n#>   <chr>                 <int> <chr>                            <chr>            \n#> 1 KRT8                   3856 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026\n#> 2 LCE1B                353132 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026\n#> 3 DNAH14               127602 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026\n#> 4 KLRB1                  3820 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026\n#> 5 SALL2                  6297 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026\n#> 6 TMEM266              123591 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026\n#> # \u2139 24 more variables: molecularProfileId <chr>, sampleId <chr>,\n#> #   patientId <chr>, studyId <chr>, center <chr>, mutationStatus <chr>,\n#> #   validationStatus <chr>, tumorAltCount <int>, tumorRefCount <int>,\n#> #   normalAltCount <int>, normalRefCount <int>, startPosition <int>,\n#> #   endPosition <int>, referenceAllele <chr>, proteinChange <chr>,\n#> #   mutationType <chr>, ncbiBuild <chr>, variantType <chr>, keyword <chr>,\n#> #   chr <chr>, variantAllele <chr>, refseqMrnaId <chr>, \u2026\n```\n\nLastly, you can also pull clinical data or sample metadata (e.g.\u00a0tumor\nsample site) by study ID, sample ID or patient ID. To see what data is\navailable, you can use:\n\n``` r\navailable_clinical_attributes(study_id = \"acc_tcga\") %>%\n  head()\n#> # A tibble: 6 \u00d7 7\n#>   displayName description datatype patientAttribute priority clinicalAttributeId\n#>   <chr>       <chr>       <chr>    <lgl>            <chr>    <chr>              \n#> 1 Diagnosis \u2026 Age at whi\u2026 NUMBER   TRUE             1        AGE                \n#> 2 Neoplasm D\u2026 The extent\u2026 STRING   TRUE             1        AJCC_PATHOLOGIC_TU\u2026\n#> 3 American J\u2026 The versio\u2026 STRING   TRUE             1        AJCC_STAGING_EDITI\u2026\n#> 4 Atypical M\u2026 Atypical M\u2026 STRING   TRUE             1        ATYPICAL_MITOTIC_F\u2026\n#> 5 Cancer Type Cancer type STRING   FALSE            1        CANCER_TYPE        \n#> 6 Cancer Typ\u2026 Cancer typ\u2026 STRING   FALSE            1        CANCER_TYPE_DETAIL\u2026\n#> # \u2139 1 more variable: studyId <chr>\n```\n\n``` r\nget_clinical_by_study(\"acc_tcga\")\n#> ! Sample Level Clinical Data: No `clinical_attribute` passed. Defaulting to returning all clinical attributes in \"acc_tcga\" study\n#> ! Patient Level Clinical Data: No `clinical_attribute` passed. Defaulting to returning all clinical attributes in \"acc_tcga\" study\n#> # A tibble: 6,292 \u00d7 7\n#>    uniquePatientKey        patientId studyId clinicalAttributeId value dataLevel\n#>    <chr>                   <chr>     <chr>   <chr>               <chr> <chr>    \n#>  1 VENHQS1PUi1BNUoxOmFjY1\u2026 TCGA-OR-\u2026 acc_tc\u2026 AGE                 58    PATIENT  \n#>  2 VENHQS1PUi1BNUoxOmFjY1\u2026 TCGA-OR-\u2026 acc_tc\u2026 AJCC_PATHOLOGIC_TU\u2026 Stag\u2026 PATIENT  \n#>  3 VENHQS1PUi1BNUoxOmFjY1\u2026 TCGA-OR-\u2026 acc_tc\u2026 ATYPICAL_MITOTIC_F\u2026 Atyp\u2026 PATIENT  \n#>  4 VENHQS1PUi1BNUoxOmFjY1\u2026 TCGA-OR-\u2026 acc_tc\u2026 CAPSULAR_INVASION   Inva\u2026 PATIENT  \n#>  5 VENHQS1PUi1BNUoxOmFjY1\u2026 TCGA-OR-\u2026 acc_tc\u2026 CLIN_M_STAGE        M0    PATIENT  \n#>  6 VENHQS1PUi1BNUoxOmFjY1\u2026 TCGA-OR-\u2026 acc_tc\u2026 CT_SCAN_PREOP_RESU\u2026 [Unk\u2026 PATIENT  \n#>  7 VENHQS1PUi1BNUoxOmFjY1\u2026 TCGA-OR-\u2026 acc_tc\u2026 CYTOPLASM_PRESENCE\u2026 Cyto\u2026 PATIENT  \n#>  8 VENHQS1PUi1BNUoxOmFjY1\u2026 TCGA-OR-\u2026 acc_tc\u2026 DAYS_TO_INITIAL_PA\u2026 0     PATIENT  \n#>  9 VENHQS1PUi1BNUoxOmFjY1\u2026 TCGA-OR-\u2026 acc_tc\u2026 DFS_MONTHS          24.77 PATIENT  \n#> 10 VENHQS1PUi1BNUoxOmFjY1\u2026 TCGA-OR-\u2026 acc_tc\u2026 DFS_STATUS          1:Re\u2026 PATIENT  \n#> # \u2139 6,282 more rows\n#> # \u2139 1 more variable: sampleId <chr>\n```\n\n``` r\nget_clinical_by_sample(sample_id = samples, study_id = \"acc_tcga\") %>%\n  head(10)\n#> ! No `clinical_attribute` passed. Defaulting to returning\n#> all clinical attributes in \"acc_tcga\" study\n#> # A tibble: 10 \u00d7 7\n#>    uniqueSampleKey                  uniquePatientKey  sampleId patientId studyId\n#>    <chr>                            <chr>             <chr>    <chr>     <chr>  \n#>  1 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026 TCGA-OR\u2026 TCGA-OR-\u2026 acc_tc\u2026\n#>  2 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026 TCGA-OR\u2026 TCGA-OR-\u2026 acc_tc\u2026\n#>  3 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026 TCGA-OR\u2026 TCGA-OR-\u2026 acc_tc\u2026\n#>  4 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026 TCGA-OR\u2026 TCGA-OR-\u2026 acc_tc\u2026\n#>  5 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026 TCGA-OR\u2026 TCGA-OR-\u2026 acc_tc\u2026\n#>  6 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026 TCGA-OR\u2026 TCGA-OR-\u2026 acc_tc\u2026\n#>  7 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026 TCGA-OR\u2026 TCGA-OR-\u2026 acc_tc\u2026\n#>  8 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026 TCGA-OR\u2026 TCGA-OR-\u2026 acc_tc\u2026\n#>  9 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026 TCGA-OR\u2026 TCGA-OR-\u2026 acc_tc\u2026\n#> 10 VENHQS1PUi1BNUoxLTAxOmFjY190Y2dh VENHQS1PUi1BNUox\u2026 TCGA-OR\u2026 TCGA-OR-\u2026 acc_tc\u2026\n#> # \u2139 2 more variables: clinicalAttributeId <chr>, value <chr>\n```\n\n``` r\npatients <- available_patients(study_id = \"acc_tcga\") %>%\n  pull(patientId) %>%\n  head(n = 10)\n\nget_clinical_by_patient(patient_id = patients, study_id = \"acc_tcga\", \n                        clinical_attribute = \"AGE\") %>%\n  head(10)\n```\n\nAll functions that pull by study IDs are limited to pulling data from\none study at a time. If you need to pull specific samples from multiple\nstudies, you likely want to pull by sample ID (instead of study ID) and\nsupply the function with a dataframe of `sample_study_pairs` that\nspecify where the function should look for each study. For more\ninformation see the [Overview of Workflow\nVignette](https://www.karissawhiting.com/cbioportalR/articles/overview-of-workflow.html).\n"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/DESCRIPTION",
        "type": "String",
        "value": "1.1.1"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "1.1.1"
      },
      "source": "https://raw.githubusercontent.com/karissawhiting/cbioportalR/main/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
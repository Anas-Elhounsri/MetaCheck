{
  "application_domain": [
    {
      "confidence": 0.8291656189686055,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "The SCEC Broadband Platform (BBP) Software"
        ],
        "type": "Text_excerpt",
        "value": "References, citations, and acknowledgements help us obtain continued support for the development of the BBP software. If you use the BBP software in your research, please include the citation of the BBP paper in the references/bibliography section of your publication. This is more effective than you providing in-text acknowledgements.\r\n\r\n* Preferred Reference: Maechling, P. J., F. Silva, S. Callaghan, and T. H. Jordan (2015). SCEC Broadband Platform: System Architecture and Software Implementation, Seismol. Res. Lett., 86, no. 1, doi: 10.1785/0220140125.\r\n\r\n* Example Acknowlegement: We would like to acknowledge the use of the SCEC Broadband Platform Software (Maechling 2015) in this research.\r\n\r\nAlong with citing the BBP software, researchers should also cite the appropriate publication for any of the ground motion models they use in their research. Citations for individual ground motion methods are included in the [Credits.md](CREDITS.md) file in this repository.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Credits",
        "parent_header": [
          "The SCEC Broadband Platform (BBP) Software"
        ],
        "type": "Text_excerpt",
        "value": "Development of BBP is a group effort. A list of developers that have contributed to the BBP Software framework\r\nare listed in the [Credits.md](CREDITS.md) file in this repository.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at software@scec.org. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://www.contributor-covenant.org/), version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SCECcode/bbp"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/jsh9/PySeismoSoil"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/setup.py",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/.github/workflows/bbp-ci.yml"
      },
      "technique": "file_exploration"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing to the SCEC Broadband Platform (BBP) System\n\nThis document provides an overview on how to contribute to BBP, and will provide step-by-step instructions on a practical contribution workflow.\n\n## Getting Started\n\n* Make sure you have an active GitHub account\n* Download and install git\n* Read the git documentation\n* Install the main branch of the SCECcode/bbp.git repository\n* If you haven't worked with Git Forks before, make sure to read the documentation linked below.\n\n## Submitting a Pull Request\n\nPull requests are great! Please submit them to us! Here's how:\n\n1. Fork the repo. [Some helping info](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/working-with-forks)\n2. Make a new branch. For features/additions base your new branch at `dev`.\n3. Add a test! Only pull requests for documentation and refactoring do not require a test.\n4. Make sure the tests pass. Run `./run_tests.sh` in the top-level directory of the repo.\n5. Push your changes to your fork and submit a pull request. Make sure to set the branch to `ucvm:dev`.\n6. Wait for our review. There may be some suggested changes or improvements. Changes can be made after\nthe pull request has been opening by simply adding more commits to your branch.\n\nPull requests can be changed after they are opened, so create a pull request as early as possible.\nThis allows us to provide feedback during development and to answer any questions.\n\nPlease make sure to set the correct branch for your pull request. Also, please do not include large files in your pull request.\nIf you feel that you need to add large files, let us know and we can figure something out.\n\n## Submitting an Issue\n\nPlease open an issue if you want to ask a question about BBP.\n\n* Please search through the past issues to see if your question or the bug has already been addressed\n* Please apply the correct tag to your issue so others can search\n\nIf you want to submit a bug report, please provide the information below:\n* BBP version, Python version, and Platform (Linux, Windows, Mac OSX, etc)\n* How did you install BBP (Docker, from source...)\n* Please provide a short, complete, and correct example that demonstrates the issue.\n* If this broke in a recent update, please tell us when it used to work.\n\n## Additional Resources\n* [Working with Git Forks](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/working-with-forks)\n* [Style Guide](http://google.github.io/styleguide/pyguide.html)\n* [Docs or it doesn\u2019t exist](https://lukeplant.me.uk/blog/posts/docs-or-it-doesnt-exist/)\n* Performance Tips:\n  * [Python](https://wiki.python.org/moin/PythonSpeed/PerformanceTips)\n  * [NumPy and ctypes](https://scipy-cookbook.readthedocs.io/)\n  * [SciPy](https://www.scipy.org/docs.html)\n  * [NumPy Book](http://csc.ucdavis.edu/~chaos/courses/nlp/Software/NumPyBook.pdf)\n"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "The SCEC Broadband Platform (BBP) Software"
        ],
        "type": "Text_excerpt",
        "value": "We welcome contributions to the BBP software framework.\r\nGeoscientists can register their ground motion models into BBP and software developers can\r\nimprove and extend the BBP software. An overview of the process for contributing seismic models or\r\nsoftware updates to the BBP Project is provided in the BBP [contribution guidelines](CONTRIBUTING.md).\r\nBBP contributors agree to abide by the code of conduct found in our [Code of Conduct](CODE_OF_CONDUCT.md) guidelines.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-06-21T18:22:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-09-04T18:55:56Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SCEC Broadband Platform"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PySeismoSoil"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Description",
        "parent_header": [
          "The SCEC Broadband Platform (BBP) Software"
        ],
        "type": "Text_excerpt",
        "value": "The Southern California Earthquake Center (SCEC) Broadband Platform (BBP) is a software system that can generate 0-20+ Hz seismograms for historical and scenario earthquakes in California, Eastern North America, and Japan using several alternative computational methods.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/SCECcode/bbp/wiki"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SCECcode/bbp/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Demo_06_SVM.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Demo_06_SVM.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Demo_07_Site_Factors.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Demo_07_Site_Factors.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Pipeline_06_Batch_Simulation.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Pipeline_06_Batch_Simulation.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Demo_05_Parameters.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Demo_05_Parameters.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Pipeline_01_Site_Effects_Adjustments.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Pipeline_01_Site_Effects_Adjustments.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Demo_03_Frequency_Spectrum.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Demo_03_Frequency_Spectrum.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Demo_01_Ground_Motion.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Demo_01_Ground_Motion.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Pipeline_02_HH_Calibration.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Pipeline_02_HH_Calibration.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Pipeline_03_Linear_Method.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Pipeline_03_Linear_Method.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Demo_04_Curves.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Demo_04_Curves.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Pipeline_04_Equivalent_Linear_Method.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Pipeline_04_Equivalent_Linear_Method.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Demo_02_Vs_Profile.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Demo_02_Vs_Profile.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Pipeline_05_Nonlinear_Method.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/examples/Pipeline_05_Nonlinear_Method.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 34
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SCECcode/bbp/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SCECcode/bbp"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The SCEC Broadband Platform (BBP) Software"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "setup.py",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/setup.py"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/setup.py",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/utils/batch/create_supertable.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/utils/batch/setup_bbp_env.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/utils/batch/pbs/setup_bbp_epicenter_env.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/.github/scripts/bbp-build-ci.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/.github/scripts/bbp-test-ci.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/setup/easy_install_bbp_22.4.0.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sceccode/bbp/wiki/images/SRL_Cover_v8.png"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Installing the Broadband Platform involves obtaining a copy of the code and building the required executables. You can either download the tar.gz platform from BBP's GitHub releases page or check the code out of GitHub directly.\n\n### Software Dependencies\n\nThe Broadband Platform has the following software dependencies in order to compile and run:\n\n* Python v3.6.7+ with\n  * Matplotlib 3.3.0+\n  * NumPy 1.18.5+\n  * SciPy 1.4.1+\n  * Pyproj 2.6.1+\n  * Numba 0.55.2+\n* GNU compilers (gcc, gfortran) 8.3+\n  * FFTW library 3.3.8\n\nPlease make sure they are installed in your computer before you continue with the BBP installation process. Depending on the specific NumPy, SciPy, and Matplotlib versions users installed in their systems, they may experience certain \"Future Warning\" messages while running the BBP. In this case, upgrading NumPy, SciPy, and/or Matplotlib will usually make the warning messages disappear. We used the package versions listed above to run the Unit and Acceptance tests.\n\n### Easy Installation\n\nMost users will want to use the easy installation procedure described below to install the Broadband Platform to their systems. We recommend that users that want to use the Broadband Platform download the tar.gz file available on GitHub's release page. For advanced users, who would like to make modifications to the BBP and contribute these modifications back to us, we recommend they clone our repository so that it is easier to track their changes to the software.\n\nTo install the Broadband Platform on your computer using the easy installation script, please follow these steps:\n\n* Create a directory on your computer where you want all Broadband packages to be installed:\n\n```\n  $ cd /home/sarah\n  $ mkdir bbp\n  $ cd /home/sarah/bbp\n```\n\nThen, users can use one of the two method below to obtain a copy of the Broadband Platform software distribution:\n\n#### Downloading the tar file from GitHub\n\nAs mentioned above, one option to obtain the Broadband Platform source distribution is to download a release 'tar.gz' or 'zip' file directly from GitHub's releases page.\n\n* Download the .tar.gz file from GitHub's releases page into the recently-created directory\n* Uncompress the downloaded file\n\n```\n  $ tar -xzf bbp-22.4.0.tar.gz\n```\n\n* Delete the tar.gz file as it will not be needed anymore (optional)\n\n#### Cloning the Broadband repository from GitHub\n\nAnother option is for users to clone the Broadband repository from GitHub using the following command:\n\n```\n $ git clone https://github.com/SCECcode/bbp.git bbp-22.4.0\n```\n\nEither way, after one of the steps above users should have the Broadband Platform source distribution downloaded into their computers. Then, the next steps are:\n\n* Run the easy installation script located in the setup sub-directory.\n\n```\n  $ cd bbp-22.4.0/setup\n  $ ./easy_install_bbp_22.4.0.sh\n```\n\nThe easy installation script will create a number of other directories inside your top-level bbp directory (/home/sarah/bbp). It will compile the codes in the BBP source distribution, and it will then ask the user which BBP packages should be installed. Each package contains a region (e.g. LA Basin, Northern California, etc). The user should select 1 (Yes) to install the package, or 2 (No) to skip it. Please note that the LA Basin region is required for running the Unit and Acceptance tests provided with the Broadband Platform.\n\nAfter asking the user about each of the 6 available regions, the easy install script will download and install of these regions. This process can take a while (possibly several hours) when users select several simulation regions. At the end of the installation process, the script will print a number of commands that should be inserted in the user's .bash_profile file. In the example above, you will see an output like:\n\n```\n=> All Done!\n\nPlease add the following lines to your bash_profile:\n\nexport BBP_DIR=/home/sarah/bbp/bbp-19.4.0/bbp\nexport BBP_GF_DIR=/home/sarah/bbp/bbp_gf\nexport BBP_VAL_DIR=/home/sarah/bbp/bbp_val\nexport PYTHONPATH=/home/sarah/bbp/bbp-19.4.0/bbp/comps\nexport BBP_DATA_DIR=/home/sarah/bbp/bbp_data\nexport PATH=/home/sarah/bbp/bbp-19.4.0/bbp/comps:/home/sarah/bbp/bbp-19.4.0/bbp/utils/batch:$PATH\nulimit -s unlimited\n```\n\nAfter installing the Broadband Platform on their systems, users should confirm the code is built correctly by [running Unit and Acceptance Tests](./Running-Tests) before starting to use the code for research purposes.\n\n\n### Using a User Response File\nIf you are performing repeated installations, you may want to put the required inputs into a file and run the installation as a script, something like the following:\n\nCreate install_inputs.txt containing these lines:\n1\n1\n1\n1\n1\n1\n1\n\n\nThen, in bbp setup directory: (e.g. /home/scec-00/maechlin/bbp/bbp/setup)\n\n./easy_install_bbp_22.4.0.sh < install_all_inputs.txt &> install_results.log &\n\nThis will run the installation in the background without any users interactions, and will write stdout and error messages to the install_results.log file.\n"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/doc/Installation.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "The SCEC Broadband Platform (BBP) Software"
        ],
        "type": "Text_excerpt",
        "value": "\r\nBBP was developed to support ground simulations run on Linux servers and high-performance computing systems,\r\nso it is designed to compile and run on Linux-based computers. Before installing BBP, they should be aware that it is\r\npossible to run some versions of the BBP software without installing the software on a Linux computer.\r\nBelow we outline the two options for running the BBP software:\r\n\r\n1. [BBP Docker Images](https://github.com/sceccode/bbp_docker) Users can run a version of BBP using Docker on their\r\nlocal computers including laptops. The BBP Docker version contains an LA-Basin region velocity model, and three validation events in that regeion.\r\nUsers can install free Docker software on most computers (e.g. Linux, MacOS, Windows) then run a BBP Docker image in a terminal window on their computer.\r\n2. [Installation Instructions for Linux Systems](https://github.com/SCECcode/bbp/wiki/Installation)\r\nAdvanced users that want to install many or all of the BBP simulation regions models, or that want to run large\r\nparallel queries of the CVM models, should install the BBP software on a Linux system. BBP software is developed\r\non USC Center for Advanced Research Computing (CARC) Linux cluster.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SCECcode/bbp/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "broadband-seismograms, earthquakes, seismology"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause",
        "spdx_id": "BSD-2-Clause",
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2019, California Institute of Technology, based on research \nsupported by the National Science Foundation (NSF) Cooperative Agreement \nEAR-1033462 and the U.S. Geological Survey (USGS) Cooperative Agreement \nG12AC20038. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "License",
        "value": "BSD 3"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "The SCEC Broadband Platform (BBP) Software"
        ],
        "type": "Text_excerpt",
        "value": "The SCEC-developed portions of the Broadband platform software is distributed under the BSD 3-Clause open-source license.\r\nPlease see the [LICENSE.txt](LICENSE.txt) file for more information. Individual models codes may be offered under their own open-source software licenses.\r\n"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bbp"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "SCECcode"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PySeismoSoil"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/setup.py",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 6322567,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 3026846,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Roff",
        "size": 2937014,
        "type": "Programming_language",
        "value": "Roff"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Fortran",
        "size": 2334344,
        "type": "Programming_language",
        "value": "Fortran"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 1710968,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 214702,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 30630,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 25971,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 20391,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "LLVM",
        "size": 4224,
        "type": "Programming_language",
        "value": "LLVM"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 756,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/bbp/comps/PySeismoSoil/setup.py",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SCECcode/bbp/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pjmaechling",
          "type": "User"
        },
        "date_created": "2022-09-08T18:43:08Z",
        "date_published": "2022-09-08T18:49:47Z",
        "description": "The SCEC BBP 22.4 is a full release of the Broadband Platform and includes a significant number of new capabilities and improvements added since the last release of the BBP in June 2019. Below is a brief list of the major improvements and modifications included in this release of the Broadband Platform since version 19.4.0:\r\n* Included multi-segment rupture support for GP, SDSU, Irikura 1, Irikura 2, and Song simulation methods. Currently provided multi-segment validation events are Landers, Ridgecrest 19C, and San Simeon.\r\n* Updated GP low-frequency module (jbsim) to perform time-shifting in the time domain instead of frequency domain. This avoids calculating numerous FFTs and results in a significant processing speedup of 10x, and benefits all simulation modules that use the GP low-frequency code.\r\n* Modified UCSB simulation method to include support for double corner frequency (DCF)\r\n* Included FAS validation module that produces FAS Goodness-of-Fitness plots, for a better seismological interpretation of the results. This is in addition to the PSA validation that is the main metric for design in engineering.\r\n* Added Green's Functions and validation events for the Southern Walker Lane region (Southern Sierra Nevada) of California. Validation events include the 2019 Ridgecrest sequence.\r\n* Expanded the GP GoF module to include a Vs30 GoF plot (similar to the distance and map GoF plots) that can be used to show GoF bias related to stations' Vs30s.\r\n* Updated the GP rupture generator to genslip-5.5.2 and the high-frequency code to hb_high_6.0.5.\r\n\r\nAll new Broadband Platform users should work with this new version of the Broadband Platform. Existing BBP users are encouraged to upgrade to this latest release of the SCEC Broadband Platform, unless they need to reproduce results produced by a previous version. For more information about the Broadband Platform, or details on the new capabilities of BBP 22.4.0, please refer to the Broadband Platform documentation available on BBP's GitHub wiki pages. Should you have any questions about the installation or operation of the BBP, please do not hesitate to contact the SCEC software development group at [software@scec.org](mailto:software@scec.org).",
        "html_url": "https://github.com/SCECcode/bbp/releases/tag/v22.4.0",
        "name": "BBP v22.4.0",
        "release_id": 76631446,
        "tag": "v22.4.0",
        "tarball_url": "https://api.github.com/repos/SCECcode/bbp/tarball/v22.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/SCECcode/bbp/releases/76631446",
        "value": "https://api.github.com/repos/SCECcode/bbp/releases/76631446",
        "zipball_url": "https://api.github.com/repos/SCECcode/bbp/zipball/v22.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "pjmaechling",
          "type": "User"
        },
        "date_created": "2019-08-22T17:52:21Z",
        "date_published": "2019-08-22T17:58:53Z",
        "description": "This is the initial Python 3 version of the Broadband Platform. It has been tested and the results for all methods (except Irikura Recipe 2) are equivalent to results produced by the Python 2 based BBP v19.4. The Irikura Recipe 2 differences are due to changes in that method, and are not due to the change in Python versions. This Python 3 release is a minor release, without updated documentation.",
        "html_url": "https://github.com/SCECcode/bbp/releases/tag/19.8.0-python3",
        "release_id": 19474714,
        "tag": "19.8.0-python3",
        "tarball_url": "https://api.github.com/repos/SCECcode/bbp/tarball/19.8.0-python3",
        "type": "Release",
        "url": "https://api.github.com/repos/SCECcode/bbp/releases/19474714",
        "value": "https://api.github.com/repos/SCECcode/bbp/releases/19474714",
        "zipball_url": "https://api.github.com/repos/SCECcode/bbp/zipball/19.8.0-python3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fabiolsilva",
          "type": "User"
        },
        "date_created": "2019-05-30T18:22:56Z",
        "date_published": "2019-05-30T18:26:08Z",
        "description": "### Broadband Platform 19.4.0\r\n\r\nThis full release of the Broadband Platform includes several new features and bug fixes. Below is a summary of the improvements and modifications included in this release of the Broadband Platform.\r\n\r\n#### Method Updates\r\n\r\n* Added the Irikura Recipe Method 2 simulation method to the Broadband Platform. It uses the same rupture generator as the Irikura Recipe Method 1, developed by Arben Pitarka, followed by the GP low-frequency wave propagation code. It then uses a high-frequency module developed by NIED.\r\n\r\n* Both Song and Irikura Recipe Method 1 methods now support multi-segment ruptures. These two methods create a version 2.0 SRF file that can be used directly by the GP wave propagation codes and allows a single Broadband Platform simulation to include all segments from a multi-plane rupture.\r\n\r\n* Used the GP site response module in all California and Japan validation events.\r\n\r\n* Upgraded the SDSU BBToolbox package to version 2.1, with time-domain merging of LF and HF seismograms.\r\n\r\n* Re-calculated Greens Functions for California and Japan using 500m/s as reference Vs, bringing the computed synthetic seismograms closer to site conditions and requiring smaller corrections by the site amplification module.\r\n\r\n#### Other Improvements\r\n\r\n* Updated the GP rupture generator to genslip-5.4.1 and the GP high-frequency code to hb_high_6.0.3.\r\n\r\n* Added Green's Functions and validation events for the Central coast region of California.\r\n\r\n* Extended the GP site response module so it can work with all 7 simulation methods.\r\n\r\n* Upgraded cluster simulation scripts for use with the Slurm job scheduler. The original collection of scripts using PBS is still available for reference.",
        "html_url": "https://github.com/SCECcode/bbp/releases/tag/19.4.0",
        "name": "19.4.0",
        "release_id": 17688047,
        "tag": "19.4.0",
        "tarball_url": "https://api.github.com/repos/SCECcode/bbp/tarball/19.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/SCECcode/bbp/releases/17688047",
        "value": "https://api.github.com/repos/SCECcode/bbp/releases/17688047",
        "zipball_url": "https://api.github.com/repos/SCECcode/bbp/zipball/19.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "fabiolsilva",
          "type": "User"
        },
        "date_created": "2017-06-16T22:31:47Z",
        "date_published": "2017-06-16T22:32:20Z",
        "description": "### Broadband Platform 17.3.0\r\n\r\nThis full release of the Broadband Platform includes the following features and bug fixes. Below is a summary of the improvements and modifications includes in this release of the Broadband Platform.\r\n\r\n#### Method Updates\r\n\r\n* Added the Irikura Recipe Method 1 simulation method to the Broadband Platform. It includes a new rupture generator module developed by Arben Pitarka to generate a SRF file. Then, it uses the GP method wave propagation codes to generate low- and high-frequency seismograms.\r\n\r\n* Updated GP rupture generator code to genslip-5.2.2. This new version of genslip accepts three new parameters used for the simulation of multi-segment ruptures, where time series can be generated segment by segment and then added together before post-processing is done.\r\n\r\n* Updated GP match.py module to improve the merging of low- and high-frequency seismograms.\r\n\r\n#### General Improvements\r\n\r\n* Added a FAS calculation module to the Platform. Work contributed by Jeff Bayless using David Boore's 'smc2fs2' and 'asc2smc' codes. The FAS module produces per-station plots with both N/S and E/W components, along with the smoothed EAS (effective amplitude spectrum) of the two horizontal components.\r\n\r\n* Included the calculation of zeta parameter in the RZZ2015 module.\r\n\r\n* Added the Central United States simulation region, contributed by Mehrdad Hosseini and Paul Somerville. This includes a new set of Green's functions, calculated up to 1800km.\r\n\r\n* Fixed issue in the Anderson GoF and RZZ2015 codes that was causing time series to not align correctly. Thanks to Kim Olsen and Rumi Takedatsu for reporting this bug.\r\n\r\n* Added two new scripts: 'merge_multisegment_validation.py' and 'merge_multisegment_scenario.py' to the utils/misc directory. These scripts can be used to combine time series from a number of separately-calculated segments, allowing for a multi-segment rupture to be simulated.\r\n\r\n#### Cluster Improvements\r\n\r\n* bbp_hpcc_validation.py and bbp_hpcc_scenario.py include option for user to override default walltime. This allows users to specify a short walltime if they know a job will run quickly, allowing the job to be potentially quickly scheduled by PBS.\r\n\r\n* Added a '-s' option to both bbp_hpcc_validation.py and bbp_hpcc_scenario.py to enable the use of the site response module. Currently only the GP site response module is supported (it is used for all methods).\r\n\r\n* Several modifications to the cluster scripts to enable multi-segment ruptures to be simulated. Added a '--segment' option to specify the segment number, a '--variation' option to enable the use of different sets of random seeds in the cluster. Also added a '--firstsegment' option to enable the scripts to find the first segment of a multi-segment run so that common seeds can be used for certain parameters across multiple segments (used by the GP method).\r\n\r\n* Cluster scripts now save metadata file on top-level simulation directory including all command-line options used to generate the cluster simulation. This is useful to track simulation parameters.\r\n\r\n* Added two scripts, 'bbp_merge_multisegment_validation.py' and 'bbp_merge_multisegment_scenario.py' to the utils/batch directory. These scripts work similarly to the ones in utils/misc but can be used to calculate multi-segment runs using segments calculated on the cluster.",
        "html_url": "https://github.com/SCECcode/bbp/releases/tag/17.3.0",
        "name": "17.3.0",
        "release_id": 6341326,
        "tag": "17.3.0",
        "tarball_url": "https://api.github.com/repos/SCECcode/bbp/tarball/17.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/SCECcode/bbp/releases/6341326",
        "value": "https://api.github.com/repos/SCECcode/bbp/releases/6341326",
        "zipball_url": "https://api.github.com/repos/SCECcode/bbp/zipball/17.3.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "identifier"
  ],
  "somef_provenance": {
    "date": "2025-09-19 03:25:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 46
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support",
        "parent_header": [
          "The SCEC Broadband Platform (BBP) Software"
        ],
        "type": "Text_excerpt",
        "value": "Support for BBP is provided by that Southern California Earthquake Center (SCEC) Research Computing Group. This group supports several research software distributions including BBP. Users can report issues and feature requests using BBP's github-based issue tracking link below. Developers will also respond to emails sent to the SCEC software contact listed below.\r\n1. [BBP Github Issue Tracker](https://github.com/SCECcode/bbp/issues)\r\n2. Email Contact: software@scec.org\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "The SCEC Broadband Platform (BBP) Software"
        ],
        "type": "Text_excerpt",
        "value": "\r\nTo get a list of the current available options, run run_bbp.py with the -h flag.\r\n\r\n```\r\n $ ./run_bbp.py --help\r\n Usage: run_bbp.py [options]\r\n\r\n Options:\r\n  -h, --help                                show this help message and exit\r\n  -x XML_FILE, --xml-file=XML_FILE          Run using XML description of workflow\r\n  -s SIM_ID, --sim-id=SIM_ID                Force a sim id\r\n  -o OPTFILE, --option-file=OPTFILE         File containing responses to interactive platform prompts\r\n  -v, --version                             Broadband platform version\r\n  -g, --generate-only                       Generates the XML description but does not run the platform\r\n  -l LOG_FILE, --log=LOG_FILE               Directs output to a file, use to run BBP in background\r\n  -m, --no-xml                              Do not generate xml\r\n  -r RESUME_MODULE, --resume=RESUME_MODULE  Resume workflow from a certain module\r\n  -e END_MODULE, --end=END_MODULE           End workflow after a certain module\r\n  --expert                                  Turns on expert mode\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Validation Simulations",
        "parent_header": [
          "The SCEC Broadband Platform (BBP) Software",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "\r\nTo run a validation simulation, go to the data/run directory and run run_bbp.py. The platform will ask you a series of questions. Answer 'y' to \"Do you want to perform a validation run?\" (the exact list of validation events users see when running the Broadband Platform depends on what validation events are installed on their computers):\r\n\r\n```\r\n $ run_bbp.py\r\n Welcome to the SCEC Broadband Platform version 22.4.0.\r\n ================================================================================\r\n\r\n Please select the Broadband Platform mode of operation:\r\n    * Validation - Simulates a historical event\r\n    * Scenario   - Runs a user-defined hypothetical event\r\n\r\n Do you want to perform a validation simulation (y/n)? y\r\n ================================================================================\r\n\r\n Please select a validation event from the list below:\r\n\r\n (1) Alum Rock\r\n (2) Chino Hills\r\n (3) LOMAP\r\n (4) NR\r\n (5) Whittier\r\n ?\r\n ...\r\n```\r\n\r\nNo input files are required by the user. However, you may wish to customize the validation simulation by selecting an alternate source description (src file) or a reduced station list to speed up the computations. You can put your own source description and/or station list into the run directory (the format is described in [File Formats](./File-Format-Guide)) or you can tell the platform where each file is located by using an absolute path. Note that any stations which do not have observed seismograms will not be included in the automatically generated goodness-of-fit comparison. To supply alternative source description and/or station list files, please run the Broadband Platform in 'expert' mode using the '--expert' command-line flag.\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "User-defined Simulations",
        "parent_header": [
          "The SCEC Broadband Platform (BBP) Software",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "\r\nTo run a user-defined simulation, two input files are required, a source description (src file) and a station list (stl file). A simple source description (src file) is always required, but, for certain methods, a source description in SRF format (the format is described in [File Formats](./File-Format-Guide) can be supplied as well and will be used for the seismogram computation modules in the Broadband Platform. To run a user-defined simulation, run run_bbp.py:\r\n\r\n```\r\n $ run_bbp.py\r\n Welcome to the SCEC Broadband Platform version 22.4.0.\r\n ================================================================================\r\n\r\n Please select the Broadband Platform mode of operation:\r\n    * Validation - Simulates a historical event\r\n    * Scenario   - Runs a user-defined hypothetical event\r\n\r\n Do you want to perform a validation simulation (y/n)? n\r\n ================================================================================\r\n\r\n The Broadband Platform provides the following velocity models, which also include\r\n several method-specific and region-specific parameters.\r\n\r\n Please select a velocity model (either number or name is ok):\r\n\r\n (1) CentralJapan500\r\n (2) CentralCal500\r\n (3) NOCAL500\r\n (4) LABasin500\r\n (5) WesternJapan500\r\n (6) Mojave500\r\n ?\r\n ...\r\n```\r\n\r\nYou may then choose the method you would like to run:\r\n\r\n```\r\n The Broadband Platform includes several scientific methods that can be\r\n used to calculate synthetic seismograms.\r\n\r\n Choose a Method to use in this Broadband scenario simulation:\r\n (1) GP (Graves & Pitarka)\r\n (2) UCSB\r\n (3) SDSU\r\n (4) EXSIM\r\n (5) Song\r\n (6) Irikura Recipe Method 1 (Irikura1)\r\n (7) Irikura Recipe Method 2 (Irikura2)\r\n ?\r\n```\r\n\r"
      },
      "source": "https://raw.githubusercontent.com/SCECcode/bbp/main/README.md",
      "technique": "header_analysis"
    }
  ]
}
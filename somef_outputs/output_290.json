{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "deepakkumar1984@gmail.com",
        "identifier": "https://orcid.org/0000-0003-1719-3091",
        "type": "String",
        "value": "Deepak Battini"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SciSharp/Keras.NET"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SciSharp/Keras.NET"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/.github/workflows/stale.yml"
      },
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-06-16T23:38:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-09-05T03:12:25Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Keras.NET is a high-level neural networks API for C# and F#, with Python Binding and capable of running on top of TensorFlow, CNTK, or Theano. "
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Keras.NET is a high-level neural networks API, written in C# with Python Binding and capable of running on top of TensorFlow, CNTK, or Theano"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.927195545818611,
      "result": {
        "type": "Text_excerpt",
        "value": "**Keras.NET** is a high-level neural networks API for C# and F# via a Python binding and capable of running on top of TensorFlow, CNTK, or Theano. It was developed with a focus on enabling fast experimentation. Being able to go from idea to result with the least possible delay is key to doing good research. \n* Allows for easy and fast prototyping (through user friendliness, modularity, and extensibility). \n* Supports both convolutional networks and recurrent networks, as well as combinations of the two. \n"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "active"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SciSharp/Keras.NET/tree/master/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "type": "Text_excerpt",
        "value": "https://scisharp.github.io/Keras.NET/\n\n![SciSharp](https://avatars3.githubusercontent.com/u/44989469)\n"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SciSharp/Keras.NET/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 129
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SciSharp/Keras.NET/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SciSharp/Keras.NET"
      },
      "technique": "GitHub_API"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SciSharp/SciSharp/master/art/scisharp_badge.png"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/Images/XOR_Output.PNG"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/Images/MNIST_Output.PNG"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://avatars3.githubusercontent.com/u/44989469"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SciSharp/Keras.NET/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SciSharp/Keras.NET/issues"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "csharp-library, deep-learning, deep-learning-library, fsharp-library, keras, keras-neural-networks, neural-network"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "GitHub",
          "metadata",
          "software"
        ]
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2019 SciSharp STACK\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://github.com/SciSharp/Keras.NET/blob/master/LICENSE",
        "spdx_id": "https://github.com/SciSharp/Keras.NET/blob/master/LICENSE",
        "type": "License",
        "value": "https://github.com/SciSharp/Keras.NET/blob/master/LICENSE"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/Images/keras.net_long.svg"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Keras.NET"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Keras.NET"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "SciSharp"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C#",
        "size": 505349,
        "type": "Programming_language",
        "value": "C#"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 3374,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C#",
        "type": "Programming_language",
        "value": "C#",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "deepakkumar1984",
          "type": "User"
        },
        "date_created": "2021-09-19T10:40:06Z",
        "date_published": "2021-09-19T10:41:03Z",
        "description": "Bug fixes\r\n",
        "html_url": "https://github.com/SciSharp/Keras.NET/releases/tag/v3.8.6.0",
        "name": "v3.8.6.0",
        "release_id": 49811480,
        "tag": "v3.8.6.0",
        "tarball_url": "https://api.github.com/repos/SciSharp/Keras.NET/tarball/v3.8.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/SciSharp/Keras.NET/releases/49811480",
        "value": "https://api.github.com/repos/SciSharp/Keras.NET/releases/49811480",
        "zipball_url": "https://api.github.com/repos/SciSharp/Keras.NET/zipball/v3.8.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "deepakkumar1984",
          "type": "User"
        },
        "date_created": "2019-06-21T08:19:26Z",
        "date_published": "2019-06-21T08:19:56Z",
        "description": "Full Keras API Implemented",
        "html_url": "https://github.com/SciSharp/Keras.NET/releases/tag/0.6.0",
        "name": "v0.6.0",
        "release_id": 18137766,
        "tag": "0.6.0",
        "tarball_url": "https://api.github.com/repos/SciSharp/Keras.NET/tarball/0.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/SciSharp/Keras.NET/releases/18137766",
        "value": "https://api.github.com/repos/SciSharp/Keras.NET/releases/18137766",
        "zipball_url": "https://api.github.com/repos/SciSharp/Keras.NET/zipball/0.6.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Prerequisite",
        "type": "Text_excerpt",
        "value": "* Python 3.7 or 3.8, Link: https://www.python.org/downloads/\n\n* Install keras, [numpy](https://numpy.org/install/) and one of the backends (Tensorflow/CNTK/Theano). Keras is now bundled with Tensorflow 2.0, so the easiest way to install Keras and Tensorflow at the same time is to simply install [Tensorflow 2.0](https://www.tensorflow.org/install).\n"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 01:18:35",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 621
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example with XOR sample (C#)",
        "type": "Text_excerpt",
        "value": "```csharp\n//Load train data\nNDarray x = np.array(new float[,] { { 0, 0 }, { 0, 1 }, { 1, 0 }, { 1, 1 } });\nNDarray y = np.array(new float[] { 0, 1, 1, 0 });\n\n//Build sequential model\nvar model = new Sequential();\nmodel.Add(new Dense(32, activation: \"relu\", input_shape: new Shape(2)));\nmodel.Add(new Dense(64, activation: \"relu\"));\nmodel.Add(new Dense(1, activation: \"sigmoid\"));\n\n//Compile and train\nmodel.Compile(optimizer:\"sgd\", loss:\"binary_crossentropy\", metrics: new string[] { \"accuracy\" });\nmodel.Fit(x, y, batch_size: 2, epochs: 1000, verbose: 1);\n\n//Save model and weights\nstring json = model.ToJson();\nFile.WriteAllText(\"model.json\", json);\nmodel.SaveWeight(\"model.h5\");\n\n//Load model and weight\nvar loaded_model = Sequential.ModelFromJson(File.ReadAllText(\"model.json\"));\nloaded_model.LoadWeight(\"model.h5\");\n```\n\n**Output:**\n\n![](https://raw.githubusercontent.com/SciSharp/Keras.NET/master/Images/XOR_Output.PNG)\n"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "MNIST CNN Example (C#)",
        "type": "Text_excerpt",
        "value": "Python example taken from: https://keras.io/examples/mnist_cnn/\n\n```csharp\nint batch_size = 128;\nint num_classes = 10;\nint epochs = 12;\n\n// input image dimensions\nint img_rows = 28, img_cols = 28;\n\nShape input_shape = null;\n\n// the data, split between train and test sets\nvar ((x_train, y_train), (x_test, y_test)) = MNIST.LoadData();\n\nif(Backend.ImageDataFormat() == \"channels_first\")\n{\n    x_train = x_train.reshape(x_train.shape[0], 1, img_rows, img_cols);\n    x_test = x_test.reshape(x_test.shape[0], 1, img_rows, img_cols);\n    input_shape = (1, img_rows, img_cols);\n}\nelse\n{\n    x_train = x_train.reshape(x_train.shape[0], img_rows, img_cols, 1);\n    x_test = x_test.reshape(x_test.shape[0], img_rows, img_cols, 1);\n    input_shape = (img_rows, img_cols, 1);\n}\n\nx_train = x_train.astype(np.float32);\nx_test = x_test.astype(np.float32);\nx_train /= 255;\nx_test /= 255;\nConsole.WriteLine($\"x_train shape: {x_train.shape}\");\nConsole.WriteLine($\"{x_train.shape[0]} train samples\");\nConsole.WriteLine($\"{x_test.shape[0]} test samples\");\n\n// convert class vectors to binary class matrices\ny_train = Util.ToCategorical(y_train, num_classes);\ny_test = Util.ToCategorical(y_test, num_classes);\n\n// Build CNN model\nvar model = new Sequential();\nmodel.Add(new Conv2D(32, kernel_size: (3, 3).ToTuple(),\n                        activation: \"relu\",\n                        input_shape: input_shape));\nmodel.Add(new Conv2D(64, (3, 3).ToTuple(), activation: \"relu\"));\nmodel.Add(new MaxPooling2D(pool_size: (2, 2).ToTuple()));\nmodel.Add(new Dropout(0.25));\nmodel.Add(new Flatten());\nmodel.Add(new Dense(128, activation: \"relu\"));\nmodel.Add(new Dropout(0.5));\nmodel.Add(new Dense(num_classes, activation: \"softmax\"));\n\nmodel.Compile(loss: \"categorical_crossentropy\",\n    optimizer: new Adadelta(), metrics: new string[] { \"accuracy\" });\n\nmodel.Fit(x_train, y_train,\n            batch_size: batch_size,\n            epochs: epochs,\n            verbose: 1,\n            validation_data: new NDarray[] { x_test, y_test });\nvar score = model.Evaluate(x_test, y_test, verbose: 0);\nConsole.WriteLine($\"Test loss: {score[0]}\");\nConsole.WriteLine($\"Test accuracy: {score[1]}\");\n```\n\n**Output**\n\nReached 98% accuracy within 3 epoches.\n\n![](https://raw.githubusercontent.com/SciSharp/Keras.NET/master/Images/MNIST_Output.PNG)\n"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "3.7.4.2"
      },
      "source": "https://raw.githubusercontent.com/SciSharp/Keras.NET/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
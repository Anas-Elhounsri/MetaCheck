{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "affiliation": "University of California, Berkeley",
        "email": "daniel.j.hermes@gmail.com",
        "identifier": "https://orcid.org/0000-0001-7366-173X",
        "type": "String",
        "value": "Danny Hermes"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "`bezier`"
        ],
        "type": "Text_excerpt",
        "value": "For publications that use ``bezier``, there is a `JOSS paper`_ that can be\ncited. The following BibTeX entry can be used:\n\n.. code-block:: rest\n\n   @article{Hermes2017,\n     doi = {10.21105/joss.00267},\n     url = {https://doi.org/10.21105%2Fjoss.00267},\n     year = {2017},\n     month = {Aug},\n     publisher = {The Open Journal},\n     volume = {2},\n     number = {16},\n     pages = {267},\n     author = {Danny Hermes},\n     title = {Helper for B{\\'{e}}zier Curves, Triangles, and Higher Order Objects},\n     journal = {The Journal of Open Source Software}\n   }\n\nA **particular** version of this library can be cited via a Zenodo DOI; see\na full `list by version`_.\n\n.. _JOSS paper: https://joss.theoj.org/papers/10.21105/joss.00267\n.. _list by version: https://zenodo.org/search?page=1&size=20&q=conceptrecid:%22838307%22&sort=-version&all_versions=True\n"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/README.rst",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Danny Hermes",
        "doi": "10.21105/joss.00267",
        "format": "bibtex",
        "title": "Helper for B{\\'{e}}zier Curves, Triangles, and Higher Order Objects",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.21105%2Fjoss.00267",
        "value": "@article{Hermes2017,\n    journal = {The Journal of Open Source Software},\n    title = {Helper for B{\\'{e}}zier Curves, Triangles, and Higher Order Objects},\n    author = {Danny Hermes},\n    pages = {267},\n    number = {16},\n    volume = {2},\n    publisher = {The Open Journal},\n    month = {Aug},\n    year = {2017},\n    url = {https://doi.org/10.21105%2Fjoss.00267},\n    doi = {10.21105/joss.00267},\n}"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/README.rst",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dhermes/bezier"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dhermes/bezier"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-11-07T06:07:45Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2017-05-22"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2017-05-22"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-08-31T14:42:47Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2017-05-22"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Helper for B\u00e9zier Curves, Triangles, and Higher Order Objects"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Helper for B\u00e9zier Curves, Triangles, and Higher Order Objects"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9558561443613177,
      "result": {
        "original_header": "`bezier`",
        "type": "Text_excerpt",
        "value": "This library provides: \n"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/README.rst",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8668821645850701,
      "result": {
        "original_header": "Why B |eacute| zier?",
        "type": "Text_excerpt",
        "value": "* can easily model geometric objects as parametric curves, triangles, etc.\n* can be computed in an efficient and numerically stable way via\n  `de Casteljau's algorithm`_\n* can utilize convex optimization techniques for many algorithms (such as\n  curve-curve intersection), since curves (and triangles, etc.)\n  are convex combinations of the basis \nMany applications -- as well as the history of their development --\nare described in\n\"The Bernstein polynomial basis: A centennial `retrospective`_\",\nfor example; \n* aids physical analysis using finite element methods (`FEM`_) on\n  isogeometric models by using geometric shape functions called\n  `NURBS`_ to represent data\n* used in robust control of dynamic systems; utilizes convexity to\n  create a hull of curves \n"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/README.rst",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://bezier.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/README.rst",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/dhermes/bezier/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 41
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dhermes/bezier/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dhermes/bezier"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bezier"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/README.rst",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "setup.py",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dhermes/bezier/main/setup.py"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/setup.py",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "pyproject.toml",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dhermes/bezier/main/pyproject.toml"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/pyproject.toml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dhermes/bezier/main/docs/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/docs/requirements.txt",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "pyproject.toml"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dhermes/bezier/main/scripts/build-docs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dhermes/bezier/main/scripts/nox-install-for-doctest-linux.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dhermes/bezier/main/scripts/upload-coveralls.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dhermes/bezier/main/scripts/manylinux/build-wheel-for-doctest.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing",
        "parent_header": [
          "`bezier`"
        ],
        "type": "Text_excerpt",
        "value": "The ``bezier`` Python package can be installed with `pip`_:\n\n.. code-block:: console\n\n   $ python     -m pip install --upgrade bezier\n   $ python3.12 -m pip install --upgrade bezier\n   $ # To install optional dependencies, e.g. SymPy\n   $ python     -m pip install --upgrade bezier[full]\n\nTo install a pure Python version (i.e. with no binary extension):\n\n.. code-block:: console\n\n   $ BEZIER_NO_EXTENSION=true \\\n   >   python   -m pip install --upgrade bezier --no-binary=bezier\n\n``bezier`` is open-source, so you can alternatively grab the source\ncode from `GitHub`_ and install from source.\n\n.. _pip: https://pip.pypa.io\n.. _GitHub: https://github.com/dhermes/bezier/\n"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/README.rst",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/dhermes/bezier/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "Geometry",
          "Curve",
          "B\u00e9zier",
          "Intersection",
          "Python"
        ]
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "File_dump",
        "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        https://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       https://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/Apache 2.0",
        "spdx_id": "Apache 2.0",
        "type": "License",
        "value": "Apache 2.0"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "`bezier`"
        ],
        "type": "Text_excerpt",
        "value": "``bezier`` is made available under the Apache 2.0 License. For more\ndetails, see `the LICENSE`_.\n\n.. _Curves: https://bezier.readthedocs.io/en/latest/python/reference/bezier.curve.html\n.. _Triangles: https://bezier.readthedocs.io/en/latest/python/reference/bezier.triangle.html\n.. _package: https://bezier.readthedocs.io/en/latest/python/reference/bezier.html\n.. _DEVELOPMENT doc: https://github.com/dhermes/bezier/blob/main/DEVELOPMENT.rst\n.. _the LICENSE: https://github.com/dhermes/bezier/blob/main/LICENSE\n\n.. |docs| image:: https://readthedocs.org/projects/bezier/badge/?version=latest\n   :target: https://bezier.readthedocs.io/en/latest/\n   :alt: Documentation Status\n.. |linux-build| image:: https://github.com/dhermes/bezier/workflows/Linux/badge.svg?branch=main&event=push\n   :target: https://github.com/dhermes/bezier/actions?query=workflow%3ALinux\n   :alt: Linux Build (GitHub Actions)\n.. |macos-build| image:: https://github.com/dhermes/bezier/workflows/macOS/badge.svg?branch=main&event=push\n   :target: https://github.com/dhermes/bezier/actions?query=workflow%3AmacOS\n   :alt: macOS Build (GitHub Actions)\n.. |windows-build| image:: https://github.com/dhermes/bezier/workflows/Windows/badge.svg?branch=main&event=push\n   :target: https://github.com/dhermes/bezier/actions?query=workflow%3AWindows\n   :alt: Windows Build (GitHub Actions)\n.. |pypi| image:: https://img.shields.io/pypi/v/bezier.svg\n   :target: https://pypi.org/project/bezier/\n   :alt: PyPI Latest\n.. |versions| image:: https://img.shields.io/pypi/pyversions/bezier.svg\n   :target: https://pypi.org/project/bezier/\n   :alt: Package Versions\n.. |coverage| image:: https://coveralls.io/repos/github/dhermes/bezier/badge.svg\n   :target: https://coveralls.io/github/dhermes/bezier\n   :alt: Code Coverage\n.. |zenodo| image:: https://zenodo.org/badge/73047402.svg\n   :target: https://zenodo.org/badge/latestdoi/73047402\n   :alt: Zenodo DOI for ``bezier``\n.. |JOSS| image:: https://joss.theoj.org/papers/10.21105/joss.00267/status.svg\n   :target: https://dx.doi.org/10.21105/joss.00267\n   :alt: \"Journal of Open Source Science\" DOI for ``bezier``\n"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/README.rst",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bezier"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "dhermes"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1125321,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Fortran",
        "size": 660533,
        "type": "Programming_language",
        "value": "Fortran"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Cython",
        "size": 11986,
        "type": "Programming_language",
        "value": "Cython"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 11812,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 6890,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 5153,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 3954,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 3873,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/dhermes/bezier/main/README.rst"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2024-06-21T03:54:43Z",
        "date_published": "2024-06-21T04:18:55Z",
        "description": "[![PyPI link to release 2024.6.20](https://img.shields.io/pypi/v/bezier/2024.6.20.svg)](https://pypi.org/project/bezier/2024.6.20/) [![Documentation for release 2024.6.20](https://readthedocs.org/projects/bezier/badge/?version=2024.6.20)](https://bezier.readthedocs.io/en/2024.6.20/)\r\n\r\n## `libbezzier` Changes\r\n\r\n### Packaging\r\n\r\n-   Stop building with `-static` on Windows ([\\#311](https://github.com/dhermes/bezier/pull/311)). This is entirely enabled by the amazing [delvewheel](https://github.com/adang1345/delvewheel) project (non-static dependencies can now easily be packaged into a built wheel for Python).\r\n\r\n## Python Changes\r\n\r\n### Packaging\r\n\r\n-   Added support for Python 3.12 ([\\#315](https://github.com/dhermes/bezier/pull/315)).\r\n-   Dropped support for Python 3.8 ([\\#310](https://github.com/dhermes/bezier/pull/310)) and Python 3.9 ([\\#315](https://github.com/dhermes/bezier/pull/315)).\r\n\r\n## Documentation\r\n\r\n-   Add `DEVELOPMENT.rst` section about configuring a shell and compilers for Windows development ([\\#311](https://github.com/dhermes/bezier/pull/311)). This had been a hodge podge of local and remote (CI) development for the last 5+ years, so this a big milestone!",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/2024.6.20",
        "name": "2024.6.20",
        "release_id": 161596115,
        "tag": "2024.6.20",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/2024.6.20",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/161596115",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/161596115",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/2024.6.20"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2023-07-29T03:03:30Z",
        "date_published": "2023-07-29T04:28:31Z",
        "description": "[![PyPI link to release 2023.7.28](https://img.shields.io/pypi/v/bezier/2023.7.28.svg)](https://pypi.org/project/bezier/2023.7.28/) [![Documentation for release 2023.7.28](https://readthedocs.org/projects/bezier/badge/?version=2023.7.28)](https://bezier.readthedocs.io/en/2023.7.28/)\r\n\r\n## Robustness\r\n\r\n-   Fall back to de Casteljau algorithm for evaluation on high degree curves ([#264](https://github.com/dhermes/bezier/pull/264)). Fixed [#263](https://github.com/dhermes/bezier/issues/263). The more efficient `evaluate_multi_vs()` [function](https://bezier.readthedocs.io/en/2023.7.28/python/reference/bezier.hazmat.curve_helpers.html#bezier.hazmat.curve_helpers.evaluate_multi_vs) relies on the ability to compute binomial coefficients `(n C k)` but after `(55 C 26)` these values cannot be computed in floating point without roundoff and for very large degrees these values overflow.\r\n\r\n## Python Changes\r\n\r\n### Packaging\r\n\r\n-   Switched to [delvewheel](https://github.com/adang1345/delvewheel) for repairing Windows wheels ([#307](https://github.com/dhermes/bezier/pull/307)). This is similar to how Linux and macOS packaging already work. This is vastly superior to the homegrown approach previously used with `extra-dll`.\r\n-   Dropped support for Python 3.7 and added support for Python 3.10 and 3.11 ([#271](https://github.com/dhermes/bezier/pull/271), [#302](https://github.com/dhermes/bezier/pull/302)).\r\n-   Add strict check for Python version on source installs. Fixed [#278](https://github.com/dhermes/bezier/issues/278).\r\n-   Make missing `BEZIER_INSTALL_PREFIX` error message more helpful. In particular, add a suggestion to set `BEZIER_NO_EXTENSION` for a source only install if `BEZIER_INSTALL_PREFIX` cannot be set. Fixed [#277](https://github.com/dhermes/bezier/issues/277).\r\n-   Use [cibuildwheel](https://github.com/pypa/cibuildwheel) to automate building wheels as part of release ([#308](https://github.com/dhermes/bezier/pull/308)).\r\n\r\n### Bug Fixes\r\n\r\n-   Allow the extra DLL directory to be absent on Windows. For binary wheel installs, this directory contains the `libbezier` DLL (e.g. `bezier.libs\\bezier-2a44d276.dll`). For pure Python installs, the `bezier.libs` directory will be absent. ([#307](https://github.com/dhermes/bezier/pull/307), [#255](https://github.com/dhermes/bezier/pull/255)). Fixed [#254](https://github.com/dhermes/bezier/issues/254).\r\n-   Bug fix for `clip_range()` ([doc](https://bezier.readthedocs.io/en/2023.7.28/python/reference/bezier.hazmat.clipping.html#bezier.hazmat.clipping.clip_range)). Intersections with the `t=0` / `t=1` sides of the fat line were not taken into account **and** a value for `s_max` could be accidentally left unset if the intersections occurred in an order where the `s`-value decreased throughout ([#259](https://github.com/dhermes/bezier/pull/259)).\r\n\r\n### Breaking Changes\r\n\r\n-   Removing `Surface` alias for the `Triangle` [type](https://bezier.readthedocs.io/en/2023.7.28/python/reference/bezier.triangle.html#bezier.triangle.Triangle) ([#252](https://github.com/dhermes/bezier/pull/252)). The `Surface` type was deprecated (and converted to an alias) in the `2020.1.14` release.\r\n\r\n### Additive Changes\r\n\r\n-   Renaming all \\\"private\\\" `_verify` args to `verify` ([#251](https://github.com/dhermes/bezier/pull/251)). For example, in `Curve.intersect()` ([doc](https://bezier.readthedocs.io/en/2023.7.28/python/reference/bezier.curve.html#bezier.curve.Curve.intersect))\r\n-   Adding provisional support for self-intersection checks in planar curves ([#265](https://github.com/dhermes/bezier/pull/265), [#267](https://github.com/dhermes/bezier/pull/267)). Fixed [#165](https://github.com/dhermes/bezier/issues/165) and [#171](https://github.com/dhermes/bezier/issues/171). Supported via `Curve.self_intersections()` [method](https://bezier.readthedocs.io/en/2023.7.28/python/reference/bezier.curve.html#bezier.curve.Curve.self_intersections).\r\n-   Added `alpha` argument to `Triangle.plot()` and `CurvedPolygon.plot()` methods ([#296](https://github.com/dhermes/bezier/pull/296)).\r\n\r\n## Documentation\r\n\r\n-   Making all docs pages import external packages at least once ([#257](https://github.com/dhermes/bezier/pull/257)). Fixed [#210](https://github.com/dhermes/bezier/issues/210).\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/2023.7.28",
        "name": "2023.7.28",
        "release_id": 114076950,
        "tag": "2023.7.28",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/2023.7.28",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/114076950",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/114076950",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/2023.7.28"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2021-02-14T02:45:07Z",
        "date_published": "2021-02-14T02:50:50Z",
        "description": "[![PyPI link to release 2021.2.12](https://img.shields.io/pypi/v/bezier/2021.2.12.svg)](https://pypi.org/project/bezier/2021.2.12/) [![Documentation for release 2021.2.12](https://readthedocs.org/projects/bezier/badge/?version=2021.2.12)](https://bezier.readthedocs.io/en/2021.2.12/)\r\n\r\n## Python Changes\r\n\r\n### Packaging\r\n\r\n-   Dropped support for Python 3.6 and added support for Python 3.9 ([\\#246](https://github.com/dhermes/bezier/pull/246)).\r\n\r\n### Breaking Changes\r\n\r\n-   Moved non-public / experimental `bezier._clipping` module to `bezier.hazmat.clipping` ([\\#225](https://github.com/dhermes/bezier/pull/225)).\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/2021.2.12",
        "name": "2021.2.12",
        "release_id": 38022291,
        "tag": "2021.2.12",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/2021.2.12",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/38022291",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/38022291",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/2021.2.12"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2020-05-20T04:43:18Z",
        "date_published": "2020-05-20T04:57:40Z",
        "description": "[![PyPI link to release 2020.5.19](https://img.shields.io/pypi/v/bezier/2020.5.19.svg)](https://pypi.org/project/bezier/2020.5.19/) [![Documentation for release 2020.5.19](https://readthedocs.org/projects/bezier/badge/?version=2020.5.19)](https://bezier.readthedocs.io/en/2020.5.19/)\r\n\r\nPython Changes\r\n--------------\r\n\r\n### Bug Fixes\r\n\r\n-   Using `importlib.metadata` to locate `extra-dll` on Windows, caused by the behavior of the `conda`-supplied `setuptools` in Python 3.8 ([\\#208](https://github.com/dhermes/bezier/pull/208), fixed [\\#206](https://github.com/dhermes/bezier/issues/206)).\r\n\r\n### Breaking Changes\r\n\r\n-   Created `bezier.hazmat` subpackage (fixed [\\#170](https://github.com/dhermes/bezier/issues/170)).\r\n    -   Moved non-public `bezier._py_helpers` module to `bezier.hazmat.helpers` ([\\#201](https://github.com/dhermes/bezier/pull/201)).\r\n    -   Moved non-public `bezier._algebraic_intersection` module to `bezier.hazmat.algebraic_intersection` ([\\#216](https://github.com/dhermes/bezier/pull/216)).\r\n    -   Moved non-public `bezier._py_curve_helpers` module to `bezier.hazmat.curve_helpers` ([\\#218](https://github.com/dhermes/bezier/pull/218)).\r\n    -   Moved non-public `bezier._py_triangle_intersection` module to `bezier.hazmat.triangle_intersection` ([\\#219](https://github.com/dhermes/bezier/pull/219)).\r\n    -   Moved non-public `bezier._py_triangle_helpers` module to `bezier.hazmat.triangle_helpers` ([\\#220](https://github.com/dhermes/bezier/pull/220)).\r\n    -   Moved non-public `bezier._py_intersection_helpers` module to `bezier.hazmat.intersection_helpers` ([\\#222](https://github.com/dhermes/bezier/pull/222)).\r\n    -   Moved non-public `bezier._py_geometric_intersection` module to `bezier.hazmat.geometric_intersection` ([\\#223](https://github.com/dhermes/bezier/pull/223)).\r\n\r\nDocumentation\r\n-------------\r\n\r\n-   Updated `binary-extension` [doc](https://bezier.readthedocs.io/en/2020.5.19/python/binary-extension.html) to refer to `bezier.libs` ([\\#211](https://github.com/dhermes/bezier/pull/211)). This is based on a change to `auditwheel` from the [3.1.0 release](https://github.com/pypa/auditwheel/releases/tag/3.1.0).\r\n-   Removed `algorithms/algebraic-helpers` document since the `bezier.hazmat.algebraic_intersection` module is now fully documented ([\\#216](https://github.com/dhermes/bezier/pull/216)).\r\n-   Updated from `https://docs.scipy.org/doc/numpy` to `https://numpy.org` for references to the NumPy documentation ([\\#221](https://github.com/dhermes/bezier/pull/221)).\r\n-   Removed `algorithms/geometric-helpers` document since the functions and classes there are now fully documented in `bezier.hazmat` ([\\#223](https://github.com/dhermes/bezier/pull/223)).\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/2020.5.19",
        "name": "2020.5.19",
        "release_id": 26699144,
        "tag": "2020.5.19",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/2020.5.19",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/26699144",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/26699144",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/2020.5.19"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2020-02-04T06:53:53Z",
        "date_published": "2020-02-04T07:33:21Z",
        "description": "[![PyPI link to release 2020.2.3](https://img.shields.io/pypi/v/bezier/2020.2.3.svg)](https://pypi.org/project/bezier/2020.2.3/) [![Documentation for release 2020.2.3](https://readthedocs.org/projects/bezier/badge/?version=2020.2.3)](https://bezier.readthedocs.io/en/2020.2.3/)\r\n\r\nABI Changes\r\n-----------\r\n\r\n### Packaging\r\n\r\n-   Introduced first-class build and install support for `libbezier` via [CMake](https://cmake.org/). Achieved with the following PRs\r\n\r\n    -   Added `CMakeLists.txt` files to enable building `libbezier` with [CMake](https://cmake.org/) ([\\#175](https://github.com/dhermes/bezier/pull/175)).\r\n    -   Added `-DTARGET_NATIVE_ARCH:BOOL=OFF` flag to enable portable release builds ([\\#182](https://github.com/dhermes/bezier/pull/182)).\r\n\r\n    and closed the following issues\r\n\r\n    -   Use a shared library (rather than a static library) for `libbezier` ([\\#54](https://github.com/dhermes/bezier/issues/54)).\r\n    -   Enable Python installs to be \"hybrid-editable\" ([\\#56](https://github.com/dhermes/bezier/issues/56)). (This means that the Python files reference the source tree but the built components, i.e. `libbezier` and `_speedup.so`, are already built and utilize caching of [CMake](https://cmake.org/).)\r\n    -   Use build system other than Python / `distutils` / `setuptools` ([\\#62](https://github.com/dhermes/bezier/issues/62)).\r\n    -   Add ability to disable `-march=native` flag to make release builds portable across compatible operating systems ([\\#181](https://github.com/dhermes/bezier/issues/181)).\r\n\r\nPython Changes\r\n--------------\r\n\r\n### Additive Changes\r\n\r\n-   Exposing `Curve.evaluate_hodograph()` [method](https://bezier.readthedocs.io/en/2020.2.3/python/reference/bezier.curve.html#bezier.curve.Curve.evaluate_hodograph) as part of the public API ([\\#191](https://github.com/dhermes/bezier/pull/191)). Fixed [\\#138](https://github.com/dhermes/bezier/issues/138).\r\n\r\n### Packaging\r\n\r\n-   Removed build dependency on `gfortran` and other heavyweight tools (and hacks) such as `numpy.distutils`. Now, `libbezier` must be built before the Python package can be installed and the install location must be provided via the `BEZIER_INSTALL_PREFIX` environment variable. Achieved with the following PRs\r\n    -   Requiring prebuilt `libbezier` when building `bezier._speedup` Python binary extension ([\\#176](https://github.com/dhermes/bezier/pull/176)).\r\n    -   Support building of wheels on all platforms that depend on `libbezier` ([\\#182](https://github.com/dhermes/bezier/pull/182)).\r\n-   Switch from `manylinux1` to `manylinux2010` for built wheels ([\\#178](https://github.com/dhermes/bezier/pull/178)).\r\n-   Delaying imports of `pkg_resources`, `scipy` and `sympy` until actually needed (if ever) ([\\#194](https://github.com/dhermes/bezier/pull/194), [\\#195](https://github.com/dhermes/bezier/pull/195), [38602d8](https://github.com/dhermes/bezier/commit/38602d88714b5358fdab2730392c7bbf27b2b8c2)).\r\n-   Adding `matplotlib` to `pip install bezier[full]` ([8beb036](https://github.com/dhermes/bezier/commit/8beb036ce06decb26ae25de118a8a3778c18c519)).\r\n-   Avoiding `bezier.dll` name collision on Windows in wheels distributed on PyPI ([\\#190](https://github.com/dhermes/bezier/pull/190)). Fixed [\\#189](https://github.com/dhermes/bezier/issues/189).\r\n\r\n### Breaking Changes\r\n\r\n-   Removed `bezier.get_dll()` helper ([\\#184](https://github.com/dhermes/bezier/pull/184)).\r\n\r\nDocumentation\r\n-------------\r\n\r\n-   Changed \"Read the Docs\" landing page to point to `.../stable/` documentation (i.e. the last published release) instead of `.../latest` documentation (i.e. the last **merged** commit).\r\n-   Making sure [CMake](https://cmake.org/) installed trees (on Linux, macOS and Windows) are verified in `doctest` as part of CI ([48e4166](https://github.com/dhermes/bezier/commit/48e416651878f02f7fce35e4944c56ba98463427)).\r\n-   Making sure `example_*.c` ABI examples are compiled and run (on Linux and macOS) in `doctest` as part of CI ([ffdcdf7](https://github.com/dhermes/bezier/commit/ffdcdf7e0b6608bb2a2b37337abbf49090f922c2), [9551495](https://github.com/dhermes/bezier/commit/95514952d54224d52d909876cb54bb75e672b653), [0766649](https://github.com/dhermes/bezier/commit/07666494a318d81770323a03aba694a282a8434b)).\r\n-   Converting (untested, potentially stale) console codeblocks to `doctest` (that get run in CI) for Linux sections of binary extension documentation ([\\#188](https://github.com/dhermes/bezier/pull/188)). Fixed [\\#74](https://github.com/dhermes/bezier/issues/74).\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/2020.2.3",
        "name": "2020.2.3",
        "release_id": 23363684,
        "tag": "2020.2.3",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/2020.2.3",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/23363684",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/23363684",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/2020.2.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2020-01-15T01:09:33Z",
        "date_published": "2020-01-15T04:22:39Z",
        "description": "[![PyPI link to release 2020.1.14](https://img.shields.io/pypi/v/bezier/2020.1.14.svg)](https://pypi.org/project/bezier/2020.1.14/) [![Documentation for release 2020.1.14](https://readthedocs.org/projects/bezier/badge/?version=2020.1.14)](https://bezier.readthedocs.io/en/2020.1.14/)\r\n\r\nBreaking Changes\r\n----------------\r\n\r\n-   Rename `Surface` to `Triangle` ([\\#172](https://github.com/dhermes/bezier/pull/172)). Fixed [\\#132](https://github.com/dhermes/bezier/issues/132).\r\n\r\nDocumentation\r\n-------------\r\n\r\n-   Make sure all ABI `example_*.c` blocks get run with `doctest` ([\\#174](https://github.com/dhermes/bezier/pull/174)). Fixed [\\#173](https://github.com/dhermes/bezier/issues/173).\r\n\r\nPackaging\r\n---------\r\n\r\n-   Switched from [semantic versioning](http://semver.org/) to [calendar versioning](https://calver.org/).\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/2020.1.14",
        "name": "2020.1.14",
        "release_id": 22847189,
        "tag": "2020.1.14",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/2020.1.14",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/22847189",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/22847189",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/2020.1.14"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2020-01-12T03:55:24Z",
        "date_published": "2020-01-12T04:01:38Z",
        "description": "[![PyPI link to release 0.11.0](https://img.shields.io/pypi/v/bezier/0.11.0.svg)](https://pypi.org/project/bezier/0.11.0/) [![Documentation for release 0.11.0](https://readthedocs.org/projects/bezier/badge/?version=0.11.0)](https://bezier.readthedocs.io/en/0.11.0/)\r\n\r\n# Python Changes\r\n\r\n## Packaging\r\n\r\n- Explicit support for Python 3.8 has been added ([\\#161](https://github.com/dhermes/bezier/pull/161)). On Windows this required using the `os.add_dll_directory()` [function](https://docs.python.org/3/library/os.html#os.add_dll_directory) to load `bezier.dll` (in earlier Python versions, the DLL directory was added by modifying `%PATH%`).\r\n\r\n## New Features\r\n\r\n- Loosened type constraints in `Curve` [constructor](https://bezier.readthedocs.io/en/0.11.0/python/reference/bezier.curve.html#bezier.curve.Curve) and `Surface` [constructor](https://bezier.readthedocs.io/en/0.11.0/python/reference/bezier.surface.html#bezier.surface.Surface); now any sequence type is accepted rather than **only** NumPy arrays ([68f7dc7](https://github.com/dhermes/bezier/commit/68f7dc7c1f26bb678d09b4221fd917531fb79860), [a8c68a3](https://github.com/dhermes/bezier/commit/a8c68a3368a1edf90cd76cd6ff77ab698b6c3907), [f5c7869](https://github.com/dhermes/bezier/commit/f5c7869e86b196aca3db272a2e85413357864bc7)). Fixed [\\#146](https://github.com/dhermes/bezier/issues/146).\r\n- Added `copy` and `verify` arguments to `Curve` [constructor](https://bezier.readthedocs.io/en/0.11.0/python/reference/bezier.curve.html#bezier.curve.Curve) and `Surface` [constructor](https://bezier.readthedocs.io/en/0.11.0/python/reference/bezier.surface.html#bezier.surface.Surface) ([\\#163](https://github.com/dhermes/bezier/pull/163)). Fixed [\\#158](https://github.com/dhermes/bezier/issues/158).\r\n- Added [SymPy](https://docs.sympy.org/)-based helpers for \"exact\" representations ([\\#164](https://github.com/dhermes/bezier/pull/164)). Fixed [\\#157](https://github.com/dhermes/bezier/issues/157).\r\n  - `Curve.implicitize()` [function](https://bezier.readthedocs.io/en/0.11.0/python/reference/bezier.curve.html#bezier.curve.Curve.implicitize)\r\n  - `Curve.to_symbolic()` [function](https://bezier.readthedocs.io/en/0.11.0/python/reference/bezier.curve.html#bezier.curve.Curve.to_symbolic)\r\n  - `Surface.implicitize()` [function](https://bezier.readthedocs.io/en/0.11.0/python/reference/bezier.surface.html#bezier.surface.Surface.implicitize)\r\n  - `Surface.to_symbolic()` [function](https://bezier.readthedocs.io/en/0.11.0/python/reference/bezier.surface.html#bezier.surface.Surface.to_symbolic)\r\n\r\n## Internals\r\n\r\n- Re-factored non-public modules so that algorithms implemented in pure Python **only** invoke other algorithms written in pure Python ([\\#160](https://github.com/dhermes/bezier/pull/160)). Previously these algorithms invoked the equivalent Fortran speedup if present for a given function. Fixed [\\#159](https://github.com/dhermes/bezier/issues/159).\r\n\r\n## Miscellany\r\n\r\n- Moved `*.f90` Fortran files **out** of Python source tree ([\\#152](https://github.com/dhermes/bezier/pull/152)).\r\n\r\n# ABI Changes\r\n\r\n## Breaking Changes\r\n\r\n- Added `BEZ_` prefix for exported ABI names ([\\#167](https://github.com/dhermes/bezier/pull/167)). Fixed [\\#166](https://github.com/dhermes/bezier/issues/166).\r\n\r\n## Additive Changes\r\n\r\n- Changed all `[in]` arguments in C headers to `const` pointers ([\\#169](https://github.com/dhermes/bezier/pull/169)). Fixed [\\#168](https://github.com/dhermes/bezier/issues/168).\r\n\r\n# Bug Fixes\r\n\r\n- Explicitly handle length 0 curves (with an error) in the `compute_length()` Fortran [subroutine](https://bezier.readthedocs.io/en/0.11.0/abi/curve.html#c.BEZ_compute_length) that is used by the `Curve.length` [property](https://bezier.readthedocs.io/en/0.11.0/python/reference/bezier.curve.html#bezier.curve.Curve.length) ([a24368f](https://github.com/dhermes/bezier/commit/a24368fc690b2c6d6a676b9d569f25b5919c400d)). Fixed [\\#148](https://github.com/dhermes/bezier/issues/148).\r\n- Fixed high-degree error in the `Curve.evaluate()` [method](https://bezier.readthedocs.io/en/0.11.0/python/reference/bezier.curve.html#bezier.curve.Curve.evaluate), via the `evaluate_curve_barycentric()` Fortran [subroutine](https://bezier.readthedocs.io/en/0.11.0/abi/curve.html#c.BEZ_evaluate_curve_barycentric) ([5768824](https://github.com/dhermes/bezier/commit/57688243b9264ca7ea48423f100e8f516ba2fa2f)). Fixed [\\#156](https://github.com/dhermes/bezier/issues/156). The code uses `(n C (k + 1)) = (n - k) / (k + 1) (n C k)` to update the value and `(30 - 14) (30 C 14)` overflows a 32-bit signed integer.\r\n\r\n# Documentation\r\n\r\n- Updated install instructions to show how to disable the binary extension via `BEZIER_NO_EXTENSION` ([6262594](https://github.com/dhermes/bezier/commit/626259493997a9d83924d100900189f32b87e6c5), [00c1e61](https://github.com/dhermes/bezier/commit/00c1e619688b93a6a079288be40153a9157fa6c5)). Fixed [\\#147](https://github.com/dhermes/bezier/issues/147).\r\n- Added \"Citation\" section to landing page ([9885063](https://github.com/dhermes/bezier/commit/9885063a2e3795e0bec35a4fc1574dc294d359e0)). Fixed [\\#150](https://github.com/dhermes/bezier/issues/150).",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/0.11.0",
        "name": "0.11.0",
        "release_id": 22768302,
        "tag": "0.11.0",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/0.11.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/22768302",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/22768302",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/0.11.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2019-08-14T06:09:51Z",
        "date_published": "2019-08-14T06:17:32Z",
        "description": "[![PyPI link to release 0.10.0](https://img.shields.io/pypi/v/bezier/0.10.0.svg)](https://pypi.org/project/bezier/0.10.0/) [![Documentation for release 0.10.0](https://readthedocs.org/projects/bezier/badge/?version=0.10.0)](https://bezier.readthedocs.io/en/0.10.0/)\r\n\r\nPython Changes\r\n==============\r\n\r\nBreaking Changes\r\n----------------\r\n\r\n-   Support for Python 2.7 has been dropped. With the impending [EOL](https://pythonclock.org/) of Python 2.7 on January 1, 2020 many of the `bezier` dependencies such as `numpy`, `scipy` and `pytest` have dropped support for Python 2.7 in their latest releases. Some changes related to this include:\r\n    -   Removing support for Python 2.7 ([3eaa5aa](https://github.com/dhermes/bezier/commit/3eaa5aaa670d167b2c1340d3d531d5438eaf62cd)).\r\n    -   Updating all PyPy usage to be Python 3 only ([1e3037f](https://github.com/dhermes/bezier/commit/1e3037fce5acdcfa194cac481ee06ef6bcc329e5)).\r\n    -   Removing `_bool_patch.h` ([4ccc559](https://github.com/dhermes/bezier/commit/4ccc559e6928f78556c1201f45a2ad7b3b40d7a5)).\r\n\r\nBuild\r\n-----\r\n\r\n-   Integrating `black` [code formatter](https://black.readthedocs.io) into the `nox --session lint` session to ensure consistent formatting ([e659532](https://github.com/dhermes/bezier/commit/e659532747d0433bf3a91198a7baf172ed36f069)).\r\n-   Fully automating the building of wheels in the `bezier-wheels` [project](https://github.com/dhermes/bezier-wheels) ([recent commits](https://github.com/dhermes/bezier-wheels/compare/ee008511d5ff2736dfb44f770552e7553b00e8f0...424453f50fbb8f240ca60280b637a278f6e9ad4a)). Built wheels are uploaded to a Google Cloud Storage bucket.\r\n-   Using the same set of optimal flags for Fortran 77 code (i.e. `.f` files) that are used for Fortran 90 code (i.e. `.f90` files) ([e7eb56e](https://github.com/dhermes/bezier/commit/e7eb56e723f13d43f6eae855e6556b4ccbc1edd9)).\r\n-   Unify `requirements.txt` files and add notes about why each dependency is required ([230814d](https://github.com/dhermes/bezier/commit/230814d67e24f42f967a652ff7e8d81ee2176954), [1ae147f](https://github.com/dhermes/bezier/commit/1ae147f81e7a01ba672806a8fd56de25ba2bdcdb), [e710ee6](https://github.com/dhermes/bezier/commit/e710ee6968438cb2462ec8bea8af407159a63925)).\r\n-   Changing `imp` usage to `importlib` due to deprecation of the former ([9231d92](https://github.com/dhermes/bezier/commit/9231d92b420df1ed97ae2b159bd0aedf0c1ff888)). Fixed [\\#137](https://github.com/dhermes/bezier/issues/137).\r\n-   Ditching the `--check-archs` flag in the macOS script for building wheels since we can no longer support 32-bit on macOS due to NumPy ([37be384](https://github.com/dhermes/bezier/commit/37be3845750ff0fe9f200f87a8427b05639c3a61)).\r\n-   Improved dev experience with Docker image used on CircleCI by adding a `.dockerignore` file for faster builds, suggesting `--workdir` and flag during local dev, setting `WHEELHOUSE` environment variable directly in the container (rather than in the CircleCI settings) and allowing \"default\" locations for pre-built wheels at `/wheelhouse` and `${HOME}/wheelhouse` ([08be336](https://github.com/dhermes/bezier/commit/08be336efac467beeb7055cfc80996b97482456a), [26acc38](https://github.com/dhermes/bezier/commit/26acc384d857cf9f5ddd8260ef50b7bcffeeb133), [7634779](https://github.com/dhermes/bezier/commit/763477958c73a4eb6ce0f89b6b37887c66c10706), [f9a8fcf](https://github.com/dhermes/bezier/commit/f9a8fcf275b244d962fae1e93b223af0c78285cc)).\r\n\r\nMiscellany\r\n----------\r\n\r\n-   Make some functional test cases more lenient so that they pass on 32-bit CentOS 5, which is used for `manylinux` ([e7eb56e](https://github.com/dhermes/bezier/commit/e7eb56e723f13d43f6eae855e6556b4ccbc1edd9)). This was part of a large effort to fully automate the building of wheels in the `bezier-wheels` [project](https://github.com/dhermes/bezier-wheels).\r\n-   Replacing `pypy` with `pypy3` in testing as the only non-CPython \"unofficially supported\" runtime. (This is part of the drop in support for Python 2.7.) Unfortunately the currently (as of August 2019) released versions of `pypy3` are not currently working with `numpy >= 1.16` (see [numpy/numpy\\#12740](https://github.com/numpy/numpy/issues/12740)) so the `numpy == 1.15.4` version is a pinned dependency.\r\n    -   Specifying the NumPy version in `setup.py` based on `implementation_name` ([7e9046d](https://github.com/dhermes/bezier/commit/7e9046dc9dbe6f448238141221c5a7dff497d8d4)).\r\n    -   Add `_pypy_speedup.c` built with Cython 0.29.11 because the latest Cython (0.29.13 as of August 2019) corresponds to the versions of NumPy that are incompatible with PyPy ([7813e41](https://github.com/dhermes/bezier/commit/7813e41f7666fa36fbb4a7daf0aa45c2d2bee87f)).\r\n    -   Pinning to `numpy==1.15.4` and `scipy==1.2.0` in wheelhouse for pre-built Docker container ([7634779](https://github.com/dhermes/bezier/commit/763477958c73a4eb6ce0f89b6b37887c66c10706)).\r\n-   Added `nox --session validate_functional_test_cases` session to ensure that functional test cases always adhere to the JSON schema.\r\n    -   Added `nox` session and fixed some schema file bugs ([618653a](https://github.com/dhermes/bezier/commit/618653a0888cc5e91a5fb1959cf5e04f61e5c1cf)).\r\n    -   Fixed curve intersections that did not adhere to schema ([35b158a](https://github.com/dhermes/bezier/commit/35b158a9ad4f8c0ed1d4a3cd07a8c157f33b0639)).\r\n    -   Transposed `nodes` schema for curved polygon ([8c3ca89](https://github.com/dhermes/bezier/commit/8c3ca895512a60c2fe82d8a24ab328244e3abb3f)).\r\n    -   Enable the `nox` session to run in CircleCI ([5a0a343](https://github.com/dhermes/bezier/commit/5a0a343728ac52933b1aadd3c483fb439f2e043a)).\r\n-   Updated `@slow` marker for `pytest` because it used a deprecated API ([46f8b57](https://github.com/dhermes/bezier/commit/46f8b57c8b34484236ce1bc9aa9f5ea5fc77c5df)).\r\n\r\nDocumentation\r\n=============\r\n\r\n-   Changing all references to Mac OS X to macOS ([b10c2fc](https://github.com/dhermes/bezier/commit/b10c2fc1af424e862143ac40d01f7baa65fc8af0), [c1c2c6b](https://github.com/dhermes/bezier/commit/c1c2c6b767c40c2eb070ae599a110ecc9fb3e793), [131d17b](https://github.com/dhermes/bezier/commit/131d17be3db5546deebff953378252b12b426534)). As of 10.12, the operating system has changed its name.\r\n-   Splitting up `algorithms/helpers`. The pre-amble has been moved into the `algorithms` landing page and the geometric and algebraic helpers have been moved into separate docs. ([889c913](https://github.com/dhermes/bezier/commit/889c913436b6d01533d8eb1830717620cea725ef)).\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/0.10.0",
        "name": "0.10.0",
        "release_id": 19275586,
        "tag": "0.10.0",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/0.10.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/19275586",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/19275586",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/0.10.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2018-10-31T06:04:15Z",
        "date_published": "2018-10-31T06:07:55Z",
        "description": "[![PyPI link to release 0.9.0](https://img.shields.io/pypi/v/bezier/0.9.0.svg)](https://pypi.org/project/bezier/0.9.0/) [![Documentation for release 0.9.0](https://readthedocs.org/projects/bezier/badge/?version=0.9.0)](https://bezier.readthedocs.io/en/0.9.0/)\r\n\r\nDocumentation\r\n-------------\r\n\r\n-   Documenting the C ABI `libbezier` ([4608364](https://github.com/dhermes/bezier/commit/4608364e9c0a2b3888f7f661e629fceda9d9a431)). Fixed [\\#63](https://github.com/dhermes/bezier/issues/63). This [documentation](http://bezier.readthedocs.io/en/0.9.0/abi/index.html) contains a page for each \"module\" which corresponds to the underlying Fortran module. Each module documents the routines in the corresponding header file, e.g. the [surface](http://bezier.readthedocs.io/en/0.9.0/abi/surface.html) document corresponds to the `bezier/surface.h` header. Fully working C examples have been added for each routine in `bezier/curve.h` and for the enum in `bezier/status.h`.\r\n-   Adding section about environment variables to [development](http://bezier.readthedocs.io/en/0.9.0/development.html) document ([5186e24](https://github.com/dhermes/bezier/commit/5186e24a7c7eab5d65ac41ba53e3826b693fc86f)). Fixed [\\#78](https://github.com/dhermes/bezier/issues/78).\r\n-   Remove dependency on `rawgit.com` ([04d0f8d](https://github.com/dhermes/bezier/commit/04d0f8d3155a22c5a048f52f75a3c6ffcc7eba69)). The website is being turned down. Fixed [\\#130](https://github.com/dhermes/bezier/issues/130).\r\n-   Renaming the \"Native Libraries\" document as \"Binary Extension\" ([f99db20](https://github.com/dhermes/bezier/commit/f99db20312bb4ba7e5943195020a8ced4be9457b)). In the process, changed most references to the \"native\" Python extension to instead call it a \"binary\" extension.\r\n-   Added a \"Cython `.pxd` [Declarations](http://bezier.readthedocs.io/en/0.9.0/python/pxd/index.html)\" document ([f99db20](https://github.com/dhermes/bezier/commit/f99db20312bb4ba7e5943195020a8ced4be9457b)). Fixed [\\#122](https://github.com/dhermes/bezier/issues/122).\r\n-   Moving all Python specific documentation under a specific URL path ([3db483b](https://github.com/dhermes/bezier/commit/3db483b58e2c5dd0f618c15fc01710ec6b1a2907)). In particular, moving\r\n    -   `/reference/...` to `/python/reference/...`\r\n    -   `/python-binary-extension.html` to `/python/binary-extension.html`\r\n    -   `/pxd/...` to `/python/pxd/...`.\r\n-   Moving all algorithm specific documentation under a specific URL path ([6e9c825](https://github.com/dhermes/bezier/commit/6e9c82501a222c95c616658e6e5e7bc00c9f4288)). In particular, moving\r\n    -   `/algorithm-helpers.html` to `/algorithms/helpers.html`\r\n    -   `/curve-curve-intersection.html` to `/algorithms/curve-curve-intersection.html`\r\n\r\nABI Changes\r\n-----------\r\n\r\n### New Features\r\n\r\n-   Added `surface.h::compute_area` helper that can be used to compute the area of both a surface and a curved polygon ([d4d7249](https://github.com/dhermes/bezier/commit/d4d7249729dffd4994df1af899084ceb89dde8fc)).\r\n\r\n### Breaking Changes\r\n\r\n-   Removing getters and setters for parameters used during curve-curve intersection ([2fda3ae](https://github.com/dhermes/bezier/commit/2fda3aed2818849363c425e3fce70b4bafe7e9ef)):\r\n    -   `curve_intersection.h::set_max_candidates`\r\n    -   `curve_intersection.h::get_max_candidates`\r\n-   Removing `dimension` from `curve.h::get_curvature` ([1e39c0c](https://github.com/dhermes/bezier/commit/1e39c0ce0502919d83a81902c8d9affdb6c6b892)).\r\n\r\nPython Changes\r\n--------------\r\n\r\n### New Features\r\n\r\n-   Added implementation for `Surface.area` [property](http://bezier.readthedocs.io/en/0.9.0/python/reference/bezier.surface.html#bezier.surface.Surface.area) and `CurvedPolygon.area` [property](http://bezier.readthedocs.io/en/0.9.0/python/reference/bezier.curved_polygon.html#bezier.curved_polygon.CurvedPolygon.area) ([eb6077e](https://github.com/dhermes/bezier/commit/eb6077eab4f6ca0d72de6194f1789a2d0eada8b0)).\r\n\r\n### Non-Public API\r\n\r\n-   Removing getters and setters for parameters used during curve-curve intersection ([2fda3ae](https://github.com/dhermes/bezier/commit/2fda3aed2818849363c425e3fce70b4bafe7e9ef)):\r\n    - `bezier._geometric_intersection.set_max_candidates()`\r\n    - `bezier._geometric_intersection.get_max_candidates()`\r\n-   Removing cached values for `Curve.length` [property](http://bezier.readthedocs.io/en/0.9.0/python/reference/bezier.curve.html#bezier.curve.Curve.length), `Surface.area` [property](http://bezier.readthedocs.io/en/0.9.0/python/reference/bezier.surface.html#bezier.surface.Surface.area) and `Surface.is_valid` [property](http://bezier.readthedocs.io/en/0.9.0/python/reference/bezier.surface.html#bezier.surface.Surface.is_valid) ([34d48d6](https://github.com/dhermes/bezier/commit/34d48d6900963734d7fb82f13bd3f37416cc6efe)).\r\n\r\n### Build\r\n\r\n-   Renaming `libbezier.dll` shared library to `bezier.dll` on Windows ([d17a9bc](https://github.com/dhermes/bezier/commit/d17a9bcee194edc9f103734e35023d178ed8923b)). This follows the correct convention on Windows.\r\n-   Adding Python 3.7 support and making it the default version used for testing ([e368e9f](https://github.com/dhermes/bezier/commit/e368e9fd9ab31cfd818fcb9e777dff6dcbd3a7e6)).\r\n-   Dropping support for Python 3.5 ([f99db20](https://github.com/dhermes/bezier/commit/f99db20312bb4ba7e5943195020a8ced4be9457b)).\r\n-   Adding back `-march=native` for non-wheel builds ([1566019](https://github.com/dhermes/bezier/commit/1566019635b8ffb8a2e4725a2d51830351e03fa5)). This way, when installing from source (either via a local checkout or from the source distribution on PyPI) the most optimal machine instructions will be produced. Fixed [\\#99](https://github.com/dhermes/bezier/issues/99).\r\n-   Removing all traces of 32-bit support for OS X ([d7620ad](https://github.com/dhermes/bezier/commit/d7620adb862ed6f9be9d2615916f789c3c24c52f)). This was driven by a [decision](https://github.com/numpy/numpy/issues/11625) from the NumPy maintainers.\r\n\r\n### Miscellany\r\n\r\n-   Adopted `black` [code formatter](https://black.readthedocs.io/en/stable/) ([f21b52d](https://github.com/dhermes/bezier/commit/f21b52d562daf6c86ddaba326aeee8362361e20f)).\r\n-   Adding project URLs and keywords for PyPI ([cfb070d](https://github.com/dhermes/bezier/commit/cfb070d651fba4e7df06216a159f623d57036f02)).\r\n-   Added 20 new surface-surface functional tests ([9fd9c1e](https://github.com/dhermes/bezier/commit/9fd9c1e26138034539e91aed04c97ec497a9e4b2)). See [\\#121](https://github.com/dhermes/bezier/issues/121) for more information.\r\n-   Removed time and memory benchmarks due to flakiness and lack of an environment that could be used for benchmarking ([6a30dc2](https://github.com/dhermes/bezier/commit/6a30dc22abefe7f7573048659b00fbcd968b8ccc)). See [\\#125](https://github.com/dhermes/bezier/issues/125) to follow discussion on re-enabling such benchmarks.\r\n-   Using `DEBUG=True` environment variable when running unit tests and other related tests ([d84dffb](https://github.com/dhermes/bezier/commit/d84dffb9d0e6fe1ee653e01cb9d4297f83aa11e0)).\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/0.9.0",
        "name": "0.9.0",
        "release_id": 13747505,
        "tag": "0.9.0",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/0.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/13747505",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/13747505",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/0.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2018-03-19T18:09:58Z",
        "date_published": "2018-03-19T18:33:55Z",
        "description": "[![PyPI link to release 0.8.0](https://img.shields.io/pypi/v/bezier/0.8.0.svg)](https://pypi.org/project/bezier/0.8.0/) [![Documentation for release 0.8.0](https://readthedocs.org/projects/bezier/badge/?version=0.8.0)](https://bezier.readthedocs.io/en/0.8.0/)\r\n\r\nNew Features\r\n------------\r\n\r\n-   Adding support for surface-surface intersections that have coincident segments shared between each surface ([cfa2b93](https://github.com/dhermes/bezier/commit/cfa2b93792695b87f11ece9da1959013ecf77678), [0a9645c](https://github.com/dhermes/bezier/commit/0a9645c9a3f1df3274677ad3def3d934c590b642)). See cases:\r\n    -   4: [10Q-18Q](https://github.com/dhermes/bezier/blob/0.8.0/docs/images/surfaces10Q_and_18Q.png)\r\n    -   5: [10Q-19Q](https://github.com/dhermes/bezier/blob/0.8.0/docs/images/surfaces10Q_and_19Q.png)\r\n    -   43: [29Q-42Q](https://github.com/dhermes/bezier/blob/0.8.0/docs/images/surfaces29Q_and_42Q.png)\r\n    -   44: [29Q-43Q](https://github.com/dhermes/bezier/blob/0.8.0/docs/images/surfaces29Q_and_43Q.png)\r\n    -   45: [10Q-44Q](https://github.com/dhermes/bezier/blob/0.8.0/docs/images/surfaces10Q_and_44Q.png)\r\n    -   46: [1Q-45Q](https://github.com/dhermes/bezier/blob/0.8.0/docs/images/surfaces1Q_and_45Q.png)\r\n    -   47: [1Q-2C](https://github.com/dhermes/bezier/blob/0.8.0/docs/images/surfaces1Q_and_2C.png)\r\n-   Adding support for curve-curve intersections that are also points of tangency. This was accomplished by five broad changes to the geometric intersection algorithm:\r\n    -   Checking if almost-linear curves have disjoint bounding boxes **before** intersecting the linearized segments ([05f0343](https://github.com/dhermes/bezier/commit/05f0343ca1962dbc5ab3b143b5c6fe20b87272d1)).\r\n    -   Adding a \"full\" Newton iteration for finding `B1(s) = B2(t)` when known to be near a solution. In particular, this has **special** handling for tangencies, which cause a singular Jacobian and make convergence drop from quadratic to linear and stalls out convergence early ([13a5be5](https://github.com/dhermes/bezier/commit/13a5be5d80d6a07a1a71326493baa06dbda70f13), [4bac61a](https://github.com/dhermes/bezier/commit/4bac61a243b08002c4b0154d2b346cc356097eaf)).\r\n    -   Changing how \"bad\" linearized segments are handled. After subdividing to approximately linear curve segments, there were two problems which are now being handled in the same way. If the line segments connecting the subdivided curve endpoints\r\n\r\n        -   are parallel, then the algorithm failed with a `PARALLEL` status\r\n        -   intersect outside of the unit interval (for either `s` or `t`), the curve-curve candidate was rejected (a small amount, `0.5^{16}`, of \"wiggle\" room was allowed outside of `[0, 1]`).\r\n\r\n        Now both cases are handled in the same way. First, the subdivided curve segments will have a convex hull check applied (which is more strict than a bounding box check). If their convex hulls do collide, they are treated as a normal intersection of curved segments ([4457f64](https://github.com/dhermes/bezier/commit/4457f64eaf28bb9fb5c91a8740cd0d618fafc3da), [fe453c3](https://github.com/dhermes/bezier/commit/fe453c3839b19ce4a85dfd0b5ad78f71a0973daf)).\r\n    -   Using the newly added \"full\" Newton's iteration for all intersections. Before, a single Newton step was applied after intersection the linearized segments ([d06430f](https://github.com/dhermes/bezier/commit/d06430fbb027eb9d62b6b724f70e62d0efb0732b)).\r\n    -   Changing how a candidate pair of `s-t` parameters is added. ([c998445](https://github.com/dhermes/bezier/commit/c998445026a5487c59af17c9cbdfc9a6cf4d72c0)). In the previous implementation, a pair was considered a duplicate only if there was a difference of at most 1 [ULP](https://en.wikipedia.org/wiki/Unit_in_the_last_place) from an existing intersection (though this could be toggled via `set_similar_ulps()`). Now, the pair is \"normalized\" so that `s` and `t` are away from `0`. For example, if `s < 2^{-10}` then we use `1 - s` instead. (This is perfectly \"appropriate\" since evaluating a B&#xe9;zier curve requires using both `s` and `1 - s`, so both values are equally relevant.) Once normalized, a relative error threshold is used.\r\n-   Four curve-curve functional test cases have gone from failing to passing:\r\n    -   11: [14-15](https://github.com/dhermes/bezier/blob/0.8.0/docs/images/curves14_and_15.png)\r\n    -   31: [38-39](https://github.com/dhermes/bezier/blob/0.8.0/docs/images/curves38_and_39.png)\r\n    -   43: [58-59](https://github.com/dhermes/bezier/blob/0.8.0/docs/images/curves58_and_59.png)\r\n    -   44: [60-59](https://github.com/dhermes/bezier/blob/0.8.0/docs/images/curves60_and_59.png)\r\n\r\n    and two surface-surface cases have as well:\r\n\r\n    -   10: [20Q-21Q](https://github.com/dhermes/bezier/blob/0.8.0/docs/images/surfaces20Q_and_21Q.png)\r\n    -   42: [41Q-21Q](https://github.com/dhermes/bezier/blob/0.8.0/docs/images/surfaces41Q_and_21Q.png)\r\n\r\n    In order to support the aforementioned surface-surface cases, special support for \"tangent corners\" was added ([12b0de4](https://github.com/dhermes/bezier/commit/12b0de4e4dae1d84e0681386fd312794ac8736ff)).\r\n\r\nABI Changes\r\n-----------\r\n\r\n### Breaking Changes\r\n\r\n-   Removed `BAD_TANGENT` status enum ([b89b2b1](https://github.com/dhermes/bezier/commit/b89b2b1de1726cdc9f508bd761f4c20e7d655321)). The case where that failure was issued has now been handled as an acceptable `TANGENT_BOTH` classification for surface-surface intersection points. (See the `classify_intersection()` [function](http://bezier.readthedocs.io/en/0.8.0/algorithm-helpers.html#bezier._surface_helpers.classify_intersection) for an example.)\r\n-   Adding `BAD_INTERIOR` status enum ([6348dc6](https://github.com/dhermes/bezier/commit/6348dc63b5d11453fa8312997429448bbdad0a3f)). (This is a **breaking** change rather than additive because it re-uses the enum value of `5` previously used by `BAD_TANGENT`.) This value is used by `interior_combine()` in the case that the curved polygon intersection(s) cannot be determined from the edge-edge intersections for a given surface-surface pair. See [#101](https://github.com/dhermes/bezier/issues/101).\r\n-   Removed `PARALLEL` status enum ([fe453c3](https://github.com/dhermes/bezier/commit/fe453c3839b19ce4a85dfd0b5ad78f71a0973daf)). Now when doing geometric curve-curve intersection, parallel linearized segments are handled by checking if the convex hulls collide and then (if they do) using a modified Newton iteration to converge to a root.\r\n-   Adding `BAD_MULTIPLICITY` status enum ([fe453c3](https://github.com/dhermes/bezier/commit/fe453c3839b19ce4a85dfd0b5ad78f71a0973daf)). (This is a **breaking** change rather than additive because it re-uses the enum value of `1` previously used by `PARALLEL`.) This is used when Newton's method fails to converge to either a simple intersection or a tangent intersection. Such failures to converge, when already starting near an intersection, may be caused by one of:\r\n    -   The intersection was of multiplicity greater than 2\r\n    -   The curves don't actually intersect, though they come very close\r\n    -   Numerical issues caused the iteration to leave the region of convergence\r\n-   Removed `ulps_away()` ([c998445](https://github.com/dhermes/bezier/commit/c998445026a5487c59af17c9cbdfc9a6cf4d72c0)).\r\n-   Removed `set_similar_ulps()` and `get_similar_ulps()` ([c998445](https://github.com/dhermes/bezier/commit/c998445026a5487c59af17c9cbdfc9a6cf4d72c0)).\r\n\r\n### Surface Changes\r\n\r\n-   Added `SINGULAR` status enum for cases when a linear system can't be solved due to a singular matrix ([4457f64](https://github.com/dhermes/bezier/commit/4457f64eaf28bb9fb5c91a8740cd0d618fafc3da)).\r\n-   Adding `status` as a return value in `newton_refine_curve_intersect()`. This way, when the Jacobian is singular (which happens at points of tangency), the `SINGULAR` status can be returned ([4457f64](https://github.com/dhermes/bezier/commit/4457f64eaf28bb9fb5c91a8740cd0d618fafc3da)). The old behavior would've resulted in a division by zero.\r\n\r\n### Non-Public API\r\n\r\n-   Adding custom linear solver for the `2 x 2` case ([a3fb476](https://github.com/dhermes/bezier/commit/a3fb476cf9a82a34754bdd9b9881fbe857883d57)). This is modelled after `dgesv` from LAPACK.\r\n\r\nPython Changes\r\n--------------\r\n\r\n-   (**Bug fix**) The `0.7.0` release broke `Surface.plot()` and `CurvedPolygon.plot()` (when the nodes were transposed, the plotting helpers were not correctly updated). The `add_patch()` helper was fixed to account for the changes in data layout ([80bfaaa](https://github.com/dhermes/bezier/commit/80bfaaa74219f9053585aa8970131018baa516d1)).\r\n-   Added custom `UnsupportedDegree` [exception](http://bezier.readthedocs.io/en/0.8.0/reference/bezier.html#bezier.UnsupportedDegree) to be used by routines that have implementations that are hard-coded for specific degrees ([87a1f21](https://github.com/dhermes/bezier/commit/87a1f2171f6b810516544ff1691856d7fadfa12f)). See [#103](https://github.com/dhermes/bezier/issues/103).\r\n-   Removed `ulps_away()` ([c998445](https://github.com/dhermes/bezier/commit/c998445026a5487c59af17c9cbdfc9a6cf4d72c0)).\r\n-   Removed `set_similar_ulps()` and `get_similar_ulps()` ([c998445](https://github.com/dhermes/bezier/commit/c998445026a5487c59af17c9cbdfc9a6cf4d72c0)).\r\n\r\n### Non-Public API\r\n\r\n-   Returning `coincident` flag from curve-curve `all_intersections` ([ebe6617](https://github.com/dhermes/bezier/commit/ebe66178d0ab6f359ba206ded7b5d629d849955c)).\r\n-   Adding a `TANGENT_BOTH` classification for surface-surface intersection points that are interior to both surfaces at the point of tangency ([b89b2b1](https://github.com/dhermes/bezier/commit/b89b2b1de1726cdc9f508bd761f4c20e7d655321)). This previously failed with a `NotImplementedError`.\r\n-   Added `COINCIDENT` classification for surface-surface intersection points that occur on a segment that is coincident on an edges of each surface ([8b1c59d](https://github.com/dhermes/bezier/commit/8b1c59d2b48281d38275af6c5b6e11c1699b92c6)). Such points previously failed classification because they were interpreted as being tangent and having the same curvature (because the segments are identical).\r\n-   Added a `COINCIDENT_UNUSED` classification ([cfa2b93](https://github.com/dhermes/bezier/commit/cfa2b93792695b87f11ece9da1959013ecf77678)) for cases where coincident segments are moving in opposite directions (i.e. the surfaces don't share a common interior). For example see case 44 ([29Q-43Q](https://github.com/dhermes/bezier/blob/0.8.0/docs/images/surfaces29Q_and_43Q.png)).\r\n-   Adding custom linear solver for the `2 x 2` case ([764e56d](https://github.com/dhermes/bezier/commit/764e56db5bb4987d31e3c9f5fbabbe6564d6e0c0)). This is modelled after `dgesv` from LAPACK.\r\n-   Adding some support for B&#xe9;zier clipping algorithm ([fbed62d](https://github.com/dhermes/bezier/commit/fbed62df305b8c2679ff260bba4f57d414e79a77), [ada4ea3](https://github.com/dhermes/bezier/commit/ada4ea34bf31cff5cc34491d6689f0f3a2b9f0a1)). See the original [paper](https://dx.doi.org/10.1016/0010-4485(90)90039-F) by Sederberg and Nishita for more information.\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/0.8.0",
        "name": "0.8.0",
        "release_id": 10157642,
        "tag": "0.8.0",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/0.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/10157642",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/10157642",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/0.8.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2018-02-07T17:41:27Z",
        "date_published": "2018-02-07T17:47:09Z",
        "description": "[![PyPI link to release 0.7.0](https://img.shields.io/pypi/v/bezier/0.7.0.svg)](https://pypi.org/project/bezier/0.7.0/) [![Documentation for release 0.7.0](https://readthedocs.org/projects/bezier/badge/?version=0.7.0)](https://bezier.readthedocs.io/en/0.7.0/)\r\n\r\nRobustness\r\n----------\r\n\r\n-   Geometric curve-curve intersection has better handling for cases when the number of intersection candidates grows large (`MAX_CANDIDATES == 64`):\r\n    -   First tries to reduce the number of candidates by checking if the **actual** convex hulls of each segment in a candidate pair intersect. This is a much \"finer\" check than using the \"blunt\" bounding box check.\r\n    -   If the convex hull refinement fails, checks if the curves are coincident, i.e. different segments / parameterizations along the same algebraic curve. This is done by using the `Curve.locate()` [function](https://bezier.readthedocs.io/en/0.7.0/reference/bezier.curve.html#bezier.curve.Curve.locate) to try to project each of the four endpoints onto the other curve and then re-parameterizing each curve onto a common interval.\r\n\r\nData Structures\r\n---------------\r\n\r\n-   Storing `xy`-points as columns (rather than rows). This was a **very** large and breaking change, started in [b44af8c](https://github.com/dhermes/bezier/commit/b44af8c3d590add947f905f2bc016af7272fc8e0). See [#51](https://github.com/dhermes/bezier/issues/51) for more information.\r\n\r\nPython Changes\r\n--------------\r\n\r\n## Non-Public API\r\n\r\n-   Requiring **contiguous** 1D arrays for Cython functions ([9ede37d](https://github.com/dhermes/bezier/commit/9ede37dcbb7eda9899a02675939eb4dd66af8e8c)).\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/0.7.0",
        "name": "0.7.0",
        "release_id": 9577132,
        "tag": "0.7.0",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/0.7.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/9577132",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/9577132",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/0.7.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2018-01-28T05:14:31Z",
        "date_published": "2018-01-28T05:23:03Z",
        "description": "[![PyPI link to release 0.6.4](https://img.shields.io/pypi/v/bezier/0.6.4.svg)](https://pypi.org/project/bezier/0.6.4/) [![Documentation for release 0.6.4](https://readthedocs.org/projects/bezier/badge/?version=0.6.4)](https://bezier.readthedocs.io/en/0.6.4/)\r\n\r\n# Python Changes\r\n\r\n## Surface Changes\r\n\r\n-   Stopped raising `ValueError('At least one value outside of unit interval', s_val, t_val)` or `ValueError('outside of unit interval')` when a curve-curve intersection falls **barely** outside of the parameter space `[0, 1]` ([329a59a](https://github.com/dhermes/bezier/commit/329a59a5c3f01655993305c3db3a2804eb25e0ad)).\r\n\r\n# ABI Changes\r\n\r\n## Surface Changes\r\n\r\n-   Removed `Status_WIGGLE_FAIL` enum and re-numbered all larger `Status` enum values (by subtracting one)\r\n-   Changing \"wiggle failure\" in curve-curve intersection from a non-success status to be a dropped candidate for intersection\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/0.6.4",
        "name": "0.6.4",
        "release_id": 9416719,
        "tag": "0.6.4",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/0.6.4",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/9416719",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/9416719",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/0.6.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2018-01-25T22:30:04Z",
        "date_published": "2018-01-25T22:41:25Z",
        "description": "[![PyPI link to release 0.6.3](https://img.shields.io/pypi/v/bezier/0.6.3.svg)](https://pypi.org/project/bezier/0.6.3/) [![Documentation for release 0.6.3](https://readthedocs.org/projects/bezier/badge/?version=0.6.3)](https://bezier.readthedocs.io/en/0.6.3/)\r\n\r\n# Python Changes\r\n\r\n## Surface Changes\r\n\r\n-   Changed `RuntimeError('Unexpected number of edges', 11)` to `RuntimeError('Unknown error has occured.')` in the speedup that does surface-surface intersection ([35ab5d5](https://github.com/dhermes/bezier/commit/35ab5d5a7d3518fda1ce4478dacee50bc3e56d9c)). The old error message was a \"copy-paste\" artifact from the `basic_interior_combine()` Python helper.\r\n\r\n## Build\r\n\r\n-   Removed a flag (`-march=native`) from the build process for the `bezier._speedup` extension module ([e739429](https://github.com/dhermes/bezier/commit/e7394292f14f134191d9944bb333d4a97dd92f29)). Using the flag caused the `manylinux` wheels to be \"broken\" (see [#98](https://github.com/dhermes/bezier/issues/98)).\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/0.6.3",
        "name": "0.6.3",
        "release_id": 9393919,
        "tag": "0.6.3",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/0.6.3",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/9393919",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/9393919",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/0.6.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2018-01-23T18:17:36Z",
        "date_published": "2018-01-23T18:25:37Z",
        "description": "[![PyPI link to release 0.6.2](https://img.shields.io/pypi/v/bezier/0.6.2.svg)](https://pypi.org/project/bezier/0.6.2/) [![Documentation for release 0.6.2](https://readthedocs.org/projects/bezier/badge/?version=0.6.2)](https://bezier.readthedocs.io/en/0.6.2/)\r\n\r\n# Python Changes\r\n\r\n## Documentation\r\n\r\n-   Converted `CHANGELOG.md` file into a [releases](http://bezier.readthedocs.io/en/0.6.2/releases/index.html) docs page ([0027cd7](https://github.com/dhermes/bezier/commit/0027cd7b51433c6b3542f077b08c555ff287e10b)).\r\n\r\n## Non-Public API\r\n\r\n-   Collapsed all Cython-generated modules into a single `bezier._speedup` module ([8bcb319](https://github.com/dhermes/bezier/commit/8bcb319c6dcb9e523037d688028d8a38c6b2b630)).\r\n    -   This is the change that **prompted the release**.\r\n    -   Dropped the five `bezier._HAS_*_SPEEDUP` members for a single `bezier._HAS_SPEEDUP` (this was the previous approach before `0.6.0`).\r\n    -   Renamed a few of the Cython helper functions to avoid name collision.\r\n    -   This was done to fix a bug and prevent future bugs. The issue was that a mutable Fortran global (`MAX_CANDIDATES`) was being included via an object file in **separate** extension modules. When one module updated the global, the other module never saw the update (because it was a different copy).\r\n\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/0.6.2",
        "name": "0.6.2",
        "release_id": 9354006,
        "tag": "0.6.2",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/0.6.2",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/9354006",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/9354006",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/0.6.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2018-01-12T20:40:42Z",
        "date_published": "2018-01-12T20:44:25Z",
        "description": "PyPI: https://pypi.org/project/bezier/0.6.1/\r\nDocs: https://bezier.readthedocs.io/en/0.6.1/\r\n\r\n## Python Changes\r\n\r\n### Documentation\r\n\r\n- Noting that `Surface.intersect()` can return a list of either `CurvedPolygon` or `Surface` instances ([`16e77d7`][0.6.1-5]).\r\n\r\n### Breaking Changes\r\n\r\n- Removing `IntersectionClassification` enum from `_status.pxd` ([`4da969e`][0.6.1-4]).\r\n\r\n### Non-Public API\r\n\r\n- Adding getters and setters for parameters used during curve-curve intersection ([`ef4ebc0`][0.6.1-7]):\r\n  - `bezier._geometric_intersection.set_max_candidates()`\r\n  - `bezier._geometric_intersection.get_max_candidates()`\r\n  - `bezier._geometric_intersection.set_similar_ulps()`\r\n  - `bezier._geometric_intersection.get_similar_ulps()`\r\n\r\n## ABI Changes\r\n\r\n### Surface Changes\r\n\r\n- Switching from `int` to an actual enum for relevant functions with output values that are enums:\r\n  - In `surface_intersection.h::surface_intersections`, `contained` is now a `SurfaceContained` ([`0a9c0c3`][0.6.1-3]) and `status` is now a `Status` ([`c356c32`][0.6.1-2])\r\n  - In `curve_intersection.h::bbox_intersect`, `enum_` is now a `BoxIntersectionType` ([`ef856af`][0.6.1-1])\r\n  - In `curve_intersection.h::curve_intersections`, `status` is now a `Status` ([`ef856af`][0.6.1-1])\r\n- Adding getters and setters for parameters used during curve-curve intersection ([`ef4ebc0`][0.6.1-7]):\r\n  - `curve_intersection.h::set_max_candidates`\r\n  - `curve_intersection.h::get_max_candidates`\r\n  - `curve_intersection.h::set_similar_ulps`\r\n  - `curve_intersection.h::get_similar_ulps`\r\n\r\n### Breaking Changes\r\n\r\n- Removing inputs `curve_start / curve_end` and outputs `true_start / true_end` in `curve.h::specialize_curve` ([`959c547`][0.6.1-6])\r\n\r\n[0.6.1-1]: https://github.com/dhermes/bezier/commit/ef856aff4e87ab0620d1ce28e7fdbd3395c8ec38\r\n[0.6.1-2]: https://github.com/dhermes/bezier/commit/c356c32b33781b03785b8868f59efd6ad3076a51\r\n[0.6.1-3]: https://github.com/dhermes/bezier/commit/0a9c0c3736e95deedeecb8d10284c92ebd39469d\r\n[0.6.1-4]: https://github.com/dhermes/bezier/commit/4da969e65cec37ca5c0a56e956e7a1546be24236\r\n[0.6.1-5]: https://github.com/dhermes/bezier/commit/16e77d74c526a216c0c2a74d4536cd1d9f93bcff\r\n[0.6.1-6]: https://github.com/dhermes/bezier/commit/959c5473e97e80b1b4e4fd0109f7e79cf1dc36eb\r\n[0.6.1-7]: https://github.com/dhermes/bezier/commit/ef4ebc0654d863610df982f218449b27bd135afc\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/0.6.1",
        "name": "0.6.1",
        "release_id": 9218853,
        "tag": "0.6.1",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/0.6.1",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/9218853",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/9218853",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/0.6.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2018-01-10T05:51:05Z",
        "date_published": "2018-01-10T05:59:47Z",
        "description": "PyPI: https://pypi.org/project/bezier/0.6.0/\r\nDocs: https://bezier.readthedocs.io/en/0.6.0/\r\n\r\n## Performance Optimizations\r\n\r\n- Added recommended performance flags for `gfortran` based on [recommendations][0.6.0-3] on `fortran90.org` ([`3877982`][0.6.0-22]).\r\n  - Extensions can be compiled in debug mode by setting `DEBUG=True` ([`b62460b`][0.6.0-62]).\r\n  - Setting `BEZIER_NO_EXTENSIONS=True` will build pure-Python modules only ([`3f6280c`][0.6.0-25])\r\n- Added [QUADPACK][0.6.0-86] to use in `curve.f90::compute_length` ([`985a4c0`][0.6.0-53]).\r\n- Implemented curve-curve intersection completely in Fortran (e.g. [`4a8f801`][0.6.0-28]) which resulted in a 10x speedup when called from Python. Also implemented surface-surface intersection completely in Fortran, resulting in a 3x speedup.\r\n\r\n## Python Changes\r\n\r\n### New Features\r\n\r\n- Added `CurvedPolygon._metadata` to track where edges originated, e.g. from a surface-surface intersection ([`871d23d`][0.6.0-45]). This is used for sanity checking in functional tests ([`e253da2`][0.6.0-78]).\r\n- Made speedup checks specific to the module, not all four. I.e. `bezier._HAS_SPEEDUP` was dropped in favor of five members, e.g. `_HAS_CURVE_SPEEDUP` ([`d798f66`][0.6.0-73]).\r\n- Added `bezier.__author__` and [`bezier.__version__`][0.6.0-87] attributes.\r\n- Added [`bezier.get_dll()`][0.6.0-88] for Windows ([`699e39b`][0.6.0-34]).\r\n- Added `bezier/__config__.py` that adds `libbezier` to `%PATH%` on Windows ([`8538af4`][0.6.0-43]).\r\n- Fortran / Cython speedups added:\r\n  - `_curve_speedup.pyx::subdivide_nodes`\r\n  - `_curve_speedup.pyx::newton_refine`\r\n  - `_curve_speedup.pyx::locate_point`\r\n  - `_curve_speedup.pyx::elevate_nodes`\r\n  - `_curve_speedup.pyx::get_curvature`\r\n  - `_curve_speedup.pyx::reduce_pseudo_inverse`\r\n  - `_curve_speedup.pyx::full_reduce`\r\n  - `_curve_speedup.pyx::compute_length`\r\n  - `_curve_intersection_speedup.pyx::all_intersections`\r\n  - `_curve_intersection_speedup.pyx::free_curve_intersections_workspace`\r\n  - `_helpers_speedup.pyx::contains_nd`\r\n  - `_helpers_speedup.pyx::vector_close`\r\n  - `_helpers_speedup.pyx::in_interval`\r\n  - `_helpers_speedup.pyx::ulps_away`\r\n  - `_surface_speedup.pyx::specialize_surface`\r\n  - `_surface_speedup.pyx::subdivide_nodes`\r\n  - `_surface_speedup.pyx::compute_edge_nodes`\r\n  - `_surface_intersection_speedup.pyx::newton_refine`\r\n  - `_surface_intersection_speedup.pyx::locate_point`\r\n  - `_surface_intersection_speedup.pyx::surface_intersections`\r\n  - `_surface_intersection_speedup.pyx::free_surface_intersections_workspace`\r\n\r\n### Breaking Changes\r\n\r\n- [`Curve.intersect()`][0.6.0-89] returns `s-t` parameters rather than `x-y` values ([`c309998`][0.6.0-68]).\r\n- [`Surface.intersect()`][0.6.0-90] returns a list with a single `Surface` when one of the two surfaces is contained in the other ([`05b1fd9`][0.6.0-6]).\r\n- [`Surface.is_valid`][0.6.0-91] will only return `True` if the map `B(s, t)` determined by the surface has everywhere positive Jacobian. Previously a negative Jacobian was also allowed ([`260fb51`][0.6.0-1]).\r\n- Removed data members from `Curve`:\r\n  - `edge_index` ([`b969488`][0.6.0-63])\r\n  - `next_edge` ([`28619e8`][0.6.0-16])\r\n  - `previous_edge` ([`28619e8`][0.6.0-16])\r\n  - `root` ([`db427f9`][0.6.0-75])\r\n  - `start` ([`39ee98b`][0.6.0-23])\r\n  - `end` ([`39ee98b`][0.6.0-23])\r\n- Removed data members from `Surface`:\r\n  - `base_x` ([`dea75e3`][0.6.0-2])\r\n  - `base_y` ([`dea75e3`][0.6.0-2])\r\n  - `width` ([`dea75e3`][0.6.0-2])\r\n- Remove `dimension` argument in `_curve_speedup.pyx::elevate_nodes` since it can be inferred from `nodes` ([`06501c5`][0.6.0-7]).\r\n\r\n## ABI Changes\r\n\r\n### New Features\r\n\r\n- Fully implemented curve-curve intersection (as `curve_intersection.h::curve_intersections`) and surface-surface intersection (as `surface_intersection.h::surface_intersections`) at the ABI level.\r\n- Added the `surface_intersection.h` header file and implementations for the described functions ([`fafd9ff`][0.6.0-84]).\r\n- Newly added functions\r\n  - `curve.h::subdivide_nodes_curve` ([`efb3ce6`][0.6.0-82])\r\n  - `curve.h::newton_refine_curve` ([`2257344`][0.6.0-15])\r\n  - `curve.h::locate_point_curve` ([`2121101`][0.6.0-14], [`32b0fa9`][0.6.0-20])\r\n  - `curve.h::elevate_nodes_curve` ([`b03fc28`][0.6.0-60])\r\n  - `curve.h::get_curvature` ([`69cb2f8`][0.6.0-35])\r\n  - `curve.h::reduce_pseudo_inverse` ([`7c3db17`][0.6.0-39])\r\n  - `curve.h::full_reduce` ([`4abd309`][0.6.0-29])\r\n  - `curve.h::compute_length` ([`985a4c0`][0.6.0-53], [`7e71b20`][0.6.0-40])\r\n  - `curve_intersection.h::curve_intersections` ([`c92f98d`][0.6.0-96])\r\n  - `curve_intersection.h::free_curve_intersections_workspace` ([`c92f98d`][0.6.0-96])\r\n  - `helpers.h::contains_nd` ([`36f4b5e`][0.6.0-21])\r\n  - `helpers.h::vector_close` ([`9f3716a`][0.6.0-55])\r\n  - `helpers.h::in_interval` ([`3c0af5d`][0.6.0-24])\r\n  - `helpers.h::ulps_away` ([`0197237`][0.6.0-4])\r\n  - `surface.h::specialize_surface` ([`eb8693e`][0.6.0-81], [`fcd5bad`][0.6.0-85])\r\n  - `surface.h::subdivide_nodes_surface` ([`6027210`][0.6.0-32], [`4fc5f2a`][0.6.0-30], [`8beb1ac`][0.6.0-47], [`0b2b1f3`][0.6.0-8], [`d27b86f`][0.6.0-70], [`88c302b`][0.6.0-46])\r\n  - `surface.h::compute_edge_nodes` ([`2d02590`][0.6.0-17], [`f86649a`][0.6.0-83])\r\n  - `surface_intersection.h::newton_refine_surface` ([`93c288d`][0.6.0-50])\r\n  - `surface_intersection.h::locate_point_surface` ([`325ea47`][0.6.0-19], [`ca134e6`][0.6.0-69], [`bf69852`][0.6.0-65])\r\n  - `surface_intersection.h::surface_intersections`\r\n  - `surface_intersection.h::free_surface_intersections_workspace`\r\n- Added [`status.h`][0.6.0-97] with an enum for failure states. Each Fortran procedure that returns a status documents the possible values and if each value is set directly or by a called procedure ([`9fc8575`][0.6.0-56], [`c2accf7`][0.6.0-67]).\r\n\r\n### Breaking Changes\r\n\r\n- Removed functions\r\n  - `curve.h::specialize_curve_generic` ([`d52453b`][0.6.0-71])\r\n  - `curve.h::specialize_curve_quadratic` ([`d52453b`][0.6.0-71])\r\n  - `curve_intersection.h::from_linearized` ([`d62e462`][0.6.0-72])\r\n  - `curve_intersection.h::bbox_line_intersect` ([`72c0179`][0.6.0-37])\r\n  - `curve_intersection.h::linearization_error` ([`4a3378b`][0.6.0-27])\r\n  - `curve_intersection.h::segment_intersection` ([`4060590`][0.6.0-26])\r\n  - `curve_intersection.h::parallel_different` ([`df3e195`][0.6.0-76])\r\n- Renamed functions\r\n  - `curve.h::newton_refine` to `newton_refine_curve` ([`194ce95`][0.6.0-11])\r\n  - `curve.h::elevate_nodes` to `elevate_nodes_curve` ([`194ce95`][0.6.0-11])\r\n  - `curve_intersection.h::newton_refine_intersect` to `newton_refine_curve_intersect` ([`a055525`][0.6.0-57])\r\n- Replaced `degree` with `num_nodes (== degree + 1)` in functions that operate on curves:\r\n  - `curve.h::evaluate_curve_barycentric` ([`13eacdd`][0.6.0-10])\r\n  - `curve.h::evaluate_multi` ([`962c288`][0.6.0-52])\r\n  - `curve.h::specialize_curve` ([`ac86233`][0.6.0-59])\r\n  - `curve.h::evaluate_hodograph` ([`9170855`][0.6.0-49])\r\n  - `curve_intersection.h::newton_refine_curve_intersect` ([`80ec491`][0.6.0-42])\r\n\r\n## Miscellany\r\n\r\n- Added documentation for \"native extensions\" in `DEVELOPMENT` ([`2f9f2c4`][0.6.0-92]).\r\n- Overhauled [`native-libraries` doc][0.6.0-95] with subsections for OS X and Windows ([`bfa75ee`][0.6.0-66], [`72005fb`][0.6.0-94], etc.).\r\n- Added Fortran unit tests ([`758bdd1`][0.6.0-38], [`e8afba7`][0.6.0-79], [`3164365`][0.6.0-18], etc.).\r\n- Began testing in Mac OS X on Travis ([`9ac5e8e`][0.6.0-54], [`85f7619`][0.6.0-44], etc.).\r\n- Added a workaround (`include/bezier/_bool_patch.h`) for the missing support for `bool` in old MSVC versions that are required to work with Python 2.7 ([`5577178`][0.6.0-93]).\r\n\r\n[0.6.0-1]: https://github.com/dhermes/bezier/commit/260fb512a67376a7b62b41c37377306c743c8b61\r\n[0.6.0-2]: https://github.com/dhermes/bezier/commit/dea75e3f2999e52f74c3d2603a4e162ae3eb2ef2\r\n[0.6.0-3]: http://www.fortran90.org/src/faq.html\r\n[0.6.0-4]: https://github.com/dhermes/bezier/commit/01972377303afa9a41c79533ee967b8bcc526435\r\n[0.6.0-5]: https://github.com/dhermes/bezier/commit/02d9e115f0c0a7b89bb7b79e3308f1ac00448d71\r\n[0.6.0-6]: https://github.com/dhermes/bezier/commit/05b1fd98c5caea015b87819abdd2d6631ccc9bd4\r\n[0.6.0-7]: https://github.com/dhermes/bezier/commit/06501c5c05e4f646e756f225dc2db0fab98cbbab\r\n[0.6.0-8]: https://github.com/dhermes/bezier/commit/0b2b1f3edeab418bbacc8cd60a419a201cfdd038\r\n[0.6.0-9]: https://github.com/dhermes/bezier/commit/0c9e1be84ce413426066e1abc556a118df759d59\r\n[0.6.0-10]: https://github.com/dhermes/bezier/commit/13eacdd189b81acbbcc3e39bb6643c6edf6a4750\r\n[0.6.0-11]: https://github.com/dhermes/bezier/commit/194ce95a8721e014d3a7d73213d358d89bc81fd8\r\n[0.6.0-12]: https://github.com/dhermes/bezier/commit/1af51cf21866734c3076430d667ac770a3a561b5\r\n[0.6.0-13]: https://github.com/dhermes/bezier/commit/1f55630119980053218d6dcc20cea356e6424705\r\n[0.6.0-14]: https://github.com/dhermes/bezier/commit/21211010bdf5640b6bbfbbd6a270d35dc928efbc\r\n[0.6.0-15]: https://github.com/dhermes/bezier/commit/2257344abc501d4456f9b819969cf8dd9cbefb0b\r\n[0.6.0-16]: https://github.com/dhermes/bezier/commit/28619e8ab4f7b205c7676e45e6339468a5d92460\r\n[0.6.0-17]: https://github.com/dhermes/bezier/commit/2d02590ed972dba902958a07598b95f8099a7295\r\n[0.6.0-18]: https://github.com/dhermes/bezier/commit/3164365b261564c0da158ab46d899357735fbd31\r\n[0.6.0-19]: https://github.com/dhermes/bezier/commit/325ea479665947016844b3ea37cbccf5962f5876\r\n[0.6.0-20]: https://github.com/dhermes/bezier/commit/32b0fa953f7f4dd9ea8f0b3439206f6185f3d863\r\n[0.6.0-21]: https://github.com/dhermes/bezier/commit/36f4b5e9a6f872178781390b352e42ad15a4d9e1\r\n[0.6.0-22]: https://github.com/dhermes/bezier/commit/387798248cf452b27b8e7aa16b83417b1cdcb196\r\n[0.6.0-23]: https://github.com/dhermes/bezier/commit/39ee98b5add3333b90f73279b304dbb1fd0f2c54\r\n[0.6.0-24]: https://github.com/dhermes/bezier/commit/3c0af5d32aa494efc15cb23a3bf1d15c0b5859b1\r\n[0.6.0-25]: https://github.com/dhermes/bezier/commit/3f6280ccfa1b7dbb9415aaf088dcc610ac4bd8ac\r\n[0.6.0-26]: https://github.com/dhermes/bezier/commit/40605901872d679956b384bedf426f6cbf7a43c5\r\n[0.6.0-27]: https://github.com/dhermes/bezier/commit/4a3378b11f54d582f7f223c92939745fe8daaa4c\r\n[0.6.0-28]: https://github.com/dhermes/bezier/commit/4a8f80177b56f1241e96e973639cfc8a1273e080\r\n[0.6.0-29]: https://github.com/dhermes/bezier/commit/4abd309ff0125bf82f91a71946511e82fd7eaf8a\r\n[0.6.0-30]: https://github.com/dhermes/bezier/commit/4fc5f2a552a91ef738f062ff1578d2865672c9f6\r\n[0.6.0-31]: https://github.com/dhermes/bezier/commit/515909531ea864b54f6c6a2b50409bb003e6ccd3\r\n[0.6.0-32]: https://github.com/dhermes/bezier/commit/602721004887cd17e977e7255c7f574cd321d032\r\n[0.6.0-33]: https://github.com/dhermes/bezier/commit/617d9ca6d63d6edeaf3a01d2b7e97135b027f0ec\r\n[0.6.0-34]: https://github.com/dhermes/bezier/commit/699e39b2671daed23a57d37b5e776c6627c72850\r\n[0.6.0-35]: https://github.com/dhermes/bezier/commit/69cb2f852d82076c3e7c98ce68097bc3b8b4a5b6\r\n[0.6.0-36]: https://github.com/dhermes/bezier/commit/71d27d16eda291b4e831ef0caa7cc793b636a8dd\r\n[0.6.0-37]: https://github.com/dhermes/bezier/commit/72c017995f7df9bfa42347dbc0f967e666bbadee\r\n[0.6.0-38]: https://github.com/dhermes/bezier/commit/758bdd15426424c1566bda15c03594bc2e66410a\r\n[0.6.0-39]: https://github.com/dhermes/bezier/commit/7c3db1727c45763ec7a14550764979cb9ceafcb5\r\n[0.6.0-40]: https://github.com/dhermes/bezier/commit/7e71b202cfcb2ea575771c2e1169d0e0c27e481b\r\n[0.6.0-41]: https://github.com/dhermes/bezier/commit/7f6fafb4248ad38ca8b662da1a7ba877a74743ab\r\n[0.6.0-42]: https://github.com/dhermes/bezier/commit/80ec491d5d7094d378de5110b2b254e33ca271a1\r\n[0.6.0-43]: https://github.com/dhermes/bezier/commit/8538af47870849e6f55e0c861e0e2b720aa3ae75\r\n[0.6.0-44]: https://github.com/dhermes/bezier/commit/85f7619929debd3730d6ddafa4ac75789ad8e5f3\r\n[0.6.0-45]: https://github.com/dhermes/bezier/commit/871d23d640e9333f5e7ae02e29ca878c80176682\r\n[0.6.0-46]: https://github.com/dhermes/bezier/commit/88c302b5d070d512339bd1b16960a4e43025005c\r\n[0.6.0-47]: https://github.com/dhermes/bezier/commit/8beb1ace5934d7bce03cb19c483aa1aec57ec06b\r\n[0.6.0-48]: https://github.com/dhermes/bezier/commit/911aeb1ba1ca5b828e53297c277d1c68bbd6755f\r\n[0.6.0-49]: https://github.com/dhermes/bezier/commit/91708552355b71e95adb8454ec69d1f3d1e81c22\r\n[0.6.0-50]: https://github.com/dhermes/bezier/commit/93c288d5e5865986aa2627ea81f12b6370099865\r\n[0.6.0-51]: https://github.com/dhermes/bezier/commit/9578a6c76f6d5382189ba33285026cff16e733b4\r\n[0.6.0-52]: https://github.com/dhermes/bezier/commit/962c288a2eb3c0c7fdeb6f055ebbff57331b7cf5\r\n[0.6.0-53]: https://github.com/dhermes/bezier/commit/985a4c07c25c9bb362c6de615580a4246b3c16b1\r\n[0.6.0-54]: https://github.com/dhermes/bezier/commit/9ac5e8e4a02ce8b64b9e6b5142a6c1fda01ee787\r\n[0.6.0-55]: https://github.com/dhermes/bezier/commit/9f3716ae18ea5e592db01f37242623b718e23a84\r\n[0.6.0-56]: https://github.com/dhermes/bezier/commit/9fc857553fd1b525e801970cfe0eb2e2288f5319\r\n[0.6.0-57]: https://github.com/dhermes/bezier/commit/a055525c1ab81246bc6d040fdce376772cf65703\r\n[0.6.0-58]: https://github.com/dhermes/bezier/commit/aa0f205b552e3436dea104b5068692dc7d68d75f\r\n[0.6.0-59]: https://github.com/dhermes/bezier/commit/ac86233dea35c56f5b5c81fd1020ca480487d87c\r\n[0.6.0-60]: https://github.com/dhermes/bezier/commit/b03fc280053043996138932043de4f6ac69e16ce\r\n[0.6.0-61]: https://github.com/dhermes/bezier/commit/b06bde03025b41986e35039fd312b82d824aff85\r\n[0.6.0-62]: https://github.com/dhermes/bezier/commit/b62460b47faec2666fceb13457bc11558f8079e9\r\n[0.6.0-63]: https://github.com/dhermes/bezier/commit/b969488df308ee78712db0b605a86d3adc0d3da6\r\n[0.6.0-64]: https://github.com/dhermes/bezier/commit/ba99c8d89e060f3b481d484aded306e8a73ca163\r\n[0.6.0-65]: https://github.com/dhermes/bezier/commit/bf698525d99f2424717ba4a8559ea2ab84abe6cb\r\n[0.6.0-66]: https://github.com/dhermes/bezier/commit/bfa75eedda8187bef59ca8e04f9d04ee0fc28b97\r\n[0.6.0-67]: https://github.com/dhermes/bezier/commit/c2accf76047741d7a42327a67c4732b488c56600\r\n[0.6.0-68]: https://github.com/dhermes/bezier/commit/c309998f705de7467e1222e41467190739ff3118\r\n[0.6.0-69]: https://github.com/dhermes/bezier/commit/ca134e63f1061b99404e3dfedefdd5d8cf5956ea\r\n[0.6.0-70]: https://github.com/dhermes/bezier/commit/d27b86f417c4f6227c08bfc0c50da88584d7996b\r\n[0.6.0-71]: https://github.com/dhermes/bezier/commit/d52453ba27c993422da3fbbc78c53aea960fd525\r\n[0.6.0-72]: https://github.com/dhermes/bezier/commit/d62e462507287af66f51043889ae56be21cb8e45\r\n[0.6.0-73]: https://github.com/dhermes/bezier/commit/d798f665fdd0c223a1b0a71919eb9a45ee86951d\r\n[0.6.0-74]: https://github.com/dhermes/bezier/commit/d92357913bdbdfccf43ef7f393f17fde99830b38\r\n[0.6.0-75]: https://github.com/dhermes/bezier/commit/db427f958266103e0a266721e18c66a7025d85ae\r\n[0.6.0-76]: https://github.com/dhermes/bezier/commit/df3e195a77236799ed975d3b9251c45eb4bbf29a\r\n[0.6.0-77]: https://github.com/dhermes/bezier/commit/e1777e767a87ba54689fbd3ae86bd98568212ff8\r\n[0.6.0-78]: https://github.com/dhermes/bezier/commit/e253da2e507b4edf1627ddd753a6e5e73e563684\r\n[0.6.0-79]: https://github.com/dhermes/bezier/commit/e8afba7c64a7ecc2ded84efb5f164513974963cf\r\n[0.6.0-80]: https://github.com/dhermes/bezier/commit/eaec7cfbba84cfb27247647be52286551df9e619\r\n[0.6.0-81]: https://github.com/dhermes/bezier/commit/eb8693e823f7a2af3fb6682f76a667b20d419e5d\r\n[0.6.0-82]: https://github.com/dhermes/bezier/commit/efb3ce65cef671d1745028594bb5f0897e96e053\r\n[0.6.0-83]: https://github.com/dhermes/bezier/commit/f86649aa1f631a11ad314754a236719dd6f0c714\r\n[0.6.0-84]: https://github.com/dhermes/bezier/commit/fafd9ff181755e9b204372f1b94dd10578a16382\r\n[0.6.0-85]: https://github.com/dhermes/bezier/commit/fcd5bad6fe47499c23db32092e7a749e2e866f92\r\n[0.6.0-86]: https://en.wikipedia.org/wiki/QUADPACK\r\n[0.6.0-87]: http://bezier.readthedocs.io/en/0.6.0/reference/bezier.html#bezier.__version__\r\n[0.6.0-88]: http://bezier.readthedocs.io/en/0.6.0/reference/bezier.html#bezier.get_dll\r\n[0.6.0-89]: http://bezier.readthedocs.io/en/0.6.0/reference/bezier.curve.html#bezier.curve.Curve.intersect\r\n[0.6.0-90]: http://bezier.readthedocs.io/en/0.6.0/reference/bezier.surface.html#bezier.surface.Surface.intersect\r\n[0.6.0-91]: http://bezier.readthedocs.io/en/0.6.0/reference/bezier.surface.html#bezier.surface.Surface.is_valid\r\n[0.6.0-92]: https://github.com/dhermes/bezier/commit/2f9f2c49585238024722b5a5b4fb60ea3338b9b3\r\n[0.6.0-93]: https://github.com/dhermes/bezier/commit/5577178a3ef45487667cd72d81146390be2b0c41\r\n[0.6.0-94]: https://github.com/dhermes/bezier/commit/72005fbb0a05715f6832f68dc8c3f04576781047\r\n[0.6.0-95]: http://bezier.readthedocs.io/en/0.6.0/native-libraries.html\r\n[0.6.0-96]: https://github.com/dhermes/bezier/commit/c92f98dde15a2ad3cbdf8db46fd48fbbed105552\r\n[0.6.0-97]: https://github.com/dhermes/bezier/blob/0.6.0/src/bezier/include/bezier/status.h\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/0.6.0",
        "name": "0.6.0",
        "release_id": 9173815,
        "tag": "0.6.0",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/0.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/9173815",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/9173815",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/0.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2017-09-07T23:15:53Z",
        "date_published": "2017-09-08T05:24:36Z",
        "description": "PyPI: https://pypi.org/project/bezier/0.5.0/\r\nDocs: https://bezier.readthedocs.io/en/0.5.0/\r\n\r\n## Performance Optimizations\r\n-   Change `wiggle_interval` to return `success` bool instead of raising an exception. This allows the implicitization approach to use it without having to use exceptions for flow-control. (Fixes [#22][5].)\r\n-   Switching Fortran speedups from `f2py` to Cython (this is because `f2py` artificially limits the feature set of Fortran, i.e. user defined types)\r\n-   Moving some more code to Fortran (e.g. `bbox_line_intersect()` [`3dcf640`][11])\r\n\r\n## New Features\r\n-   Making Fortran features available outside of Python (see [Native Libraries][1])\r\n    -   C headers for each Fortran module (via [`bezier.get_include()`][2])\r\n    -   Cython `.pxd` declarations for all Fortran modules\r\n    -   `libbezier` static library (via [`bezier.get_lib()`][3])\r\n-   Implementing [`bezier_roots()`][13] polynomial root solver for polynomials written in Bernstein basis. ([`0dd6369`][12])\r\n\r\n## Miscellany\r\n-   Getting `bezier` [published][10] in the Journal of Open Source Science (JOSS). See [review][9]. ([`e6c4536`][7] and [`975ac6b`][8])\r\n-   Updating error message for `locate()` methods and adding a note that `locate()` / `evaluate*()` are (essentially) inverses. H/T to @pdknsk [#36][4]\r\n-   Using Fortran-contiguous arrays in `_check_non_simple()`. ([`b06c78e`][6])\r\n-   Moving most of `Curve.subdivide()` and `Surface.subdivide()` logic into helpers. This is part of an effort to make all helpers take low-level data types rather than `Curve`s, `Surface`s, etc. ([`34515bd`][14] and [`1fc80e5`][15])\r\n-   Split `speedup.f90` into submodules `curve.f90`, `surface.f90`, etc. ([`75349b7`][16], [`dfd6bba`][17], [`7096a9d`][18], [`c326c00`][19])\r\n-   Adding `BEZIER_JOURNAL` option to `setup.py`. This stores a record of compiler commands invoked during installation. See [Native Libraries][1] for more details. ([`3d832e7`][20] and [`c64a97a`][21])\r\n\r\n[1]: http://bezier.readthedocs.io/en/0.5.0/native-libraries.html\r\n[2]: http://bezier.readthedocs.io/en/0.5.0/reference/bezier.html#bezier.get_include\r\n[3]: http://bezier.readthedocs.io/en/0.5.0/reference/bezier.html#bezier.get_lib\r\n[4]: https://github.com/dhermes/bezier/pull/36\r\n[5]: https://github.com/dhermes/bezier/pull/22\r\n[6]: https://github.com/dhermes/bezier/commit/b06c78e50d53bf673bcf0b71fa84b36c8df564d8\r\n[7]: https://github.com/dhermes/bezier/commit/e6c45360f0c8412ae90d967463a14c49490d70ee\r\n[8]: https://github.com/dhermes/bezier/commit/975ac6b1a4313db4dcdc17396d6d34561005939e\r\n[9]: https://github.com/openjournals/joss-reviews/issues/267\r\n[10]: http://joss.theoj.org/papers/10.21105/joss.00267\r\n[11]: https://github.com/dhermes/bezier/commit/3dcf64090bb5874320dcde86eaf449e94278dd08\r\n[12]: https://github.com/dhermes/bezier/commit/0dd6369b0f77e4c0cf8113f2d25812addc90482a\r\n[13]: http://bezier.readthedocs.io/en/0.5.0/algorithm-helpers.html#bezier._implicitization.bezier_roots\r\n[14]: https://github.com/dhermes/bezier/commit/34515bd6246f57fbb311b4089520a24e8237294a\r\n[15]: https://github.com/dhermes/bezier/commit/1fc80e54ad1b45cb628af06e5a2100eeb9282865\r\n[16]: https://github.com/dhermes/bezier/commit/75349b745063a9bbc623808b3f7bbf6b7641c008\r\n[17]: https://github.com/dhermes/bezier/commit/dfd6bba303ac0a8492fac1f309086b685e52ab59\r\n[18]: https://github.com/dhermes/bezier/commit/7096a9d646930378476e650c77d0652a48bf148a\r\n[19]: https://github.com/dhermes/bezier/commit/c326c00a5c0ee74f9aa53c2b104ac6d4eb5c6794\r\n[20]: https://github.com/dhermes/bezier/commit/3d832e78af2a951a642ff5860b9593abfa674ec3\r\n[21]: https://github.com/dhermes/bezier/commit/c64a97aa5599220b927094a41de04b0c75bbec33\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/0.5.0",
        "name": "0.5.0",
        "release_id": 7679426,
        "tag": "0.5.0",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/0.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/7679426",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/7679426",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/0.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2017-06-07T05:45:51Z",
        "date_published": "2017-08-02T17:52:56Z",
        "description": "PyPI: https://pypi.org/project/bezier/0.4.0/\r\nDocs: https://bezier.readthedocs.io/en/0.4.0/\r\n\r\n## Performance Optimizations\r\n-   [Adding][29] Fortran [speedups][30] for many crucial computation helpers including\r\n    -   intersecting line segments\r\n    -   (vectorized) Horner's method for evaluating a B&#xe9;zier curve at multiple parameters at once\r\n    -   (vectorized) Horner's method for evaluating a B&#xe9;zier surface\r\n    -   computing \"linearization error\" (how close a curve is to a line)\r\n    -   specializing a B&#xe9;zier curve to a sub-interval\r\n    -   using Newton's method to refine a curve-curve intersection\r\n-   [Adding][10] `_verify` switch to [`Surface.locate()`][11] and [`Curve.intersect()`][14] to selectively disable overly defensive value checking. (Making sure to use this switch during \"internal\" computation.)\r\n-   Making sure NumPy arrays are Fortran-contiguous as often as possible (e.g. snippets and source, via `np.asfortranarray()`). This is to avoid (and emphasize) a non-trivial overhead when passing a C-contiguous array to a Fortran function. ([`03a7242`][15], [`6064e4c`][16], [`f1804f4`][17])\r\n-   Using Horner's method in `Curve.evaluate_multi()` and `Surface.evaluate_barycentric()`, rather than inferior (sometimes non-vectorized) approaches ([`dee8181`][18], [`2611e64`][19])\r\n-   Made surface-surface intersection more resilient / lenient for corner intersections. For \"nearby\" intersections, parameter values can be rounded to `0` or `1`. ([`4a8458c`][25])\r\n\r\n## New Features\r\n-   [Adding][23] optional `strategy` argument (one of geometric or algebraic) to [`Surface.intersect()`][24]\r\n    -   Added \"algebraic\" [`IntersectionStrategy`][20] via curve [implicitization][27] ([reference][28])\r\n-   Adding [`Curve.reduce_()`][21] which acts as a partial inverse to [`Curve.elevate()`][31]. It is only a complete inverse when a curve is degree-elevated, otherwise it returns the \"best\" reduced form (in the least squares sense).\r\n\r\n## Interface Changes\r\n-   (**Breaking change**) [Removing][5] `show` keyword from [`Curve.plot()`][2], [`Surface.plot()`][3] and [`CurvedPolygon.plot()`][4]\r\n-   [Adding][32] `color` keyword to [`Curve.plot()`][2]\r\n-   [Adding][26] `alpha` keyword to [`Curve.plot()`][2]\r\n-   (**Breaking change**) [Splitting][6] the [`Surface.evaluate_multi()`][7] method into [`Surface.evaluate_barycentric_multi()`][8] and [`Surface.evaluate_cartesian_multi()`][9]\r\n-   [Adding][22] `__dict__` helpers on `Curve`, `CurvedPolygon` and `Surface`. These are `@property`s intended only for REPL use, since classes with `__slots__` no longer have a `__dict__` attribute.\r\n\r\n## Miscellany\r\n-   Adding [`IntersectionClassification`][1] to docs ([ref][5])\r\n-   [Moving][12] most plotting into a dedicated module. More importantly, importing plotting helpers at **run-time** rather at **import time**. So if computational code never plots, it won't eat the import cost of `matplotlib`. [Removing][13] `matplotlib` as a dependency.\r\n\r\n[1]: http://bezier.readthedocs.io/en/0.4.0/algorithm-helpers.html#bezier._surface_helpers.IntersectionClassification\r\n[2]: http://bezier.readthedocs.io/en/0.4.0/reference/bezier.curve.html#bezier.curve.Curve.plot\r\n[3]: http://bezier.readthedocs.io/en/0.4.0/reference/bezier.surface.html#bezier.surface.Surface.plot\r\n[4]: http://bezier.readthedocs.io/en/0.4.0/reference/bezier.curved_polygon.html#bezier.curved_polygon.CurvedPolygon.plot\r\n[5]: https://github.com/dhermes/bezier/commit/828f4238971b12a9d494ce38387cec855d063c91\r\n[6]: https://github.com/dhermes/bezier/commit/cea88285b8c9002a57efd88e69b5bd2ef46e7ca7\r\n[7]: http://bezier.readthedocs.io/en/0.3.0/reference/bezier.surface.html#bezier.surface.Surface.evaluate_multi\r\n[8]: http://bezier.readthedocs.io/en/0.4.0/reference/bezier.surface.html#bezier.surface.Surface.evaluate_barycentric_multi\r\n[9]: http://bezier.readthedocs.io/en/0.4.0/reference/bezier.surface.html#bezier.surface.Surface.evaluate_cartesian_multi\r\n[10]: https://github.com/dhermes/bezier/commit/dcf40f4c9ed2167e96fc8f4675aeedcc2d811a0b\r\n[11]: http://bezier.readthedocs.io/en/0.4.0/reference/bezier.surface.html#bezier.surface.Surface.locate\r\n[12]: https://github.com/dhermes/bezier/commit/dc4d33cfcf7f9ac6e794b856dc6d76635d362922\r\n[13]: https://github.com/dhermes/bezier/commit/064e2c5efe7fa6498d74a33798a363e2c8e0b83e\r\n[14]: http://bezier.readthedocs.io/en/0.4.0/reference/bezier.curve.html#bezier.curve.Curve.intersect\r\n[15]: https://github.com/dhermes/bezier/commit/03a72428c6f9d3bd3a1fac9b7f9afa615ce12d46\r\n[16]: https://github.com/dhermes/bezier/commit/6064e4c314d8d717873d46e6ef35c0bbc9772728\r\n[17]: https://github.com/dhermes/bezier/commit/f1804f442f190d0bc36782e940ee0b8a68c5ecd6\r\n[18]: https://github.com/dhermes/bezier/commit/dee81813e34d5f69c52f48aa90f7c11eb4ddc3ec\r\n[19]: https://github.com/dhermes/bezier/commit/2611e64a735e46317cce08a41270d61024705fd9\r\n[20]: http://bezier.readthedocs.io/en/0.4.0/reference/bezier.curve.html#bezier.curve.IntersectionStrategy\r\n[21]: http://bezier.readthedocs.io/en/0.4.0/reference/bezier.curve.html#bezier.curve.Curve.reduce_\r\n[22]: https://github.com/dhermes/bezier/commit/f0fca088ac6f70c39f9f5af457c29e3c82f094b5\r\n[23]: https://github.com/dhermes/bezier/commit/e72ca20f0f4ee0f6399b56805b30fe67a02aa04f\r\n[24]: http://bezier.readthedocs.io/en/0.4.0/reference/bezier.surface.html#bezier.surface.Surface.intersect\r\n[25]: https://github.com/dhermes/bezier/commit/4a8458c823d8acc185818f856889cff6f46300d3\r\n[26]: https://github.com/dhermes/bezier/commit/dcbeefc25b7f5f9a1fa725dac04e81a43039f680\r\n[27]: https://github.com/dhermes/bezier/commits/0.4.0/src/bezier/_implicitization.py\r\n[28]: https://en.wikipedia.org/wiki/Resultant\r\n[29]: https://github.com/dhermes/bezier/commits/0.4.0/src/bezier/speedup.f90\r\n[30]: https://github.com/dhermes/bezier/blob/0.4.0/src/bezier/speedup.f90\r\n[31]: http://bezier.readthedocs.io/en/0.4.0/reference/bezier.curve.html#bezier.curve.Curve.elevate\r\n[32]: https://github.com/dhermes/bezier/commit/ce838a2aaef2281f06603d1c76324a3aa8289cf9",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/0.4.0",
        "name": "0.4.0",
        "release_id": 7260198,
        "tag": "0.4.0",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/0.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/7260198",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/7260198",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/0.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2017-01-11T07:51:47Z",
        "date_published": "2017-01-11T08:59:11Z",
        "description": "PyPI: https://pypi.org/project/bezier/0.3.0/\r\nDocs: http://bezier.readthedocs.io/en/0.3.0/\r\n\r\n## Performance Optimizations\r\n-   Adding `__slots__` for all classes\r\n-   Removing all usage of `@property` calls from internal callers (to avoid function call overhead)\r\n-   Avoiding un-necessary data copying, e.g. `nodes[[0], :]` creates a copy but\r\n  \r\n    ``` python\r\n    nodes[0, :].reshape((1, 2))\r\n    ```\r\n\r\n    does not ([more details](https://docs.scipy.org/doc/numpy-1.6.0/reference/arrays.indexing.html#advanced-indexing))\r\n-   Adding `_verify` switches to selectively disable overly defensive value checking. Added to [`CurvedPolygon`](http://bezier.readthedocs.io/en/0.3.0/reference/bezier.curved_polygon.html#bezier.curved_polygon.CurvedPolygon) constructor, [`Surface.evaluate_barycentric()`](http://bezier.readthedocs.io/en/0.3.0/reference/bezier.surface.html#bezier.surface.Surface.evaluate_barycentric), [`Surface.evaluate_cartesian()`](http://bezier.readthedocs.io/en/0.3.0/reference/bezier.surface.html#bezier.surface.Surface.evaluate_cartesian), [`Surface.evaluate_multi()`](http://bezier.readthedocs.io/en/0.3.0/reference/bezier.surface.html#bezier.surface.Surface.evaluate_multi) and [`Surface.intersect()`](http://bezier.readthedocs.io/en/0.3.0/reference/bezier.surface.html#bezier.surface.Surface.intersect). Internal callers with already verified data now skip verification steps\r\n-   [Bailing out early](https://github.com/dhermes/bezier/commit/db816eb5a748bb997adcc2d7d9008638e22a824c) if surface bounding boxes are disjoint in [`Surface.intersect()`](http://bezier.readthedocs.io/en/0.3.0/reference/bezier.surface.html#bezier.surface.Surface.intersect)\r\n\r\n## Breaking Changes\r\n-   Requiring `degree` in [`Curve`](http://bezier.readthedocs.io/en/0.3.0/reference/bezier.curve.html#bezier.curve.Curve) and [`Surface`](http://bezier.readthedocs.io/en/0.3.0/reference/bezier.surface.html#bezier.surface.Surface) constructors, but adding [`Curve.from_nodes()`](http://bezier.readthedocs.io/en/0.3.0/reference/bezier.curve.html#bezier.curve.Curve.from_nodes) and [`Surface.from_nodes()`](http://bezier.readthedocs.io/en/0.3.0/reference/bezier.surface.html#bezier.surface.Surface.from_nodes) factories to accept nodes only (computing the degree in the constructor every time is a waste of flops, especially if the caller knows the degree)\r\n-   [Removing](https://github.com/dhermes/bezier/commit/3393b9010c26b55a9c29afc2702426bb179b85a1) public [`Curve.copy()`](http://bezier.readthedocs.io/en/0.2.1/reference/bezier.curve.html#bezier.curve.Curve.copy) and [`Surface.copy()`](http://bezier.readthedocs.io/en/0.2.1/reference/bezier.surface.html#bezier.surface.Surface.copy)\r\n-   [Removing](https://github.com/dhermes/bezier/commit/3393b9010c26b55a9c29afc2702426bb179b85a1) custom equality checks for [`Curve`](http://bezier.readthedocs.io/en/0.2.1/reference/bezier.curve.html#bezier.curve.Curve.__eq__) and [`Surface`](http://bezier.readthedocs.io/en/0.2.1/reference/bezier.surface.html#bezier.surface.Surface.__eq__) objects. The previous implementation did not factor in all relevant values\r\n-   Returning `1xD` arrays [instead of flattened](https://github.com/dhermes/bezier/commit/b5e5b327594c6143956ed98703f596ff82b7501a) `D`-dimensional 1D arrays from [`Curve.evaluate()`](http://bezier.readthedocs.io/en/0.3.0/reference/bezier.curve.html#bezier.curve.Curve.evaluate), [`Surface.evaluate_barycentric()`](http://bezier.readthedocs.io/en/0.3.0/reference/bezier.surface.html#bezier.surface.Surface.evaluate_barycentric), [`Surface.evaluate_cartesian()`](http://bezier.readthedocs.io/en/0.3.0/reference/bezier.surface.html#bezier.surface.Surface.evaluate_cartesian), and related helpers\r\n-   Renaming [`Intersection.left/right`](http://bezier.readthedocs.io/en/0.2.1/algorithm-helpers.html#bezier._intersection_helpers.Intersection.left) as [`first/second`](http://bezier.readthedocs.io/en/0.3.0/algorithm-helpers.html#bezier._intersection_helpers.Intersection.first) (They were poorly named originally, since \"left\" and \"right\" were in reference to where they were used **in code**, not geometry. This class is not part of the public interface, but it is documented.)\r\n\r\n## Bug Fixes\r\n-   Handling cases where one corner of a surface touches another but their interiors don't intersect (in [`Surface.intersect()`](http://bezier.readthedocs.io/en/0.3.0/reference/bezier.surface.html#bezier.surface.Surface.intersect)). Adding `ignored_corner` classification to handle these curve-curve intersecions that don't contribute to a surface-surface intersection\r\n-   Throwing exception in [`Curve.locate()`](http://bezier.readthedocs.io/en/0.3.0/reference/bezier.curve.html#bezier.curve.Curve.locate) when the subdivided intervals are very far apart (#13)\r\n-   Improving [`Surface.is_valid`](http://bezier.readthedocs.io/en/0.3.0/reference/bezier.surface.html#bezier.surface.Surface.is_valid) by considering the signs of the Jacobian determinant at corner nodes (#12)\r\n\r\n## Miscellany\r\n-   Adding possible strategy to avoid linear convergence in [`newton_refine()`](http://bezier.readthedocs.io/en/0.3.0/algorithm-helpers.html#bezier._intersection_helpers.newton_refine)\r\n-   Adding AppVeyor configuration to make sure there are no Windows issues, testing exclusively with `conda` install\r\n-   Updating generated images with `matplotlib` 2.0\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/0.3.0",
        "name": "0.3.0",
        "release_id": 5126041,
        "tag": "0.3.0",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/5126041",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/5126041",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2016-12-28T23:58:21Z",
        "date_published": "2016-12-28T23:59:21Z",
        "description": "PyPI: https://pypi.org/project/bezier/0.2.1/\r\nDocs: http://bezier.readthedocs.io/en/0.2.1/\r\n\r\n- Added [`Curve.locate()`](http://bezier.readthedocs.io/en/0.2.1/reference/bezier.curve.html#bezier.curve.Curve.locate) and [`_curve_helpers.newton_refine()`](http://bezier.readthedocs.io/en/0.2.1/algorithm-helpers.html#bezier._curve_helpers.newton_refine) helper\r\n- Adding optional `color` to [`Surface.plot()`](http://bezier.readthedocs.io/en/0.2.1/reference/bezier.surface.html#bezier.surface.Surface.plot)\r\n- Adding [`Surface.elevate()`](http://bezier.readthedocs.io/en/0.2.1/reference/bezier.surface.html#bezier.surface.Surface.elevate) for degree elevation\r\n- Fixing nodes defining the [self-intersecting curve](http://bezier.readthedocs.io/en/0.2.1/curve-curve-intersection.html#detecting-self-intersections) in `curve-curve-intersection` (no code in `bezier` was broken / fixed, just \"bad\" docs)\r\n- Allow wiggle outside of `[0, 1]` when intersecting linearizations in `from_linearized()`\r\n- Collapsing almost-same parameter values in `intersect_one_round()` (via `from_linearized()`). Previously checked for bitwise equality and relied on checking values at the boundary of a subdivided interval\r\n- Adding non-public `bezier._plot_helpers` module\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/0.2.1",
        "name": "0.2.1",
        "release_id": 5028842,
        "tag": "0.2.1",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/0.2.1",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/5028842",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/5028842",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/0.2.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2016-12-14T19:20:09Z",
        "date_published": "2016-12-14T21:44:19Z",
        "description": "PyPI: https://pypi.org/project/bezier/0.2.0/\r\nDocs: http://bezier.readthedocs.io/en/0.2.0/\r\n\r\n- **Primary feature**: [`Surface.intersect()`](http://bezier.readthedocs.io/en/0.2.0/reference/bezier.surface.html#bezier.surface.Surface.intersect) added\r\n- To support intersection, needed [`CurvedPolygon`](http://bezier.readthedocs.io/en/0.2.0/reference/bezier.curved_polygon.html#bezier.curved_polygon.CurvedPolygon), i.e. an object defined only by its curved sides (whereas a `Surface` may have interior control points)\r\n- [`Curve.specialize`](http://bezier.readthedocs.io/en/0.2.0/reference/bezier.curve.html#bezier.curve.Curve.specialize) for chopping a `Curve` at arbitrary parameter values (this is also used in surface-surface intersection)\r\n- Added images to most documented functions and methods to illustrate the concept at hand. For example\r\n  [`classify_intersection`](http://bezier.readthedocs.io/en/0.2.0/algorithm-helpers.html#bezier._surface_helpers.classify_intersection) has **seven** images to enumerate all of the possible cases covered in the algorithm.\r\n- Added [`Surface.locate()`](http://bezier.readthedocs.io/en/0.2.0/reference/bezier.surface.html#bezier.surface.Surface.locate), made possible by [`newton_refine`](http://bezier.readthedocs.io/en/0.2.0/algorithm-helpers.html#bezier._surface_helpers.newton_refine)\r\n- Added [Algorithm Helpers](http://bezier.readthedocs.io/en/0.2.0/algorithm-helpers.html) doc to try to explain some of the core algorithms at work (not all are documented yet). Some of this content was previously documented in the `bezier.curve` module, but was moved. Since, documentation has been added for `get_curvature`, `newton_refine` (for surfaces), `classify_intersection` (to determine how two curves interact while intersecting) and for some helper classes.\r\n- Added `Surface.base_x`, `Surface.base_y` and `Surface.width` [properties](http://bezier.readthedocs.io/en/0.2.0/reference/bezier.surface.html#bezier.surface.Surface.width) to allow tracking a sub-surface during the subdivision process (this is an analogue to the `Curve.start` and `Curve.end` [properties](http://bezier.readthedocs.io/en/0.2.0/reference/bezier.curve.html#bezier.curve.Curve.start))\r\n- Added `Curve.edge_index`, `Curve.next_edge` and `Curve.previous_edge` [properties](http://bezier.readthedocs.io/en/0.2.0/reference/bezier.curve.html#bezier.curve.Curve.edge_index) to allow tracking when curves are actually the sides of a `Surface`",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/0.2.0",
        "name": "0.2.0",
        "release_id": 4923413,
        "tag": "0.2.0",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/0.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/4923413",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/4923413",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/0.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2016-11-29T17:21:23Z",
        "date_published": "2016-11-29T17:45:51Z",
        "description": "PyPI: https://pypi.org/project/bezier/0.1.1/\r\nDocs: http://bezier.readthedocs.io/en/0.1.1/\r\n\r\nChanges:\r\n- Adding [`Curve.elevate()`](http://bezier.readthedocs.io/en/0.1.1/reference/bezier.curve.html#bezier.curve.Curve.elevate) for degree elevation\r\n- Upgrading curve-curve intersection algorithm to ignore parallel line segments that don't meet (rather than throwing `NotImplementedError`)\r\n- Making [`segment_intersection()`](http://bezier.readthedocs.io/en/0.1.1/reference/bezier.curve.html#bezier._intersection_helpers.segment_intersection) return a `success` bool instead of raising `NotImplementedError` on failure\r\n- Updating docs for [`newton_refine()`](http://bezier.readthedocs.io/en/0.1.1/reference/bezier.curve.html#bezier._intersection_helpers.newton_refine) with two examples and making [`parallel_different()`](http://bezier.readthedocs.io/en/0.1.1/reference/bezier.curve.html#bezier._intersection_helpers.parallel_different) a publicly documented function (as a partner to `segment_intersection()`)\r\n- Adding some more examples / failures to `curve-curve-intersection` [doc](http://bezier.readthedocs.io/en/0.1.1/curve-curve-intersection.html)\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/0.1.1",
        "name": "0.1.1",
        "release_id": 4786283,
        "tag": "0.1.1",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/4786283",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/4786283",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "dhermes",
          "type": "User"
        },
        "date_created": "2016-11-26T06:28:55Z",
        "date_published": "2016-11-26T06:43:27Z",
        "description": "Second Release: https://pypi.org/project/bezier/0.1.0/\r\nDocs: http://bezier.readthedocs.io/en/0.1.0/\r\n\r\nPrimary changes since previous release ([`0.0.1`](https://pypi.org/project/bezier/0.0.1/)) are related to curve-curve intersection. See [the intersection docs](http://bezier.readthedocs.io/en/0.1.0/curve-curve-intersection.html) for examples and more information.\r\n",
        "html_url": "https://github.com/dhermes/bezier/releases/tag/0.1.0",
        "name": "0.1.0",
        "release_id": 4763102,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/dhermes/bezier/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/dhermes/bezier/releases/4763102",
        "value": "https://api.github.com/repos/dhermes/bezier/releases/4763102",
        "zipball_url": "https://api.github.com/repos/dhermes/bezier/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "numpy",
        "type": "Software_application",
        "value": "numpy>=1.25.2",
        "version": ">=1.25.2"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "setuptools",
        "type": "Software_application",
        "value": "setuptools>=70.0.0",
        "version": ">=70.0.0"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "wheel",
        "type": "Software_application",
        "value": "wheel>=0.43.0",
        "version": ">=0.43.0"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "numpy",
        "type": "Software_application",
        "value": "numpy >= 2.1.1",
        "version": ">= 2.1.1"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/docs/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "setuptools",
        "type": "Software_application",
        "value": "setuptools >= 75.1.0",
        "version": ">= 75.1.0"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/docs/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Sphinx",
        "type": "Software_application",
        "value": "Sphinx >= 8.0.2",
        "version": ">= 8.0.2"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/docs/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "sphinx-copybutton",
        "type": "Software_application",
        "value": "sphinx-copybutton >= 0.5.2",
        "version": ">= 0.5.2"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/docs/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "sphinx-docstring-typing",
        "type": "Software_application",
        "value": "sphinx-docstring-typing >= 0.0.4",
        "version": ">= 0.0.4"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/docs/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "sphinx-rtd-theme",
        "type": "Software_application",
        "value": "sphinx-rtd-theme >= 3.0.0rc3",
        "version": ">= 3.0.0rc3"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/docs/requirements.txt",
      "technique": "code_parser"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 03:14:59",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 280
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting Started",
        "parent_header": [
          "`bezier`"
        ],
        "type": "Text_excerpt",
        "value": "For example, to create a curve:\n\n.. code-block:: python\n\n   >>> import bezier\n   >>> import numpy as np\n   >>> nodes1 = np.asfortranarray([\n   ...     [0.0, 0.5, 1.0],\n   ...     [0.0, 1.0, 0.0],\n   ... ])\n   >>> curve1 = bezier.Curve(nodes1, degree=2)\n\nThe intersection (points) between two curves can\nalso be determined:\n\n.. code-block:: python\n\n   >>> nodes2 = np.asfortranarray([\n   ...     [0.0, 0.25,  0.5, 0.75, 1.0],\n   ...     [0.0, 2.0 , -2.0, 2.0 , 0.0],\n   ... ])\n   >>> curve2 = bezier.Curve.from_nodes(nodes2)\n   >>> intersections = curve1.intersect(curve2)\n   >>> intersections\n   array([[0.31101776, 0.68898224, 0. , 1. ],\n          [0.31101776, 0.68898224, 0. , 1. ]])\n   >>> s_vals = np.asfortranarray(intersections[0, :])\n   >>> points = curve1.evaluate_multi(s_vals)\n   >>> points\n   array([[0.31101776, 0.68898224, 0. , 1. ],\n          [0.42857143, 0.42857143, 0. , 0. ]])\n\nand then we can plot these curves (along with their\nintersections):\n\n.. code-block:: python\n\n   >>> import seaborn\n   >>> seaborn.set()\n   >>>\n   >>> ax = curve1.plot(num_pts=256)\n   >>> _ = curve2.plot(num_pts=256, ax=ax)\n   >>> lines = ax.plot(\n   ...     points[0, :], points[1, :],\n   ...     marker=\"o\", linestyle=\"None\", color=\"black\")\n   >>> _ = ax.axis(\"scaled\")\n   >>> _ = ax.set_xlim(-0.125, 1.125)\n   >>> _ = ax.set_ylim(-0.0625, 0.625)\n\n.. image:: https://raw.githubusercontent.com/dhermes/bezier/main/docs/images/curves1_and_13.png\n   :align: center\n\nFor API-level documentation, check out the B |eacute| zier Python\n`package`_ documentation.\n"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/README.rst",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2024.6.20"
      },
      "source": "https://raw.githubusercontent.com/dhermes/bezier/main/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
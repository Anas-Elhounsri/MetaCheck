{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "u.sharma@uqconnect.edu.au",
        "type": "Agent",
        "value": "u.sharma@uqconnect.edu.au"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "University of Queensland",
        "email": "j.dennis@uq.edu.au",
        "identifier": "0000-0001-8125-6494",
        "type": "String",
        "value": "Jordan Dennis"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "University of Queensland",
        "email": "qingyuan.zhang@uq.edu.au",
        "identifier": "0000-0002-0906-8533",
        "type": "String",
        "value": "qingyuanzhang3"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "University of Queensland",
        "email": "u.sharma@uq.net.au",
        "identifier": "0000-0002-0771-8109",
        "type": "String",
        "value": "Utkarsh Sharma"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "University of Queensland",
        "email": "b.pope@uq.edu.au",
        "identifier": "0000-0003-2595-9114",
        "type": "String",
        "value": "Benjamin Pope"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations."
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SharmaLlama/ticktack"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SharmaLlama/ticktack"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/sharmaLlama/ticktack"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/.github/workflows/draft-pdf.yml"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/.github/workflows/tests.yml"
      },
      "technique": "file_exploration"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing to ticktack\n\nWe encourage anyone interested in improving `ticktack` to contribute to the code and documentation! We hope that this is only the beginning of a wider project bringing fast, differentiable carbon box modelling to radiocarbon science.\n\n## Getting Started\n\nWe encourage contributors who are new to open-source development to consult the [AstroPy docs](https://docs.astropy.org/en/latest/development/workflow/development_workflow.html) for its suggested workflow for contributions.\n\n## Project Scope\n\n`ticktack` is focused on carbon box modelling for analysing tree-ring radiocarbon time series. At present, we are soliciting contributions that improve its capabilities within this scope, or that modestly extend the scope - but it is not well suited to modelling the carbon cycle in general terms including kinetics or general circulation models.\n\n## Questions and Support\n\nIf you have questions about `ticktack` or encounter problems when using it, please open an [Issue](https://github.com/SharmaLlama/ticktack/issues) on the GitHub issue tracker. If you see an Issue you can help solve, please comment!\n\n## Suggestions and Discussions\n\nIf you have ideas for extensions to `ticktack`, including expansions to its scope or use case or ways to substantially refactor and improve the code, please go to [Discussions](https://github.com/SharmaLlama/ticktack/discussions) on GitHub and create a thread.\n\n## Code of Conduct\n\nThere is a [Code of Conduct](https://github.com/SharmaLlama/ticktack/blob/main/CODE_OF_CONDUCT.md) that we expect all contributors to `ticktack` to adhere to."
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "contributors": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributors",
        "parent_header": [
          "ticktack"
        ],
        "type": "Text_excerpt",
        "value": "[Utkarsh Sharma](https://github.com/SharmaLlama), [Qingyuan Zhang](https://github.com/qingyuanzhang3),  [Jordan Dennis](https://github.com/Jordan-Dennis), [Benjamin Pope](https://github.com/benjaminpope)\n"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-07-15T08:41:38Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2022-10-26"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2022-10-26"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-05-01T23:05:56Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2022-10-26"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An open-source carbon box model implementation built on JAX."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python package to build a carbon box model."
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A Python/Jax based open source package for carbon box modelling of radiocarbon time series."
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.8509181764698996,
      "result": {
        "original_header": "ticktack",
        "type": "Text_excerpt",
        "value": "A lightweight, open-source carbon box modelling library in Python, adapted for modelling tree ring radiocarbon time series.\n \n"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9889076187769226,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "Radiocarbon measurements from tree rings allow us to recover measurements of cosmic radiation from the distant past, and exquisitely calibrate carbon dating of archaeological sites. But in order to infer cosmic production rates from raw \u0394C14 data, we need to model the entire global carbon cycle, from the production of radiocarbon in the stratosphere and troposphere to its uptake by the oceans and biosphere. Many such competing models exist, in which the Earth system is partitioned into 'boxes' with reservoirs of C12, C14, and coefficients of flow between them. \n`ticktack` is the first open-source package for carbon box modelling, allowing you to specify your own model or load a model with the same parameters as several leading closed-source models. Built in Python on [Google Jax](https://github.com/google/jax), it solves the carbon box ordinary differential equations using the Runge-Kutta method, on arbitrarily fine time grids and with arbitrary production rates. This forwards model is connected via a simple API to Bayesian inference using MCMC: currently we support only [emcee](https://emcee.readthedocs.io/), but implementations are in progress of HMC and nested sampling.  \n \n"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8588371185723755,
      "result": {
        "original_header": "Name",
        "type": "Text_excerpt",
        "value": "The 'little boxes' in [Malvina Reynolds' famous song](https://www.youtube.com/watch?v=2_2lGkEU4Xs) are all made of ticky-tacky, and they all look just the same. Here we provide an open-source toolkit for reproducing and extending carbon box models for radiocarbon analysis, and we expect they will be as interchangeable as Malvina Reynolds' boxes!\n \n"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SharmaLlama/ticktack/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/SharmaLlama/ticktack/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/docs/notebooks/04_Injection_Recovery_ControlPoints.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/docs/notebooks/04_Injection_Recovery_ControlPoints.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/docs/notebooks/02_MultiFitter.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/docs/notebooks/02_MultiFitter.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/docs/notebooks/05_Fitting_Flat.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/docs/notebooks/05_Fitting_Flat.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/docs/notebooks/03_InverseSolver.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/docs/notebooks/03_InverseSolver.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/docs/notebooks/01_Fitting.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/docs/notebooks/01_Fitting.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/notebooks/04_InverseSolver.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/notebooks/04_InverseSolver.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/notebooks/01_Injection_Recovery_ControlPoints.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/notebooks/01_Injection_Recovery_ControlPoints.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/notebooks/02_Fitting.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/notebooks/02_Fitting.ipynb",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/notebooks/03_MultiFitter.ipynb"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/notebooks/03_MultiFitter.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SharmaLlama/ticktack/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SharmaLlama/ticktack"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ticktack"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "setup.py",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/setup.py"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/setup.py",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/requirements.txt",
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/386222197"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.21105/joss.05084"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://joss.theoj.org/papers/10.21105/joss.05084/status.svg"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "ticktack"
        ],
        "type": "Text_excerpt",
        "value": "The easiest way to install is from PyPI: just use\n\n`pip install ticktack`\n\nTo install from source: clone this git repo, enter the directory, and run\n\n`python setup.py install`\n"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/SharmaLlama/ticktack/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "radiocarbon",
          "Miyake Events",
          "carbon cycle",
          "atmospheric carbon",
          "solar flares"
        ]
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 Utkarsh Sharma\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "License",
        "value": "MIT"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/MIT",
        "spdx_id": "MIT",
        "type": "License",
        "value": "MIT"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "ticktack"
        ],
        "type": "Text_excerpt",
        "value": "We invite anyone interested to use and modify this code under a MIT license.\n"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ticktack"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "SharmaLlama"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ticktack"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/setup.py",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 1836052,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 142716,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 12549,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/setup.py",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://emcee.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "benjaminpope",
          "type": "User"
        },
        "date_created": "2023-03-20T05:58:14Z",
        "date_published": "2023-03-21T00:49:22Z",
        "description": "This release brings us up to date with the accompanying JOSS paper _ticktack: A Python package for radiocarbon box modelling_, following helpful referee comments by @dfm and @joshuakt.\r\n\r\n## What's Changed\r\n* Fixing build and install process by @dfm in https://github.com/SharmaLlama/ticktack/pull/35\r\n* Update journal references by @dfm in https://github.com/SharmaLlama/ticktack/pull/45\r\n* Fixed tiny typesetting issue in bibliography by @dfm in https://github.com/SharmaLlama/ticktack/pull/46\r\n\r\n## New Contributors\r\n* @dfm made their first contribution in https://github.com/SharmaLlama/ticktack/pull/35\r\n\r\n**Full Changelog**: https://github.com/SharmaLlama/ticktack/compare/v1.0.0...v1.1.0",
        "html_url": "https://github.com/SharmaLlama/ticktack/releases/tag/v1.1.0",
        "name": "ticktack: A Python package for carbon box modelling",
        "release_id": 96281002,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/SharmaLlama/ticktack/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/SharmaLlama/ticktack/releases/96281002",
        "value": "https://api.github.com/repos/SharmaLlama/ticktack/releases/96281002",
        "zipball_url": "https://api.github.com/repos/SharmaLlama/ticktack/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "benjaminpope",
          "type": "User"
        },
        "date_created": "2022-09-28T07:41:24Z",
        "date_published": "2022-09-28T07:47:33Z",
        "description": "This is the first official release of `ticktack`, an open-source framework for carbon box modelling, as used in the published Zhang et al 2022 paper in _Proceedings of the Royal Society A_.\r\n\r\nCheck out our full documentation at [sharmallama.github.io/ticktack](https://sharmallama.github.io/ticktack/)!",
        "html_url": "https://github.com/SharmaLlama/ticktack/releases/tag/v1.0.0",
        "name": "ticktack v1.0.0",
        "release_id": 78408305,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/SharmaLlama/ticktack/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/SharmaLlama/ticktack/releases/78408305",
        "value": "https://api.github.com/repos/SharmaLlama/ticktack/releases/78408305",
        "zipball_url": "https://api.github.com/repos/SharmaLlama/ticktack/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "jax",
        "type": "Software_application",
        "value": "jax>=0.4.13",
        "version": ">=0.4.13"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "astropy",
        "type": "Software_application",
        "value": "astropy",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "numpy",
        "type": "Software_application",
        "value": "numpy",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "matplotlib",
        "type": "Software_application",
        "value": "matplotlib",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "diffrax",
        "type": "Software_application",
        "value": "diffrax",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "chainconsumer",
        "type": "Software_application",
        "value": "chainconsumer",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "emcee",
        "type": "Software_application",
        "value": "emcee",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "h5py",
        "type": "Software_application",
        "value": "h5py",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pandas",
        "type": "Software_application",
        "value": "pandas",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "scipy",
        "type": "Software_application",
        "value": "scipy",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "seaborn",
        "type": "Software_application",
        "value": "seaborn",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "tqdm",
        "type": "Software_application",
        "value": "tqdm",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "jax-cosmo",
        "type": "Software_application",
        "value": "jax-cosmo",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "tinygp",
        "type": "Software_application",
        "value": "tinygp",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pytest",
        "type": "Software_application",
        "value": "pytest",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/requirements.txt",
      "technique": "code_parser"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "usage",
    "faq",
    "support"
  ],
  "somef_provenance": {
    "date": "2025-09-19 02:50:39",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 11
      },
      "technique": "GitHub_API"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "v1.0.0"
      },
      "source": "https://raw.githubusercontent.com/SharmaLlama/ticktack/main/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgments",
        "parent_header": [
          "Seabass<img width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/seabass/raw/main/.graphics/seabass-icon.png\">"
        ],
        "type": "Text_excerpt",
        "value": "This work was funded by the California Institute of Technology Library.\n\nThe [vector artwork](https://thenounproject.com/term/sea-bass/1974341/) of a sea bass, used as the icon for this repository, was created by [ProSymbols](https://thenounproject.com/prosymbols/) from the Noun Project.  It is licensed under the Creative Commons [CC-BY 3.0](https://creativecommons.org/licenses/by/3.0/) license.\n\n<div align=\"center\">\n  <br>\n  <a href=\"https://www.caltech.edu\">\n    <img width=\"100\" height=\"100\" src=\"https://raw.githubusercontent.com/caltechlibrary/seabass/main/.graphics/caltech-round.png\">\n  </a>\n</div>\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/seabass/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Contributor Covenant Code of Conduct\n====================================\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject contributors are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject contributors have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project contributors.\n\n## Enforcement\n\nIf a contributor engages in harassing behaviour, the project organizers may take any action they deem appropriate, including warning the offender or expelling them from online forums, online project resources, face-to-face meetings, or any other project-related activity or resource.\n\nIf you are being harassed, notice that someone else is being harassed, or have any other concerns, please contact a member of the project team immediately.  Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team.  All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances.  The project team is obligated to maintain confidentiality with regard to the reporter of an incident.  Further details of specific enforcement policies may be posted separately.\n\n## Attribution\n\nPortions of this Code of Conduct were adapted from Electron's [Contributor Covenant Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md), which itself was adapted from the [Contributor Covenant](http://contributor-covenant.org/version/1/4), version 1.4.\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/seabass/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/seabass"
      },
      "technique": "GitHub_API"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Guidelines for contributing to this project\n\nAny constructive contributions &ndash; bug reports, pull requests (code or documentation), suggestions for improvements, and more &ndash; are welcome.\n\n## Conduct\n\nEveryone is asked to read and respect the [code of conduct](CODE_OF_CONDUCT.md) before participating in this project.\n\n## Coordinating work\n\nA quick way to find out what is currently in the near-term plans for this project is to look at the [GitHub issue tracker](https://github.com/caltechlibrary/seabass/issues), but the possibilities are not limited to what you see there &ndash; if you have ideas for new features and enhancements, please feel free to write them up as a new issue or contact the developers directly!\n\n## Submitting contributions\n\nPlease feel free to contact the author directly, or even better, jump right in and use the standard GitHub approach of forking the repo and creating a pull request.  When committing code changes and submitting pull requests, please write a clear log message for your commits.\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/seabass/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "Seabass<img width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/seabass/raw/main/.graphics/seabass-icon.png\">"
        ],
        "type": "Text_excerpt",
        "value": "We would be happy to receive your help and participation with enhancing Seabass!  Please visit the [guidelines for contributing](CONTRIBUTING.md) for some tips on getting started.\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/seabass/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-12-23T21:41:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2020-12-23T22:26:15Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Send lists of URLs to the Wayback Machine at the Internet Archive"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "Seabass<img width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/seabass/raw/main/.graphics/seabass-icon.png\">"
        ],
        "type": "Text_excerpt",
        "value": "Archive.org's [Wayback Machine](https://web.archive.org) is a fantastic public resource that archives the web.  The Internet Archive provides [multiple ways](https://help.archive.org/hc/en-us/articles/360001513491-Save-Pages-in-the-Wayback-Machine) of submitting web page URLs for archiving, including a network API.  Multiple open-source programs have been written to take advantage of this API, but many of them no longer work as of late 2020 because of changes in the API.  We wanted a simple, working way of sending batches of URLs to the Wayback Machine, and thus was born this program. \n_Seabass_ (_**Se**nd **A**rchive.org **ba**tche**s** of URL**S**_) is a Python 3 program that reads a list of URLs and submits them for archiving.\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/seabass/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.800173940647636,
      "result": {
        "original_header": "Seabass<img width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/seabass/raw/main/.graphics/seabass-icon.png\">",
        "type": "Text_excerpt",
        "value": "Seabass (_**Se**nd **A**rchive.org **ba**tche**s** of URL**S**_) is a program that can send lists of URLs to the Wayback Machine at the Internet Archive. \n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/seabass/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/seabass/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/caltechlibrary/seabass/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "caltechlibrary/seabass"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Seabass"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/seabass/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/seabass/main/.graphics/caltech-round.png"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/seabass/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n# Install Python 3.x\n\nGetting your Python setup right on your system is important; otherwise, you may find yourself in the realm of confusing error messages.  The following instructions focus on getting [Python 3](https://docs.python.org/3/) running on Debian/Ubuntu Linux-based systems as well as on macOS via [MacPorts](https://www.macports.org) or [HomeBrew](https://brew.sh).\n\n_**Tip**: If you are running on an Intel-based computers (e.g., most Macs and Windows machines), you can use a Python distribution called [Miniconda](https://docs.conda.io/en/latest/miniconda.html).  This is often the easiest approach to getting a modern Python on your machine.  If that's not suitable for you for any reason, continue on reading._\n\n## Python versions issues\n\nIt is possible to use your default OS-provided Python if it is version greater than 3.x. Many distributions still ship with Python version 2.7, and the `pip` command that they provide correspond to Python version 2.7. On some systems, version 3.x of the Python interpreter and `pip` are available using the commands `python3` and `pip3`, respectively. Other systems let you install Python 3 and `pip` via their package manager and use the package manager select default versions and/or names. (This is true on Debian/Ubuntu based systems as well as macOS's MacPorts.)\n\n## Getting the right Python and `pip`\n\n### Debian/Ubuntu\n\nDebian-based systems still ship with older versions of Python by\ndefault. We want to use a modern Python 3.x. Make sure it is \ninstalled and available along with the related version of pip.\n\n```\nsudo apt install python3 python3-pip\n```\n\n### macOS\n\n#### _Using MacPorts_\n\nIf you are using macOS and MacPorts you can take a similar approach:\n\n```\nsudo port install python3\nsudo port install py38-pip\n```\n\nAt this point you should be able to envoke the Python interpreter using the `python3` command. You should see the version of Python and `pip` with these commands:\n\n```\npython3 --version\npython3 -m pip --version\n```\n\n#### _Using HomeBrew_\n\nIf you are using macOS and HomeBrew, the corresponding commands are as follows:\n\n```\nsudo brew install python3\n```\n\nHomeBrew's Python 3 package installs `pip3` by default.  Unless you configured your copy of HomeBrew to install it elsewhere, programs should end up in `/usr/local/bin` on your computer.  Look for a version of `pip` there (e.g., by running the command `ls /usr/local/bin/pip*` to see what gets listed).\n\n\n### Install Python modules using the right pip\n\nOften you'll need some additional modules to be installed in your Python development environment, so that you can refer to them in your Python programs using the `import` statement. To make sure you get the desired Python and `pip`, you can use the `-m` interpreter option to install the desired module using a command with the following form:\n\n```shell\npython3 -m pip install MODULENAME\n```\n\nwhere `MODULENAME` is the name of the module you need to install.\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/seabass/main/INSTALL-Python3.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Seabass<img width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/seabass/raw/main/.graphics/seabass-icon.png\">"
        ],
        "type": "Text_excerpt",
        "value": "[... Forthcoming ...]\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/seabass/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/caltechlibrary/seabass/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause",
        "spdx_id": "BSD-2-Clause",
        "type": "File_dump",
        "value": "Copyright (c) 2020, Caltech\nAll rights not granted herein are expressly reserved by Caltech.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice,\nthis list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\nmay be used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/seabass/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "Seabass<img width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/seabass/raw/main/.graphics/seabass-icon.png\">"
        ],
        "type": "Text_excerpt",
        "value": "Software produced by the Caltech Library is Copyright (C) 2020, Caltech.  This software is freely distributed under a BSD/MIT type license.  Please see the [LICENSE](LICENSE) file for more information.\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/seabass/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/seabass/raw/main/.graphics/seabass-icon.png"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/seabass/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "seabass"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "caltechlibrary"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/seabass/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "has_build_file",
    "executable_example",
    "keywords"
  ],
  "somef_provenance": {
    "date": "2025-09-19 03:17:36",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting help",
        "parent_header": [
          "Seabass<img width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/seabass/raw/main/.graphics/seabass-icon.png\">"
        ],
        "type": "Text_excerpt",
        "value": "If you find an issue, please submit it in [the GitHub issue tracker](https://github.com/caltechlibrary/seabass/issues) for this repository.\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/seabass/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "static-website"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Seabass<img width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/seabass/raw/main/.graphics/seabass-icon.png\">"
        ],
        "type": "Text_excerpt",
        "value": "[... Forthcoming ...]\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/seabass/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting help",
        "parent_header": [
          "Seabass<img width=\"12%\" align=\"right\" src=\"https://github.com/caltechlibrary/seabass/raw/main/.graphics/seabass-icon.png\">"
        ],
        "type": "Text_excerpt",
        "value": "If you find an issue, please submit it in [the GitHub issue tracker](https://github.com/caltechlibrary/seabass/issues) for this repository.\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/seabass/main/README.md",
      "technique": "header_analysis"
    }
  ]
}
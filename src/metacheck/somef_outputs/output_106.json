{
  "application_domain": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Parallel computing"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "affiliation": "Inria and University Paris Diderot",
        "email": "roberto@dicosmo.org",
        "identifier": "https://orcid.org/ 0000-0002-7493-5349",
        "type": "String",
        "value": "Roberto Di Cosmo"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "University of Pisa",
        "email": "marco.danelutto@unipi.it",
        "identifier": "https://orcid.org/ 0000-0002-7433-376X",
        "type": "String",
        "value": "Marco Danelutto"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "This",
        "last_name": "code started as a two day exercise done at Irill in July 2011, by",
        "name": "This code started as a two day exercise done at Irill in July 2011, by",
        "type": "Agent",
        "value": "This code started as a two day exercise done at Irill in July 2011, by"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "email": "marcod@di.unipi.it",
        "given_name": "Marco",
        "last_name": "Danelutto",
        "name": "Marco Danelutto",
        "type": "Agent",
        "value": "Marco Danelutto"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "that",
        "last_name": "produced the architecture now contained in simplemapper.",
        "name": "that produced the architecture now contained in simplemapper.",
        "type": "Agent",
        "value": "that produced the architecture now contained in simplemapper."
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "It",
        "last_name": "has evolved significantly after, and it now contains a particularly efficient",
        "name": "It has evolved significantly after, and it now contains a particularly efficient",
        "type": "Agent",
        "value": "It has evolved significantly after, and it now contains a particularly efficient"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "version",
        "last_name": "of the map code on float arrays, incorporating ideas from Paul Vernaza",
        "name": "version of the map code on float arrays, incorporating ideas from Paul Vernaza",
        "type": "Agent",
        "value": "version of the map code on float arrays, incorporating ideas from Paul Vernaza"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "email": "Jerome.Vouillon@pps.jussieu.fr",
        "given_name": "insight",
        "last_name": "from Jerome Vouillon",
        "name": "insight from Jerome Vouillon",
        "type": "Agent",
        "value": "insight from Jerome Vouillon"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "email": "Pietro.Abate@pps.jussieu.fr",
        "given_name": "Pietro",
        "last_name": "Abate",
        "name": "Pietro Abate",
        "type": "Agent",
        "value": "Pietro Abate"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "Detailed",
        "last_name": "contributor history is contained in the git repository available at",
        "name": "Detailed contributor history is contained in the git repository available at",
        "type": "Agent",
        "value": "Detailed contributor history is contained in the git repository available at"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/AUTHORS",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "https://github.com/rdicosmo/parmap",
        "last_name": null,
        "name": "https://github.com/rdicosmo/parmap",
        "type": "Agent",
        "value": "https://github.com/rdicosmo/parmap"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/AUTHORS",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/deepin-community/parmap"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "git+https://github.com/rdicosmo/parmap.git"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/deepin-community/parmap/master/.github/workflows/call-chatOps.yml"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/deepin-community/parmap/master/.github/workflows/call-auto-tag.yml"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/deepin-community/parmap/master/.github/workflows/backup-to-gitlab.yml"
      },
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-08-03T11:38:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2011-07-18"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2023-08-03T11:55:12Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2022-01-03"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 0.9863058348206641,
      "result": {
        "original_header": "Parmap in a nutshell",
        "type": "Text_excerpt",
        "value": "Parmap is a minimalistic library allowing  to exploit multicore architecture for\nOCaml programs with minimal modifications: if you want to use your many cores to\naccelerate an   operation  which  happens   to be   a  map,  fold    or map/fold\n(map-reduce),  just use  Parmap's  `parmap`, `parfold`  and `parmapfold` primitives in\nplace  of the standard   `List.map`   and friends,  and  specify  the  number   of\nsubprocesses to use by the optional parameter `~ncores`. \n"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.940380441394596,
      "result": {
        "original_header": "DO'S and DONT'S",
        "type": "Text_excerpt",
        "value": "Parmap is *not*  meant to be a replacement  for a full fledged implementation of\nparallelism skeletons  (map, reduce, pipe, and the  many others described in the\nscientific literature   since the end   of the  1980's,   much earlier  than the\nspecific   implementation by Google   engineers  that popularised them).  It  is\nmeant,  instead, to allow you to  quickly leverage the  idle processing power of\nyour extra cores, when handling some heavy computational load. \nThe principle of parmap is very simple: when you call one of the three available\nprimitives, map, fold, and  mapfold , your OCaml  sequential program forks  in n\nsubprocesses (you choose the n), and each subprocess performs the computation on\nthe 1/n of the data, in chunks  of a size you  can choose, returning the results\nthrough a shared memory area to the  parent process, that resumes execution once\nall the children have terminated, and the data has been recollected. \nBy forking the parent process  on a single machine, the children get access, for\nfree, to all the data structures already built, even the imperative ones, and as\nfar as your computation  inside the map/fold  does not produce side effects that\nneed  to be  preserved, the  final result will   be the same  as  performing the\nsequential operation, the only difference is that you might get it faster. \nThe OCaml  code is reasonably  simple and  only marginally relies  on external C\nlibraries: most of the magic is done by your operating  system's fork and memory\nmapping   mechanisms.    One    could gain  some      speed  by implementing   a\nmarshal/unmarshal operation directly on bigarrays, but we did not do this yet. \nOf course, if you happen  to have open  channels, or files, or other connections\nthat should only be  used by the parent  process, your program  may behave in  a\nvery wierd way: as an example, *do  not* open a  graphic window before calling a\nParmap primitive, and   *do   not*  use  this  library   if  your  program    is\nmulti-threaded!\n \n"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9473097497755688,
      "result": {
        "original_header": "Preservation of output order in Parmap",
        "type": "Text_excerpt",
        "value": "If the number of chunks is equal to the number of cores, it is easy to preserve\nthe order of the elements of the sequence passed to the map/fold operations, so\nthe result will be a list with the same order as if the sequential function would\nbe applied to the input. This is what the `parmap`, `parmapfold` and `parfold` functions\ndo when the chunksize argument is not used. \nIf the user specifies a chunksize that is different from the number of cores,\nthe current implementation for `parmap`, `parmapi`, `array_parmap` and\n`array_parmapi` by default does not guarantee the preservation of the order\nof the results. If the `keeporder` parameter is set to true, an alternative\nimplementation is used, that tags the chunks and reorders them at the end, so the result of\ncalling `Parmap.parmap f l` is the same as `List.map f l`. Depending on the\nnature of your workload (in particular, number of chunks and size of the results),\nthis may be way more efficient than implementing a sorting mechanism yourself, but\nmay also end up using up to twice the space and time of the default implementation:\nthere is a tradeoff, and it is up to the user to choose the solution that better suits him/her. \nNo reordering logic is implemented for `parmapfold`, `parfold` and their\nvariants, as performing these operations in parallel only make sense if the\norder is irrelevant. \nIn general, using little chunksize helps in balancing the load among the\nworkers, and provides better speed, but incurs a little overhead for tagging and\nreordering the chunks: there is a tradeoff, and it is up to the user to choose\nthe solution that better suits him/her.\n \n"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9398040601025123,
      "result": {
        "original_header": "Fast map on arrays and on float arrays",
        "type": "Text_excerpt",
        "value": "Visiting an array is much faster than visiting a list, and conversion of an array\nto and from a list is expensive, on large data structures, so we provide a specialised\nversion of map on arrays, that beaves exactly like parmap. \nWe also provide a highly optimised specialised parmap version that is targeted\nto float arrays, `array_float_parmap`, that allows you to perform parallel\ncomputation on very large float arrays efficiently, without the boxing/unboxing\noverhead introduced by the other primitives, including `array_parmap`. \nTo understand the efficiency issues involved in the case of large arrays of float,\nhere is a short summary of the steps that any implementation of a parallel map\nfunction must perform. \nThe `array_float_parmap` performs steps 1, 2, 4 and 5. It is possible to share steps\n1 and 2 among subsequent calls to the parallel function by preallocating the result\narray and the shared memory buffer, and passing them as optional parameters to the\n`array_float_parmap` function: this may save a significant amount of time if the\narray is very large.\n \n"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "active"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/deepin-community/parmap/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/deepin-community/parmap/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "deepin-community/parmap"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Parmap in a nutshell"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "With opam",
        "parent_header": [
          "Parmap in a nutshell",
          "Install"
        ],
        "type": "Text_excerpt",
        "value": "```\nopam install parmap\n```\n"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "From source",
        "parent_header": [
          "Parmap in a nutshell",
          "Install"
        ],
        "type": "Text_excerpt",
        "value": "```\nmake\nmake install\nmake test\n```\n"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/deepin-community/parmap/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rdicosmo/parmap/issues"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The Library is distributed under the terms of the GNU Library General\nPublic License version 2 (included below), with a special exception\nto section 6, as detailed below.\n\nAs a special exception to the GNU Library General Public License, you\nmay link, statically or dynamically, a \"work that uses the Library\"\nwith a publicly distributed version of the Library to produce an\nexecutable file containing portions of the Library, and distribute\nthat executable file under terms of your choice, without any of the\nadditional requirements listed in clause 6 of the GNU Library General\nPublic License.  By \"a publicly distributed version of the Library\",\nwe mean either the unmodified Library as distributed by the authors, or a\nmodified version of the Library that is distributed under the\nconditions defined in clause 2 of the GNU Library General Public\nLicense.  This exception does not however invalidate any other reasons\nwhy the executable file might be covered by the GNU Library General\nPublic License.\n\n----------------------------------------------------------------------\n\n                  GNU LIBRARY GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1991 Free Software Foundation, Inc.\n 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the library GPL.  It is\n numbered 2 because it goes with version 2 of the ordinary GPL.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Library General Public License, applies to some\nspecially designated Free Software Foundation software, and to any\nother libraries whose authors decide to use it.  You can use it for\nyour libraries, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if\nyou distribute copies of the library, or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link a program with the library, you must provide\ncomplete object files to the recipients so that they can relink them\nwith the library, after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  Our method of protecting your rights has two steps: (1) copyright\nthe library, and (2) offer you this license which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  Also, for each distributor's protection, we want to make certain\nthat everyone understands that there is no warranty for this free\nlibrary.  If the library is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original\nversion, so that any problems introduced by others will not reflect on\nthe original authors' reputations.\n\f\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that companies distributing free\nsoftware will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\nfree use or not licensed at all.\n\n  Most GNU software, including some libraries, is covered by the ordinary\nGNU General Public License, which was designed for utility programs.  This\nlicense, the GNU Library General Public License, applies to certain\ndesignated libraries.  This license is quite different from the ordinary\none; be sure to read it in full, and don't assume that anything in it is\nthe same as in the ordinary license.\n\n  The reason we have a separate public license for some libraries is that\nthey blur the distinction we usually make between modifying or adding to a\nprogram and simply using it.  Linking a program with a library, without\nchanging the library, is in some sense simply using the library, and is\nanalogous to running a utility program or application program.  However, in\na textual and legal sense, the linked executable is a combined work, a\nderivative of the original library, and the ordinary General Public License\ntreats it as such.\n\n  Because of this blurred distinction, using the ordinary General\nPublic License for libraries did not effectively promote software\nsharing, because most developers did not use the libraries.  We\nconcluded that weaker conditions might promote sharing better.\n\n  However, unrestricted linking of non-free programs would deprive the\nusers of those programs of all benefit from the free status of the\nlibraries themselves.  This Library General Public License is intended to\npermit developers of non-free programs to use free libraries, while\npreserving your freedom as a user of such programs to change the free\nlibraries that are incorporated in them.  (We have not seen how to achieve\nthis as regards changes in header files, but we have achieved it as regards\nchanges in the actual functions of the Library.)  The hope is that this\nwill lead to faster development of free libraries.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, while the latter only\nworks together with the library.\n\n  Note that it is possible for a library to be covered by the ordinary\nGeneral Public License rather than by this special one.\n\f\n                  GNU LIBRARY GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library which\ncontains a notice placed by the copyright holder or other authorized\nparty saying it may be distributed under the terms of this Library\nGeneral Public License (also called \"this License\").  Each licensee is\naddressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also compile or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    c) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    d) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe source code distributed need not include anything that is normally\ndistributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Library General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\f\n     Appendix: How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Library General Public\n    License as published by the Free Software Foundation; either\n    version 2 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Library General Public License for more details.\n\n    You should have received a copy of the GNU Library General Public\n    License along with this library; if not, write to the Free\n    Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,\n    MA 02111-1307, USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/LGPL-2.0-only",
        "spdx_id": "https://spdx.org/licenses/LGPL-2.0-only",
        "type": "License",
        "value": "https://spdx.org/licenses/LGPL-2.0-only"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "parmap"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Parmap"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "deepin-community"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "OCaml",
        "size": 81310,
        "type": "Programming_language",
        "value": "OCaml"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 4174,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 1821,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 439,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "OCaml",
        "type": "Programming_language",
        "value": "OCaml",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/deepin-community/parmap/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "reference_publication": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://doi.org/10.1016/j.procs.2012.04.202"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example",
    "keywords"
  ],
  "somef_provenance": {
    "date": "2025-09-19 00:33:53",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "1.2.5"
      },
      "source": "https://raw.githubusercontent.com/deepin-community/parmap/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
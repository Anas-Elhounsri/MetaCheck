{
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing `effmass`",
        "parent_header": [
          "effmass"
        ],
        "type": "Text_excerpt",
        "value": "If you use this code in your research, please cite the following paper:\n\nWhalley, Lucy D. (2018). *effmass - an effective mass package*. The Journal of Open Source Software, 3(28) 797.\n"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Bibtex",
        "parent_header": [
          "effmass",
          "Citing `effmass`"
        ],
        "type": "Text_excerpt",
        "value": "```\n@misc{Whalley_JOSS2018,\n  author       = {Lucy D. Whalley},\n  title        = {effmass: An effective mass package},\n  volume       = {3},\n  issue        = {28},\n  pages        = {797},\n  month        = {Aug},\n  year         = {2018},\n  doi          = {10.21105/joss.00797},\n  url          = {http://joss.theoj.org/papers/10.21105/joss.00797}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Lucy D. Whalley",
        "doi": "10.21105/joss.00797",
        "format": "bibtex",
        "title": "effmass: An effective mass package",
        "type": "Text_excerpt",
        "url": "http://joss.theoj.org/papers/10.21105/joss.00797",
        "value": "@misc{Whalley_JOSS2018,\n    url = {http://joss.theoj.org/papers/10.21105/joss.00797},\n    doi = {10.21105/joss.00797},\n    year = {2018},\n    month = {Aug},\n    pages = {797},\n    issue = {28},\n    volume = {3},\n    title = {effmass: An effective mass package},\n    author = {Lucy D. Whalley},\n}"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at lucywhalley-[at]-gmail-[dot]-com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yw-fang/effmass"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/lucydot/effmass"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-10-05T15:43:59Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2018-06-25"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2018-06-25"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-12-28T13:46:35Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2018-06-25"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "master brach is Lucy's; kyodai branch is mine."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An effective mass package"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9031047632894762,
      "result": {
        "original_header": "effmass",
        "type": "Text_excerpt",
        "value": "`effmass` is a Python 3 package for calculating various definitions of effective mass from the electronic bandstructure of a semiconducting material. It consists of a core class that calculates the effective mass and other associated properties of selected bandstructure segments. The module also contains functions for locating bandstructure extrema and plotting approximations to the dispersion. \nExamples are provided in a Jupyter notebook [here](https://nbviewer.jupyter.org/github/lucydot/effmass/blob/master/paper/notebook.ipynb).\nAPI documentation is [here](https://effmass.readthedocs.io/en/latest/).\nSource code is available as a git repository at [https://github.com/lucydot/effmass](https://github.com/lucydot/effmass).\n \n"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.891202699762293,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "**Read in a bandstructure:**\nThis requires the `VASP` output files `PROCAR` and `OUTCAR`. It is assumed you have walked through a 1D slice of the Brillouin Zone, capturing the maxima and minima of interest. `effmass` uses the Python package [vasppy](https://github.com/bjmorgan/vasppy) for parsing `VASP` output. \n**Assess the extent of non-parabolicity:**\nParameters of the Kane quasi-linear dispersion are calculated to quantify the extent of non-parabolicity over a given energy range.  \n**Calculate the quasi-fermi level for a given carrier concentration:**\nThis requires the `VASP` output file `DOSCAR`. Using density-of-states data and assuming no thermal smearing, `effmass` can calculate the energy to which states are occupied. This is a useful approximation to the quasi-Fermi level. \nThe `effmass` package is aimed towards theoretical solid state physicists and chemists who have a basic familiarity with Python. Depending on the functionality and level of approximation you are looking for, \nit may be that one of the packages listed [here](https://effmass.readthedocs.io/en/latest/Related%20packages.html) will suit your needs better.\n \n"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9473159985709333,
      "result": {
        "original_header": "Development",
        "type": "Text_excerpt",
        "value": "If you would like to contribute please do so via a pull request. All contributors must read and respect the [code of conduct](https://github.com/lucydot/effmass/blob/master/CODE_OF_CONDUCT.md). In particular, we welcome contributions which would extend `effmass` so that it is able to parse output from other electronic structure codes. \n \n"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "effmass"
        ],
        "type": "Text_excerpt",
        "value": "An overview of the features of effmass along with example code is contained in a [Jupyter notebook](https://nbviewer.jupyter.org/github/lucydot/effmass/blob/master/paper/notebook.ipynb), which is available in the `paper` directory.\n\nAPI documentation is available [here](https://effmass.readthedocs.io/en/latest/).\n"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://effmass.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/yw-fang/effmass/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yw-fang/effmass/master/paper/notebook.ipynb"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/paper/notebook.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yw-fang/effmass/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "yw-fang/effmass"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "effmass"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "setup.py",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yw-fang/effmass/master/setup.py"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/setup.py",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yw-fang/effmass/master/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/requirements.txt",
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/136037407"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://joss.theoj.org/papers/389754561f0710b756514b8cb9ac0e6a/status.svg"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "effmass"
        ],
        "type": "Text_excerpt",
        "value": "`effmass` is a Python 3 package and requires key packages from the [SciPy ecosystem](https://www.scipy.org/about.html): SciPy, NumPy and Matplotlib. If you have not installed these packages before, it may be best to install them using your preferred package manager (eg: Homebrew). Note that together they will use >100MB of disk space. `effmass` can then be built using the Python package manager `pip`:\n\n```\npip3 install --user effmass\n```\n\nOr download the latest release from [GitHub](https://github.com/lucydot/effmass/releases), and install\n```\ncd effmass\npython3 setup.py install\n```\n\nOr clone the latest development version\n```\ngit clone git@github.com:lucydot/effmass.git\n```\nand install the same way.\n```\ncd effmass\npython3 setup.py install \n```\n"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/yw-fang/effmass/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "Python",
          "materials science",
          "DFT"
        ]
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "File_dump",
        "value": "The MIT License (MIT)\n\nCopyright (c) 2018 Lucy D. Whalley\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/MIT",
        "spdx_id": "MIT",
        "type": "License",
        "value": "MIT"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "effmass"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "yw-fang"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 745790,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 100977,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 1820,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/yw-fang/effmass/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "vasppy",
        "type": "Software_application",
        "value": "vasppy",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "scipy",
        "type": "Software_application",
        "value": "scipy",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "numpy",
        "type": "Software_application",
        "value": "numpy",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "matplotlib",
        "type": "Software_application",
        "value": "matplotlib",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "adjustText",
        "type": "Software_application",
        "value": "adjustText",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pytest-lazy-fixture",
        "type": "Software_application",
        "value": "pytest-lazy-fixture",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "coverage",
        "type": "Software_application",
        "value": "coverage==4.3.4",
        "version": "==4.3.4"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "codeclimate-test-reporter",
        "type": "Software_application",
        "value": "codeclimate-test-reporter",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/requirements.txt",
      "technique": "code_parser"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support"
  ],
  "somef_provenance": {
    "date": "2025-09-19 01:26:02",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "v0.1.0"
      },
      "source": "https://raw.githubusercontent.com/yw-fang/effmass/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
{
  "application_domain": [
    {
      "confidence": 0.9515054060978017,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "cboettig@gmail.com",
        "identifier": "https://orcid.org/0000-0002-1642-628X",
        "type": "String",
        "value": "Carl Boettiger"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://orcid.org/0000-0002-2815-0399",
        "type": "String",
        "value": "Ma\u00eblle Salmon"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "cboettig@gmail.com",
        "identifier": "https://orcid.org/0000-0002-1642-628X",
        "type": "String",
        "value": "Carl Boettiger"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://orcid.org/0000-0002-2815-0399",
        "type": "String",
        "value": "Ma\u00eblle Salmon"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Mark Pundsack",
        "type": "Agent",
        "value": "Mark Pundsack"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "cboettig@gmail.com",
        "identifier": "http://orcid.org/0000-0002-1642-628X",
        "type": "String",
        "value": "Carl Boettiger"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "cboettig@gmail.com",
        "identifier": "https://orcid.org/0000-0002-1642-628X",
        "type": "String",
        "value": "Carl Boettiger"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://orcid.org/0000-0002-2815-0399",
        "type": "String",
        "value": "Ma\u00eblle Salmon"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Set the branch that codemetar references",
        "parent_header": [
          "codemetar",
          "How to improve your package\u2019s codemeta.json?"
        ],
        "type": "Text_excerpt",
        "value": "There are a number of places that codemetar will reference a github\nbranch if your code is hosted on github (e.g.\u00a0for release notes, readme,\netc.). By default, codemetar will use the name \u201cmaster\u201d but you can\nchange that to whatever your default branch is by setting the option\n\u201ccodemeta_branch\u201d (e.g.\u00a0`options(codemeta_branch = \"main\")` before\ncalling `write_codemeta()` to use the branch named \u201cmain\u201d as the default\nbranch).\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/codemetar"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/codemetar"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/codemetar"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/codemetar"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/heroku/node-js-sample"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/codemeta/codemetar"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/codemetar"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": [
          "https://github.com/ropensci/codemetar/actions",
          "https://app.codecov.io/github/ropensci/codemetar?branch=main"
        ]
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": [
          "https://github.com/ropensci/codemetar/actions",
          "https://codecov.io/github/ropensci/codemetar?branch=master"
        ]
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://travis-ci.org/codemeta/codemetar"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/codemetar/main/.github/workflows/main.yml"
      },
      "technique": "file_exploration"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n\nContributing Guidelines\n=======================\n\nRepository structure\n--------------------\n\nThis repository is structured as a standard R package\nfollowing the conventions outlined in the [Writing R\nextensions](http://cran.r-project.org/doc/manuals/R-exts.html) manual.\nA few additional files are provided that are not part of the built\nR package and are listed in `.Rbuildignore`, such as `.travis.yml`,\nwhich is used for continuous testing and integration.\n\n\nCode\n----\n\nAll code for this package is found in `R/`, (except compiled source\ncode, if used, which is in `/src`).  All functions should be thoroughly\ndocumented with `roxygen2` notation; see Documentation. \n\nTesting\n-------\n\nAny new feature or bug-fix should include a unit-test demonstrating the\nchange.  Unit tests follow the `testthat` framework with files in\n`tests/testthat`.  Please make sure that the testing suite passes\nbefore issuing a pull request.  This can be done by running `check()`\nfrom the `devtools` package, which will also check for consistent\ndocumentation, etc.\n\n\nThis package uses the [travis](https://github.com/craigcitro/r-travis)\ncontinuous testing mechanism for R to ensure that the test suite is run\non each push to Github.  An icon at the top of the README.md indicates\nwhether or not the tests are currently passing. \n\nThis package also uses\n[codecov.io](https://codecov.io/) to\nmeasure test coverage.  While not all code can be covered by automated \ntests (in particular, functions involving user prompts), try to avoid\ndecreasing coverage by writing unit tests for any contributed code. \nCodecov.io will flag PRs that decrease coverage. \n\n\nDocumentation\n-------------\n\nAll of the function documentation is generated automatically.\nPlease do not edit any of the documentation files in `man/`\nor the `NAMESPACE`.  Instead, construct the appropriate\n[roxygen2](https://github.com/klutometis/roxygen) documentation in the\nfunction files in `R/` themselves.  The documentation is then generated\nby running the `document()` function from the `devtools` package.  Please\nconsult the [Advanced R programming](http://adv-r.had.co.nz/) guide if\nthis workflow is unfamiliar to you.  Note that functions should include\nexamples in the documentation. Please use `\\dontrun` for examples that\ntake more than a few seconds to execute or require an internet connection.\n\nLikewise, the README.md file in the base directory should not be edited\ndirectly.  This file is created automatically from code that runs the\nexamples shown, helping to ensure that they are functioning as advertised\nand consistent with the package README vignette.  Instead, edit the\n`README.Rmd` source file in `manuscripts` and run `make` to build\nthe README.\n\nGeneral Development Goals & Guidelines\n---------------------------------------\n\n1. Not having too many high-level functions, \n2. Using sensible defaults, (driven by use cases).\n3. Docs should point advanced users to the lower-level API when they need special cases.  \n4. Maintain a consistent user-facing API.   \n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-03-29T20:23:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-07-28T18:16:58Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "an R package for generating and working with codemeta"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/DESCRIPTION",
        "type": "String",
        "value": "The 'Codemeta' Project defines a 'JSON-LD' format\n    for describing software metadata, as detailed at\n    <https://codemeta.github.io>. This package provides utilities to\n    generate, parse, and modify 'codemeta.json' files automatically for R\n    packages, as well as tools and examples for working with\n    'codemeta.json' 'JSON-LD' more generally."
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The 'Codemeta' Project defines a 'JSON-LD' format for describing software metadata, as detailed at <https://codemeta.github.io>. This package provides utilities to generate, parse, and modify 'codemeta.json' files automatically for R packages, as well as tools and examples for working with 'codemeta.json' 'JSON-LD' more generally."
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The 'Codemeta' Project defines a 'JSON-LD' format for describing software metadata, as detailed at <https://codemeta.github.io>. This package provides utilities to generate, parse, and modify 'codemeta.json' files automatically for R packages, as well as tools and examples for working with 'codemeta.json' 'JSON-LD' more generally."
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A sample Node.js app using Express 4"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Codemeta defines a 'JSON-LD' format for describing software metadata.\n    This package provides utilities to generate, parse, and modify codemeta.jsonld\n    files automatically for R packages."
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The 'Codemeta' Project defines a 'JSON-LD' format for describing\n  software metadata, as detailed at <https://codemeta.github.io>. This package\n  provides utilities to generate, parse, and modify 'codemeta.json' files \n  automatically for R packages, as well as tools and examples for working with\n  'codemeta.json' 'JSON-LD' more generally."
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Usual terms in DESCRIPTION",
        "parent_header": [
          "codemetar",
          "How to improve your package\u2019s codemeta.json?"
        ],
        "type": "Text_excerpt",
        "value": "- Fill `BugReports` and `URL`.\n\n- Using the `Authors@R` notation allows a much richer specification of\n  author roles, correct parsing of given vs family names, and email\n  addresses.\n\nIn the current implementation, developers may specify an ORCID url for\nan author in the optional `comment` field of `Authors@R`, e.g.\n\n    Authors@R: c(person(given = \"Carl\",\n                 family = \"Boettiger\",\n                 role = c(\"aut\", \"cre\", \"cph\"),\n                 email = \"cboettig@gmail.com\",\n                 comment = c(ORCID = \"0000-0002-1642-628X\")))\n\nwhich will allow `codemetar` to associate an identifier with the person.\nThis is clearly something of a hack since R\u2019s `person` object lacks an\nexplicit notion of `id`, and may be frowned upon.\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Set even more terms via DESCRIPTION",
        "parent_header": [
          "codemetar",
          "How to improve your package\u2019s codemeta.json?"
        ],
        "type": "Text_excerpt",
        "value": "In general, setting metadata via the places stated earlier is the best\nsolution because that metadata is used by other tools (e.g.\u00a0the URLs in\nDESCRIPTION can help the package users, not only codemetar).\n\nThe DESCRIPTION file is the natural place to specify any metadata for an\nR package. The `codemetar` package can detect certain additional terms\nin the [CodeMeta context](https://codemeta.github.io/terms/). Almost any\nadditional codemeta field can be added to and read from the DESCRIPTION\ninto a `codemeta.json` file (see `codemetar:::additional_codemeta_terms`\nfor a list).\n\nCRAN requires that you prefix any additional such terms to indicate the\nuse of `schema.org` explicitly, e.g.\u00a0`keywords` would be specified in a\nDESCRIPTION file as:\n\n    X-schema.org-keywords: metadata, codemeta, ropensci, citation, credit, linked-data\n\nWhere applicable, these will override values otherwise guessed from the\nsource repository. Use comma-separated lists to separate multiple values\nto a property, e.g.\u00a0keywords.\n\nSee the\n[DESCRIPTION](https://github.com/ropensci/codemetar/blob/master/DESCRIPTION)\nfile of the `codemetar` package for an example.\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9381804807060368,
      "result": {
        "original_header": "codemetar",
        "type": "Text_excerpt",
        "value": "The [codemeta](https://cran.r-project.org/package=codemeta) package\nprovides a more minimalist approach to generating codemeta based only on\nDESCRIPTION and CITATION files, while `codemetar` provides additional\nabilities to detect metadata from README and GitHub sources, and provide\nmore user feedback, suggestions, and messaging. \n**Why codemetar?** The \u2018Codemeta\u2019 Project defines a \u2018JSON-LD\u2019 format for\ndescribing software metadata, as detailed at\n<https://codemeta.github.io>. This package provides utilities to\n**generate, parse, and modify codemeta.jsonld files automatically for R\npackages**, as well as tools and examples for **working with codemeta\njson-ld more generally**. \n- Quickly **generate a valid codemeta.json file from any valid R\n  package**. To do so, we automatically extract as much metadata as\n  possible using the DESCRIPTION file, as well as extracting metadata\n  from other common best-practices such as the presence of Travis and\n  other badges in README, etc.\n- Facilitate the addition of further metadata fields into a\n  codemeta.json file, as well as general manipulation of codemeta files.\n- Support the ability to crosswalk between terms used in other metadata\n  standards, as identified by the Codemeta Project Community, see\n  <https://codemeta.github.io/crosswalk/>\n \n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9753844184661961,
      "result": {
        "original_header": "Why create a codemeta.json for your package?",
        "type": "Text_excerpt",
        "value": "**Why bother creating a codemeta.json for your package?** R packages\nencode lots of metadata in the `DESCRIPTION` file, `README`, and other\nplaces, telling users and developers about the package purpose, authors,\nlicense, dependencies, and other information that facilitates discovery,\nadoption, and credit for your software. Unfortunately, because each\nsoftware language records this metadata in a different format, that\ninformation is hard for search engines, software repositories, and other\ndevelopers to find and integrate. \nBy generating a `codemeta.json` file, you turn your metadata into a\nformat that can easily crosswalk between metadata in many other software\nlanguages. CodeMeta is built on [schema.org](https://schema.org) a\nsimple [structured\ndata](https://developers.google.com/search/docs/advanced/structured-data/intro-structured-data)\nformat developed by major search engines like Google and Bing to improve\ndiscoverability in search. CodeMeta is also understood by significant\nsoftware archiving efforts such as [Software\nHeritage](https://www.softwareheritage.org/) Project, which seeks to\npermanently archive all open source software. \n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8340353615818223,
      "result": {
        "original_header": "Keep codemeta.json up-to-date",
        "type": "Text_excerpt",
        "value": "**How to keep codemeta.json up-to-date?** In particular, how to keep it\nup to date with `DESCRIPTION`? `codemetar` itself no longer supports\nautomatic sync, but there are quite a few methods available out there.\nChoose one that fits well into your workflow! \n- You could use GitHub actions. Refer to GitHub actions docs\n  <https://github.com/features/actions>, and to the example workflow\n  provided in this package (type\n  `system.file(\"templates\", \"codemeta-github-actions.yml\", package = \"codemetar\")`).\n  You can use the `cm-skip` keyword in your commit message if you don\u2019t\n  want this to run on a specific commit. The example workflow provided\n  is setup to only run when a push is made to the master branch. This\n  setup is designed for if you\u2019re using a [git\n  flow](https://nvie.com/posts/a-successful-git-branching-model/#the-main-branches)\n  setup where the master branch is only committed and pushed to via pull\n  requests. After each PR merge (and the completion of this GitHub\n  action), your master branch will always be up to date and so long as\n  you don\u2019t make manual changes to the codemeta.json file, you won\u2019t\n  have merge conflicts. \n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8616709599714658,
      "result": {
        "original_header": "How to improve your package\u2019s codemeta.json?",
        "type": "Text_excerpt",
        "value": "The best way to ensure `codemeta.json` is as complete as possible is to\nset metadata in all the usual places, and then if needed add more\nmetadata. \n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://www.repostatus.org/"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://www.repostatus.org/"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "wip"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/codemetar/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 21
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ropensci/codemetar/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ropensci/codemetar"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "codemetar"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "description",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/codemetar/main/DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/DESCRIPTION",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "package.json",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/package.json"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/package.json",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/DESCRIPTION",
        "type": "Url",
        "value": "DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "package.json"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/package.json",
      "technique": "code_parser"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/templates/description-codemetajson-pre-commit.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "homepage": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://docs.ropensci.org/codemetar/"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "codemetar"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "codemetar"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "codemetar"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "codemetar"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/86626030"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://ropensci.org/public_images/ropensci_footer.png"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "You can install the latest version from CRAN using:\n\n```{r cran-installation, eval = FALSE}\ninstall.packages(\"codemetar\")\n```\n\nYou can also install the development version of `codemetar` from GitHub with:\n\n```{r gh-installation, eval = FALSE}\n# install.packages(\"devtools\")\ndevtools::install_github(\"ropensci/codemetar\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/man/rmdhunks/install-instructions.Rmd",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Set even more terms via DESCRIPTION",
        "parent_header": [
          "codemetar",
          "How to improve your package\u2019s codemeta.json?"
        ],
        "type": "Text_excerpt",
        "value": "In general, setting metadata via the places stated earlier is the best\nsolution because that metadata is used by other tools (e.g.\u00a0the URLs in\nDESCRIPTION can help the package users, not only codemetar).\n\nThe DESCRIPTION file is the natural place to specify any metadata for an\nR package. The `codemetar` package can detect certain additional terms\nin the [CodeMeta context](https://codemeta.github.io/terms/). Almost any\nadditional codemeta field can be added to and read from the DESCRIPTION\ninto a `codemeta.json` file (see `codemetar:::additional_codemeta_terms`\nfor a list).\n\nCRAN requires that you prefix any additional such terms to indicate the\nuse of `schema.org` explicitly, e.g.\u00a0`keywords` would be specified in a\nDESCRIPTION file as:\n\n    X-schema.org-keywords: metadata, codemeta, ropensci, citation, credit, linked-data\n\nWhere applicable, these will override values otherwise guessed from the\nsource repository. Use comma-separated lists to separate multiple values\nto a property, e.g.\u00a0keywords.\n\nSee the\n[DESCRIPTION](https://github.com/ropensci/codemetar/blob/master/DESCRIPTION)\nfile of the `codemetar` package for an example.\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Set the branch that codemetar references",
        "parent_header": [
          "codemetar",
          "How to improve your package\u2019s codemeta.json?"
        ],
        "type": "Text_excerpt",
        "value": "There are a number of places that codemetar will reference a github\nbranch if your code is hosted on github (e.g.\u00a0for release notes, readme,\netc.). By default, codemetar will use the name \u201cmaster\u201d but you can\nchange that to whatever your default branch is by setting the option\n\u201ccodemeta_branch\u201d (e.g.\u00a0`options(codemeta_branch = \"main\")` before\ncalling `write_codemeta()` to use the branch named \u201cmain\u201d as the default\nbranch).\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation and usage requirements",
        "parent_header": [
          "codemetar"
        ],
        "type": "Text_excerpt",
        "value": "You can install the latest version from CRAN using:\n\n``` r\ninstall.packages(\"codemetar\")\n```\n\nYou can also install the development version of `codemetar` from GitHub\nwith:\n\n``` r\n# install.packages(\"devtools\")\ndevtools::install_github(\"ropensci/codemetar\")\n```\n\nFor optimal results you need a good internet connection.\n\nThe package queries\n\n- `utils::available.packages()` for CRAN and Bioconductor packages;\n\n- GitHub API via the [`gh` package](https://github.com/r-lib/gh), if it\n  finds a GitHub repo URL in DESCRIPTION or as git remote. GitHub API is\n  queried to find the [preferred\n  README](https://developer.github.com/v3/repos/contents/#get-the-readme),\n  and the [repo\n  topics](https://developer.github.com/v3/repos/#list-all-topics-for-a-repository).\n  If you use codemetar for many packages having a\n  [GITHUB_PAT](https://github.com/r-lib/gh#environment-variables) is\n  better;\n\n- [R-hub sysreqs API](https://r-hub.github.io/rhub/) to parse\n  SystemRequirements.\n\nIf your machine is offline, a more minimal codemeta.json will be\ncreated. If your internet connection is poor or there are firewalls, the\ncodemeta creation might indefinitely hang.\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ropensci/codemetar/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/codemetar/issues"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/codemetar/issues"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/codemetar/issues"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/codemeta/codemetar/issues"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/codemetar/issues"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "codemeta, json-ld, metadata, peer-reviewed, r, r-package, rstats"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "metadata",
          "codemeta",
          "ropensci",
          "citation",
          "credit",
          "linked-data",
          "json-ld",
          "r",
          "rstats",
          "r-package",
          "peer-reviewed"
        ]
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "metadata",
          "codemeta",
          "ropensci",
          "citation",
          "credit",
          "linked-data",
          "json-ld",
          "r",
          "rstats",
          "r-package",
          "peer-reviewed"
        ]
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "node"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "heroku"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "express"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "metadata",
          "codemeta",
          "ropensci",
          "citation",
          "credit",
          "linked-data",
          "json-ld",
          "r",
          "rstats",
          "r-package",
          "peer-reviewed"
        ]
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/DESCRIPTION",
        "type": "String",
        "value": "GPL-3"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/GPL-3.0",
        "spdx_id": "https://spdx.org/licenses/GPL-3.0",
        "type": "License",
        "value": "https://spdx.org/licenses/GPL-3.0"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/GPL-3.0",
        "spdx_id": "https://spdx.org/licenses/GPL-3.0",
        "type": "License",
        "value": "https://spdx.org/licenses/GPL-3.0"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "License",
        "value": "MIT"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/MIT",
        "spdx_id": "https://spdx.org/licenses/MIT",
        "type": "License",
        "value": "https://spdx.org/licenses/MIT"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/GPL-3.0",
        "spdx_id": "https://spdx.org/licenses/GPL-3.0",
        "type": "License",
        "value": "https://spdx.org/licenses/GPL-3.0"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "codemetar"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "codemetar: Generate 'CodeMeta' Metadata for R Packages"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "codemetar: Generate 'CodeMeta' Metadata for R Packages"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "codemetar: Generate CodeMeta Metadata for R Packages"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "codemetar: Generate 'CodeMeta' Metadata for R Packages"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ropensci"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/DESCRIPTION",
        "type": "String",
        "value": "codemetar"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "node-js-sample"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/package.json",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 77703,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 1346,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Rez",
        "size": 557,
        "type": "Programming_language",
        "value": "Rez"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 336,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "type": "Programming_language",
        "url": "https://r-project.org",
        "value": "R",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "type": "Programming_language",
        "url": "https://r-project.org",
        "value": "R",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "type": "Programming_language",
        "url": "https://r-project.org",
        "value": "R",
        "version": "3.4.0"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "type": "Programming_language",
        "url": "https://r-project.org",
        "value": "R",
        "version": "3.5.3"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://github.com/ropensci/codemetar/blob/main/README.md"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.md"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://github.com/ropensci/codemetar/blob/master/README.md"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://github.com/codemeta/codemetar/blob/master/README.md"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "maelle",
          "type": "User"
        },
        "date_created": "2021-05-10T16:21:02Z",
        "date_published": "2021-05-11T05:45:02Z",
        "description": "* `write_codemetar()` can now be called from anywhere within a package directory structure. (#305, @mpadge)\r\n* Breaking change: `write_codemeta()` writes the JSON file at `path` relative to `pkg`, not the current directory. (#303, @ThierryO)\r\n* Added  documentation for changing the default branch (#302, @jonkeane)\r\n* Breaking change: Relatedly, it is no longer possible to use `write_codemeta()` on an installed packages, in that case one would have to use `create_codemeta()` together with `jsonlite::write_json()`.\r\n* Use R.Version() instead of R.version to allow mocking in tests.\r\n* Bug fix: now able to parse a README where badges are in a table with non badges links.\r\n* Bug fix: `guess_fileSize()` properly handles `.Rbuildignore` (#299, @ThierryO).\r\n* Bug fix: `create_codemetar()` handles minimal packages (#298, @ThierryO).\r\n",
        "html_url": "https://github.com/ropensci/codemetar/releases/tag/v0.3.0",
        "name": "codemetar 0.3.0",
        "release_id": 42747284,
        "tag": "v0.3.0",
        "tarball_url": "https://api.github.com/repos/ropensci/codemetar/tarball/v0.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/codemetar/releases/42747284",
        "value": "https://api.github.com/repos/ropensci/codemetar/releases/42747284",
        "zipball_url": "https://api.github.com/repos/ropensci/codemetar/zipball/v0.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cboettig",
          "type": "User"
        },
        "date_created": "2020-07-21T03:12:08Z",
        "date_published": "2020-07-21T03:12:48Z",
        "html_url": "https://github.com/ropensci/codemetar/releases/tag/0.1.9",
        "name": "v0.1.9",
        "release_id": 28764452,
        "tag": "0.1.9",
        "tarball_url": "https://api.github.com/repos/ropensci/codemetar/tarball/0.1.9",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/codemetar/releases/28764452",
        "value": "https://api.github.com/repos/ropensci/codemetar/releases/28764452",
        "zipball_url": "https://api.github.com/repos/ropensci/codemetar/zipball/0.1.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cboettig",
          "type": "User"
        },
        "date_created": "2019-04-22T03:36:59Z",
        "date_published": "2019-04-22T15:14:51Z",
        "description": "Bugfix release: patch test suite to execute conditionally based on internet availability.   ",
        "html_url": "https://github.com/ropensci/codemetar/releases/tag/0.1.8",
        "name": "codemetar: Generate CodeMeta Metadata for R Packages",
        "release_id": 16899364,
        "tag": "0.1.8",
        "tarball_url": "https://api.github.com/repos/ropensci/codemetar/tarball/0.1.8",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/codemetar/releases/16899364",
        "value": "https://api.github.com/repos/ropensci/codemetar/releases/16899364",
        "zipball_url": "https://api.github.com/repos/ropensci/codemetar/zipball/0.1.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cboettig",
          "type": "User"
        },
        "date_created": "2019-03-12T18:19:45Z",
        "date_published": "2019-03-19T15:40:06Z",
        "description": "## New in 0.1.7 \r\n\r\n#### 2018-12\r\n\r\n* `jsonld` that is used only in `crosswalk()` and `codemeta_validate()` is now an optional dependency (Suggests rather than Imports).\r\n\r\n* The CodeRepository URL is now cleaned a bit (removing direct link to the README).\r\n\r\n* `write_codemeta()` gains a new argument `use_githook` to make the creation of a DESCRIPTION/codemeta.json git pre-commit hook optional.\r\n\r\n* `create_codemeta()` and `write_codemeta()` gain a new argument `use_filesize` to make the building of the package to get its size optional.\r\n\r\n* Encoding bug fixed in `extract_badges()`.\r\n\r\n* `extract_badges()` now uses `commonmark` and `xml2` instead of only regular expressions.\r\n\r\n* `pkgbuild` is now used directly instead of `devtools`.\r\n\r\n* `give_opinion()` now recognizes lifecycle badges, not only repostatus.org badges.",
        "html_url": "https://github.com/ropensci/codemetar/releases/tag/0.1.7",
        "name": "codemetar: Generate CodeMeta Metadata for R Packages",
        "release_id": 16209156,
        "tag": "0.1.7",
        "tarball_url": "https://api.github.com/repos/ropensci/codemetar/tarball/0.1.7",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/codemetar/releases/16209156",
        "value": "https://api.github.com/repos/ropensci/codemetar/releases/16209156",
        "zipball_url": "https://api.github.com/repos/ropensci/codemetar/zipball/0.1.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "maelle",
          "type": "User"
        },
        "date_created": "2018-05-04T19:40:11Z",
        "date_published": "2018-05-05T06:15:29Z",
        "description": "* New functions\r\n\r\n    * extract_badges for extracting information from all badges in a Markdown file.\r\n    \r\n    * give_opinion giving opiniated advice about package metadata\r\n    \r\n* Changes to the create_codemeta output\r\n\r\n    * relatedLink field now include provider URL and URL(s) from DESCRIPTION that are not the code repository\r\n    \r\n    * maintainer is now a list allowing for several maintainers since e.g. the BioConductor a4 package has two maintainers.\r\n    \r\n    * if more than one CI service among Travis, Appveyor and Circle CI are used and shown via a README badge they're all added to the contIntegration field. URLs from codecov and coveralls badges are also added to the contIntegration field.\r\n    \r\n    * repo status inferred from the README now 1) is an URL instead of a word 2) recognizes either repostatus.org or Tidyverse lifecycle badges.\r\n    \r\n    * if present, priority is given to the Repository and BugReports fields of DESCRIPTION for filling the codeRepository and issueTracker fields of codemeta.json (which means working on a fork won't change these).\r\n    \r\n    * ability to parse all CRAN-allowed MARC roles.\r\n    \r\n    * if there is a badge for an rOpenSci onboarding review and the review issue is closed, basic review metadata is added to codemeta.json\r\n    \r\n    * For dependencies, if the provider guessed is CRAN or BioConductor, their canonic CRAN/BioConductor URL is added to codemeta.json as sameAs, unless there's a GitHub repo mentioned for them in Remotes in DESCRIPTION, in which case sameAs is that GitHub repo.\r\n    \r\n    * CRAN is now correctly translated as \"Comprehensive R Archive Network\"\r\n    \r\n    * If codeRepository is guessed to be a GitHub repo (via the URL field of DESCRIPTION or via git remote URL), the repo topics are queried via GitHub API V3 and added to the keywords (in combination with keywords stored in the X-schema.org-keywords field of DESCRIPTION)\r\n    \r\n    * SystemRequirements are now parsed using https://sysreqs.r-hub.io/, outputting URLs then stored in softwareRequirements\r\n\r\n* Help to remind to update codemeta.json regularly: Writing codemeta.json for the first time adds a git pre-commit hook and suggests adding a release question for devtools::release.\r\n\r\n* Internal changes\r\n\r\n    * Now uses desc to parse DESCRIPTION files.\r\n\r\n    * Package license changed to GPL because of code borrowed from usethis\r\n    \r\n    * Uses crul instead of httr and uses crul to check some URLs.\r\n    \r\n    * write_codemeta only uses Rbuildignore and a pre-commit git hook if the function is called from a package folder directly and with the path argument equal to \"codemeta.json\"\r\n    \r\n    * The calls to available.packages() for guess_provider now happen inside memoised functions.\r\n    \r\n    * codemeta_readme function.\r\n",
        "html_url": "https://github.com/ropensci/codemetar/releases/tag/0.1.6",
        "name": "codemetar: Generate CodeMeta Metadata for R Packages",
        "release_id": 10864201,
        "tag": "0.1.6",
        "tarball_url": "https://api.github.com/repos/ropensci/codemetar/tarball/0.1.6",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/codemetar/releases/10864201",
        "value": "https://api.github.com/repos/ropensci/codemetar/releases/10864201",
        "zipball_url": "https://api.github.com/repos/ropensci/codemetar/zipball/0.1.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cboettig",
          "type": "User"
        },
        "date_created": "2018-03-26T19:05:40Z",
        "date_published": "2018-03-26T19:06:20Z",
        "description": "See release notes at https://github.com/ropensci/codemetar/blob/master/NEWS.md",
        "html_url": "https://github.com/ropensci/codemetar/releases/tag/0.1.5",
        "name": "codemetar: : Generate 'CodeMeta' Metadata for R Packages",
        "release_id": 10265889,
        "tag": "0.1.5",
        "tarball_url": "https://api.github.com/repos/ropensci/codemetar/tarball/0.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/codemetar/releases/10265889",
        "value": "https://api.github.com/repos/ropensci/codemetar/releases/10265889",
        "zipball_url": "https://api.github.com/repos/ropensci/codemetar/zipball/0.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cboettig",
          "type": "User"
        },
        "date_created": "2017-11-13T21:35:44Z",
        "date_published": "2017-11-13T21:36:15Z",
        "html_url": "https://github.com/ropensci/codemetar/releases/tag/0.1.2",
        "name": "codemetar: Generate CodeMeta Metadata for R Packages",
        "release_id": 8499268,
        "tag": "0.1.2",
        "tarball_url": "https://api.github.com/repos/ropensci/codemetar/tarball/0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/codemetar/releases/8499268",
        "value": "https://api.github.com/repos/ropensci/codemetar/releases/8499268",
        "zipball_url": "https://api.github.com/repos/ropensci/codemetar/zipball/0.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cboettig",
          "type": "User"
        },
        "date_created": "2017-10-17T16:26:55Z",
        "date_published": "2017-10-17T16:27:01Z",
        "description": "The Codemeta Project defines a JSON-LD format for describing software metadata, as detailed at <https://codemeta.github.io>. This package provides utilities to generate, parse, and modify `codemeta.jsonld` files  automatically for R packages, as well as tools and examples for working with codemeta JSON-LD more generally.",
        "html_url": "https://github.com/ropensci/codemetar/releases/tag/0.1.1",
        "name": "codemetar: Generate CodeMeta Metadata for R Packages",
        "release_id": 8152517,
        "tag": "0.1.1",
        "tarball_url": "https://api.github.com/repos/ropensci/codemetar/tarball/0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/codemetar/releases/8152517",
        "value": "https://api.github.com/repos/ropensci/codemetar/releases/8152517",
        "zipball_url": "https://api.github.com/repos/ropensci/codemetar/zipball/0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "cboettig",
          "type": "User"
        },
        "date_created": "2017-10-17T16:12:31Z",
        "date_published": "2017-10-17T16:23:15Z",
        "description": "The 'Codemeta' Project defines a JSON-LD format for describing software metadata, as detailed at <https://codemeta.github.io>. This package provides utilities to generate, parse, and modify `codemeta.jsonld` files  automatically for R packages, as well as tools and examples for working with codemeta JSON-LD more generally.",
        "html_url": "https://github.com/ropensci/codemetar/releases/tag/0.1.0",
        "name": "codemetar: Generate CodeMeta Metadata for R Packages",
        "release_id": 8152446,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/ropensci/codemetar/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/codemetar/releases/8152446",
        "value": "https://api.github.com/repos/ropensci/codemetar/releases/8152446",
        "zipball_url": "https://api.github.com/repos/ropensci/codemetar/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "repository_status": [
    {
      "confidence": 1,
      "result": {
        "description": "Active \u2013 The project has reached a stable, usable\nstate and is being actively\ndeveloped.",
        "type": "Url",
        "value": "https://www.repostatus.org/#active"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "express",
        "type": "Software_application",
        "value": "express@^4.13.3",
        "version": "^4.13.3"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "jsonlite",
        "type": "Software_application",
        "value": "jsonlite==1.3",
        "version": "1.3"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "jsonld",
        "type": "Software_application",
        "value": "jsonld",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "git2r",
        "type": "Software_application",
        "value": "git2r",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "devtools",
        "type": "Software_application",
        "value": "devtools",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "methods",
        "type": "Software_application",
        "value": "methods",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "type": "Software_application",
        "value": "R==3.0.0",
        "version": "3.0.0"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "type": "Software_application",
        "value": "R==>= 3.0.0",
        "version": ">= 3.0.0"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "jsonlite",
        "type": "Software_application",
        "value": "jsonlite==>= 1.6",
        "version": ">= 1.6"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "git2r",
        "type": "Software_application",
        "value": "git2r",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pkgbuild",
        "type": "Software_application",
        "value": "pkgbuild",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "memoise",
        "type": "Software_application",
        "value": "memoise",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "methods",
        "type": "Software_application",
        "value": "methods",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "stats",
        "type": "Software_application",
        "value": "stats",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "stringi",
        "type": "Software_application",
        "value": "stringi",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "readr",
        "type": "Software_application",
        "value": "readr",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "desc",
        "type": "Software_application",
        "value": "desc",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "usethis",
        "type": "Software_application",
        "value": "usethis",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "whisker",
        "type": "Software_application",
        "value": "whisker",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "tibble",
        "type": "Software_application",
        "value": "tibble",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "crul",
        "type": "Software_application",
        "value": "crul",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "gh",
        "type": "Software_application",
        "value": "gh",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "stringr",
        "type": "Software_application",
        "value": "stringr",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "sessioninfo",
        "type": "Software_application",
        "value": "sessioninfo",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "purrr",
        "type": "Software_application",
        "value": "purrr",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "curl",
        "type": "Software_application",
        "value": "curl",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "commonmark",
        "type": "Software_application",
        "value": "commonmark",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "xml2",
        "type": "Software_application",
        "value": "xml2",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "magrittr",
        "type": "Software_application",
        "value": "magrittr",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "glue",
        "type": "Software_application",
        "value": "glue",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pingr",
        "type": "Software_application",
        "value": "pingr",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation and usage requirements",
        "parent_header": [
          "codemetar"
        ],
        "type": "Text_excerpt",
        "value": "You can install the latest version from CRAN using:\n\n``` r\ninstall.packages(\"codemetar\")\n```\n\nYou can also install the development version of `codemetar` from GitHub\nwith:\n\n``` r\n# install.packages(\"devtools\")\ndevtools::install_github(\"ropensci/codemetar\")\n```\n\nFor optimal results you need a good internet connection.\n\nThe package queries\n\n- `utils::available.packages()` for CRAN and Bioconductor packages;\n\n- GitHub API via the [`gh` package](https://github.com/r-lib/gh), if it\n  finds a GitHub repo URL in DESCRIPTION or as git remote. GitHub API is\n  queried to find the [preferred\n  README](https://developer.github.com/v3/repos/contents/#get-the-readme),\n  and the [repo\n  topics](https://developer.github.com/v3/repos/#list-all-topics-for-a-repository).\n  If you use codemetar for many packages having a\n  [GITHUB_PAT](https://github.com/r-lib/gh#environment-variables) is\n  better;\n\n- [R-hub sysreqs API](https://r-hub.github.io/rhub/) to parse\n  SystemRequirements.\n\nIf your machine is offline, a more minimal codemeta.json will be\ncreated. If your internet connection is poor or there are firewalls, the\ncodemeta creation might indefinitely hang.\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 03:11:05",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 67
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation and usage requirements",
        "parent_header": [
          "codemetar"
        ],
        "type": "Text_excerpt",
        "value": "You can install the latest version from CRAN using:\n\n``` r\ninstall.packages(\"codemetar\")\n```\n\nYou can also install the development version of `codemetar` from GitHub\nwith:\n\n``` r\n# install.packages(\"devtools\")\ndevtools::install_github(\"ropensci/codemetar\")\n```\n\nFor optimal results you need a good internet connection.\n\nThe package queries\n\n- `utils::available.packages()` for CRAN and Bioconductor packages;\n\n- GitHub API via the [`gh` package](https://github.com/r-lib/gh), if it\n  finds a GitHub repo URL in DESCRIPTION or as git remote. GitHub API is\n  queried to find the [preferred\n  README](https://developer.github.com/v3/repos/contents/#get-the-readme),\n  and the [repo\n  topics](https://developer.github.com/v3/repos/#list-all-topics-for-a-repository).\n  If you use codemetar for many packages having a\n  [GITHUB_PAT](https://github.com/r-lib/gh#environment-variables) is\n  better;\n\n- [R-hub sysreqs API](https://r-hub.github.io/rhub/) to parse\n  SystemRequirements.\n\nIf your machine is offline, a more minimal codemeta.json will be\ncreated. If your internet connection is poor or there are firewalls, the\ncodemeta creation might indefinitely hang.\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Going further",
        "parent_header": [
          "codemetar"
        ],
        "type": "Text_excerpt",
        "value": "Check out all the [codemetar\nman](https://docs.ropensci.org/codemetar/articles/index.html) for\ntutorials on other cool stuff you can do with codemeta and json-ld.\n\nA new feature is the creation of a minimal schemaorg.json for insertion\non your website\u2019s webpage for Search Engine Optimization, when the\n`write_minimeta` argument of `write_codemeta()` is `TRUE`.\n\nYou could e.g.\u00a0use the code below in a chunk in README.Rmd with\n`results=\"asis\"`.\n\n``` r\nglue::glue('<script type=\"application/ld+json\">\n      {glue::glue_collapse(readLines(\"schemaorg.json\"), sep = \"\\n\")}\n    </script>')\n```\n\nRefer to [Google\ndocumentation](https://developers.google.com/search/docs) for more\nguidance.\n\n<script type=\"application/ld+json\">\n      {\n  \"@context\": \"https://schema.org\",\n  \"type\": \"SoftwareSourceCode\",\n  \"author\": [\n    {\n      \"id\": \"https://orcid.org/0000-0002-2815-0399\"\n    },\n    {\n      \"id\": \"https://orcid.org/0000-0002-1642-628X\"\n    }\n  ],\n  \"codeRepository\": \"https://github.com/ropensci/codemetar\",\n  \"contributor\": [\n    {\n      \"id\": \"https://orcid.org/0000-0002-2378-4915\",\n      \"type\": \"Person\",\n      \"familyName\": \"Krystalli\",\n      \"givenName\": \"Anna\"\n    },\n    {\n      \"id\": \"https://orcid.org/0000-0002-2815-0399\",\n      \"type\": \"Person\",\n      \"familyName\": \"Salmon\",\n      \"givenName\": \"Ma\u00eblle\"\n    },\n    {\n      \"id\": \"https://orcid.org/0000-0001-5135-5758\",\n      \"type\": \"Person\",\n      \"familyName\": \"Leinweber\",\n      \"givenName\": \"Katrin\"\n    },\n    {\n      \"id\": \"https://orcid.org/0000-0002-2136-0000\",\n      \"type\": \"Person\",\n      \"familyName\": \"Ross\",\n      \"givenName\": \"Noam\"\n    },\n    {\n      \"type\": \"Person\",\n      \"familyName\": \"Smith\",\n      \"givenName\": \"Arfon\"\n    },\n    {\n      \"id\": \"https://orcid.org/0000-0002-4035-0289\",\n      \"type\": \"Person\",\n      \"familyName\": \"Ooms\",\n      \"givenName\": \"Jeroen\"\n    },\n    {\n      \"id\": \"https://orcid.org/0000-0002-1791-9449\",\n      \"type\": \"Person\",\n      \"familyName\": \"Meyer\",\n      \"givenName\": \"Sebastian\"\n    },\n    {\n      \"id\": \"https://orcid.org/0000-0003-0647-7726\",\n      \"type\": \"Person\",\n      \"familyName\": \"Rustler\",\n      \"givenName\": \"Michael\"\n    },\n    {\n      \"id\": \"https://orcid.org/0000-0001-9134-2871\",\n      \"type\": \"Person\",\n      \"familyName\": \"Sonnenberg\",\n      \"givenName\": \"Hauke\"\n    },\n    {\n      \"id\": \"https://orcid.org/0000-0002-0734-2199\",\n      \"type\": \"Person\",\n      \"familyName\": \"Kreutzer\",\n      \"givenName\": \"Sebastian\"\n    }\n  ],\n  \"copyrightHolder\": {\n    \"id\": \"https://orcid.org/0000-0002-1642-628X\",\n    \"type\": \"Person\",\n    \"email\": \"cboettig@gmail.com\",\n    \"familyName\": \"Boettiger\",\n    \"givenName\": \"Carl\"\n  },\n  \"description\": \"The 'Codemeta' Project defines a 'JSON-LD' format\\n    for describing software metadata, as detailed at\\n    <https://codemeta.github.io>. This package provides utilities to\\n    generate, parse, and modify 'codemeta.json' files automatically for R\\n    packages, as well as tools and examples for working with\\n    'codemeta.json' 'JSON-LD' more generally.\",\n  \"funder\": {\n    \"type\": \"Organization\",\n    \"name\": \"rOpenSci\"\n  },\n  \"license\": \"https://spdx.org/licenses/GPL-3.0\",\n  \"name\": \"codemetar: Generate 'CodeMeta' Metadata for R Packages\",\n  \"programmingLanguage\": {\n    \"type\": \"ComputerLanguage\",\n    \"name\": \"R\",\n    \"url\": \"https://r-project.org\"\n  },\n  \"provider\": {\n    \"id\": \"https://cran.r-project.org\",\n    \"type\": \"Organization\",\n    \"name\": \"Comprehensive R Archive Network (CRAN)\",\n    \"url\": \"https://cran.r-project.org\"\n  },\n  \"runtimePlatform\": \"R version 3.6.1 (2019-07-05)\",\n  \"version\": \"0.1.8.9000\"\n}\n    </script>\n\n[![ropensci_footer](https://ropensci.org/public_images/ropensci_footer.png)](https://ropensci.org)\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/DESCRIPTION",
        "type": "String",
        "value": "0.3.6"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "0.3.6"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "0.3.3"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Release",
        "value": "0.2.0"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "0.1.0"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/inst/examples/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "0.1.8"
      },
      "source": "https://raw.githubusercontent.com/ropensci/codemetar/main/vignettes/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
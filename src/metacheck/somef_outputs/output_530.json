{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "28850131+bendhouseart@users.noreply.github.com",
        "name": "anthony galassi",
        "type": "Agent",
        "value": "anthony galassi"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "National Institute of Mental Health",
        "email": "anthony.galassi@nih.gov",
        "identifier": "0000-0001-6550-4574",
        "type": "String",
        "value": "Anthony Galassi"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/JOSS_metadata/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Copenhagen University Hospital, Rigshospitalet",
        "email": "",
        "identifier": "0000-0003-4010-4632",
        "type": "String",
        "value": "Cyril Pernet"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/JOSS_metadata/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "K\u00f8benhavns Universitet, Rigshospitalet, Stanford University",
        "email": "",
        "identifier": "0000-0003-2131-5688",
        "type": "String",
        "value": "Martin Norgaard"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/JOSS_metadata/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Rigshospitalet, University of Copenhagen",
        "email": "",
        "identifier": "0000-0002-9120-8098",
        "type": "String",
        "value": "Melanie Ganz-Benjaminsen"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/JOSS_metadata/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "University Medical Center of the Johannes Gutenberg University Mainz",
        "email": "ggonzale@uni-mainz.de",
        "identifier": "0000-0002-7209-1736",
        "type": "String",
        "value": "Gabriel Gonzalez-Escamilla"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/JOSS_metadata/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "National Institute of Mental Health",
        "email": "",
        "identifier": "0000-0002-2850-1419",
        "type": "String",
        "value": "Adam Thomas"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/JOSS_metadata/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Universit\u00e9 catholique de Louvain",
        "email": "",
        "identifier": "0000-0002-1535-9767",
        "type": "String",
        "value": "Remi Gau"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/JOSS_metadata/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Georgia State University",
        "email": "",
        "identifier": "0000-0002-9942-676X",
        "type": "String",
        "value": "Cyrus Eierud"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/JOSS_metadata/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "University of South Carolina",
        "email": "",
        "identifier": "0000-0002-7554-6142",
        "type": "String",
        "value": "Chris Rorden"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/JOSS_metadata/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": [
          {
            "family_name": "Galassi",
            "given_name": "Anthony",
            "name": "Anthony Galassi",
            "type": "Agent",
            "url": "https://orcid.org/0000-0001-6550-4574"
          },
          {
            "family_name": "Norgaard",
            "given_name": "Martin",
            "name": "Martin Norgaard",
            "type": "Agent",
            "url": "https://orcid.org/0000-0003-2131-5688"
          },
          {
            "family_name": "Thomas",
            "given_name": "Adam G.",
            "name": "Adam G. Thomas",
            "type": "Agent",
            "url": "https://orcid.org/0000-0002-2850-1419"
          },
          {
            "family_name": "Gonzalez-Escamilla",
            "given_name": "Gabriel",
            "name": "Gabriel Gonzalez-Escamilla",
            "type": "Agent",
            "url": "https://orcid.org/0000-0002-7209-1736"
          },
          {
            "family_name": "Svarer",
            "given_name": "Claus",
            "name": "Claus Svarer",
            "type": "Agent",
            "url": "https://orcid.org/0000-0001-7811-1825"
          },
          {
            "family_name": "Rorden",
            "given_name": "Chris",
            "name": "Chris Rorden",
            "type": "Agent",
            "url": "https://orcid.org/0000-0002-7554-6142"
          },
          {
            "family_name": "Matheson",
            "given_name": "Granville",
            "name": "Granville Matheson",
            "type": "Agent",
            "url": "https://orcid.org/0000-0002-5646-4547"
          },
          {
            "family_name": "Knudsen",
            "given_name": "Gitte",
            "name": "Gitte Knudsen",
            "type": "Agent",
            "url": "https://orcid.org/0000-0003-1508-6866"
          },
          {
            "family_name": "Innis",
            "given_name": "Robert",
            "name": "Robert Innis",
            "type": "Agent",
            "url": "https://orcid.org/0000-0003-1238-7209"
          },
          {
            "family_name": "Ganz-Benjaminsen",
            "given_name": "Melanie",
            "name": "Melanie Ganz-Benjaminsen",
            "type": "Agent",
            "url": "https://orcid.org/0000-0002-9120-8098"
          },
          {
            "family_name": "Bilgel",
            "given_name": "Murat",
            "name": "Murat Bilgel",
            "type": "Agent",
            "url": "https://orcid.org/0000-0001-5042-7422"
          },
          {
            "family_name": "Eierud",
            "given_name": "Cyrus",
            "name": "Cyrus Eierud",
            "type": "Agent",
            "url": "https://orcid.org/0000-0002-9942-676X"
          },
          {
            "family_name": "Pernet",
            "given_name": "Cyril",
            "name": "Cyril Pernet",
            "type": "Agent",
            "url": "https://orcid.org/0000-0003-4010-4632"
          }
        ],
        "datePublished": "2022",
        "format": "cff",
        "title": "PET2BIDS",
        "type": "File_dump",
        "url": "https://github.com/openneuropet/PET2BIDS",
        "value": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n- family-names: \"Galassi\"\n  given-names: \"Anthony\"\n  orcid: \"https://orcid.org/0000-0001-6550-4574\"\n- family-names: \"Norgaard\"\n  given-names: \"Martin\"\n  orcid: \"https://orcid.org/0000-0003-2131-5688\"\n- family-names: \"Thomas\"\n  given-names: \"Adam G.\"   \n  orcid: \"https://orcid.org/0000-0002-2850-1419\"\n- family-names: \"Gonzalez-Escamilla\"\n  given-names: \"Gabriel\"   \n  orcid: \"https://orcid.org/0000-0002-7209-1736\"\n- family-names: \"Svarer\"\n  given-names: \"Claus\"   \n  orcid: \"https://orcid.org/0000-0001-7811-1825\"\n- family-names: \"Rorden\"\n  given-names: \"Chris\"   \n  orcid: \"https://orcid.org/0000-0002-7554-6142\"\n- family-names: \"Matheson\"\n  given-names: \"Granville\"   \n  orcid: \"https://orcid.org/0000-0002-5646-4547\"\n- family-names: \"Knudsen\"\n  given-names: \"Gitte\"   \n  orcid: \"https://orcid.org/0000-0003-1508-6866\"\n- family-names: \"Innis\"\n  given-names: \"Robert\"   \n  orcid: \"https://orcid.org/0000-0003-1238-7209\" \n- family-names: \"Ganz-Benjaminsen\"\n  given-names: \"Melanie\"\n  orcid: \"https://orcid.org/0000-0002-9120-8098\"\n- family-names: \"Bilgel\"\n  given-names: \"Murat\"\n  orcid: \"https://orcid.org/0000-0001-5042-7422\"\n- family-names: \"Eierud\"\n  given-names: \"Cyrus\"\n  orcid: \"https://orcid.org/0000-0002-9942-676X\"\n- family-names: \"Pernet\"\n  given-names: \"Cyril\"\n  orcid: \"https://orcid.org/0000-0003-4010-4632\"\ntitle: \"PET2BIDS\"\nversion: 1.3.20240502\nurl: \"https://github.com/openneuropet/PET2BIDS\"\ndate-released: 2022-10-01\nlicense: MIT\n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Documentation"
        ],
        "type": "Text_excerpt",
        "value": "Please [cite us](CITATION.cff) when using PET2BIDS.\n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Code of Conduct\n\nIn the interest of fostering an open and welcoming environment, contributors and maintainers pledge to make participation a harassment-free experience for everyone.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers (admin) are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior such as removing, editing, or rejecting comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies to all [PET2BIDS](https://github.com/openneuropet/PET2BIDS/) but also more generally to all OpenNeuroPET related projects.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at openneuropet@gmail.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. \n\n## Attribution \n\nThis Code of Conduct is adapted from the [BIDS standard](https://github.com/bids-standard/bids-specification).\n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/code_of_conduct.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/openneuropet/PET2BIDS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/openneuropet/pet2bids/"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/openneuropet/PET2BIDS"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/JOSS_metadata/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/.github/workflows/codespell.yml"
      },
      "technique": "file_exploration"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing to [PET2BIDS](https://github.com/openneuropet/PET2BIDS/)\n\n*Thank you considering contributing to the project.*\n\nThis guideline is designed to make clear how anyone can contribute, become team member, and get rewarded for it.\nIf you have any questions please [get in touch](openneuropet@gmail.com).\n\n## Table of contents\n\n*   [Joining the project](#joining-the-project)\n*   [Contributing without writing a line of code](#Contributing-without-writing-a-line-of-code)\n*   [Contributing through code](#Contributing-through-code)\n*   [Recognizing contributions](#recognizing-contributions)\n\n## Joining the project\n\nPET2BIDS is an open source and open development project focusing on the curation brain PET data using the [Brain Imaging Data Structure standard](https://github.com/bids-standard).  \nIt is required that all contributions **adhere to our [Code of Conduct](code_of_conduct.md)**.\n\nHow do you know that you joined? well, you're here and you likely used PET2BIDS and started doing something beyond just using and want to push, add you bug fixes / code / documentation / examples .. or have your own extension - Welcome! you are now part of the project.\n\n## Contributing without writing a line of code\n\nThere are many ways you can contribute to the project without having to write a single line of code!\n- editing and updating the help/documentation is a fantastic contribution.\n- making any tutorials, examples available is great too\n\n## Contributing through code\n\nObviously, there is always work to do to make code better :-)\n\nWe are happy to have contributors fixing and improving the code or submitting new code. Note that for now we have Matlab and Python, but ahappy to support any other relevant language.\n\n## Recognizing contributions\n\nWe welcome and recognize all contributions from documentation to testing to code development. Contributors are listed [here](https://github.com/openneuropet/PET2BIDS/blob/main/contributors.md) and when possible, we'd like to associate you to future publication.\n\n## Thank you!\n\nYou're awesome.\n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/contributing.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contribute",
        "parent_header": [
          "Documentation"
        ],
        "type": "Text_excerpt",
        "value": "Anyone is welcome to contribute ! check here [how you can get involved](contributing.md), the [code of conduct](code_of_conduct.md). Contributors are listed [here](contributors.md)\n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "contributors": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributors\n\nThe following individuals have contributed to the PET2BIDS project (in alphabetical order). If you contributed and\nsome icons needs to be added or your name is not listed, please add it.\n\nMurat Bilgel \ud83d\udcbb \ud83d\udc1b \ud83d\udca1  \nAnthony Galassi \ud83d\udcbb \ud83d\udcd6 \ud83d\udcac \ud83c\udfa8 \ud83d\udca1 \u26a0\ufe0f  \nMelanie Ganz-Benjaminsen \ud83d\udd0d \ud83d\udcac \ud83e\udd14 \ud83d\udccb  \nGabriel Gonzalez-Escamilla \ud83d\udcbb \u26a0\ufe0f \ud83d\udc1b \ud83d\udc40 \nRami Hamati \ud83d\udcbb \ud83d\udc1b \nGitte Knudsen \ud83d\udca1\ud83d\udcb5  \nGranville Matheson \ud83d\udcdd \ud83d\udc1b \u2705  \nMartin Norgaard \ud83d\udcbb \ud83d\udcac \ud83e\udd14 \u26a0\ufe0f \ud83d\udc40  \nCyril Pernet \ud83d\udcbb \ud83d\udcd6 \ud83d\udcac \ud83c\udfa8 \ud83d\udca1 \ud83d\udccb \ud83e\udd14 \u26a0\ufe0f  \nChris Rorden \ud83d\udcbb \ud83d\udc1b \ud83d\udcd6  \nMaximilian Cosmo Sitter \ud83d\udcbb\nClaus Svarer \ud83d\udcbb \ud83d\udca1\u26a0\ufe0f   \nAdam G Thomas  \ud83d\udd0d \ud83e\udd14  \nRobert Innis \ud83d\udca1\u26a0\ufe0f\ud83d\udcb5   \n\nLegend (source:\n[https://github.com/kentcdodds/all-contributors](https://github.com/kentcdodds/all-contributors))\n\n| Emoji | Represents                                                                  |\n|:------|:----------------------------------------------------------------------------|\n| \ud83d\udcac    | Answering Questions (on the mailing list, NeuroStars, GitHub, or in person) |\n| \ud83d\udc1b    | Bug reports                                                                 |\n| \ud83d\udcdd    | Blogposts                                                                   |\n| \ud83d\udcbb    | Code                                                                        |\n| \ud83d\udcd6    | Documentation and specification                                             |\n| \ud83c\udfa8    | Design                                                                      |\n| \ud83d\udca1    | Examples                                                                    |\n| \ud83d\udccb    | Event Organizers                                                            |\n| \ud83d\udcb5    | Financial Support                                                           |\n| \ud83d\udd0d    | Funding/Grant Finders                                                       |\n| \ud83e\udd14    | Ideas & Planning                                                            |\n| \ud83d\ude87    | Infrastructure (Hosting, Build-Tools, etc)                                  |\n| \ud83d\udd0c    | Plugin/utility libraries                                                    |\n| \ud83d\udc40    | Reviewed Pull Requests                                                      |\n| \ud83d\udd27    | Tools                                                                       |\n| \ud83c\udf0d    | Translation                                                                 |\n| \u26a0\ufe0f    | Tests                                                                       |\n| \u2705    | Tutorials                                                                   |\n| \ud83d\udce2    | Talks                                                                       |\n| \ud83d\udcf9    | Videos                                                                      |\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/contributors.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-04-17T12:03:05Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2023-03-29"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/JOSS_metadata/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2023-03-29"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/JOSS_metadata/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-08-24T06:42:35Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2023-03-29"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/JOSS_metadata/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PET2BIDS helps you convert your PET data into BIDS! raw PET scanner files (e.g. ecat, dicom) and additional side files like .e.g excel sheets -- paper @JOSS  https://doi.org/10.21105/joss.06067"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A python library for converting PET imaging and blood data to BIDS."
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PET to BIDS is a set of BIDS converters for your Brain PET data"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/JOSS_metadata/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9516967615233866,
      "result": {
        "original_header": "PET2BIDS is a code library to convert source Brain PET data to BIDS",
        "type": "Text_excerpt",
        "value": "Galassi, A., Norgaard, M., Gonzalez-Escamilla, G., Svarer, C., Rorden, C., Matheson, G.J, Knudsen, G.M, Innis, R.B., Ganz, M., Eierud, C., Bilgel., M. & Pernet, C. (2024). PET2BIDS: a library for converting Positron Emission Tomography data to BIDS. Journal of Open Source Software, 9(100), 6067. \nThis repository is hosting tools to curate PET brain data using the [Brain Imaging Data Structure Specification](https://bids-specification.readthedocs.io/en/stable/04-modality-specific-files/09-positron-emission-tomography.html). \nThe work to create these tools is funded by [Novo Nordisk Foundation](https://novonordiskfonden.dk/en/) (NNF20OC0063277) and the \n[BRAIN initiative](https://braininitiative.nih.gov/) (MH002977-01). \nFor DICOM image conversion, we rely on [dcm2niix](https://www.nitrc.org/plugins/mwiki/index.php/dcm2nii:MainPage), \ncollaborating with Prof. Chris Rorden without whom we could not convert your data! For more information on dcm2niix \nand nifti please see [The first step for neuroimaging data analysis: DICOM to NIfTI conversion](https://www.ncbi.nlm.nih.gov/pubmed/26945974) paper. \n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/openneuropet/PET2BIDS/tree/main/docs"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://pypet2bids.readthedocs.io/en/latest/"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "type": "Text_excerpt",
        "value": "For **more detailed** (and most likely helpful) documentation visit the Read the Docs site for this project at:\n\n[https://pet2bids.readthedocs.io](https://pet2bids.readthedocs.io/en/latest/index.html#)\n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "matlab",
        "parent_header": [
          "Documentation",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "[![asciicast](https://asciinema.org/a/RPxiHW6afISPmWYFBOGKWNem1.svg)](https://asciinema.org/a/RPxiHW6afISPmWYFBOGKWNem1)\n\n1) remember to set the path to the PET2BIDS/matlab folder, you will find the source code to use here.\n2) if converting DICOM files, make sure you have dcm2niix (for windows users, edit dcm2niix4pet.m to set the right paths to the .exe)\n3) start using the code! more info [here](https://github.com/openneuropet/PET2BIDS/tree/main/matlab#readme)\n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "pypet2bids",
        "parent_header": [
          "Documentation",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Use pip to install this library directly from PyPI:\n\n[![asciicast](https://asciinema.org/a/TZJg5BglDMFM2fEEX9dSpnJEy.svg)](https://asciinema.org/a/TZJg5BglDMFM2fEEX9dSpnJEy)\n\nIf you wish to install directly from this repository see the instructions below to either build\na packaged version of `pypet2bids` or how to run the code from source.\n\n<details>\n<summary>Build Package Locally and Install with PIP</summary> \n\nWe use [poetry](https://python-poetry.org/) to build this package, no other build methods are supported, \nfurther we encourage the use of [GNU make](https://www.gnu.org/software/make/) and a bash-like shell to simplify the \nbuild process.\n\nAfter installing poetry, you can build and install this package to your local version of Python with the following \ncommands (keep in mind the commands below are executed in a bash-like shell):\n\n```bash\ncd PET2BIDS\ncp -R metadata/ pypet2bids/pypet2bids/metadata\ncp pypet2bids/pyproject.toml pypet2bids/pypet2bids/pyproject.toml\ncd pypet2bids && poetry lock && poetry build\npip install dist/pypet2bids-X.X.X-py3-none-any.whl\n```\n\nWhy is all the above required? Well, because this is a monorepo and we just have to work around that sometimes.\n\n\n[!NOTE]\nMake and the additional scripts contained in the `scripts/` directory are for the convenience of \nnon-windows users.\n\nIf you have GNU make installed and are using a bash or something bash-like in you your terminal of choice, run the \nfollowing:\n\n```bash\ncd PET2BIDS\nmake installpoetry buildpackage installpackage\n```\n\n</details>\n\n<details> \n<summary>Run Directly From Source</summary>\n\nLastly, if one wishes run pypet2bids directly from the source code in this repository or to help contribute to the python portion of this project or any of the documentation they can do so via the following options:\n\n```bash\ncd PET2BIDS/pypet2bids\npoetry install\n```\n\nOr they can install the dependencies only using pip:\n\n```bash\ncd PET2BIDS/pypet2bids\npip install .\n```\n\nAfter either poetry or pip installation of dependencies modules can be executed as follows:\n\n```bash\ncd PET2BIDS/pypet2bids\npython dcm2niix4pet.py --help\n```\n\n</details>\n\n**Note:**\n*We recommend using dcm2niix v1.0.20220720 or newer; we rely on metadata included in these later releases. It's best to \ncollect releases from the [rorden lab/dcm2niix/releases](https://github.com/rordenlab/dcm2niix/releases) page. We have\nobserved that package managers such as yum or apt or apt-get often install much older versions of dcm2niix e.g. \nv1.0.2017XXXX, v1.0.2020XXXXX. You may run into invalid-BIDS or errors with this software with older versions.* \n\n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "spreadsheet_conversion (custom and pmod)",
        "parent_header": [
          "Documentation",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "This folder contains spreadsheets templates and examples of metadata and matlab and python code to convert them to json files. Often, metadata such as Frame durations, InjectedRadioactivity, etc are stored in spreadsheets and we have made those function to create json files automatically for 1 or many subjects at once to go with the nifti imaging data. Note, we also have conversion for pmod files (also spreadsheets) allowing to export to blood.tsv files.\n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "metadata",
        "parent_header": [
          "Documentation",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "A small collection of json files for our metadata information. \n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "user metadata",
        "parent_header": [
          "Documentation",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "No matter the way you prefer inputting metadata (passing all arguments, using txt or env file, using spreadsheets), you are always right! DICOM values will be ignored - BUT they are checked and the code tells you if there is inconsistency between your inputs and what the DICOM says.\n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "ecat_validation",
        "parent_header": [
          "Documentation",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "This folder contains code generating Siemens HRRT scanner data using ecat file format and validating the matlab and python conversion tools (i.e. giving the data generated as ecat, do our nifti images reflect accurately the data).\n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://pet2bids.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/openneuropet/PET2BIDS/wiki"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/openneuropet/PET2BIDS/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 22
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/openneuropet/PET2BIDS/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "openneuropet/PET2BIDS"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PET2BIDS is a code library to convert source Brain PET data to BIDS"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "pyproject.toml",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "pyproject.toml"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/scripts/python_conversions.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/JOSS_metadata/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.21105/joss.06067"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://joss.theoj.org/papers/10.21105/joss.06067/status.svg"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://asciinema.org/a/RPxiHW6afISPmWYFBOGKWNem1.svg"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://asciinema.org/a/TZJg5BglDMFM2fEEX9dSpnJEy.svg"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Documentation"
        ],
        "type": "Text_excerpt",
        "value": "Simply download the repository - follow the specific Matlab or Python explanations. Matlab and Python codes provide the \nsame functionalities.\n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "matlab",
        "parent_header": [
          "Documentation",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "[![asciicast](https://asciinema.org/a/RPxiHW6afISPmWYFBOGKWNem1.svg)](https://asciinema.org/a/RPxiHW6afISPmWYFBOGKWNem1)\n\n1) remember to set the path to the PET2BIDS/matlab folder, you will find the source code to use here.\n2) if converting DICOM files, make sure you have dcm2niix (for windows users, edit dcm2niix4pet.m to set the right paths to the .exe)\n3) start using the code! more info [here](https://github.com/openneuropet/PET2BIDS/tree/main/matlab#readme)\n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "pypet2bids",
        "parent_header": [
          "Documentation",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Use pip to install this library directly from PyPI:\n\n[![asciicast](https://asciinema.org/a/TZJg5BglDMFM2fEEX9dSpnJEy.svg)](https://asciinema.org/a/TZJg5BglDMFM2fEEX9dSpnJEy)\n\nIf you wish to install directly from this repository see the instructions below to either build\na packaged version of `pypet2bids` or how to run the code from source.\n\n<details>\n<summary>Build Package Locally and Install with PIP</summary> \n\nWe use [poetry](https://python-poetry.org/) to build this package, no other build methods are supported, \nfurther we encourage the use of [GNU make](https://www.gnu.org/software/make/) and a bash-like shell to simplify the \nbuild process.\n\nAfter installing poetry, you can build and install this package to your local version of Python with the following \ncommands (keep in mind the commands below are executed in a bash-like shell):\n\n```bash\ncd PET2BIDS\ncp -R metadata/ pypet2bids/pypet2bids/metadata\ncp pypet2bids/pyproject.toml pypet2bids/pypet2bids/pyproject.toml\ncd pypet2bids && poetry lock && poetry build\npip install dist/pypet2bids-X.X.X-py3-none-any.whl\n```\n\nWhy is all the above required? Well, because this is a monorepo and we just have to work around that sometimes.\n\n\n[!NOTE]\nMake and the additional scripts contained in the `scripts/` directory are for the convenience of \nnon-windows users.\n\nIf you have GNU make installed and are using a bash or something bash-like in you your terminal of choice, run the \nfollowing:\n\n```bash\ncd PET2BIDS\nmake installpoetry buildpackage installpackage\n```\n\n</details>\n\n<details> \n<summary>Run Directly From Source</summary>\n\nLastly, if one wishes run pypet2bids directly from the source code in this repository or to help contribute to the python portion of this project or any of the documentation they can do so via the following options:\n\n```bash\ncd PET2BIDS/pypet2bids\npoetry install\n```\n\nOr they can install the dependencies only using pip:\n\n```bash\ncd PET2BIDS/pypet2bids\npip install .\n```\n\nAfter either poetry or pip installation of dependencies modules can be executed as follows:\n\n```bash\ncd PET2BIDS/pypet2bids\npython dcm2niix4pet.py --help\n```\n\n</details>\n\n**Note:**\n*We recommend using dcm2niix v1.0.20220720 or newer; we rely on metadata included in these later releases. It's best to \ncollect releases from the [rorden lab/dcm2niix/releases](https://github.com/rordenlab/dcm2niix/releases) page. We have\nobserved that package managers such as yum or apt or apt-get often install much older versions of dcm2niix e.g. \nv1.0.2017XXXX, v1.0.2020XXXXX. You may run into invalid-BIDS or errors with this software with older versions.* \n\n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "spreadsheet_conversion (custom and pmod)",
        "parent_header": [
          "Documentation",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "This folder contains spreadsheets templates and examples of metadata and matlab and python code to convert them to json files. Often, metadata such as Frame durations, InjectedRadioactivity, etc are stored in spreadsheets and we have made those function to create json files automatically for 1 or many subjects at once to go with the nifti imaging data. Note, we also have conversion for pmod files (also spreadsheets) allowing to export to blood.tsv files.\n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "metadata",
        "parent_header": [
          "Documentation",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "A small collection of json files for our metadata information. \n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "user metadata",
        "parent_header": [
          "Documentation",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "No matter the way you prefer inputting metadata (passing all arguments, using txt or env file, using spreadsheets), you are always right! DICOM values will be ignored - BUT they are checked and the code tells you if there is inconsistency between your inputs and what the DICOM says.\n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "ecat_validation",
        "parent_header": [
          "Documentation",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "This folder contains code generating Siemens HRRT scanner data using ecat file format and validating the matlab and python conversion tools (i.e. giving the data generated as ecat, do our nifti images reflect accurately the data).\n"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/openneuropet/PET2BIDS/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "bids, converter, json, metadata"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "PET",
          "BIDS",
          "DICOM",
          "dcm2niix",
          "ECAT",
          "brain",
          "NIMH",
          "NRU",
          "UCPH"
        ]
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/JOSS_metadata/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2021 OPenNeuro PET team\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/MIT",
        "spdx_id": "MIT",
        "type": "License",
        "value": "MIT"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/JOSS_metadata/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "PET2BIDS"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "openneuropet"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pypet2bids"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 989515,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MATLAB",
        "size": 314738,
        "type": "Programming_language",
        "value": "MATLAB"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 24198,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Ruby",
        "size": 4819,
        "type": "Programming_language",
        "value": "Ruby"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 2557,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 944,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://bids-specification.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "bendhouseart",
          "type": "User"
        },
        "date_created": "2024-05-02T15:48:03Z",
        "date_published": "2024-05-02T15:54:16Z",
        "description": "Adopting dcm2niix style release numbers, X.Y.Z where: X and Y correspond to pyproject.toml major and minor version number. Z is reserved for the date of the release. This specific release coincides with this repository being uploaded to zenodo.org for the JOSS paper.",
        "html_url": "https://github.com/openneuropet/PET2BIDS/releases/tag/v1.3.20240502",
        "name": "1.3.20240502",
        "release_id": 153854852,
        "tag": "v1.3.20240502",
        "tarball_url": "https://api.github.com/repos/openneuropet/PET2BIDS/tarball/v1.3.20240502",
        "type": "Release",
        "url": "https://api.github.com/repos/openneuropet/PET2BIDS/releases/153854852",
        "value": "https://api.github.com/repos/openneuropet/PET2BIDS/releases/153854852",
        "zipball_url": "https://api.github.com/repos/openneuropet/PET2BIDS/zipball/v1.3.20240502"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "nibabel",
        "type": "Software_application",
        "value": "nibabel>=3.2.1",
        "version": ">=3.2.1"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "numpy",
        "type": "Software_application",
        "value": "numpy>=1.21.3",
        "version": ">=1.21.3"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pyparsing",
        "type": "Software_application",
        "value": "pyparsing>=3.0.4",
        "version": ">=3.0.4"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "python-dateutil",
        "type": "Software_application",
        "value": "python-dateutil>=2.8.2",
        "version": ">=2.8.2"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "python-dotenv",
        "type": "Software_application",
        "value": "python-dotenv>=0.19.1",
        "version": ">=0.19.1"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "scipy",
        "type": "Software_application",
        "value": "scipy>=1.7.1",
        "version": ">=1.7.1"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "six",
        "type": "Software_application",
        "value": "six>=1.16.0",
        "version": ">=1.16.0"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pydicom",
        "type": "Software_application",
        "value": "pydicom>=2.2.2",
        "version": ">=2.2.2"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "openpyxl",
        "type": "Software_application",
        "value": "openpyxl>=3.0.9",
        "version": ">=3.0.9"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "xlrd",
        "type": "Software_application",
        "value": "xlrd>=2.0.1",
        "version": ">=2.0.1"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "json-maj",
        "type": "Software_application",
        "value": "json-maj>=0.0.8",
        "version": ">=0.0.8"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pandas",
        "type": "Software_application",
        "value": "pandas>=1.4.4",
        "version": ">=1.4.4"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pyxlsb",
        "type": "Software_application",
        "value": "pyxlsb>=1.0.9",
        "version": ">=1.0.9"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "joblib",
        "type": "Software_application",
        "value": "joblib>=1.2.0",
        "version": ">=1.2.0"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "toml",
        "type": "Software_application",
        "value": "toml>=0.10.2",
        "version": ">=0.10.2"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "requests",
        "type": "Software_application",
        "value": "requests>=2.32.3",
        "version": ">=2.32.3"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "hatchling",
        "type": "Software_application",
        "value": "hatchling",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "usage",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 02:08:37",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 30
      },
      "technique": "GitHub_API"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "tag": "1.4.4",
        "type": "Release",
        "value": "1.4.4"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/pypet2bids/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "1.1.1"
      },
      "source": "https://raw.githubusercontent.com/openneuropet/PET2BIDS/main/JOSS_metadata/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
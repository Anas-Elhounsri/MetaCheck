{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements for community support",
        "parent_header": [
          "SITS - Satellite Image Time Series Analysis for Earth Observation Data Cubes <img src=\"man/figures/sits_sticker.png\" align=\"right\" width=\"150\" alt=\"SITS icon\" />",
          "Time Series Classification"
        ],
        "type": "Text_excerpt",
        "value": "The authors are thankful for the contributions of Edzer Pebesma, Jakub\nNowosad. Marius Appel, Martin Tennekes, Robert Hijmans, Ron Wehrens, and\nTim Appelhans, respectively chief developers of the packages\n`sf`/`stars`, `supercells`, `gdalcubes`, `tmap`, `terra`, `kohonen`, and\n`leafem`. We are grateful for the work of Dirk Eddelbuettel on `Rcpp`\nand `RcppArmadillo`. The `sits` package recognises the great work of the\nRStudio team, including the `tidyverse`. Many thanks to Daniel Falbel\nfor his great work in the `torch` and `luz` packages. Charlotte\nPelletier shared the python code that has been reused for the TempCNN\nmachine learning model. We would like to thank Maja Schneider for\nsharing the python code that helped the implementation of the\n`sits_lighttae()` and `sits_tae()` model. We recognize the importance of\nthe work by Chris Holmes and Mattias Mohr on the STAC specification and\nAPI.\n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements for Financial and Material Support",
        "parent_header": [
          "SITS - Satellite Image Time Series Analysis for Earth Observation Data Cubes <img src=\"man/figures/sits_sticker.png\" align=\"right\" width=\"150\" alt=\"SITS icon\" />",
          "Time Series Classification"
        ],
        "type": "Text_excerpt",
        "value": "We acknowledge and thank the project funders that provided financial and\nmaterial support:\n\n- Amazon Fund, established by the Brazilian government with financial\n  contribution from Norway, through the project contract between the\n  Brazilian Development Bank (BNDES) and the Foundation for Science,\n  Technology and Space Applications (FUNCATE), for the establishment of\n  the Brazil Data Cube, process 17.2.0536.1.\n\n- Coordena\u00e7\u00e3o de Aperfei\u00e7oamento de Pessoal de N\u00edvel Superior-Brasil\n  (CAPES) and from the Conselho Nacional de Desenvolvimento Cient\u00edfico e\n  Tecnol\u00f3gico (CNPq), for providing MSc and PhD scholarships.\n\n- Sao Paulo Research Foundation (FAPESP) under eScience Program grant\n  2014/08398-6, for for providing MSc, PhD and post-doc scholarships,\n  equipment, and travel support.\n\n- International Climate Initiative of the Germany Federal Ministry for\n  the Environment, Nature Conservation, Building and Nuclear Safety\n  (IKI) under grant 17-III-084- Global-A-RESTORE+ (\u201cRESTORE+: Addressing\n  Landscape Restoration on Degraded Land in Indonesia and Brazil\u201d).\n\n- Microsoft Planetary Computer under the GEO-Microsoft Cloud Computer\n  Grants Programme.\n\n- Instituto Clima e Sociedade, under the project grant \u201cModernization of\n  PRODES and DETER Amazon monitoring systems\u201d.\n\n- The Open-Earth-Monitor Cyberinfrastructure project, which has received\n  funding from the European Union\u2019s Horizon Europe research and\n  innovation programme under [grant agreement\n  No.\u00a0101059548](https://cordis.europa.eu/project/id/101059548).\n\n- [FAO-EOSTAT](https://www.fao.org/in-action/eostat) initiative, which\n  uses next generation Earth observation tools to produce land cover and\n  land use statistics.\n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "rolf.simoes@inpe.br",
        "type": "String",
        "value": "Rolf Simoes"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "gilberto.camara.inpe@gmail.com",
        "type": "String",
        "value": "Gilberto Camara"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "felipe.carvalho@inpe.br",
        "type": "String",
        "value": "Felipe Souza"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "lorena.santos@inpe.br",
        "type": "String",
        "value": "Lorena Santos"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "pedro.andrade@inpe.br",
        "type": "String",
        "value": "Pedro Andrade"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "karine.ferreira@inpe.br",
        "type": "String",
        "value": "Karine Ferreira"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "alber.ipia@inpe.br",
        "type": "String",
        "value": "Alber Sanchez"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "gilberto.queiroz@inpe.br",
        "type": "String",
        "value": "Gilberto Queiroz"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "datePublished": "2021",
        "format": "bibtex",
        "type": "File_dump",
        "value": "bibentry(bibtype = \"article\",\n\ttitle = \"Satellite Image Time Series Analysis for Big Earth Observation Data\",\n    author = c(person(\"Rolf\", \"Simoes\"),\n               person(\"Gilberto\", \"Camara\"),\n               person(\"Gilberto\",  \"Queiroz\"),\n               person(\"Felipe\", \"Souza\"),\n               person(\"Pedro\", \"Andrade\"),\n               person(\"Lorena\", \"Santos\"),\n               person(\"Alexandre\", \"Carvalho\"),\n               person(\"Karine\", \"Ferreira\")),\n    journal = \"Remote Sensing\",\n    year = \"2021\",\n\tvolume = \"13\",\n    number = \"13\",\n    pages = \"2428\",\n\tdoi = \"10.3390/rs13132428\"\n)\n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/inst/CITATION",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citable papers for sits",
        "parent_header": [
          "SITS - Satellite Image Time Series Analysis for Earth Observation Data Cubes <img src=\"man/figures/sits_sticker.png\" align=\"right\" width=\"150\" alt=\"SITS icon\" />",
          "Time Series Classification",
          "References"
        ],
        "type": "Text_excerpt",
        "value": "If you use `sits`, please cite the following paper:\n\n- Rolf Simoes, Gilberto Camara, Gilberto Queiroz, Felipe Souza, Pedro R.\n  Andrade, Lorena Santos, Alexandre Carvalho, and Karine Ferreira.\n  \u201cSatellite Image Time Series Analysis for Big Earth Observation Data\u201d.\n  Remote Sensing, 13: 2428, 2021. <doi:10.3390/rs13132428>.\n\nAdditionally, the sample quality control methods that use self-organized\nmaps are described in the following reference:\n\n- Lorena Santos, Karine Ferreira, Gilberto Camara, Michelle Picoli, Rolf\n  Simoes, \u201cQuality control and class noise reduction of satellite image\n  time series\u201d. ISPRS Journal of Photogrammetry and Remote Sensing,\n  177:75-88, 2021. <doi:10.1016/j.isprsjprs.2021.04.014>.\n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Code of Conduct\n\nThe `sits` package follows the [RopenSci Code of Conduct](https://ropensci.org/code-of-conduct/). We fully endorse ROpenSci's principles to support a welcoming and safe community of developers and users. \n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at gilberto.camara.inpe@gmail.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/e-sensing/sits"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/e-sensing/sits/"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/e-sensing/sits/"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing to the sits R package\n\nWe welcome all contributors to sits package! Please submit questions, bug reports, and requests in the [issues tracker](https://github.com/e-sensing/sits/issues). If you plan to contribute code, go ahead! Fork the repo and submit a pull request. A few notes:\n\n-   This package is released with a [Contributor Code of Conduct](CODE_OF_CONDUCT.md). By participating in this project you agree to abide by its terms. \n-   If you have large changes, please open an issue first to discuss.\n-   We will include contributors as authors in the DESCRIPTION file (with\ntheir permission) for contributions that go beyond small typos in code or documentation.\n-   This package generally uses the [rOpenSci packaging guidelines](https://github.com/ropensci/onboarding/blob/master/packaging_guide.md) for style and structure.\n-   Documentation is generated by **roxygen2**. Please write documentation in code files and let it auto-generate documentation files.  \n-  For more substantial contributions, consider adding a new section to one of the chapters of the SITS book (https://e-sensing.github.io/sitsbook/), which has been written in R markdown and whose source is available in the [sitsbook repository](https://github.com/e-sensing/sitsbook).\n-  We aim for testing that has high coverage and is robust.  Include tests with any major contribution to code. \n- We particularly welcome additions in two areas: new STAC-based image repositories and new raster machine learning/deep learning algorithms. Please see more details below. \n   \n\n## General structure of sits code.\n\nNew functions that build on the `sits` API should follow the general principles below.\n\n### API design \n\n- The target audience for `sits` is the community of remote sensing experts with Earth Sciences background who want to use state-of-the-art data analysis methods with minimal investment in programming skills. The design of the `sits` API considers the typical workflow for land classification using satellite image time series and thus provides a clear and direct set of functions, which are easy to learn and master. \n\n- For this reason, we welcome contributors that provide useful additions to the existing API, such as new ML/DL classification algorithms. In case of a new API function, before making a pull request please raise an issue stating your rationale for a new function.\n\n### R programming models \n\n- Most functions in `sits` use the S3 programming model with a strong emphasis on generic methods wich are specialized depending on the input data type. See for example the implementation of the `sits_bands()` function. \n\n- Please do not include contributed code using the S4 programming model. Doing so would break the structure and the logic of existing code. Convert your code from S4 to S3.\n\n- Use generic functions as much as possible, as they improve modularity and maintenance. If your code has decision points using `if-else` clauses, such as `if A, do X; else do Y` consider using generic functions. \n\n- Functions that use the `torch` package use the R6 model to be compatible with that package. See for example, the code in `sits_tempcnn.R` and `api_torch.R`. To convert `pyTorch` code to R and include it is straightforward. Please see the [Technical Annex](https://e-sensing.github.io/sitsbook/technical-annex.html) of the sits on-line book.\n\n### Adherence to the `tidyverse`, `sf` and `terra`\n\nThe sits `code` relies on the packages of the `tidyverse` to work with tables and list. We use `dplyr` and `tidyr` for data selection and wrangling, `purrr` and `slider` for loops on lists and table, `lubridate` to handle dates and times. \n\n### Adherence to the `sits` data types\n\n- The `sits` package in built on top of three data types: time series tibble, data cubes and models. Most `sits` functions have one or more of these types as inputs and one of them as return values.\n\n- The time series tibble contains data and metadata. The first six columns contain the metadata: spatial and temporal information, the label assigned to the sample, and the data cube from where the data has been extracted. The time_series column contains the time series data for each spatiotemporal location. All time series tibbles are objects of class `sits`. \n\n- The `cube` data type is designed to store metadata about image files. In principle, images which are part of a data cube share the same geographical region, have the same bands, and have been regularized to fit into a pre-defined temporal interval. Data cubes in `sits` are organized by tiles. A tile is an element of a satellite's mission reference system, for example MGRS for Sentinel-2 and WRS2 for Landsat. A `cube` is a tibble where each row contains information about data covering one tile. Each row of the cube tibble contains a column named `file_info`; this column contains a list that stores a tibble \n\n- The `cube` data type is specialised in `raster_cube` (ARD images), `vector_cube` (ARD cube with segmentation vectors). `probs_cube` (probabilities produced by classification algorithms on raster data), `probs_vector_cube`(probabilites generated by vector classification of segments),  `uncertainty_cube` (cubes with uncertainty information), and `class_cube` (labelled maps). See the code in `sits_plot.R` as an example of specialisation of `plot` to handle different classes of raster data. \n\n- All ML/DL models in `sits` which are the result of `sits_train` belong to the `ml_model` class. In addition, models are assigned a second class, which is unique to ML models (e.g, `rfor_model`, `svm_model`) and generic for all DL `torch` based models (`torch_model`). The class information is used for plotting models and for establishing if a model can run on GPUs. \n\n### Literal values, error messages and colors\n\n- The internal `sits` code has no literal values, which are all stored in the YAML configuration files `./inst/extdata/config.yml` and `./inst/extdata/config_internals.yml`. The first file contains configuration parameters that are relevant to users, related to visualisation and plotting; the second contains parameters that are relevant only for developers. These values are accessible using the `.conf` function. For example, the value of the default size for leaflet objects (64 MB) is accessed using the command `.conf[\"view\", \"leaflet_megabytes\"]`. \n\n\n- Error messages are also stored outside of the code in the YAML configuration file `./inst/extdata/config_messages.yml`. These values are accessible using the `.conf` function. For example, the error associated to an invalid NA value for an input parameter is accessible using th function `.conf(\"messages\", \".check_na_parameter\")`. \n\n- Color handling in `sits` is described in the Technical Annex section [\"How colors work in sits\"](https://e-sensing.github.io/sitsbook/technical-annex.html#how-colors-work-in-sits). The legends and colors available by default are described in the YAML file `./inst/extdata/config_colors.yml`. \n\n### Supporting new STAC-based image catalogues \n\n- If you want to include a STAC-based catalogue not yet supported by `sits`, we encourage you to look at existing implementations of catalogues such as Microsoft Planetary Computer (MPC), Digital Earth Africa (DEA) and AWS. \n\n- STAC-based catalogues in `sits` are associated to YAML description files, which are available in the directory `.inst/exdata/sources`. For example, the YAML file `config_source_mpc.yml` describes the contents of the MPC collections supported by `sits`. Please first provide an YAML file which lists the detailed contents of the new catalogue you wish to include. Follow the examples provided.\n\n- After writing the YAML file, you need to consider how to access and query the new catalogue. The entry point for access to all catalogues is the `sits_cube.stac_cube()` function, which in turn calls a sequence of functions which are described in the generic interface `api_source.R`. Most calls of this API are handled by the functions of `api_source_stac.R` which provides an interface to the `rstac` package and handles STAC queries. \n\n- Each STAC catalogue is different. The STAC specification allows providers to implement their data descriptions with specific information. For this reason, the generic API described in `api_source.R` needs to be specialized for each provider. Whenever a provider needs specific implementations of parts of the STAC protocol, we include them in separate files. For example, `api_source_mpc.R` implements specific quirks of the MPC platform. Similarly, specific support for CDSE (Copernicus Data Space Environment) is available in `api_source_cdse.R`. \n\n### Supporting new Machine Learning and Deep Learning algorithms\n\n- In general terms, ML/DL algorithms in `sits` are encapsulated as closures which are the output of the `sits_train()` function. In line with the established practices in **R**, each closure  contains a function that classifies input values, as well as information on the samples used to train the model.\n\n- Please read the [Technical Annex](https://e-sensing.github.io/sitsbook/technical-annex.html#including-new-methods-for-machine-learning) to the `sits` book. It describes how include a new ML method, in this case the `lightGBM` algorithm. Follow those guidelines to include a new ML algorithm. \n\n- If you aim to include a `torch` based deep learning method, in addition to understanding the concepts presented in the Technical Annex please study carefully the implementation of `sits_tempcnn()` and `sits_lighttae()`. \n\n- Bear in mind that your only task is to provide a new function that is compatible with the requirements of ML/DL methods in `sits`. Once the function has been correctly implemented, you will be able to use in connection with the rest of `sits`. \n\n## Roadmap\n\n- The roadmap for `sits` is included as part of the [issues tracker](https://github.com/e-sensing/sits/issues). Issues created by the developers are assigned to milestones. Each milestone corresponds to an expected new version of  `sits` to be released in CRAN.\n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/contributing.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How to contribute",
        "parent_header": [
          "SITS - Satellite Image Time Series Analysis for Earth Observation Data Cubes <img src=\"man/figures/sits_sticker.png\" align=\"right\" width=\"150\" alt=\"SITS icon\" />",
          "Time Series Classification"
        ],
        "type": "Text_excerpt",
        "value": "The `sits` project is released with a [Contributor Code of\nConduct](https://github.com/e-sensing/sits/blob/master/CODE_OF_CONDUCT.md).\nBy contributing to this project, you agree to abide by its terms.\n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-07-27T13:32:40Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-09-16T17:19:12Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Satellite image time series in R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/e-sensing/sits/master/DESCRIPTION",
        "type": "String",
        "value": "An end-to-end toolkit for land use and land cover classification\n    using big Earth observation data. Builds satellite image data cubes from cloud collections.\n    Supports visualization methods for images and time series and \n    smoothing filters for dealing with noisy time series.\n    Enables merging of multi-source imagery (SAR, optical, DEM).\n    Includes functions for quality assessment of training samples using self-organized maps and  \n    to reduce training samples imbalance. Provides machine learning algorithms including support vector machines, \n    random forests, extreme gradient boosting, multi-layer perceptrons,\n    temporal convolution neural networks, and temporal attention encoders.\n    Performs efficient classification of big Earth observation data cubes and includes \n    functions for post-classification smoothing based on Bayesian inference. \n    Enables best practices for estimating area and assessing accuracy of land change. \n    Includes object-based spatio-temporal segmentation for space-time OBIA.\n    Minimum recommended requirements: 16 GB RAM and 4 CPU dual-core."
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An end-to-end toolkit for land use and land cover classification using big Earth observation data, based on machine learning methods applied to satellite image data cubes, as described in Simoes et al (2021) <doi:10.3390/rs13132428>. Builds regular data cubes from collections in AWS, Microsoft Planetary Computer, Brazil Data Cube, and Digital Earth Africa using the STAC protocol <https://stacspec.org/> and the 'gdalcubes' R package <doi:10.3390/data4030092>. Supports visualization methods for images and time series and smoothing filters for dealing with noisy time series. Includes functions for quality assessment of training samples using self-organized maps as presented by Santos et al (2021) <doi:10.1016/j.isprsjprs.2021.04.014>. Provides machine learning methods including support vector machines, random forests, extreme gradient boosting, multi-layer perceptrons, temporal convolutional neural networks <doi:10.3390/rs11050523>, residual networks <arxiv:1809.04356>, and temporal attention encoders <arXiv:2007.00586>. Performs efficient classification of big Earth observation data cubes and includes functions for post-classification smoothing based on Bayesian inference, and methods for uncertainty assessment. Enables best practices for estimating area and assessing accuracy of land change as recommended by Olofsson et al(2014) <doi:10.1016/j.rse.2014.02.015>. Minimum recommended requirements: 16 GB RAM and 4 CPU dual-core."
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9901440209894068,
      "result": {
        "original_header": "Overview",
        "type": "Text_excerpt",
        "value": "`sits` is an open source R/Python package for satellite image time\nseries analysis. The package is developed in R and provides full access\nto its functions with a Python API. It enables users to apply machine\nlearning techniques for classifying image time series obtained from\nearth observation data cubes. The basic workflow in `sits` is: \n1.  Select an image collection from cloud providers AWS, Brazil Data\n    Cube, Digital Earth Africa, Copernicus Data Space Ecosystem, Digital\n    Earth Australia, Microsoft Planetary Computer, NASA Harmonized\n    Landsat/Sentinel, Open Geo Hub, and Swiss Data Cube.\n2.  Build a regular data cube from analysis-ready image collections.\n3.  Merge data cube from multisource analysis (e.g., Sentinel-1 with\n    Sentinel-2).\n4.  Extract labelled time series from data cubes to be used as training\n    samples.\n5.  Perform samples quality control using self-organised maps.\n6.  Train machine learning and deep learning models.\n7.  Tune deep learning models for improved accuracy.\n8.  Classify data cubes using machine learning and deep learning models,\n    with GPU support if available.\n9.  Run spatial-temporal segmentation methods for object-based time\n    series classification.\n10. Post-process classified images with Bayesian smoothing to remove\n    outliers.\n11. Estimate uncertainty values of classified images.\n12. Evaluate classification accuracy using best practices.\n13. Improve results with active learning and self-supervised learning\n    methods. \n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9144597534974714,
      "result": {
        "original_header": "Image Collections Accessible by `sits`",
        "type": "Text_excerpt",
        "value": "- Brazil Data Cube -\n  [BDC](https://data.inpe.br/bdc/web/en/home-page-2/): Open data\n  collections of Sentinel-2, Landsat-8 and CBERS-4 images.\n- Copernicus Data Space Environment\n  [CDSE](https://dataspace.copernicus.eu/): Open data collections from\n  the EU Copernicus programme.\n- Earth on AWS - [AWS](https://aws.amazon.com/earth/): Sentinel-2/2A\n  level 2A collections.\n- Digital Earth Africa -\n  [DEAFRICA](https://www.digitalearthafrica.org/): Open data collection\n  of Sentinel-2/2A and Landsat-8 for Africa.\n- Digital Earth Australia -\n  [DEAUSTRALIA](https://www.ga.gov.au/scientific-topics/dea): Open data\n  collections for the Australian subcontinent.\n- Microsoft Planetary Computer -\n  [MPC](https://planetarycomputer.microsoft.com/catalog): Open data\n  collection of Sentinel-2/2A and Landsat-8.\n- NASA Harmonized Landsat/Sentinel Collection\n  [HLS](https://hls.gsfc.nasa.gov/).\n- Open Geo Hub Harmonized Landsat-5/7/8 Collection at\n  [OGH](https://stac.openlandmap.org/landsat_glad.swa.ard2_bimonthly/collection.json).\n- Swiss Data Cube ([SDC](https://www.swissdatacube.org/)): Open data\n  collection of Sentinel-2/2A and Landsat-8.\n- [USGS](https://landsatlook.usgs.gov/stac-browser): Landsat-4/5/7/8\n  collections, which are not open data. \nOpen data collections do not require payment of access fees. Except for\nthose in the Brazil Data Cube, these collections are not regular.\nIrregular collections require further processing before they can be used\nfor classification using machine learning models.\n \n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9497118304503841,
      "result": {
        "original_header": "Building a Data Cube from an ARD Image Collection",
        "type": "Text_excerpt",
        "value": "The following code defines an irregular data cube of Sentinel-2/2A\nimages available in the Microsoft Planetary Computer, using the open\ndata collection `\"SENTINEL-2-L2A\"`. The geographical area of the data\ncube is defined by the tiles `\"20LKP\"` and `\"20LLKP\"`, and the temporal\nextent by a start and end date. Access to other cloud services works in\nsimilar ways.\n``` r\ns2_cube <- sits_cube(\n    source = \"MPC\",\n    collection = \"SENTINEL-2-L2A\",\n    tiles = c(\"20LKP\", \"20LLP\"),\n    bands = c(\"B03\", \"B08\", \"B11\", \"SCL\"),\n    start_date = as.Date(\"2018-07-01\"),\n    end_date = as.Date(\"2019-06-30\"),\n    progress = FALSE\n)\n```\n \nThis cube is irregular. The timelines of tiles `\"20LKP\"` and `\"20LLKP\"`\nand the resolutions of the bands are different. Sentinel-2 bands `\"B03\"`\nand `\"B08\"` have 10-meters resolution, while band `\"B11\"` and the cloud\nband `\"SCL\"` have 20-meters resolution. Irregular collections need an\nadditional processing step to be converted to regular data cubes, as\ndescribed below. \nThe above command builds a regular data cube with all bands interpolated\nto 60 m spatial resolution and 15-days temporal resolution. Regular data\ncubes are the input to the `sits` functions for time series retrieval,\nbuilding machine learning models, and classification of raster images\nand time series.\n \n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8916922613801739,
      "result": {
        "original_header": "Accessing Time Series in Data Cubes",
        "type": "Text_excerpt",
        "value": "`sits` has been designed to use satellite image time series to derive\nmachine learning models. After the data cube has been created, time\nseries can be retrieved individually or by using CSV or SHP files, as in\nthe following example. The example below uses a data cube in a local\ndirectory, whose images have been obtained from the `\"MOD13Q1-6\"`\ncollection of the Brazil Data Cube.\n``` r\nlibrary(sits)\n# this data cube uses images from the Brazil Data Cube that have\n# downloaded to a local directory\ndata_dir <- system.file(\"extdata/raster/mod13q1\", package = \"sits\")\n# create a cube from downloaded files\nraster_cube <- sits_cube(\n    source = \"BDC\",\n    collection = \"MOD13Q1-6.1\",\n    data_dir = data_dir,\n    delim = \"_\",\n    parse_info = c(\"X1\", \"X2\", \"tile\", \"band\", \"date\"),\n    progress = FALSE\n)\n# obtain a set of samples defined by a CSV file\ncsv_file <- system.file(\"extdata/samples/samples_sinop_crop.csv\",\n    package = \"sits\"\n)\n# retrieve the time series associated with the samples from the data cube\npoints <- sits_get_data(raster_cube, samples = csv_file)\n# show the time series\npoints[1:3, ]\n#> # A tibble: 3 \u00d7 7\n#>   longitude latitude start_date end_date   label    cube        time_series\n#>       <dbl>    <dbl> <date>     <date>     <chr>    <chr>       <list>     \n#> 1     -55.8    -11.7 2013-09-14 2014-08-29 Cerrado  MOD13Q1-6.1 <tibble>   \n#> 2     -55.8    -11.7 2013-09-14 2014-08-29 Cerrado  MOD13Q1-6.1 <tibble>   \n#> 3     -55.7    -11.7 2013-09-14 2014-08-29 Soy_Corn MOD13Q1-6.1 <tibble>\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9202875196644351,
      "result": {
        "original_header": "Training Machine Learning Models",
        "type": "Text_excerpt",
        "value": "`sits` provides support for the classification of both individual time\nseries as well as data cubes. The following machine learning methods are\navailable in `sits`: \nThe following example illustrate how to train a dataset and classify an\nindividual time series. First we use the `sits_train()` function with\ntwo parameters: the training dataset (described above) and the chosen\nmachine learning model (in this case, Random Forest). The trained model\nis then used to classify a time series from Mato Grosso Brazilian state,\nusing `sits_classify()`. The results can be shown in text format using\nthe function `sits_show_prediction()` or graphically using `plot`.\n``` r\n# training data set\ndata(\"samples_modis_ndvi\")\n# point to be classified\ndata(\"point_mt_6bands\")\n# Train a random forest model\nrfor_model <- sits_train(\n    samples = samples_modis_ndvi,\n    ml_method = sits_rfor()\n)\n# Select NDVI band of the point to be classified\n# Classify using TempCNN model\n# Plot the result\npoint_mt_6bands |>\n    sits_select(bands = \"NDVI\") |>\n    sits_classify(rfor_model) |>\n    plot()\n```\n \nThe following example shows how to classify a data cube organized as a\nset of raster images. The result can also be visualized interactively\nusing `sits_view()`.\n``` r\n# Create a data cube to be classified\n# Cube is composed of MOD13Q1 images from the Sinop region in Mato Grosso (Brazil)\ndata_dir <- system.file(\"extdata/raster/mod13q1\", package = \"sits\")\nsinop <- sits_cube(\n    source = \"BDC\",\n    collection = \"MOD13Q1-6.1\",\n    data_dir = data_dir,\n    delim = \"_\",\n    parse_info = c(\"X1\", \"X2\", \"tile\", \"band\", \"date\"),\n    progress = FALSE\n)\n# Classify the raster cube, generating a probability file\n# Filter the pixels in the cube to remove noise\nprobs_cube <- sits_classify(\n    data = sinop,\n    ml_model = rfor_model,\n    output_dir = tempdir()\n)\n# apply a bayesian smoothing to remove outliers\nbayes_cube <- sits_smooth(\n    cube = probs_cube,\n    output_dir = tempdir()\n)\n# generate a thematic map\nlabel_cube <- sits_label_classification(\n    cube = bayes_cube,\n    output_dir = tempdir()\n)\n# plot the the labelled cube\nplot(label_cube)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "SITS - Satellite Image Time Series Analysis for Earth Observation Data Cubes <img src=\"man/figures/sits_sticker.png\" align=\"right\" width=\"150\" alt=\"SITS icon\" />"
        ],
        "type": "Text_excerpt",
        "value": "Detailed documentation on how to use `sits` is available in the e-book\n[\u201cSatellite Image Time Series Analysis on Earth Observation Data\nCubes\u201d](https://e-sensing.github.io/sitsbook/).\n\nCode documentation on the `sits` functions is available in the [pkgdown\nformat](https://e-sensing.github.io/sits/).\n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/e-sensing/sits/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 86
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/e-sensing/sits/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "e-sensing/sits"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SITS - Satellite Image Time Series Analysis for Earth Observation Data Cubes "
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "description",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/e-sensing/sits/master/DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/DESCRIPTION",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/e-sensing/sits/master/DESCRIPTION",
        "type": "Url",
        "value": "DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "homepage": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://e-sensing.github.io/sitsbook/"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://e-sensing.github.io/sits/"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sits"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/e-sensing/sits/master/man/figures/sits_general_view.jpg"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/e-sensing/sits/master/man/figures/datacube_conception.jpg"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/e-sensing/sits/master/man/figures/README-unnamed-chunk-9-1.png"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/e-sensing/sits/master/man/figures/README-unnamed-chunk-10-1.png"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Obtaining `sits` in R",
        "parent_header": [
          "SITS - Satellite Image Time Series Analysis for Earth Observation Data Cubes <img src=\"man/figures/sits_sticker.png\" align=\"right\" width=\"150\" alt=\"SITS icon\" />",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "After installing the latest version of `R` from the [CRAN\narchive](https://cran.r-project.org/), `sits` can also be installed from\nCRAN:\n\n``` r\ninstall.packages(\"sits\", dependencies = TRUE)\n```\n\nThe latest supported version is available on github. It may have\nadditional fixes from the version available from CRAN.\n\n``` r\ndevtools::install_github(\"e-sensing/sits\", dependencies = TRUE)\n```\n\n``` r\n# load the sits library\nlibrary(sits)\n#> SITS - satellite image time series analysis.\n#> Loaded sits v1.5.3-1.\n#>         See ?sits for help, citation(\"sits\") for use in publication.\n#>         Documentation avaliable in https://e-sensing.github.io/sitsbook/\n```\n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configuring the Python environment",
        "parent_header": [
          "SITS - Satellite Image Time Series Analysis for Earth Observation Data Cubes <img src=\"man/figures/sits_sticker.png\" align=\"right\" width=\"150\" alt=\"SITS icon\" />",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "The Python interface for sits is as a wrapper around the R\nimplementation. It gives Python users access to the all features of the\nsits package. To use `sits` in Python, one needs Python 3.10 or higher.\nAfter installing the R version of `sits`, please also install the\n`arrow` R package.\n\nThe Python API for `sits` is available on `PyPi`, and can be installed\nas follows:\n\n``` sh\npip install pysits\n```\n\nPlease follow the examples of the [SITS\nbook](https://e-sensing.github.io/sitsbook/) for examples of Python\nusage.\n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/e-sensing/sits/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/e-sensing/sits/issues"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/e-sensing/sits/issues"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "big-earth-data, cbers, earth-observation, eo-datacubes, geospatial, image-time-series, land-cover-classification, landsat, planetary-computer, r-spatial, remote-sensing, rspatial, satellite-image-time-series, satellite-imagery, sentinel-2, stac-api, stac-catalog"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "GNU General Public License v2.0",
        "spdx_id": "GPL-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/gpl-2.0",
        "value": "https://api.github.com/licenses/gpl-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/e-sensing/sits/master/DESCRIPTION",
        "type": "String",
        "value": "GPL-2"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/GPL-2.0",
        "spdx_id": "https://spdx.org/licenses/GPL-2.0",
        "type": "License",
        "value": "https://spdx.org/licenses/GPL-2.0"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/e-sensing/sits/master/man/figures/sits_sticker.png"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sits"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sits: Satellite Image Time Series Analysis for Earth Observation Data Cubes"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "e-sensing"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/e-sensing/sits/master/DESCRIPTION",
        "type": "String",
        "value": "sits"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 2341789,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 149320,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 144,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "type": "Programming_language",
        "url": "https://r-project.org",
        "value": "R",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/e-sensing/sits/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "M3nin0",
          "type": "User"
        },
        "date_created": "2025-09-08T17:23:01Z",
        "date_published": "2025-09-08T17:24:44Z",
        "description": "### Hotfix version 1.5.3-1\r\n\r\n* Improve documentation for `sits_labels`\r\n* Improve documentation for `sits_train`\r\n* Improve documentation of `roi` parameter in `sits_mosaic` and `sits_plot`\r\n* Improve `sits_accuracy` messages when results are empty\r\n* Update `TAE` implementation to make better use of embeddings\r\n* Fix MPC token management in `sits_cube_copy`\r\n* Fix error in message for missing colors\r\n* Fix division by zero error in `sits_texture`\r\n* Add `res` parameter in `sits_mosaic`\r\n",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.5.3-1",
        "name": "Version 1.5.3-1",
        "release_id": 245596387,
        "tag": "v1.5.3-1",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.5.3-1",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/245596387",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/245596387",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.5.3-1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "M3nin0",
          "type": "User"
        },
        "date_created": "2025-07-24T18:13:55Z",
        "date_published": "2025-07-24T20:27:32Z",
        "description": "## What's new in SITS version 1.5.3\r\n\r\n* Introduce a Python API for SITS ([pysits](https://github.com/e-sensing/pysits))\r\n* New version of the documentation on code and [SITS Book](https://e-sensing.github.io/sitsbook/)\r\n* Implement SAR texture measures based on co-occurrence matrices\r\n* Refactor MPC token generation\r\n* Introduce `sits_roi_to_tiles` function \r\n* Add support for HLS collection from MPC\r\n* Support for TERRASCOPE products WORLD COVER and WORLD CEREAL\r\n* Support for Open Geo Hub Harmonized Landsat collection\r\n* Review `sits_get_data()` implementation\r\n* Improvements in `sits_mosaic()`\r\n* Fix `sits_clean()` multicores operations \r\n* Add WebGL as default engine in `sits_view()` using `leafgl`\r\n* Review CDSE implementation to support OpenSearch and STAC endpoints\r\n* Improve speed in `sits_summary()` and `sits_stratified sampling`\r\n* Fix problems in `sits_regularize()`\r\n* Include label parameter on `sits_select()`\r\n* General bug fixes",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.5.3",
        "name": "Version 1.5.3",
        "release_id": 235003814,
        "tag": "v1.5.3",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.5.3",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/235003814",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/235003814",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.5.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "OldLipe",
          "type": "User"
        },
        "date_created": "2025-02-13T00:05:28Z",
        "date_published": "2025-02-13T18:02:03Z",
        "description": "## What's new in SITS version 1.5.2\r\n\r\n* Include `exclusion_mask` parameter in `sits_classify()` and `sits_smooth()`\r\n* Support classification data cubes with NA values\r\n* Support for multiple tiling system in `sits_regularize()`, including MGRS and Brazil Data Cube grids\r\n* Review `sits_merge()` implementation to better handle multiple scenario cases\r\n* Support `roi` when plotting data cubes\r\n* Refactor `sits_cube_copy()` to improve timeout handling and efficiency\r\n* Include filtering by tiles in regularization operation \r\n* Include start and end dates for each collection in `sits_list_collections()`\r\n* Add support to `SpatExtent` object from terra as `roi` in `sits_cube()`\r\n* Update `crs` usage in `sits_get_data()` to support WKT\r\n* Implement Sakoe-Chiba approximation for DTW algorithm\r\n* Support for tmap version 4.0\r\n* Enhance performance and usability in visualization functions\r\n* Enhance `sits_classify()` performance with segments classification\r\n* Support for interactive visualization with SOM samples\r\n* General bug fixes",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.5.2",
        "name": "Version 1.5.2",
        "release_id": 200204586,
        "tag": "v1.5.2",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.5.2",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/200204586",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/200204586",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.5.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "M3nin0",
          "type": "User"
        },
        "date_created": "2024-08-19T19:30:14Z",
        "date_published": "2024-08-26T16:29:25Z",
        "description": "## What's new in SITS version 1.5.1\r\n\r\n* Support for ESA World Cover map\r\n* Support for Digital Earth Australia products\r\n* Support for Digital Earth Africa geomedian products\r\n* Support for PLANET Mosaic products\r\n* Improve `.netrc` access to Harmonized Landsat-Sentinel cubes with `earthdatalogin` package\r\n* Use ROI to cut data cube after mosaic operation\r\n* Support for raster and vector classification using DEM as base cubes\r\n* Convert from `httr` package to `httr2` package\r\n* Remove deprecated class to `purrr::map_dfc`, `purrr::map_dfr` and similar\r\n* Fix tuning for torch models\r\n* Add geometry validation when extracting time series\r\n* Add multicores processing support for active learning sampling methods\r\n* Remove `tapply` from `.reg_cube_split_assets()` for R 4.X compatibility\r\n* Fix `sits_merge()` function that was not merging `SAR` and `OPTICAL` cubes\r\n* In models API, the `n_input_pixels` parameter was renamed back to `input_pixels` for compatibility with models trained in old versions of the package\r\n* Fix torch usage in Apple M3\r\n* Fix date parameter usage in `sits_view()`\r\n* Improve `plot()` performance using raster overviews",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.5.1",
        "name": "Version 1.5.1",
        "release_id": 171957720,
        "tag": "v1.5.1",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/171957720",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/171957720",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "OldLipe",
          "type": "User"
        },
        "date_created": "2024-05-22T22:04:10Z",
        "date_published": "2024-05-22T22:12:24Z",
        "description": "### Hotfix version 1.5.0-1\r\n* Add multicores processing support for active learning sampling methods\r\n* Remove tapply from `.reg_cube_split_assets()` for R 4.X compatibility\r\n* Fix `sits_merge()` function that was not merging `SAR` and `OPTICAL` cubes\r\n* Rename n_input_pixels back to input_pixels for compatibility with models trained in old versions of the package\r\n* Fix torch usage in Apple M3 by turning off MPS technology\r\n* Fix date parameter usage in `sits_view()`\r\n* Improve `plot()` performance using raster overviews\r\n* Include support for PLANET Mosaic product",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.5.0-1",
        "name": "Version 1.5.0-1",
        "release_id": 157006492,
        "tag": "v1.5.0-1",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.5.0-1",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/157006492",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/157006492",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.5.0-1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "OldLipe",
          "type": "User"
        },
        "date_created": "2024-05-10T01:27:14Z",
        "date_published": "2024-05-10T01:29:19Z",
        "description": "## What's new in SITS version 1.5.0\r\n* Include `dtw` distance when building SOM maps\r\n* Support for SENTINEL-1-RTC and SENTINEL-2-L2A in CDSE\r\n* Include support for DEA products SENTINEL-1-RTC, LS5-SR, LS7-SR, LS9-SR, ALOS-PALSAR-MOSAIC, NDVI ANOMALY, DAILY CHIRPS, MONTHLY CHIRPS and DEM-30\r\n* Support for Sentinel-1 GRD and RTC collections from Planetary Computer\r\n* Include parameter tile to select data from Sentinel-1 (MPC) \r\n* Include parameter tile to select data from Sentinel-1 and Sentinel-2 (DEAFRICA)\r\n* Include parameter tile to select data from HLS collections\r\n* Improved support for GPU-based classification of deep learning models\r\n* Support for non-normalized derived indexes\r\n* Support for shapefiles as ROI in `sits_cube()`\r\n* Fix inconsistencies in HLS scale factors\r\n* New function to obtain ROI based on MGRS tiles\r\n* Add support for uncertainty cubes in `sits_mosaic()`\r\n* Improve performance of `sits_segment()` using chunk parallelization\r\n* Include uncertainty measures for vector probability cubes\r\n* New `sits_clean()` function to improve classified maps\r\n* New functions `sits_sampling_design()` and `sits_stratified_sampling()`\r\n* New `sits_reduce()` function",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.5.0",
        "name": "Version 1.5.0",
        "release_id": 155045045,
        "tag": "v1.5.0",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/155045045",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/155045045",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "OldLipe",
          "type": "User"
        },
        "date_created": "2023-12-19T19:52:34Z",
        "date_published": "2023-12-19T19:55:37Z",
        "description": "### Hotfix version 1.4.2-3\r\n* Fix font download in package initialization",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.4.2-3",
        "name": "Version 1.4.2-3",
        "release_id": 134530570,
        "tag": "v1.4.2-3",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.4.2-3",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/134530570",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/134530570",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.4.2-3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "OldLipe",
          "type": "User"
        },
        "date_created": "2023-11-28T14:08:00Z",
        "date_published": "2023-11-28T14:13:20Z",
        "description": "### Hotfix version 1.4.2-2\r\n* Fix integer overflow bug in `sits_classify()` segments",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.4.2-2",
        "name": "Version 1.4.2-2",
        "release_id": 131744214,
        "tag": "v1.4.2-2",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.4.2-2",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/131744214",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/131744214",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.4.2-2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "OldLipe",
          "type": "User"
        },
        "date_created": "2023-11-02T20:55:25Z",
        "date_published": "2023-11-02T21:18:07Z",
        "description": "### Hotfix version 1.4.2-1\r\n* Fix crs bug in `sits_apply()`\r\n* Update file name in clean feature\r\n* Fix time series extraction bug with segments\r\n* Fix examples",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.4.2-1",
        "name": "Version 1.4.2-1",
        "release_id": 127762740,
        "tag": "v1.4.2-1",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.4.2-1",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/127762740",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/127762740",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.4.2-1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "OldLipe",
          "type": "User"
        },
        "date_created": "2023-10-29T12:43:38Z",
        "date_published": "2023-10-29T15:40:09Z",
        "description": "## What's new in SITS version 1.4.2\r\n* Support for vector data cubes, including visualisation\r\n* Object-based time series analysis using spatio-temporal segmentation\r\n* Improved support for GPU usage when running deep learning algorithms\r\n* New function to clean values by modal filter in classified images\r\n* Added experimental support for Sentinel-1 images available on MPC\r\n* Summary function now includes cloud cover information\r\n* General bug fixes",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.4.2",
        "name": "Version 1.4.2",
        "release_id": 127088386,
        "tag": "v1.4.2",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.4.2",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/127088386",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/127088386",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.4.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "OldLipe",
          "type": "User"
        },
        "date_created": "2023-06-13T19:31:31Z",
        "date_published": "2023-06-13T19:33:26Z",
        "description": "## What's new in SITS version 1.4.1\r\n* Updated access to collections in Brazil Data Cube, HLS, and AWS\r\n* Corrected errors in labelling of classified cubes\r\n* Created a factory of functions for segmentation",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.4.1",
        "name": "Version 1.4.1",
        "release_id": 108433768,
        "tag": "v1.4.1",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.4.1",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/108433768",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/108433768",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.4.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "OldLipe",
          "type": "User"
        },
        "date_created": "2023-06-05T12:16:42Z",
        "date_published": "2023-06-06T04:18:11Z",
        "description": "## What's new in SITS version 1.4.0\r\n* New function for image segementation based on `supercells` package\r\n* New version of `sits_get_data()` to extract average values of time series based on segments\r\n* Support for Harmonized Landsat Sentinel (HLS) collections from NASA\r\n* Support for probability cubes and uncertainty cubes in `sits_view()`\r\n* New `summary()` function to show details of data cubes and time series tibbles\r\n* General big fixes",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.4.0",
        "name": "Version 1.4.0",
        "release_id": 107451316,
        "tag": "v1.4.0",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.4.0",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/107451316",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/107451316",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.4.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rolfsimoes",
          "type": "User"
        },
        "date_created": "2023-03-18T12:00:44Z",
        "date_published": "2023-03-18T19:46:48Z",
        "description": "## What's new in SITS version 1.3.0\r\n- Remove NOTES and WARNINGS pointed out by CRAN\r\n- New `sits_mosaic()` function for improving visualization of large data sets\r\n- Add support to cubes with no cloud coverage information in `sits_regularize()`\r\n- Improve `sits_cube_copy()` for downloading data from the internet\r\n- Tested and validated GPU support for deep learning models in `sits`\r\n- Added multithread support for deep learning models in `sits_train()`\r\n- Improve `sits_combine_predictions()`\r\n- Remove dependencies on `data.table` package\r\n- Organize and clean internal APIs \r\n- General bug fixes ",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.3.0",
        "name": "Version 1.3.0",
        "release_id": 96042777,
        "tag": "v1.3.0",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.3.0",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/96042777",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/96042777",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.3.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rolfsimoes",
          "type": "User"
        },
        "date_created": "2023-02-24T19:21:38Z",
        "date_published": "2023-02-24T19:26:28Z",
        "description": "### Hotfix version 1.2.0-4\r\n* Fix issue #918\r\n",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.2.0-4",
        "name": "Version 1.2.0-4",
        "release_id": 89463157,
        "tag": "v1.2.0-4",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.2.0-4",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/89463157",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/89463157",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.2.0-4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rolfsimoes",
          "type": "User"
        },
        "date_created": "2023-01-23T23:23:58Z",
        "date_published": "2023-01-23T23:29:39Z",
        "description": "### Hotfix version 1.2.0-3\r\n* Fix `stars` proxy bug (issue #902)\r\n* Fix `purrr` cross deprecation\r\n* Fix `ggplot2` aes_string deprecation",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.2.0-3",
        "name": "Version 1.2.0-3",
        "release_id": 89980895,
        "tag": "v1.2.0-3",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.2.0-3",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/89980895",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/89980895",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.2.0-3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rolfsimoes",
          "type": "User"
        },
        "date_created": "2023-01-17T21:56:17Z",
        "date_published": "2023-01-17T22:02:35Z",
        "description": "## Hotfix version 1.2.0-1\r\n- Fix `sits_som_clean_samples()` bug (issue #890)",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.2.0-1",
        "name": "Version 1.2.0-1",
        "release_id": 89315597,
        "tag": "v1.2.0-1",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.2.0-1",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/89315597",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/89315597",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.2.0-1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rolfsimoes",
          "type": "User"
        },
        "date_created": "2022-11-16T22:00:53Z",
        "date_published": "2022-11-16T22:01:39Z",
        "description": "## New features in SITS version 1.2.0\r\n- `sits_get_data()` can be used to retrieve samples in classified cube\r\n- Support for mixture models (`sits_mixture_model()`)\r\n- Joining cubes in a mosaic (`sits_mosaic_cubes()`)\r\n- Extract the trained ML model (`sits_model()`)\r\n- Downloading and copying data cubes (`sits_cube_copy()`)\r\n- Combine prediction by average and entropy (`sits_combine_predictions()`)\r\n- Significant performance improvement when working with COG files\r\n- Allow plot of confusion matrix (`sits_plot`)\r\n- Support for operations on CLOUD band in `sits_apply()`\r\n- Bug fixes and internal re-engineering for better code maintenance",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.2.0",
        "name": "Version 1.2.0",
        "release_id": 83319391,
        "tag": "v1.2.0",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.2.0",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/83319391",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/83319391",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rolfsimoes",
          "type": "User"
        },
        "date_created": "2022-07-05T20:14:29Z",
        "date_published": "2022-07-05T20:14:50Z",
        "description": "### What's changed in SITS version 1.1.0\r\n* Introduced support to kernel functions in `sits_apply`\r\n* Introduced new function `sits_mixture_model` for spectral mixture analysis\r\n* Support for the Swiss Data Cube ([swissdatacube.org](https://www.swissdatacube.org/))\r\n* Support for mosaic visualization in `sits_view`\r\n* Introduced new function `sits_as_sf` to convert sits objects to sf\r\n* Export images as [COG](https://www.cogeo.org/) in `sits_regularize`\r\n* Add `roi` parameter in `sits_regularize` function\r\n* Add `crs` parameter in `sits_get_data`\r\n* Change Microsoft Planetary Computer source name to `\"MPC\"`\r\n* Fix several bugs and improve performance\r\n",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.1.0",
        "name": "Version 1.1.0",
        "release_id": 71310916,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/71310916",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/71310916",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rolfsimoes",
          "type": "User"
        },
        "date_created": "2022-05-19T23:57:19Z",
        "date_published": "2022-05-19T23:57:45Z",
        "description": "Available on CRAN\r\nChanges to match the package to CRAN standards\r\nUpdate documentation",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v1.0.0",
        "name": "Version 1.0.0",
        "release_id": 67330682,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/67330682",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/67330682",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rolfsimoes",
          "type": "User"
        },
        "date_created": "2022-05-12T19:32:34Z",
        "date_published": "2022-05-12T19:33:45Z",
        "description": "## What's changed\r\n* Introduced new classifier model `sits_lighttae()` (Lightweight Temporal Self-Attention)\r\n* Introduced `sits_uncertainty_sampling()` for active learning\r\n* Introduced `sits_confidence_samples()` for semi-supervised learning\r\n* Introduced `sits_geo_dist()` to generate samples-samples and samples-predicted plot\r\n* Introduced `sits_tuning()` for random search of machine learning parameters\r\n* Introduced `sits_reduce_imbalance()` function to balance class samples\r\n* Introduced `sits_as_sf()` to convert a sits tibble to a sf object\r\n* Support to `torchopt` deep learning optimizer package\r\n* New types of `sits_uncertainty()`: `least` confidence and `margin` of  confidence\r\n* Implement parallel processing for `sits_kfold_validate()`\r\n* Change `data` to `samples` in sits machine learning classifiers (NOTE: models trained in previous versions is no longer supported)\r\n* Change deep learning functions to snake case\r\n* Remove `file` parameter in `sits_get_data()` function\r\n* Update documentation\r\n* Improve several internal functions performances\r\n* Fix several bugs\r\n",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v0.17.0",
        "name": "Version 0.17.0",
        "release_id": 66731337,
        "tag": "v0.17.0",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v0.17.0",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/66731337",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/66731337",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v0.17.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rolfsimoes",
          "type": "User"
        },
        "date_created": "2022-03-23T23:03:24Z",
        "date_published": "2022-03-23T23:04:11Z",
        "description": "## What's changed\r\n* reimplemented all deep learning functions using `torch` package and remove `keras` dependence\r\n* Introduced `sits_TAE()` classification model\r\n* Introduced `sits_lightgbm()` classification model\r\n* Simplified `sits_regularize()` parameters\r\n* Improve `sits_regularize()` to reach production level quality\r\n* Improve `sits_regularize()` to use C++ internal functions\r\n* Include improved version of gdalcubes\r\n* Improve `sits_cube()` to open results cube\r\n* Update `plot()` parameters on raster cubes\r\n* Support multi-tile for classified cube in `sits_view()`",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v0.16.3",
        "name": "Version 0.16.3",
        "release_id": 60233539,
        "tag": "v0.16.3",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v0.16.3",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/60233539",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/60233539",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v0.16.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "OldLipe",
          "type": "User"
        },
        "date_created": "2022-01-28T00:02:39Z",
        "date_published": "2022-01-28T00:04:01Z",
        "description": "## What's Changed\r\n* Improve `sits_get_data()` to accept tibbles \r\n* Remove multiples progress bar from `sits_cube()` \r\n* Improve `sits_regularize()` to process in parallel by tiles, bands, and dates \r\n* Improve `sits_regularize()` to check malformed files ",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v0.16.2",
        "name": "Version 0.16.2",
        "release_id": 58144127,
        "tag": "v0.16.2",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v0.16.2",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/58144127",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/58144127",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v0.16.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "OldLipe",
          "type": "User"
        },
        "date_created": "2022-01-20T20:31:11Z",
        "date_published": "2022-01-20T20:35:16Z",
        "description": "## What's Changed\r\n* fix AWS environment variables\r\n* add resume feature and fault tolerance in sits_apply() function",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v0.16.1",
        "name": "Version 0.16.1",
        "release_id": 57606455,
        "tag": "v0.16.1",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v0.16.1",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/57606455",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/57606455",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v0.16.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rolfsimoes",
          "type": "User"
        },
        "date_created": "2022-01-15T14:01:48Z",
        "date_published": "2022-01-15T15:58:28Z",
        "description": "## What's Changed\r\n* hotfix `sits_cube()` function to tolerate malformed paths from STAC service;",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v0.16.0-1",
        "name": "Version 0.16.0-1",
        "release_id": 57164042,
        "tag": "v0.16.0-1",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v0.16.0-1",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/57164042",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/57164042",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v0.16.0-1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rolfsimoes",
          "type": "User"
        },
        "date_created": "2022-01-14T20:37:09Z",
        "date_published": "2022-01-14T20:39:25Z",
        "description": "## What's Changed\r\n* Include `sits_apply()` function to generate new bands from existing ones;\r\n* Improve `sits_accuracy()` function to work with multiple cubes;\r\n* Add band parameter to `sits_view()`\r\n* Introduce `sits_uncertainty()` function to provide uncertainty measure to probability maps;\r\n* Improve `sits_regularize()` by taking least cloud cover by default method to compose images\r\n* Bug fixes;",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v0.16.0",
        "name": "Version 0.16.0",
        "release_id": 57147217,
        "tag": "v0.16.0",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v0.16.0",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/57147217",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/57147217",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v0.16.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rolfsimoes",
          "type": "User"
        },
        "date_created": "2021-11-22T21:59:44Z",
        "date_published": "2021-11-22T22:01:17Z",
        "description": "## What's Changed\r\n* Hotfix in `sits_regularize` function by @OldLipe in https://github.com/e-sensing/sits/pull/485\r\n\r\n\r\n**Full Changelog**: https://github.com/e-sensing/sits/compare/v0.15.1...v0.15.1-1",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v0.15.1-1",
        "name": "Version 0.15.1-1",
        "release_id": 53873838,
        "tag": "v0.15.1-1",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v0.15.1-1",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/53873838",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/53873838",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v0.15.1-1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rolfsimoes",
          "type": "User"
        },
        "date_created": "2021-11-17T23:08:23Z",
        "date_published": "2021-11-18T18:03:53Z",
        "description": "## What's Changed\r\n* fix bug in sits_plot cube by @OldLipe in https://github.com/e-sensing/sits/pull/439\r\n* Fix bugs in v0.15.0 by @OldLipe in https://github.com/e-sensing/sits/pull/442\r\n* Pre release 0.15.0-1 by @rolfsimoes in https://github.com/e-sensing/sits/pull/443\r\n* Hotfix in ellipsis parameter not being passed to sits_cube by @OldLipe in https://github.com/e-sensing/sits/pull/446\r\n* fix bug #445 by @rolfsimoes in https://github.com/e-sensing/sits/pull/447\r\n* Hotfix/config by @rolfsimoes in https://github.com/e-sensing/sits/pull/452\r\n* Merge master (hotfix) by @rolfsimoes in https://github.com/e-sensing/sits/pull/453\r\n* Support `sits_timeline()` to sits model objects by @rolfsimoes in https://github.com/e-sensing/sits/pull/455\r\n* Full Support to Microsoft Planetary computer by @OldLipe in https://github.com/e-sensing/sits/pull/467\r\n* Pre-release 0.15.1 by @rolfsimoes in https://github.com/e-sensing/sits/pull/476\r\n* Pre-release 0.15.1 by @OldLipe in https://github.com/e-sensing/sits/pull/477\r\n\r\n\r\n**Full Changelog**: https://github.com/e-sensing/sits/compare/v0.15.0...v0.15.1",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v0.15.1",
        "name": "Version 0.15.1",
        "release_id": 53587515,
        "tag": "v0.15.1",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v0.15.1",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/53587515",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/53587515",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v0.15.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rolfsimoes",
          "type": "User"
        },
        "date_created": "2021-10-29T18:19:06Z",
        "date_published": "2021-10-29T18:29:35Z",
        "description": "## What's Changed\r\n* fix bug #445 by @rolfsimoes in https://github.com/e-sensing/sits/pull/447\r\n\r\n\r\n**Full Changelog**: https://github.com/e-sensing/sits/compare/v0.15.0-2...v0.15.0-4",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v0.15.0-4",
        "name": "Version 0.15.0-4",
        "release_id": 52334285,
        "tag": "v0.15.0-4",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v0.15.0-4",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/52334285",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/52334285",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v0.15.0-4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "rolfsimoes",
          "type": "User"
        },
        "date_created": "2021-10-28T16:56:26Z",
        "date_published": "2021-10-28T16:57:27Z",
        "description": "## What's Changed\r\n* fix bug #445 by @rolfsimoes in https://github.com/e-sensing/sits/pull/447\r\n",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v0.15.0-3",
        "name": "Version 0.15.0-3",
        "release_id": 52254652,
        "tag": "v0.15.0-3",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v0.15.0-3",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/52254652",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/52254652",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v0.15.0-3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "OldLipe",
          "type": "User"
        },
        "date_created": "2021-10-28T13:57:55Z",
        "date_published": "2021-10-28T13:58:31Z",
        "description": "- Fix bug that does not allow users inform HTTP headers to access private collections by @rolfsimoes in #446 \r\n- Update drone version by @OldLipe in #444 ",
        "html_url": "https://github.com/e-sensing/sits/releases/tag/v0.15.0-2",
        "name": "Version 0.15.0-2",
        "release_id": 52188810,
        "tag": "v0.15.0-2",
        "tarball_url": "https://api.github.com/repos/e-sensing/sits/tarball/v0.15.0-2",
        "type": "Release",
        "url": "https://api.github.com/repos/e-sensing/sits/releases/52188810",
        "value": "https://api.github.com/repos/e-sensing/sits/releases/52188810",
        "zipball_url": "https://api.github.com/repos/e-sensing/sits/zipball/v0.15.0-2"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Pre-Requisites",
        "parent_header": [
          "SITS - Satellite Image Time Series Analysis for Earth Observation Data Cubes <img src=\"man/figures/sits_sticker.png\" align=\"right\" width=\"150\" alt=\"SITS icon\" />",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "Since the `sits` package is developed in `R`, to run it you need an R\nenvironment on which you install the `R` version of `sits`. After that,\nusers can optionally install the Python API interface as described\nbelow.\n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "run",
    "download",
    "contact",
    "contributors",
    "usage",
    "faq",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 01:54:05",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 513
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Support for GPU",
        "parent_header": [
          "SITS - Satellite Image Time Series Analysis for Earth Observation Data Cubes <img src=\"man/figures/sits_sticker.png\" align=\"right\" width=\"150\" alt=\"SITS icon\" />",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "For users working with deep learning models, `sits` supports GPU\nacceleration through the [torch](https://torch.mlverse.org/docs/)\npackage, which is already included as a dependency when you install\n`sits`. This provides significant performance improvements for deep\nlearning operations. The `torch` package automatically detects available\nGPUs and utilizes them when possible, requiring no additional\nconfiguration in most cases.\n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements for community support",
        "parent_header": [
          "SITS - Satellite Image Time Series Analysis for Earth Observation Data Cubes <img src=\"man/figures/sits_sticker.png\" align=\"right\" width=\"150\" alt=\"SITS icon\" />",
          "Time Series Classification"
        ],
        "type": "Text_excerpt",
        "value": "The authors are thankful for the contributions of Edzer Pebesma, Jakub\nNowosad. Marius Appel, Martin Tennekes, Robert Hijmans, Ron Wehrens, and\nTim Appelhans, respectively chief developers of the packages\n`sf`/`stars`, `supercells`, `gdalcubes`, `tmap`, `terra`, `kohonen`, and\n`leafem`. We are grateful for the work of Dirk Eddelbuettel on `Rcpp`\nand `RcppArmadillo`. The `sits` package recognises the great work of the\nRStudio team, including the `tidyverse`. Many thanks to Daniel Falbel\nfor his great work in the `torch` and `luz` packages. Charlotte\nPelletier shared the python code that has been reused for the TempCNN\nmachine learning model. We would like to thank Maja Schneider for\nsharing the python code that helped the implementation of the\n`sits_lighttae()` and `sits_tae()` model. We recognize the importance of\nthe work by Chris Holmes and Mattias Mohr on the STAC specification and\nAPI.\n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements for Financial and Material Support",
        "parent_header": [
          "SITS - Satellite Image Time Series Analysis for Earth Observation Data Cubes <img src=\"man/figures/sits_sticker.png\" align=\"right\" width=\"150\" alt=\"SITS icon\" />",
          "Time Series Classification"
        ],
        "type": "Text_excerpt",
        "value": "We acknowledge and thank the project funders that provided financial and\nmaterial support:\n\n- Amazon Fund, established by the Brazilian government with financial\n  contribution from Norway, through the project contract between the\n  Brazilian Development Bank (BNDES) and the Foundation for Science,\n  Technology and Space Applications (FUNCATE), for the establishment of\n  the Brazil Data Cube, process 17.2.0536.1.\n\n- Coordena\u00e7\u00e3o de Aperfei\u00e7oamento de Pessoal de N\u00edvel Superior-Brasil\n  (CAPES) and from the Conselho Nacional de Desenvolvimento Cient\u00edfico e\n  Tecnol\u00f3gico (CNPq), for providing MSc and PhD scholarships.\n\n- Sao Paulo Research Foundation (FAPESP) under eScience Program grant\n  2014/08398-6, for for providing MSc, PhD and post-doc scholarships,\n  equipment, and travel support.\n\n- International Climate Initiative of the Germany Federal Ministry for\n  the Environment, Nature Conservation, Building and Nuclear Safety\n  (IKI) under grant 17-III-084- Global-A-RESTORE+ (\u201cRESTORE+: Addressing\n  Landscape Restoration on Degraded Land in Indonesia and Brazil\u201d).\n\n- Microsoft Planetary Computer under the GEO-Microsoft Cloud Computer\n  Grants Programme.\n\n- Instituto Clima e Sociedade, under the project grant \u201cModernization of\n  PRODES and DETER Amazon monitoring systems\u201d.\n\n- The Open-Earth-Monitor Cyberinfrastructure project, which has received\n  funding from the European Union\u2019s Horizon Europe research and\n  innovation programme under [grant agreement\n  No.\u00a0101059548](https://cordis.europa.eu/project/id/101059548).\n\n- [FAO-EOSTAT](https://www.fao.org/in-action/eostat) initiative, which\n  uses next generation Earth observation tools to produce land cover and\n  land use statistics.\n"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/e-sensing/sits/master/DESCRIPTION",
        "type": "String",
        "value": "1.5.3-1"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "1.0.0"
      },
      "source": "https://raw.githubusercontent.com/e-sensing/sits/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
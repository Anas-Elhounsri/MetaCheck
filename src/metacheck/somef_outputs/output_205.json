{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgments",
        "parent_header": [
          "Coif<img width=\"11%\" align=\"right\" src=\"https://github.com/caltechlibrary/coif/raw/main/.graphics/coif-icon.png\">"
        ],
        "type": "Text_excerpt",
        "value": "This work was funded by the California Institute of Technology Library.\n\nThe [vector artwork](https://thenounproject.com/term/hair/1710638/) of a man's coiffure, used as the icon for this project, was created by [sarah](https://thenounproject.com/saifulbachrisitubondo/) from the Noun Project.  It is licensed under the Creative Commons [CC-BY 3.0](https://creativecommons.org/licenses/by/3.0/) license. I edited the logo in [Boxy SVG](https://boxy-svg.com), a native SVG editor for macOS to change the icon color to the orange used by Caltech in their logo.\n\n<div align=\"center\">\n  <br>\n  <a href=\"https://www.caltech.edu\">\n    <img width=\"100\" height=\"100\" src=\"https://raw.githubusercontent.com/caltechlibrary/coif/main/.graphics/caltech-round.png\">\n  </a>\n</div>\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "affiliation": "California Institute of Technology Library",
        "email": ";mhucka@library.caltech.edu",
        "identifier": "https://orcid.org/0000-0001-9105-5960",
        "type": "String",
        "value": "Michael Hucka"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": [
          {
            "family_name": "Hucka",
            "given_name": "Michael",
            "name": "Michael Hucka",
            "type": "Agent",
            "url": "https://orcid.org/0000-0001-9105-5960"
          }
        ],
        "datePublished": "2021",
        "format": "cff",
        "title": "Caltech Library Software Repository Template",
        "type": "File_dump",
        "value": "# YAML 1.2\n---\nauthors: \n  -\n    affiliation: \"Caltech Library\"\n    family-names: Hucka\n    given-names: Michael\n    orcid: \"https://orcid.org/0000-0001-9105-5960\"\ncff-version: \"1.1.0\"\ndate-released: 2021-09-10\ndoi: \nkeywords: \n  - book cover\n  - book jacket\n  - image finder\nmessage: \"If you use this software, please cite it using these metadata.\"\nrepository-code: \"https://github.com/caltechlibrary/template\"\ntitle: \"Caltech Library Software Repository Template\"\nversion: \"1.12.0\"\n...\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Contributor Covenant Code of Conduct\n====================================\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject contributors are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject contributors have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project contributors.\n\n## Enforcement\n\nIf a contributor engages in harassing behaviour, the project organizers may take any action they deem appropriate, including warning the offender or expelling them from online forums, online project resources, face-to-face meetings, or any other project-related activity or resource.\n\nIf you are being harassed, notice that someone else is being harassed, or have any other concerns, please contact a member of the project team immediately.  Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team.  All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances.  The project team is obligated to maintain confidentiality with regard to the reporter of an incident.  Further details of specific enforcement policies may be posted separately.\n\n## Attribution\n\nPortions of this Code of Conduct were adapted from Electron's [Contributor Covenant Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md), which itself was adapted from the [Contributor Covenant](http://contributor-covenant.org/version/1/4), version 1.4.\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/coif"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/coif"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Guidelines for contributing to this project\n\nAny constructive contributions &ndash; bug reports, pull requests (code or documentation), suggestions for improvements, and more &ndash; are welcome.\n\n## Conduct\n\nEveryone is asked to read and respect the [code of conduct](CODE_OF_CONDUCT.md) before participating in this project.\n\n## Coordinating work\n\nA quick way to find out what is currently in the near-term plans for this project is to look at the [GitHub issue tracker](https://github.com/caltechlibrary/coif/issues), but the possibilities are not limited to what you see there &ndash; if you have ideas for new features and enhancements, please feel free to write them up as a new issue or contact the developers directly!\n\n## Submitting contributions\n\nPlease feel free to contact the author directly, or even better, jump right in and use the standard GitHub approach of forking the repo and creating a pull request.  When committing code changes and submitting pull requests, please write a clear log message for your commits.\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "Coif<img width=\"11%\" align=\"right\" src=\"https://github.com/caltechlibrary/coif/raw/main/.graphics/coif-icon.png\">"
        ],
        "type": "Text_excerpt",
        "value": "We would be happy to receive your help and participation with enhancing Coif!  Please visit the [guidelines for contributing](CONTRIBUTING.md) for some tips on getting started.\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-09-10T19:14:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-18T10:25:13Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Cover image finder"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Cover image finder for books"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "Coif<img width=\"11%\" align=\"right\" src=\"https://github.com/caltechlibrary/coif/raw/main/.graphics/coif-icon.png\">"
        ],
        "type": "Text_excerpt",
        "value": "In a variety of situations involving library software systems, it's useful to show a small image of a book's cover or jacket. Coif (_**Co**ver **i**mage **f**inder_) is a simple Python&nbsp;3 library that looks for cover images using multiple network services. When it finds one, Coif returns the image in [JPEG](https://en.wikipedia.org/wiki/JPEG) format.\n\nCoif is most similar to [bookcovers](https://github.com/e-e-e/bookcovers), a JavaScript library that performs federated search for book cover images. A Python package similar to Coif is [booker](https://github.com/krdyke/booker), but that one is limited to searching Google Books.\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9078398296204421,
      "result": {
        "original_header": "Coif<img width=\"11%\" align=\"right\" src=\"https://github.com/caltechlibrary/coif/raw/main/.graphics/coif-icon.png\">",
        "type": "Text_excerpt",
        "value": "Coif (_**Co**ver **i**mage **f**inder_) is a Python&nbsp;3 module for contacting multiple services to look for a book jacket image given an identifier such as an ISBN. \n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9404204705958779,
      "result": {
        "original_header": "Known issues and limitations",
        "type": "Text_excerpt",
        "value": "Although the [Open Library Covers API](https://openlibrary.org/dev/docs/api/covers) accepts multiple types of identifiers such as an ISBN, OCLC, LCCN, and more, other services only accept ISBNs. Thus, while you can pass any of these types of identifiers to Coif, if what you use is _not_ an ISBN, then Coif will only contact the Open Library's service. \n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9707851947480464,
      "result": {
        "original_header": "Authors and history",
        "type": "Text_excerpt",
        "value": "In this section, list the authors and contributors to your software project.  Adding additional notes here about the history of the project can make it more interesting and compelling.  This is also a place where you can acknowledge other contributions to the work and the use of other people's software or tools. \n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "active"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/coif/releases"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/coif/archive/main.zip"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/caltechlibrary/coif/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "caltechlibrary/coif"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Coif"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "setup.py",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/coif/main/setup.py"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/setup.py",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/coif/main/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/requirements.txt",
      "technique": "file_exploration"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://data.caltech.edu/records/2111"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/coif/main/.graphics/caltech-round.png"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# How to install Python version 3.x\n\nThe following instructions focus on getting [Python 3](https://docs.python.org/3/) running on Debian/Ubuntu Linux-based systems as well as on macOS via [MacPorts](https://www.macports.org) or [HomeBrew](https://brew.sh).\n\n_**Tip**_: If you are running on an Intel-based computers (e.g., most Macs and Windows machines), you can use a Python distribution called [Miniconda](https://docs.conda.io/en/latest/miniconda.html).  This is often the easiest approach to getting Python on your machine.  If that's not suitable for you for any reason, continue reading!\n\n\n## A note about Python version issues\n\nIt may be possible to use the default copy of Python provided by your operating system if it happens to be a version 3 edition of Python.  As of January 2021, the [oldest still-supported version of Python is 3.6](https://www.python.org/downloads/).  However, for historical reasons, many operating system distributions still ship with Python version 2.7 even today. This can be confusing, because the default `python` and `pip` commands provided on these operating systems is version 2.7 of Python; attempting to run programs written for Python version 3 with version 2.7 can result in extremely confusing errors that bear no relationship to the _actual_ problem, which is that the program is not written to run in Python 2.7.\n\n\n## Installing a recent version of Python and `pip`\n\nOn some systems, version 3.x of the Python interpreter and `pip` are available using the commands `python3` and `pip3`, respectively. More often, they must be installed separately.  The following subsections describe how Python 3 can be installed either using the standard software package managers on certain popular operating systems, or using third-party software managers.\n\n\n### Debian/Ubuntu\n\nDebian-based systems still ship with older versions of Python by\ndefault. To install a modern version of Python and the associated version of `pip`, run the following command:\n\n```\nsudo apt install python3 python3-pip\n```\n\n### macOS\n\nThe version of Python that comes with macOS through at least macOS 10.15 (Catalina) is Python 2.7.  The most convenient way to get Python 3.x and the associated version of `pip` is to use [MacPorts](https://www.macports.org) or [HomeBrew](https://brew.sh), depending on your preference.\n\n\n#### _Using MacPorts_\n\nIf you are using macOS and MacPorts, the following command will install a recent version of Python 3:\n\n```\nsudo port install python3 py38-pip\n```\n\nAfter running the command above, you should be able to invoke the Python interpreter using the command `python3`. You can verify the version of Python and `pip` with the following commands:\n\n```\npython3 --version\npython3 -m pip --version\n```\n\n#### _Using HomeBrew_\n\nIf you are using [HomeBrew](https://brew.sh), the corresponding commands are as follows:\n\n```\nbrew install python3\n```\n\nHomeBrew's Python 3 package installs `pip3` by default.  Unless you configured your copy of HomeBrew to install it elsewhere, programs should end up in `/usr/local/bin` on your computer.  Look for `pip3` there (e.g., by running the command `ls /usr/local/bin/pip*` to see what gets listed).\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/INSTALL-Python3.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Coif<img width=\"11%\" align=\"right\" src=\"https://github.com/caltechlibrary/coif/raw/main/.graphics/coif-icon.png\">"
        ],
        "type": "Text_excerpt",
        "value": "The instructions below assume you have a Python interpreter installed on your computer; if that's not the case, please first [install Python version 3](INSTALL-Python3.md) and familiarize yourself with running Python programs on your system.\n\nOn **Linux**, **macOS**, and **Windows** operating systems, you should be able to install `coif` with [`pip`](https://pip.pypa.io/en/stable/installing/).  To install `coif` from the [Python package repository (PyPI)](https://pypi.org), run the following command:\n```\npython3 -m pip install coif\n```\n\nAs an alternative to getting it from [PyPI](https://pypi.org), you can use `pip` to install `coif` directly from GitHub, like this:\n```sh\npython3 -m pip install git+https://github.com/caltechlibrary/coif.git\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/caltechlibrary/coif/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/coif/issues"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "api, book, book-cover, book-covers, book-jacket, books, cover, cover-art, cover-image, isbn, python, python3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "software",
          "libraries"
        ]
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause",
        "spdx_id": "BSD-2-Clause",
        "type": "File_dump",
        "value": "Copyright (c) 2021, Caltech\nAll rights not granted herein are expressly reserved by Caltech.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice,\nthis list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\nmay be used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://github.com/caltechlibrary/coif/blob/main/LICENSE",
        "spdx_id": "https://github.com/caltechlibrary/coif/blob/main/LICENSE",
        "type": "License",
        "value": "https://github.com/caltechlibrary/coif/blob/main/LICENSE"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "Coif<img width=\"11%\" align=\"right\" src=\"https://github.com/caltechlibrary/coif/raw/main/.graphics/coif-icon.png\">"
        ],
        "type": "Text_excerpt",
        "value": "Software produced by the Caltech Library is Copyright \u00a9 2021 California Institute of Technology.  This software is freely distributed under a BSD/MIT type license.  Please see the [LICENSE](LICENSE) file for more information.\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/coif/raw/main/.graphics/coif-icon.png"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "coif"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "coif"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "caltechlibrary"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_distribution": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://pypi.org/project/coif/"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 8043,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 6122,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "mhucka",
          "type": "User"
        },
        "date_created": "2021-09-10T23:17:38Z",
        "date_published": "2021-09-10T23:18:06Z",
        "description": "First release of Coif.  Implements a single function, `cover_image(...)`.\n",
        "html_url": "https://github.com/caltechlibrary/coif/releases/tag/v0.0.1",
        "name": "Release 0.0.1",
        "release_id": 49378229,
        "tag": "v0.0.1",
        "tarball_url": "https://api.github.com/repos/caltechlibrary/coif/tarball/v0.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/caltechlibrary/coif/releases/49378229",
        "value": "https://api.github.com/repos/caltechlibrary/coif/releases/49378229",
        "zipball_url": "https://api.github.com/repos/caltechlibrary/coif/zipball/v0.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "commonpy",
        "type": "Software_application",
        "value": "commonpy  >= 1.3.10",
        "version": ">= 1.3.10"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "sidetrack",
        "type": "Software_application",
        "value": "sidetrack >= 2.0.0",
        "version": ">= 2.0.0"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/requirements.txt",
      "technique": "code_parser"
    }
  ],
  "somef_missing_categories": [
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 01:00:27",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting help",
        "parent_header": [
          "Coif<img width=\"11%\" align=\"right\" src=\"https://github.com/caltechlibrary/coif/raw/main/.graphics/coif-icon.png\">"
        ],
        "type": "Text_excerpt",
        "value": "If you find an issue, please submit it in [the GitHub issue tracker](https://github.com/caltechlibrary/coif/issues) for this repository.\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Coif<img width=\"11%\" align=\"right\" src=\"https://github.com/caltechlibrary/coif/raw/main/.graphics/coif-icon.png\">"
        ],
        "type": "Text_excerpt",
        "value": "Coif currently offers only an application programming interface (API); it does not offer a command-line interface. The main interface point is the function `cover_image(...)`. Here is a simple demonstration of using it:\n\n```python\nfrom coif import cover_image\n\n(url, image) = cover_image('9781479837243')\nif image:\n    with open('image.jpg', 'wb') as image_file:\n        image_file.write(image)\nelse:\n    print('Unable to find image')\n```\n\nAs illustrated above, `cover_image` returns **two** values: a URL, and a JPEG image in binary form (if a cover image is found).\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Arguments to `cover_image`",
        "parent_header": [
          "Coif<img width=\"11%\" align=\"right\" src=\"https://github.com/caltechlibrary/coif/raw/main/.graphics/coif-icon.png\">",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "The function takes one required argument, an identifier (preferably an [ISBN](https://en.wikipedia.org/wiki/International_Standard_Book_Number), but possibly other kinds of identifiers), and additional optional arguments. In more detail, the possible arguments are:\n\n* `identifier` (required): an ISBN, OCLC id, LCCN id, OLID and or Open Library [Cover ID](https://openlibrary.org/dev/docs/api/covers). Note that only Open Library accepts anything other than ISBN, so your best bet for finding a cover image is to use an ISBN. Conversely, if you provide anything other than an ISBN, `cover_image` will only contact Open Library.\n* `kind` (optional): the kind of identifier given as the first argument. Recognized values are `isbn`, `lccn`, `olid`, `oclc`, and `coverid`. The default is `isbn`.\n* `size` (optional): one of the letters `S`, `M`, or `L`, to indicate a preference for small, medium, or large images, respectively. Some cover images may exist in one size and not another, and there is no way to know in advance which size may be available from a service without actually downloading the image. If a `size` is provided, `cover_image` will ask for that size _and smaller_; for example, if you call it with `size = 'M'`, it will try to find `M` first and if none exists, it will try `S`. By default, it wil _only_ try `S`. If you want to get the largest image you can find, call it with `size = 'L'`.\n* `cc_login` (optional): one of the best services for finding cover images is [Content Caf\u00e8 2](http://www.baker-taylor.com/pdfs/content_cafe.pdf) from Baker & Talor, but it requires an account. If you have a user id and password with their service, provide the credentials as a tuple of values `(\"user\", \"password\")` to the optional argument `cc_login`.\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Why `cover_image` always returns an image",
        "parent_header": [
          "Coif<img width=\"11%\" align=\"right\" src=\"https://github.com/caltechlibrary/coif/raw/main/.graphics/coif-icon.png\">",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "A frustrating aspect of many of the services is that they provide no way to simply ask whether an image exists. If the services do not have an image for a given identifier, most return a small placeholder image (often containing rendered text to the effect of \"no cover found\") instead of returning a failure code of some kind. Consequently, `cover_image` must always download images and test them against some size thresholds to determine if it got a placeholder or an actual cover image. This is the reason why the return values from `cover_image` are both a URL and an image: it has already downloaded the image, so it may as well return it, to save the caller the trouble of downloading the image a second time.\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting help",
        "parent_header": [
          "Coif<img width=\"11%\" align=\"right\" src=\"https://github.com/caltechlibrary/coif/raw/main/.graphics/coif-icon.png\">"
        ],
        "type": "Text_excerpt",
        "value": "If you find an issue, please submit it in [the GitHub issue tracker](https://github.com/caltechlibrary/coif/issues) for this repository.\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "0.0.1"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/coif/main/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
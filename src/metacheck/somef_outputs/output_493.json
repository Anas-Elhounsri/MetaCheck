{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "affiliation": "Mathematical Institute, University of Oxford",
        "email": "thomas.pak@maths.ox.ac.uk",
        "identifier": "https://orcid.org/0000-0002-7198-7688",
        "type": "String",
        "value": "Thomas Pak"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": [
          {
            "family_name": "Pak",
            "given_name": "Thomas F.",
            "name": "Thomas F. Pak",
            "type": "Agent",
            "url": "https://orcid.org/0000-0002-7198-7688"
          },
          {
            "family_name": "Baker",
            "given_name": "Ruth E.",
            "name": "Ruth E. Baker",
            "type": "Agent",
            "url": "https://orcid.org/0000-0002-6304-9333"
          },
          {
            "family_name": "Pitt-Francis",
            "given_name": "Joe M.",
            "name": "Joe M. Pitt-Francis",
            "type": "Agent",
            "url": "https://orcid.org/0000-0002-5094-5403"
          }
        ],
        "datePublished": "2020",
        "doi": "10.5281/zenodo.3697312",
        "format": "cff",
        "title": "Pakman",
        "type": "File_dump",
        "url": "https://doi.org/10.5281/zenodo.3697312",
        "value": "cff-version: 1.1.0\nmessage: \"If you use this software, please cite the article below.\"\nauthors:\n  - family-names: Pak\n    given-names: Thomas F.\n    orcid: https://orcid.org/0000-0002-7198-7688\n  - family-names: Baker\n    given-names: Ruth E.\n    orcid: https://orcid.org/0000-0002-6304-9333\n  - family-names: Pitt-Francis\n    given-names: Joe M.\n    orcid: https://orcid.org/0000-0002-5094-5403\ntitle: Pakman\nversion: 1.1.0\ndate-released: 2020-03-05\ndoi: 10.5281/zenodo.3697312\nreferences:\n    - type: article\n      authors:\n          - family-names: Pak\n            given-names: Thomas F.\n            orcid: https://orcid.org/0000-0002-7198-7688\n          - family-names: Baker\n            given-names: Ruth E.\n            orcid: https://orcid.org/0000-0002-6304-9333\n          - family-names: Pitt-Francis\n            given-names: Joe M.\n            orcid: https://orcid.org/0000-0002-5094-5403\n      title: 'Pakman: a modular, efficient and portable tool for approximate Bayesian inference'\n      keywords:\n        - C++\n        - MPI\n        - approximate Bayesian computation\n        - Bayesian inference\n        - parallel computing\n        - distributed computing\n      date-released: 2020-03-07\n      doi: 10.21105/joss.01716\n      journal: The Journal of Open Source Software\n      volume: 5\n      issue: 47\n      start: 1716\n      url: https://joss.theoj.org/papers/10.21105/joss.01716\n      year: 2020\n"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at\n[pakman.pABC@gmail.com](mailto:pakman.pABC@gmail.com). All complaints will be\nreviewed and investigated and will result in a response that is deemed\nnecessary and appropriate to the circumstances. The project team is obligated\nto maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n\n"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ThomasPak/pakman"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ThomasPak/pakman"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing to Pakman\n\nWelcome and thanks for taking the time to contribute to Pakman! :smile:\n\nPakman is an open source project and we invite all kinds of contributions.\nThis includes (but is not limited to) submitting bug reports/fixes, adding\nexamples, and implementing additional ABC algorithms.  If you contribute any\ncode, be sure to follow our [coding conventions](#coding-conventions).\n\nPlease note that this project and everyone participating in it is governed by\nour [Code of Conduct](CODE_OF_CONDUCT.md).  When you contribute to Pakman, you\nare expected to uphold this code.  Please report any unacceptable behaviour to\n[pakman.pABC@gmail.com](mailto:pakman.pABC@gmail.com).\n\n## How to contribute\n\n### Submitting bug reports/fixes\n\nIf you find a bug in Pakman, check first whether the bug has already been\nreported in [Issues](https://github.com/ThomasPak/pakman/issues).  If you\ncannot find an open issue addressing the problem, [open a new\none](https://github.com/ThomasPak/pakman/issues/new).  Please ensure that you\nuse a descriptive title and include example code where necessary (e.g. for user\nexecutables) that is [**minimal** and\n**reproducible**](https://stackoverflow.com/help/minimal-reproducible-example).\n\nIf you can fix the problem yourself, [create a pull\nrequest](https://github.com/ThomasPak/pakman/compare).\n\n### Adding examples\n\nPakman is an extremely generic tool for approximate Bayesian computation and\ncan be used in a wide variety of contexts.  If you have used Pakman in an\napplication area that is currently not included in the examples and you wish to\nshare this with the world, please do so!\n\nIf your application can be implemented as a short and self-contained example,\nplease add it to the `examples` folder and [create a pull\nrequest](https://github.com/ThomasPak/pakman/compare).  In addition, you must\nadd a tutorial page to the Pakman wiki.  **Pull requests for examples will only\nbe accepted once its accompanying tutorial page has been written.**\n\nAlternatively, if you are using a codebase that is too large to pull into\nPakman, you can add a tutorial to the Pakman wiki directly without contributing\ncode.  In this case, you must ensure that the tutorial includes instructions on\nhow to obtain the code for your example.\n\nIf in doubt as to whether to pull in your code to the Pakman repository or not,\nplease [open an issue](https://github.com/ThomasPak/pakman/issues/new).\n\n### Implementing new ABC algorithms\n\nAdditional ABC algorithms can easily be added to Pakman by subclassing the\n[AbstractController](https://codedocs.xyz/ThomasPak/pakman/class_abstract_controller.html)\nclass.  For detailed instructions, see the documentation page [Implementing a\nController subclass](https://codedocs.xyz/ThomasPak/pakman/controller.html).\n\nPlease clearly document any code you contribute.  Every class must have its\npublic and protected members documented with\n[Doxygen](http://www.doxygen.nl/index.html) comments.\n\nIn addition, you must add tests in the `tests` directory for your Controller\nwith\n[CTest](https://gitlab.kitware.com/cmake/community/wikis/doc/ctest/Testing-With-CTest).\nThe tests should cover every combination of your Controller with every Master,\nas well as every type of simulator (standard, MPI simulator in C and MPI\nsimulator in C++).  If you are not sure what is meant by an MPI simulator,\nplease see [this\nwiki](https://github.com/ThomasPak/pakman/wiki/Example:-epithelial-cell-growth)\nand [this documentation\npage](https://codedocs.xyz/ThomasPak/pakman/mpi-simulator.html).\n\nWhen you are ready to contribute your new Controller, please [create a pull\nrequest](https://github.com/ThomasPak/pakman/compare).\n\n### Rest\n\nIf you want to make any other type of contribution, please [open an\nissue](https://github.com/ThomasPak/pakman/issues/new) first describing what\nyou plan to add or change, as well as why you want to make the changes.  If we\napprove the proposed changes, you can contribute your code by [creating a pull\nrequest](https://github.com/ThomasPak/pakman/compare).\n\nYou are also welcome to open issues to request features or make other\nsuggestions.\n\n## Coding conventions\n\nAs a general rule of thumb, look at the existing code and try to code in the\nsame style.  Our coding conventions are:\n\n* We indent using four spaces (soft tabs).\n* We use the [Allman indentation\n  style](https://en.wikipedia.org/wiki/Indentation_style#Allman_style).\n* The maximum line length is 79.\n* C++-style comments for normal comments.\n* C-style comments for Doxygen documentation.\n* We always put spaces around binary operators, e.g. `x += 1`, not `x+=1`.\n* We use `PascalCase` for class names, `camelCase` for member functions and\n  `snake_case` for everything else.\n"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "Pakman"
        ],
        "type": "Text_excerpt",
        "value": "We welcome your contributions!  Please see our [contributing\nguidelines](CONTRIBUTING.md).\n"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-11-26T15:20:45Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2019-08-01"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2019-08-01"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-11-25T18:57:46Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2019-08-01"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A modular, efficient and portable tool for running parallel approximate Bayesian computation algorithms."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A modular, efficient and portable tool for running parallel approximate Bayesian computation algorithms."
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "Pakman"
        ],
        "type": "Text_excerpt",
        "value": "Pakman is a software tool for parallel approximate Bayesian computation (ABC)\nalgorithms.  Its modular framework is based on **user executables**, which\nmeans that problem-specific tasks, like model simulations, are performed by\nblack box executables supplied to Pakman by the user.\n\nPakman parallelises the execution of simulations using MPI, a portable standard\nfor distributed computing, and was designed to be lightweight so that a minimal\namount of overhead goes into parallelisation.\n\nThe problems that will benefit the most from Pakman are those where model\nsimulations take a relatively long time, on the order of seconds or more.\n"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8479867776274066,
      "result": {
        "original_header": "Testing",
        "type": "Text_excerpt",
        "value": "This script will benchmark Pakman with a computationally intensive simulator\nfor different numbers of parallel instances of the simulator.  The results are\nsaved in the comma-separated file `scaling.csv`.  In addition, if Python was\ndetected by CMake, the speedup and efficiency with respect to the number of\nprocesses will be plotted in `speedup.png` and `efficiency.png`, respectively. \n"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "Pakman"
        ],
        "type": "Text_excerpt",
        "value": "Examples of how to use Pakman can be found in the folder `examples` inside the\nbuild folder.  See the [wiki](https://github.com/ThomasPak/pakman/wiki) for\ndetailed documentation.\n\n* [Biased coin and ABC rejection](https://github.com/ThomasPak/pakman/wiki/Example:-biased-coin-flip-and-ABC-rejection)\n* [Biased coin and ABC SMC](https://github.com/ThomasPak/pakman/wiki/Example:-biased-coin-flip-and-ABC-SMC)\n* [SIS model](https://github.com/ThomasPak/pakman/wiki/Example:-SIS-model)\n* [Epithelial cell growth](https://github.com/ThomasPak/pakman/wiki/Example:-epithelial-cell-growth)\n\nIn addition, the command `build/src/pakman --help` provides a quick reference\non how to use Pakman.\n\n**Developers**: code documentation can be found\n[here](https://codedocs.xyz/ThomasPak/pakman/).\n"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "format": "wiki",
        "type": "Url",
        "value": "https://github.com/ThomasPak/pakman/wiki"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ThomasPak/pakman/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ThomasPak/pakman/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ThomasPak/pakman"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Pakman"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://doi.org/10.5281/zenodo.3357293"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.21105/joss.01716"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://joss.theoj.org/papers/10.21105/joss.01716/status.svg"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ThomasPak/pakman/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "C++",
          "MPI",
          "approximate Bayesian computation",
          "Bayesian inference",
          "parallel computing",
          "distributed computing"
        ]
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause",
        "spdx_id": "BSD-2-Clause",
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2019, Thomas Pak\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/BSD 3-Clause License",
        "spdx_id": "BSD 3-Clause License",
        "type": "License",
        "value": "BSD 3-Clause License"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://codedocs.xyz/ThomasPak/pakman.svg"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "pakman"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "ThomasPak"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 264896,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 35335,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 26497,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 11664,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 11556,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 3802,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ThomasPak/pakman/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ThomasPak",
          "type": "User"
        },
        "date_created": "2020-03-05T00:47:50Z",
        "date_published": "2020-03-05T00:59:27Z",
        "description": "Release v1.1.0 includes changes suggested by the reviewers for publication by the Journal of Open Source Software.  These include improvements to the manuscript, expanded documentation, the addition of CONTRIBUTING.md and CODE_OF_CONDUCT.md, and the ability to specify key-value pairs to MPI_Info from the command-line.",
        "html_url": "https://github.com/ThomasPak/pakman/releases/tag/v1.1.0",
        "name": "Pakman v1.1.0",
        "release_id": 24232631,
        "tag": "v1.1.0",
        "tarball_url": "https://api.github.com/repos/ThomasPak/pakman/tarball/v1.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ThomasPak/pakman/releases/24232631",
        "value": "https://api.github.com/repos/ThomasPak/pakman/releases/24232631",
        "zipball_url": "https://api.github.com/repos/ThomasPak/pakman/zipball/v1.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ThomasPak",
          "type": "User"
        },
        "date_created": "2019-08-01T04:09:49Z",
        "date_published": "2019-08-01T05:00:30Z",
        "description": "A modular, efficient and portable tool for approximate Bayesian computation.",
        "html_url": "https://github.com/ThomasPak/pakman/releases/tag/v1.0.0",
        "name": "Pakman v1.0.0",
        "release_id": 19003942,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/ThomasPak/pakman/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ThomasPak/pakman/releases/19003942",
        "value": "https://api.github.com/repos/ThomasPak/pakman/releases/19003942",
        "zipball_url": "https://api.github.com/repos/ThomasPak/pakman/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "Pakman"
        ],
        "type": "Text_excerpt",
        "value": "* C++11 compiler\n* MPI-3.1 library\n* [CMake](https://cmake.org/) >= version 3.10.2\n* (Optional) [Python](https://www.python.org/) >= version 3.6.7 with\n  [numpy](https://www.numpy.org/), [matplotlib](https://matplotlib.org/), and\n  [scipy](https://scipy.org/)\n\nPakman has been tested with [OpenMPI](https://www.open-mpi.org/) and\n[MPICH](https://www.mpich.org/).  Python is not necessary to build Pakman, but\nit is used in some Pakman examples and to create figures.\n"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 02:01:57",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "v1.0.0"
      },
      "source": "https://raw.githubusercontent.com/ThomasPak/pakman/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
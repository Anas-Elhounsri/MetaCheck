{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "affiliation": "INFN Gruppo Collegato di Udine and ICTP, Trieste",
        "email": "Leonid.Serkin@cern.ch",
        "identifier": "https://orcid.org/0000-0003-4749-5250",
        "type": "String",
        "value": "Leonid Serkin"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "LAPP, Univ. Grenoble Alpes, Univ. Savoie Mont Blanc, CNRS/IN2P3, Annecy",
        "email": "arturos@cern.ch",
        "identifier": "https://orcid.org/0000-0001-8241-7835",
        "type": "String",
        "value": "Arturo Sanchez Pineda"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Comment on an existing issue or open a new issue referencing your addition",
        "parent_header": [
          "C++ Analysis Framework for 13 TeV ATLAS Open Data",
          "Contribution guide <a name=\"contributing\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Before creating a pull request (PR), discuss the change you want to make. That's the easiest way we can check that the work is not overlapping with current work and that it aligns with the goals of the Open Data project. \n\nIn [this blog](https://www.igvita.com/2011/12/19/dont-push-your-pull-requests/) you can find some reasons why putting this work in upfront is so useful to everyone involved.\n\nWhen opening a new issue be sure to fill all the information necessary. The issue template should help you doing so.\n"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\natlas.outreach.data.tools@cern.ch.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://atlas.cern/updates/press-statement/13-tev-open-data.git"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-11-10T19:04:34Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2020-01-01"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2020-02-10"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-09-10T15:50:33Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2021-09-01"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The release of the 13 TeV ATLAS Open Data, hosted on the CERN Open Data portal and ATLAS Open Data portal, is accompanied by a set of analysis frameworks, written in C++ and interfaced with ROOT, Python and RDataFrame."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A repository with 12 high energy physics analysis examples using the ATLAS Open Data 13 TeV dataset released in 2020. It is written in C++ and some bash scripts.\n* Documentation of the code: http://opendata.atlas.cern/release/2020/documentation/frameworks/cpp.html\n* Documentation of the analysis: http://opendata.atlas.cern/release/2020/documentation/physics/intro.html"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9185447811655936,
      "result": {
        "original_header": "C++ Analysis Framework for 13 TeV ATLAS Open Data",
        "type": "Text_excerpt",
        "value": "\nThe framework avaible in this repository makes use of the [C++ language](http://www.cplusplus.com/doc/tutorial/) and is interfaced with [ROOT](https://root.cern.ch/). After cloning/downloading the repository, you need: to have the ROOT framework (see [here](https://root.cern/install/) for a quick start on ROOT) and a [gcc compiler](https://gcc.gnu.org/). The current version of the framework was compiled using gcc v6.20 and ROOT v6.10.04. \n## Table of Contents: \nThe analysis code is located in the `analysis` folder, with each sub-folders corresponding to a different physics analysis. The naming of the sub-folders follows a simple rule: \"NNAnalysis\", where NN can gives an indication of the process that it analyzes. \n+ Main code (`NNAnalysis.C`): it makes all the selection and stores the output histograms;\n+ Main header (`NNAnalysis.h`): it defines the histograms and gives access to the variables stored in the input samples;\n+ Histogram header (`NNAnalysisHistograms.h`): it defines the name of output histograms;\n+ Main-control code (`main_NNAnalysis.C`): it controls which input samples are going to be used and their location;\n+ A [bash script](https://www.shellscript.sh/) (`run.sh`), executed via a Linux/UNIX shell called [source](https://linuxize.com/post/bash-source-command/): helps you in running the analysis interactively.\n+ *In case you used the welcome script*, the output directory (`Output_NNAnalysis`) will be created: this is the place where the output of the analysis code (*one file with histograms per each input sample*) will be stored. **Warning**: if the output directory does not exist, the code will fail, please create always an empty one! \n+ Main code (`Plotting.cxx`): it makes all plot magic and controls automatically what to do for each of the analyses;\n+ Main header (`Plotting.h`): it defines all the needed bits and pieces for the plotting code;\n+ Helper directory (`list_histos`): inside it you will find control files with names `HistoList_ANALYSISNAME.txt`, each of these controls which histograms are going to be used and plotted for each analysis;\n+ Helper directory (`inputfiles`): inside it you will find control files with names `Files_ANALYSISNAME.txt`, each of these controls which input samples exactly are going to be used for this particular analysis, their cross-section and sum of weights. DO NOT CHANGE!!!\n+ bash script (`plotme.sh`): helps you in running the plotting code interactively, please use it!\n+ a makefile (`Makefile`): a set of directives used by a [make](https://www.gnu.org/software/make/manual/html_node/Introduction.html) build automation tool to generate the output executable;\n+ *in case you used the welcome script*, the output directory (**histograms**): it will contain the output plots! Do not forget to rename it in case you run over several analyses! \n+ In case you want to see the data and MC event yields: change \"#define YIELDS 0\" to \"#define YIELDS 1\" in `Plotting.cxx` and remake the plots; \n+ In case you want to add the normalised signal to the plots: change \"#define NORMSIG 0\" to \"#define NORMSIG 1\" in `Plotting.cxx` and remake the plots; \n+ In case something is not working: by changing \"#define DEBUG 0\" to \"#define DEBUG 1\" in `Plotting.cxx`, a lot of debug information will appear, this can help you trace the origin of any possible problem (usually, these could be: the directory *histograms* does not exist, a wrong path for the location of the input files is given, a wrong or non-existent histogram name is requested, one or several input files from the analysis are missing or failed,..)  \n(3) And finally, inside the main analysis code `NNAnalysis.C` you need to define a new variable (in this case an integer called *new_variable*), connect it to the value of the branch *something* that *exists* in the input samples (those are listed in the analysis header `NNAnalysis.h` after \"Declaration of leaf types\") and save the newly created histogram inside the function *Process* after the line that reads the content of the TTree `(fChain->GetTree()->GetEntries()>0)`\n```\nint new_variable = something;\n\nFillHistogramsGlobal( new_variable, weight, \"h_new\");\n```\nwhere the *weight* is the multiplication of scale factors and Monte Carlo weight.\n \n(4) Now run the analysis code as usual again over all the samples and check that the new histogram *h_new* appears in the produced output files. \n### 1. Comment on an existing issue or open a new issue referencing your addition\nBefore creating a pull request (PR), discuss the change you want to make. That's the easiest way we can check that the work is not overlapping with current work and that it aligns with the goals of the Open Data project.  \nIn [this blog](https://www.igvita.com/2011/12/19/dont-push-your-pull-requests/) you can find some reasons why putting this work in upfront is so useful to everyone involved. \n### 2. Fork the repository\nMake a fork of the repository in the upper right corner of the repository page in GitHub. In this new copy, changes won't affect anyone else's work, and you can make as many changes as you want.  \n### 4. Submit a pull request\nOnce you are done with your changes, open a PR. We encourage you to open a PR as early in your contributing process as possible so that everyone can see what is being worked on. \nPlease give us all the details, this makes it easier for us to review the contribution! \n"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9332250508341856,
      "result": {
        "original_header": "Migration process to implement the newest release of ATLAS Open Data",
        "type": "Text_excerpt",
        "value": "# C++ Analysis Framework for 13 TeV ATLAS Open Data \n"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "active"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/releases"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/artfisica/atlas-outreach-cpp-framework-13tev/archive/refs/tags/1.1.zip"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 44
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "C++ Analysis Framework for 13 TeV ATLAS Open Data"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/welcome_web.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/welcome.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/Plotting/plotme.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/Plotting/plotme_Hyyweb.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/Plotting/plotme_web.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/Plotting/clean.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/Analysis/clean.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/Analysis/ZTauTauAnalysis/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/Analysis/HTauTauAnalysis/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/Analysis/HWWAnalysis/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/Analysis/TTbarAnalysis/run.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/Analysis/TTbarDilepAnalysis/run.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "First-time setup <a name=\"first_time\"></a>",
        "parent_header": [
          "C++ Analysis Framework for 13 TeV ATLAS Open Data",
          "How to use the framework <a name=\"how_to\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "If you are able to run natively on your computer, you are free to do so. If you would prefer, you can run in a docker container:\n\n```\n# Start the docker container\ndocker run -it -p 8888:8888 ghcr.io/atlas-outreach-data-tools/notebooks-collection-opendata:latest /usr/bin/bash\n# This is only necessary if you don\u2019t have a local version of the repository already\ngit clone https://github.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev.git\ncd atlas-outreach-cpp-framework-13tev/Analysis/TTbarAnalysis\n# If you need to make any changes to e.g. where the files are stored, do that now\n./run.sh\n```\n\nIn addition, if there are local files you\u2019d like to use, for example to mount the directory `/path/to/directory` so that it\u2019s available in the Docker container as `/something`, run:\n\n```\ndocker run -it -p 8888:8888 --mount type=bind,src=/path/to/directory,dst=/something ghcr.io/atlas-outreach-data-tools/notebooks-collection-opendata:latest /usr/bin/bash\n```\n\nYou can use multiple `--mount` options to mount multiple directories, for example if one area holds code, another area holds input files, and a third area is where you would like to store your output files.\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contribution guide <a name=\"contributing\"></a>",
        "parent_header": [
          "C++ Analysis Framework for 13 TeV ATLAS Open Data"
        ],
        "type": "Text_excerpt",
        "value": "We appreciate the willingness to participate in the ATLAS Open Data project. Below you can find some steps to help you contribute successfully (inspired by [The Turing Way](https://book.the-turing-way.org) contribution guidelines):\n"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Fork the repository",
        "parent_header": [
          "C++ Analysis Framework for 13 TeV ATLAS Open Data",
          "Contribution guide <a name=\"contributing\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Make a fork of the repository in the upper right corner of the repository page in GitHub. In this new copy, changes won't affect anyone else's work, and you can make as many changes as you want. \n\nMake sure to keep the fork up to date (or develop from a branch based on the main repository's main branch) to avoid conflicts when merging. If you already have conflicts, check [GitHub's guide to resolving a merge conflict](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/addressing-merge-conflicts/resolving-a-merge-conflict-on-github).\n"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Make the changes you've discussed",
        "parent_header": [
          "C++ Analysis Framework for 13 TeV ATLAS Open Data",
          "Contribution guide <a name=\"contributing\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Please keep the changes targeted to what was discussed. While making your changes, commit often and write explanatory commit messages.\n\nPlease do not re-write history! That is, please do not use the rebase command to edit previous commit messages, combine multiple commits into one, or delete or revert commits that are no longer necessary.\n"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "4. Submit a pull request",
        "parent_header": [
          "C++ Analysis Framework for 13 TeV ATLAS Open Data",
          "Contribution guide <a name=\"contributing\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "Once you are done with your changes, open a PR. We encourage you to open a PR as early in your contributing process as possible so that everyone can see what is being worked on.\n\nWhen submitting your PR you will see a template. It will ask:\n- To describe the problem you are trying to fix an reference related issues. \n- List the changes you are proposing\n- Tell us what we should focus our review on.\n\nPlease give us all the details, this makes it easier for us to review the contribution!\n"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/issues"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "European Union Public License 1.1",
        "spdx_id": "EUPL-1.1",
        "type": "License",
        "url": "https://api.github.com/licenses/eupl-1.1",
        "value": "https://api.github.com/licenses/eupl-1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "European Union Public Licence\nV. 1.1\n\n\nEUPL \u00a9 the European Community 2007\n\n\nThis European Union Public Licence (the \u201cEUPL\u201d) applies to the\nWork or Software (as defined below) which is provided under the terms of this\nLicence. Any use of the Work, other than as authorised under this Licence is\nprohibited (to the extent such use is covered by a right of the copyright\nholder of the Work).\n\nThe Original Work is provided under the terms of this\nLicence when the Licensor (as defined below) has placed the following notice\nimmediately following the copyright notice for the Original Work:\n\nLicensed under the EUPL V.1.1\n\nor has expressed by any other mean his willingness to license under the EUPL.\n\n\n1. Definitions\n\nIn this Licence, the\nfollowing terms have the following meaning:\n\n- The Licence: this Licence.\n\n- The Original Work or the Software: the software distributed\nand/or communicated by the Licensor under this Licence, available as Source\nCode and also as Executable Code as the case may be.\n\n- Derivative Works:\nthe works or software that could be created by the Licensee, based upon the\nOriginal Work or modifications thereof. This Licence does not define the\nextent of modification or dependence on the Original Work required in order to\nclassify a work as a Derivative Work; this extent is determined by copyright\nlaw applicable in the country mentioned in Article 15.\n\n- The Work: the Original Work and/or its Derivative Works.\n\n- The Source Code: the human-readable form of the Work which is the most\nconvenient for people to study and modify.\n\n- The Executable Code: any code which has generally been compiled and which\nis meant to be interpreted by a computer as a program.\n\n- The Licensor: the natural or legal person that distributes and/or\ncommunicates the Work under the Licence.\n\n- Contributor(s): any natural or legal person who modifies the Work under the\nLicence, or otherwise contributes to the creation of a Derivative Work.\n\n- The Licensee or \u201cYou\u201d: any natural or legal person who makes any usage of\nthe Software under the terms of the Licence.\n\n- Distribution and/or Communication: any act of selling, giving, lending,\nrenting, distributing, communicating, transmitting, or otherwise\nmaking available, on-line or off-line, copies of the Work or providing access\nto its essential functionalities at the disposal of any other natural or legal\nperson.\n\n\n2. Scope of the rights granted by the Licence\n\nThe Licensor hereby grants You a world-wide, royalty-free, non-exclusive,\nsub-licensable licence to do the following, for the duration of copyright\nvested in the Original Work:\n\n- use the Work in any circumstance and for all usage,\n- reproduce the Work,\n- modify the Original Work, and make Derivative Works\nbased upon the Work,\n- communicate to the public, including the right to make available or display\nthe Work or copies thereof to the public and perform publicly, as the case\nmay be, the Work,\n- distribute the Work or copies thereof,\n- lend and rent the Work or copies thereof,\n- sub-license rights in the Work or copies thereof.\n\nThose rights can be exercised on any media, supports and formats, whether now\nknown or later invented, as far as the applicable law permits so.\n\nIn the countries where moral rights apply, the Licensor waives his right to\nexercise his moral right to the extent allowed by law in order to make\neffective the licence of the economic rights here above listed.\n\nThe Licensor grants to the Licensee royalty-free, non exclusive usage rights\nto any patents held by the Licensor, to the extent necessary to make use of\nthe rights granted on the Work under this Licence.\n\n\n3. Communication of the Source Code\n\nThe Licensor may provide the Work either\nin its Source Code form, or as Executable Code. If the Work is provided as\nExecutable Code, the Licensor provides in addition a machine-readable copy of\nthe Source Code of the Work along with each copy of the Work that the Licensor\ndistributes or indicates, in a notice following the copyright notice attached\nto the Work, a repository where the Source Code is easily and freely\naccessible for as long as the Licensor continues to distribute and/or\ncommunicate the Work.\n\n\n4. Limitations on copyright\n\nNothing in this Licence is intended to deprive the Licensee of the benefits\nfrom any exception or limitation to the exclusive rights of the rights owners\nin the Original Work or Software, of the exhaustion of those rights or of\nother applicable limitations thereto.\n\n\n5. Obligations of the Licensee\n\nThe grant of the rights mentioned above is subject to some restrictions and\nobligations imposed on the Licensee. Those obligations are the following:\n\nAttribution right:\nthe Licensee shall keep intact all copyright, patent or trademarks notices and\nall notices that refer to the Licence and to the disclaimer of warranties. The\nLicensee must include a copy of such notices and a copy of the Licence with\nevery copy of the Work he/she distributes and/or communicates. The Licensee\nmust cause any Derivative Work to carry prominent notices stating that the\nWork has been modified and the date of modification.\n\nCopyleft clause:\nIf the Licensee distributes and/or communicates copies of the Original Works\nor Derivative Works based upon the Original Work, this Distribution and/or\nCommunication will be done under the terms of this Licence or of a later\nversion of this Licence unless the Original Work is expressly distributed only\nunder this version of the Licence. The Licensee (becoming Licensor) cannot\noffer or impose any additional terms or conditions on the Work or Derivative\nWork that alter or restrict the terms of the Licence.\n\nCompatibility clause:\nIf the Licensee Distributes and/or Communicates Derivative Works or copies\nthereof based upon both the Original Work and another work  licensed under a\nCompatible Licence, this Distribution and/or Communication can be done under\nthe terms of this Compatible Licence. For the sake of this clause,\n\u201cCompatible Licence\u201d refers to the licences listed in the appendix\nattached to this Licence. Should the Licensee\u2019s obligations under the\nCompatible Licence conflict with his/her obligations under this Licence, the\nobligations of the Compatible Licence shall prevail.\n\nProvision of Source Code:\nWhen distributing and/or communicating copies of the Work, the Licensee\nwill provide a machine-readable copy of the Source Code or indicate a\nrepository where this Source will be easily and freely available for as long\nas the Licensee continues to distribute and/or communicate the Work.\n\nLegal Protection:\nThis Licence does not grant permission to use the trade names,\ntrademarks, service marks, or names of the Licensor, except as required for\nreasonable and customary use in describing the origin of the Work and\nreproducing the content of the copyright notice.\n\n\n6. Chain of Authorship\n\nThe original Licensor warrants that the copyright in the Original Work\ngranted hereunder is owned by him/her or licensed to him/her and\nthat he/she has the power and authority to grant the Licence.\n\nEach Contributor warrants that the copyright in the modifications he/she\nbrings to the Work are owned by him/her or licensed to him/her and that\nhe/she has the power and authority to grant the Licence.\n\nEach time You accept the Licence, the original Licensor and subsequent\nContributors grant You a licence to their contributions to the Work, under\nthe terms of this Licence.\n\n\n7. Disclaimer of Warranty\n\nThe Work is a work in progress, which is continuously improved by numerous\ncontributors. It is not a finished work and may therefore contain defects or\n\u201cbugs\u201d inherent to this type of software development.\n\nFor the above reason, the Work is provided under the Licence on an \u201cas is\u201d\nbasis and without warranties of any kind concerning the Work, including\nwithout limitation merchantability, fitness for a particular purpose, absence\nof defects or errors, accuracy, non-infringement of intellectual property\nrights other than copyright as stated in Article 6 of this Licence.\n\nThis disclaimer of warranty is an essential part of the Licence and a\ncondition for the grant of any rights to the Work.\n\n\n8. Disclaimer of Liability\n\nExcept in the cases of wilful misconduct or damages directly caused to\nnatural persons, the Licensor will in no event be liable for any direct or\nindirect, material or moral, damages of any kind, arising out of the Licence\nor of the use of the Work, including without limitation,\ndamages for loss of goodwill, work stoppage, computer failure or malfunction,\nloss of data or any commercial damage, even if the Licensor has been advised\nof the possibility of such damage. However, the Licensor will be liable under\nstatutory product liability laws as far such laws apply to the Work.\n\n\n9. Additional agreements\n\nWhile distributing the Original Work or Derivative Works, You may choose\nto conclude an additional agreement to offer, and charge a fee for,\nacceptance of support, warranty, indemnity, or other liability\nobligations and/or services consistent with this Licence. However, in\naccepting such obligations, You may act only on your own behalf and on your\nsole responsibility, not on behalf of the original Licensor or any other\nContributor, and only if You agree to indemnify, defend, and hold each\nContributor harmless for any liability incurred by, or claims asserted against\nsuch Contributor by the fact You have accepted any such warranty or additional\nliability.\n\n\n10. Acceptance of the Licence\n\nThe provisions of this Licence can be accepted by clicking on\nan icon \u201cI agree\u201d placed under the bottom of a window displaying the text of\nthis Licence or by affirming consent in any other similar way, in accordance\nwith the rules of applicable law. Clicking on that icon indicates your clear\nand irrevocable acceptance of this Licence and\nall of its terms and conditions.\n\nSimilarly, you irrevocably accept this Licence and\nall of its terms and conditions by exercising any rights granted to You\nby Article 2 of this Licence, such as the use of the Work,\nthe creation by You of a Derivative Work or the Distribution and/or\nCommunication by You of the Work or copies thereof.\n\n\n11. Information to the public\n\nIn case of any Distribution and/or Communication of the Work by means of\nelectronic communication by You (for example, by offering to download\nthe Work from a remote location) the distribution channel or media (for\nexample, a website) must at least provide to the public the information\nrequested by the applicable law regarding the Licensor, the Licence and the\nway it may be accessible, concluded, stored and reproduced by the\nLicensee.\n\n\n12. Termination of the Licence\n\nThe Licence and the rights granted hereunder will terminate automatically\nupon any breach by the Licensee of the terms of the Licence.\n\nSuch a termination will not terminate the licences of any person who has\nreceived the Work from the Licensee under the Licence, provided such persons\nremain in full compliance with the Licence.\n\n\n13. Miscellaneous\n\nWithout prejudice of Article 9 above, the Licence represents the complete\nagreement between the Parties as to the Work licensed hereunder.\n\nIf any provision of the Licence is invalid or unenforceable under applicable\nlaw, this will not affect the validity or enforceability of the Licence as a\nwhole. Such provision will be construed and/or reformed so as necessary\nto make it valid and enforceable.\n\nThe European Commission may publish other linguistic versions and/or new\nversions of this Licence, so far this is required and reasonable, without\nreducing the scope of the rights granted by the Licence.\nNew versions of the Licence will be published with a unique version number.\n\nAll linguistic versions of this Licence, approved by the European Commission,\nhave identical value. Parties can take advantage of the linguistic version\nof their choice.\n\n\n14. Jurisdiction\n\nAny litigation resulting from the interpretation of this License, arising\nbetween the European Commission, as a Licensor, and any Licensee,\nwill be subject to the jurisdiction of the Court of Justice of the\nEuropean Communities, as laid down in article 238 of the Treaty establishing\nthe European Community.\n\nAny litigation arising between Parties, other than the European Commission,\nand resulting from the interpretation of this License, will be subject to the\nexclusive jurisdiction of the competent court where the Licensor resides or\nconducts its primary business.\n\n\n15. Applicable Law\n\nThis Licence shall be governed by the law of the European Union country where\nthe Licensor resides or has his registered office.\n\nThis licence shall be governed by the Belgian law if:\n\n- a litigation arises between the European Commission, as a Licensor, and any\nLicensee;\n- the Licensor, other than the European Commission, has no residence or\nregistered office inside a European Union country.\n\n\n===\n\n\nAppendix\n\n\n\u201cCompatible Licences\u201d according to article 5 EUPL are:\n- GNU General Public License (GNU GPL) v. 2\n- Open Software License (OSL) v. 2.1, v. 3.0\n- Common Public License v. 1.0\n- Eclipse Public License v. 1.0\n- Cecill v. 2.0\n"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/EUPL-1.1",
        "spdx_id": "https://spdx.org/licenses/EUPL-1.1",
        "type": "License",
        "value": "https://spdx.org/licenses/EUPL-1.1"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "C++ Analysis Framework for 13 TeV ATLAS Open Data"
        ],
        "type": "Text_excerpt",
        "value": "This software is licensed under the terms of the [European Union Public Licence\nV. 1.1](LICENSE)\n\n@2025\n"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "atlas-outreach-cpp-framework-13tev"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ATLAS Open Data 13 TeV analysis C++ framework"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "atlas-outreach-data-tools"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 162716,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 125865,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 10826,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 600,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "type": "Programming_language",
        "value": "C++",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "bash",
        "type": "Programming_language",
        "value": "bash",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "reference_publication": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://doi.org/10.5281/zenodo.5484047"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "zlmarshall",
          "type": "User"
        },
        "date_created": "2021-09-30T20:50:15Z",
        "date_published": "2024-11-23T22:03:40Z",
        "description": "Tagging to retain a consistent version for the 10/fb 13 TeV release",
        "html_url": "https://github.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/releases/tag/10fb-legacy",
        "name": "10fb-legacy",
        "release_id": 187131690,
        "tag": "10fb-legacy",
        "tarball_url": "https://api.github.com/repos/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/tarball/10fb-legacy",
        "type": "Release",
        "url": "https://api.github.com/repos/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/releases/187131690",
        "value": "https://api.github.com/repos/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/releases/187131690",
        "zipball_url": "https://api.github.com/repos/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/zipball/10fb-legacy"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "type": "Software_application",
        "value": "Python",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "ROOT",
        "type": "Software_application",
        "value": "ROOT",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example",
    "keywords"
  ],
  "somef_provenance": {
    "date": "2025-09-19 01:35:29",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 20
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "The analysis step <a name=\"analysis\"></a>",
        "parent_header": [
          "C++ Analysis Framework for 13 TeV ATLAS Open Data",
          "How to use the framework <a name=\"how_to\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "The analysis code is located in the `analysis` folder, with each sub-folders corresponding to a different physics analysis. The naming of the sub-folders follows a simple rule: \"NNAnalysis\", where NN can gives an indication of the process that it analyzes.\n\nEach analysis sub-folder contains the following files:\n\n+ Main code (`NNAnalysis.C`): it makes all the selection and stores the output histograms;\n+ Main header (`NNAnalysis.h`): it defines the histograms and gives access to the variables stored in the input samples;\n+ Histogram header (`NNAnalysisHistograms.h`): it defines the name of output histograms;\n+ Main-control code (`main_NNAnalysis.C`): it controls which input samples are going to be used and their location;\n+ A [bash script](https://www.shellscript.sh/) (`run.sh`), executed via a Linux/UNIX shell called [source](https://linuxize.com/post/bash-source-command/): helps you in running the analysis interactively.\n+ *In case you used the welcome script*, the output directory (`Output_NNAnalysis`) will be created: this is the place where the output of the analysis code (*one file with histograms per each input sample*) will be stored. **Warning**: if the output directory does not exist, the code will fail, please create always an empty one!\n\nAs an example, in the case of the HWWAnalysis, the sub-folder looks like this (Output_HWWAnalysis was not created yet):\n\n```\nHWWAnalysis.C  HWWAnalysis.h  HWWAnalysisHistograms.h  main_HWWAnalysis.C  run.sh\n```\n"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Hands-on analysing!",
        "parent_header": [
          "C++ Analysis Framework for 13 TeV ATLAS Open Data",
          "How to use the framework <a name=\"how_to\"></a>",
          "The analysis step <a name=\"analysis\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "In the main directory, do the first setup of the code by typing in the terminal:\n```\n./welcome.sh \n```\nor in case you have installed the source shell:\n```\nsource welcome.sh \n```\nThis will ask you if you want to create automatically all the output directories in all the 12 analysis sub-folders, or to erase their contents in case it is needed.\n\nThen, change to any of the analysis sub-folders and open using your preferred text-editor the analysis main-control code (`main_NNAnalysis.C`): it controls **the location of the input samples**, please find the line:\n```\n// path to your local directory *or* URL, please change the default one!\nTString path = \"\";\n```\nand adapt it properly to your specific case. \n\nSubsequently, execute the code via the command line using:\n```\n./run.sh\n```\nor\n```\nsource run.sh\n```\nThe script will interactively ask you if you want to run over *all the samples* one-by-one, or to run over *only data* or *only simulated samples*; you can type directly (0, 1,..) in the terminal and hit \"ENTER\" to answer. The latter options can help you to speed up the analysis, as you can run several samples in several terminals. \n\nAfter you choose the analysis, the code will compile and create the needed ROOT shared libraries, and the analysis selection will begin: it will run over each input sample defined in `main_NNAnalysis.C`.\n\nIf everything was successful, the code will create in the output directory (`Output_NNAnalysis`) a new file with the name of the corresponding sample (data, ttbar,...).\n\nTo clean all shared and linked libraries after running, you can use a script called `clean.sh` located in the main directory.\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "The plotting step <a name=\"plotting\"></a>",
        "parent_header": [
          "C++ Analysis Framework for 13 TeV ATLAS Open Data",
          "How to use the framework <a name=\"how_to\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "The plotting code is located in the `plotting` folder and contains the following files:\n\n+ Main code (`Plotting.cxx`): it makes all plot magic and controls automatically what to do for each of the analyses;\n+ Main header (`Plotting.h`): it defines all the needed bits and pieces for the plotting code;\n+ Helper directory (`list_histos`): inside it you will find control files with names `HistoList_ANALYSISNAME.txt`, each of these controls which histograms are going to be used and plotted for each analysis;\n+ Helper directory (`inputfiles`): inside it you will find control files with names `Files_ANALYSISNAME.txt`, each of these controls which input samples exactly are going to be used for this particular analysis, their cross-section and sum of weights. DO NOT CHANGE!!!\n+ bash script (`plotme.sh`): helps you in running the plotting code interactively, please use it!\n+ a makefile (`Makefile`): a set of directives used by a [make](https://www.gnu.org/software/make/manual/html_node/Introduction.html) build automation tool to generate the output executable;\n+ *in case you used the welcome script*, the output directory (**histograms**): it will contain the output plots! Do not forget to rename it in case you run over several analyses!\n"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Hands-on plotting!",
        "parent_header": [
          "C++ Analysis Framework for 13 TeV ATLAS Open Data",
          "How to use the framework <a name=\"how_to\"></a>",
          "The plotting step <a name=\"plotting\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "In the main Plotting directory, execute in the terminal:\n```\n./plotme.sh \n```\nor in case you have installed the source shell:\n```\nsource plotme.sh \n```\n\nThe script will interactively rompt you  for **two inputs** which you can type directly (0, 1,..) in the terminal and hit \"ENTER\":\n\n+ **First input**: asks which analysis out of the available ones you want to plot.\n+ **Second input**: asks for the location of the `Output_NNAnalysis` directory that was created by running the Analysis code.\n\nAfter you input the information, the code will compile and create the needed ROOT shared libraries, and the plotting will begin. If everything was successful, the code will create in the output directory (`histograms`) the corresponding plots defined in `HistoList_ANALYSISNAME.txt`.\n\nTo clean all shared and linked libraries after running, you can use a script called *clean.sh* located in the main directory.\n"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Additional information about the plotting code",
        "parent_header": [
          "C++ Analysis Framework for 13 TeV ATLAS Open Data",
          "How to use the framework <a name=\"how_to\"></a>",
          "The plotting step <a name=\"plotting\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "+ In case you want to see the data and MC event yields: change \"#define YIELDS 0\" to \"#define YIELDS 1\" in `Plotting.cxx` and remake the plots;\n\n+ In case you want to add the normalised signal to the plots: change \"#define NORMSIG 0\" to \"#define NORMSIG 1\" in `Plotting.cxx` and remake the plots;\n\n+ In case something is not working: by changing \"#define DEBUG 0\" to \"#define DEBUG 1\" in `Plotting.cxx`, a lot of debug information will appear, this can help you trace the origin of any possible problem (usually, these could be: the directory *histograms* does not exist, a wrong path for the location of the input files is given, a wrong or non-existent histogram name is requested, one or several input files from the analysis are missing or failed,..) \n\n+ In case you want to compile the code instead of using the plotme script, type \"make clean; make\" and then run the code with *./plot [NNAnalysis]  [location of Output_NNAnalysis]*\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How to add a new variable to the analysis <a name=\"new_variable\"></a>",
        "parent_header": [
          "C++ Analysis Framework for 13 TeV ATLAS Open Data",
          "How to use the framework <a name=\"how_to\"></a>"
        ],
        "type": "Text_excerpt",
        "value": "To add a new variable called *new_variable* (which, as an example, will contain the information of *something*), save it as a new histogram called *h_new* and make a plot of it, follow the instructions below:\n\n(1) Add in the header (`NNAnalysis.h`) the new histogram (in the function `public TSelector` where you see the definitions of other histograms):\n```\nTH1F *h_new      = 0;\n```\n\n(2) Add in the histogram header (`NNAnalysisHistograms.h`) four new lines:\n\ninside the function `define_histograms()` add:\n```\nh_new            = new TH1F(\"h_new\", \"Description of the new variable; X axis name ; Y axis name \", number of bins , minimum bin value , maximum bin value);\n```\n\ninside the function `FillOutputList()` add:\n```\nGetOutputList()->Add(h_new);\n```\n\ninside the function `WriteHistograms()` add:\n```\nh_new->Write();\n```\n\ninside the function `FillHistogramsGlobal()` add:\n```\nif (s.Contains(\"h_new\")) h_new->Fill(m,w);\n```\n\n(3) And finally, inside the main analysis code `NNAnalysis.C` you need to define a new variable (in this case an integer called *new_variable*), connect it to the value of the branch *something* that *exists* in the input samples (those are listed in the analysis header `NNAnalysis.h` after \"Declaration of leaf types\") and save the newly created histogram inside the function *Process* after the line that reads the content of the TTree `(fChain->GetTree()->GetEntries()>0)`\n\n```\nint new_variable = something;\n\nFillHistogramsGlobal( new_variable, weight, \"h_new\");\n```\nwhere the *weight* is the multiplication of scale factors and Monte Carlo weight.\n\n(4) Now run the analysis code as usual again over all the samples and check that the new histogram *h_new* appears in the produced output files.\n\n(5) *Analysis* part is done, go to *Plotting* part and in the *list_histos* directory in `HistoList_ANALYSISNAME.txt` file add one new line:\n```\nh_new\n```\n(with no empty lines before or after it!). \n\n(6) Execute the plotting code as usual (no need to change the code itself at all), and you will find the new histogram in *histograms/h_new.png*!\n\n---\n"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "1.1"
      },
      "source": "https://raw.githubusercontent.com/atlas-outreach-data-tools/atlas-outreach-cpp-framework-13tev/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
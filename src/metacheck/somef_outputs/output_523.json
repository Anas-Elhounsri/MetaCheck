{
  "application_domain": [
    {
      "confidence": 0.9543796565892212,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "anett.seeland@tik.uni-stuttgart.de",
        "type": "String",
        "value": "Anett Seeland"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "dorothea.iglezakis@ub.uni-stuttgart.de",
        "type": "String",
        "value": "Dorothea Iglezakis"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/izus-fokus/metadata2dataverse"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/izus-fokus/metadata2dataverse"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/.github/workflows/request.yml"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/.github/workflows/test-app.yml"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/.github/workflows/createUI.yml"
      },
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2022-04-07T09:47:48Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2020-05-20"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2022-05-31"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-09-09T08:46:34Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2022-05-31"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A mapper of structural metadata to Dataverse's JSON metadata file format."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Conversion of structured metadata into a Dataverse-compliant JSON file"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/izus-fokus/metadata2dataverse/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/izus-fokus/metadata2dataverse/releases"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/izus-fokus/metadata2dataverse"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/izus-fokus/metadata2dataverse/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "izus-fokus/metadata2dataverse"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Metadata To Dataverse"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/requirements.txt",
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/izus-fokus/metadata2dataverse/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/izus-fokus/metadata2dataverse/issues"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2022 University of Stuttgart \u00b7 IZUS \u00b7 FoKUS\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/MIT",
        "spdx_id": "https://spdx.org/licenses/MIT",
        "type": "License",
        "value": "https://spdx.org/licenses/MIT"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "metadata2dataverse"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "metadata2dataverse"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "izus-fokus"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 143931,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 573,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 88,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "type": "Programming_language",
        "value": "Python",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ffritze",
          "type": "User"
        },
        "date_created": "2025-09-09T08:46:28Z",
        "date_published": "2025-09-09T10:27:42Z",
        "html_url": "https://github.com/izus-fokus/metadata2dataverse/releases/tag/v25.9.3",
        "name": "v25.9.3",
        "release_id": 245792228,
        "tag": "v25.9.3",
        "tarball_url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/tarball/v25.9.3",
        "type": "Release",
        "url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/releases/245792228",
        "value": "https://api.github.com/repos/izus-fokus/metadata2dataverse/releases/245792228",
        "zipball_url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/zipball/v25.9.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ffritze",
          "type": "User"
        },
        "date_created": "2025-09-04T11:24:59Z",
        "date_published": "2025-09-04T11:33:15Z",
        "html_url": "https://github.com/izus-fokus/metadata2dataverse/releases/tag/v25.9.2",
        "name": "v25.9.2",
        "release_id": 244748146,
        "tag": "v25.9.2",
        "tarball_url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/tarball/v25.9.2",
        "type": "Release",
        "url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/releases/244748146",
        "value": "https://api.github.com/repos/izus-fokus/metadata2dataverse/releases/244748146",
        "zipball_url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/zipball/v25.9.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ffritze",
          "type": "User"
        },
        "date_created": "2025-09-03T08:06:02Z",
        "date_published": "2025-09-03T08:55:59Z",
        "html_url": "https://github.com/izus-fokus/metadata2dataverse/releases/tag/v25.9.1",
        "name": "v25.9.1",
        "release_id": 244368209,
        "tag": "v25.9.1",
        "tarball_url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/tarball/v25.9.1",
        "type": "Release",
        "url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/releases/244368209",
        "value": "https://api.github.com/repos/izus-fokus/metadata2dataverse/releases/244368209",
        "zipball_url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/zipball/v25.9.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ffritze",
          "type": "User"
        },
        "date_created": "2025-08-12T11:49:32Z",
        "date_published": "2025-08-14T10:13:19Z",
        "html_url": "https://github.com/izus-fokus/metadata2dataverse/releases/tag/v25.8.1a",
        "name": "v25.8.1a",
        "release_id": 239924918,
        "tag": "v25.8.1a",
        "tarball_url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/tarball/v25.8.1a",
        "type": "Release",
        "url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/releases/239924918",
        "value": "https://api.github.com/repos/izus-fokus/metadata2dataverse/releases/239924918",
        "zipball_url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/zipball/v25.8.1a"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ffritze",
          "type": "User"
        },
        "date_created": "2025-08-12T11:49:32Z",
        "date_published": "2025-08-12T12:44:15Z",
        "html_url": "https://github.com/izus-fokus/metadata2dataverse/releases/tag/v25.8.1",
        "name": "v25.8.1",
        "release_id": 239349433,
        "tag": "v25.8.1",
        "tarball_url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/tarball/v25.8.1",
        "type": "Release",
        "url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/releases/239349433",
        "value": "https://api.github.com/repos/izus-fokus/metadata2dataverse/releases/239349433",
        "zipball_url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/zipball/v25.8.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ffritze",
          "type": "User"
        },
        "date_created": "2025-08-01T14:20:43Z",
        "date_published": "2025-08-01T14:45:09Z",
        "html_url": "https://github.com/izus-fokus/metadata2dataverse/releases/tag/v25.8",
        "name": "v25.8",
        "release_id": 236914031,
        "tag": "v25.8",
        "tarball_url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/tarball/v25.8",
        "type": "Release",
        "url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/releases/236914031",
        "value": "https://api.github.com/repos/izus-fokus/metadata2dataverse/releases/236914031",
        "zipball_url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/zipball/v25.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "ffritze",
          "type": "User"
        },
        "date_created": "2025-07-30T07:30:56Z",
        "date_published": "2025-07-30T08:19:34Z",
        "html_url": "https://github.com/izus-fokus/metadata2dataverse/releases/tag/v25.7",
        "name": "v25.7",
        "release_id": 236180445,
        "tag": "v25.7",
        "tarball_url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/tarball/v25.7",
        "type": "Release",
        "url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/releases/236180445",
        "value": "https://api.github.com/repos/izus-fokus/metadata2dataverse/releases/236180445",
        "zipball_url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/zipball/v25.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "aseeland",
          "type": "User"
        },
        "date_created": "2024-02-22T15:20:38Z",
        "date_published": "2024-02-22T15:27:31Z",
        "description": "Added support for rdf / json-ld as input metadata format.\r\nBugfixing\r\nUpdating dependencies",
        "html_url": "https://github.com/izus-fokus/metadata2dataverse/releases/tag/v0.8",
        "name": "v0.8",
        "release_id": 143207119,
        "tag": "v0.8",
        "tarball_url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/tarball/v0.8",
        "type": "Release",
        "url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/releases/143207119",
        "value": "https://api.github.com/repos/izus-fokus/metadata2dataverse/releases/143207119",
        "zipball_url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/zipball/v0.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "aseeland",
          "type": "User"
        },
        "date_created": "2022-06-14T10:15:50Z",
        "date_published": "2022-06-14T16:13:00Z",
        "description": "A first prototype of metadata2dataverse",
        "html_url": "https://github.com/izus-fokus/metadata2dataverse/releases/tag/v0.7",
        "name": "v0.7",
        "release_id": 69421513,
        "tag": "v0.7",
        "tarball_url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/tarball/v0.7",
        "type": "Release",
        "url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/releases/69421513",
        "value": "https://api.github.com/repos/izus-fokus/metadata2dataverse/releases/69421513",
        "zipball_url": "https://api.github.com/repos/izus-fokus/metadata2dataverse/zipball/v0.7"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "Flask",
        "type": "Software_application",
        "value": "Flask==3.1.2",
        "version": "==3.1.2"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "jsonpath-python",
        "type": "Software_application",
        "value": "jsonpath-python==1.0.6",
        "version": "==1.0.6"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "lxml",
        "type": "Software_application",
        "value": "lxml==6.0.1",
        "version": "==6.0.1"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "marshmallow",
        "type": "Software_application",
        "value": "marshmallow",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "marshmallow-oneofschema @ git+https://github.com/doigl/marshmallow-oneofschema.git@type_field_remove#eeg=marshmallow-oneofschema",
        "type": "Software_application",
        "value": "marshmallow-oneofschema @ git+https://github.com/doigl/marshmallow-oneofschema.git@type_field_remove#eeg=marshmallow-oneofschema",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pyaml",
        "type": "Software_application",
        "value": "pyaml==25.7.0",
        "version": "==25.7.0"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "python-dotenv",
        "type": "Software_application",
        "value": "python-dotenv",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PyYAML",
        "type": "Software_application",
        "value": "PyYAML==6.0.2",
        "version": "==6.0.2"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "requests",
        "type": "Software_application",
        "value": "requests",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "validators",
        "type": "Software_application",
        "value": "validators==0.35.0",
        "version": "==0.35.0"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "chevron",
        "type": "Software_application",
        "value": "chevron==0.14.0",
        "version": "==0.14.0"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "rdflib",
        "type": "Software_application",
        "value": "rdflib==7.1.4",
        "version": "==7.1.4"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "python-dateutil",
        "type": "Software_application",
        "value": "python-dateutil==2.9.0.post0",
        "version": "==2.9.0.post0"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "gunicorn",
        "type": "Software_application",
        "value": "gunicorn",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pytest",
        "type": "Software_application",
        "value": "pytest",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/requirements.txt",
      "technique": "code_parser"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Use running service",
        "parent_header": [
          "Metadata To Dataverse",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "You need to know the base URL where the tool is deployed to get started. Ask your local RDM team if and where they host the service. \nThen you can find a specification of all endpoints here.\n"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Endpoints",
        "parent_header": [
          "Metadata To Dataverse",
          "Usage",
          "Use running service"
        ],
        "type": "Text_excerpt",
        "value": "see [OpenAPI documentation for more details](https://izus-fokus.github.io/metadata2dataverse/)\n"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "POST /metadata/<string:scheme>",
        "parent_header": [
          "Metadata To Dataverse",
          "Usage",
          "Use running service",
          "Endpoints",
          "Metadata conversion"
        ],
        "type": "Text_excerpt",
        "value": "Identification of the scheme in which the posted metadata file is stored.\n- Query parameter method: Specifies the output format.\n  - edit:compatible with the edit metadata endpoint,\n  - update:compatible with the update metadata endpoint (default),\n  - create:compatible to create a new record on Dataverse\n- Query parameter verbose (boolean, default=False): Specifies whether additional information about the success should be given\n- Body: Metadata file to be converted with Content-Type: text/plain, application/xml or application/json or application/jsonld\n- Output: Dataverse-compatible JSON (verbose=false) or\n  ```\n  {\n   'success': <True|False>,\n   'messages': [\n      {'level': <error|warning|message>,\n       'message': <textual message>\n       },\n    'result': <Dataverse-compatible JSON-Structure to be used for Edit, Update or Create-Endpoints>\n   ]\n  ```\n"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Run tests",
        "parent_header": [
          "Metadata To Dataverse",
          "Usage",
          "Host your own service",
          "Configuring credentials_default.json"
        ],
        "type": "Text_excerpt",
        "value": "Rename the file ```credentials_default.json``` into ```credentials.json``` and insert base_url, api_key and the DOI of a test dataset. (See the [Dataverse Guides](https://guides.dataverse.org/en/latest/user/account.html#api-token) on how to create an API Token.)\n\nRun tests (in the folder test): ```python -m unittest ```\n"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Build and run as a docker container",
        "parent_header": [
          "Metadata To Dataverse",
          "Usage",
          "Host your own service",
          "Configuring credentials_default.json"
        ],
        "type": "Text_excerpt",
        "value": "```\ndocker build -t <image-name> .\ndocker run -e HOST_IP='0.0.0.0' -p 5000:5000/tcp <image-name> \n```\nwhere ```<image-name>``` is a name of your choice, e.g. \"metadata2dataverse\".\n"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "installation",
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example",
    "keywords"
  ],
  "somef_provenance": {
    "date": "2025-09-19 02:07:07",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "Metadata To Dataverse"
        ],
        "type": "Text_excerpt",
        "value": "There are several options using this tool: Use it as [running service of your institution](#use-running-service), [deploy the tool yourself](#host-your-own-service), or use the provided [Github Action](#github-action).\n"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Use running service",
        "parent_header": [
          "Metadata To Dataverse",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "You need to know the base URL where the tool is deployed to get started. Ask your local RDM team if and where they host the service. \nThen you can find a specification of all endpoints here.\n"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Endpoints",
        "parent_header": [
          "Metadata To Dataverse",
          "Usage",
          "Use running service"
        ],
        "type": "Text_excerpt",
        "value": "see [OpenAPI documentation for more details](https://izus-fokus.github.io/metadata2dataverse/)\n"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "POST /metadata/<string:scheme>",
        "parent_header": [
          "Metadata To Dataverse",
          "Usage",
          "Use running service",
          "Endpoints",
          "Metadata conversion"
        ],
        "type": "Text_excerpt",
        "value": "Identification of the scheme in which the posted metadata file is stored.\n- Query parameter method: Specifies the output format.\n  - edit:compatible with the edit metadata endpoint,\n  - update:compatible with the update metadata endpoint (default),\n  - create:compatible to create a new record on Dataverse\n- Query parameter verbose (boolean, default=False): Specifies whether additional information about the success should be given\n- Body: Metadata file to be converted with Content-Type: text/plain, application/xml or application/json or application/jsonld\n- Output: Dataverse-compatible JSON (verbose=false) or\n  ```\n  {\n   'success': <True|False>,\n   'messages': [\n      {'level': <error|warning|message>,\n       'message': <textual message>\n       },\n    'result': <Dataverse-compatible JSON-Structure to be used for Edit, Update or Create-Endpoints>\n   ]\n  ```\n"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Deploy",
        "parent_header": [
          "Metadata To Dataverse",
          "Usage",
          "Host your own service"
        ],
        "type": "Text_excerpt",
        "value": "Install dependencies: ```pip install -r requirements.txt```\n\nFor development purposes or for testing run the server (in the folder v1) directly using flask: ```python __init__.py```\nFor production a different web server like [gunicorn](https://flask.palletsprojects.com/en/2.0.x/deploying/wsgi-standalone/) should be used.\n"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configuring credentials_default.json",
        "parent_header": [
          "Metadata To Dataverse",
          "Usage",
          "Host your own service"
        ],
        "type": "Text_excerpt",
        "value": "| Parameter|Details|\n|-----|--------|\n|base_url | URL of the dataverse instance. For eg: https://darus.uni-stuttgart.de/ |\n\nRename the file ```credentials_default.json``` into ```credentials.json```\n"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "GitHub Action",
        "parent_header": [
          "Metadata To Dataverse",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "This repository provides a GitHub Action that can be used to run the POST /metadata/<string:scheme> endpoint,\nand then optionally update a dataset on Dataverse with the output metadata. \nIn this way one can convert metadata in the form of a codemeta-json-file into a Dataverse compatiple json-file. \n\nBefore using this action, the following steps have to be taken:\n- First, you have to create a codemeta-file inside your repository. Have a look [here](https://codemeta.github.io/codemeta-generator/) for a generator.\n- Second, if you want to update metadata of an existing Dataverse dataset, you need the PID (e.g., DOI) of this dataset. \n  Additionally, add your API-token from Dataverse as secret to your repository and call it DATAVERSE_API_TOKEN (or give it a different name, but remember to use the correct designation as input for api-key).\n"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Inputs",
        "parent_header": [
          "Metadata To Dataverse",
          "Usage",
          "GitHub Action"
        ],
        "type": "Text_excerpt",
        "value": "|Parameter| Required? | Description | Default |\n|-----|----|------|--------|\n|path |**Required**| path to the codemeta-json file in the repository | Default 'codemeta.json' |\n|dataverse-url |**Optional**| Server URL to Dataverse, e.g. 'https://darus.uni-stuttgart.de' | |\n|doi|**Optional**| PID of the dataset in Dataverse, you want to update | |\n|api-key|**Optional**| API-Token from Dataverse, you entered to the repository as secret. Enter it to the action in the form of: \"api-key: '${{ secrets.DATAVERSE_API_TOKEN }}'\". | |\n"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Outputs",
        "parent_header": [
          "Metadata To Dataverse",
          "Usage",
          "GitHub Action"
        ],
        "type": "Text_excerpt",
        "value": "|Parameter | Description |\n|metadata-mapper-result | The result of the POST-request to /metadata/codemeta?method=edit . |\n|post-result| The result of the PUT-request to the editMetadata-endpoint of Dataverse with replace=True\n"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example Usage",
        "parent_header": [
          "Metadata To Dataverse",
          "Usage",
          "GitHub Action"
        ],
        "type": "Text_excerpt",
        "value": "```\non: [push]\n\njobs:\n  api_request_job:\n    runs-on: ubuntu-latest\n    name: A job to make a post request to the MetadataMapper\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v3\n      - name: MetadataMapper Action Step\n        uses: izus-fokus/metadata2dataverse@v0.8\n        id: api\n        with:\n          path: 'codemeta.json'\n          dataverse-url: 'https://darus.uni-stuttgart.de'\n          doi: '10.18419/darus-2935'\n          api-key: ${{ secrets.DATAVERSE_API_TOKEN }}\n      # Use the output from the `MetadataMapper` step\n      - name: Get the output\n        run: |\n          echo ${{ steps.api.outputs.metadata-mapper-result }}\n          echo ${{ steps.api.outputs.post-result }}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Configuration",
        "parent_header": [
          "Metadata To Dataverse",
          "Usage"
        ],
        "type": "Text_excerpt",
        "value": "After installing the dependencies but before running the service you might want to configure it.\nThere are two types of resources that you can replace to customize the tool for your individual dataverse installation:\n* the dataverse metadata block definitions (.tsv files)\n* the mapping configurations for the structure metadata formats you want to use as input (.yaml files)\n\nReplace the tsv files in ```v1/resources/tsv/```. In this way the correct dataverse metadata definitions for your dataverse installation are already loaded when the service starts.\nAnalogous you can replace the yaml files in ```v1/resources/config```.\n"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "How to write mapping files",
        "parent_header": [
          "Metadata To Dataverse",
          "Usage",
          "Configuration"
        ],
        "type": "Text_excerpt",
        "value": "The heart of metadata2dataverse is the mapping of structured metadata input fields (```source_keys```) to dataverse metadata fields (```target_keys```).\nThe tool is flexible so that various mappings can be defined as long as the input file format is supported.\n\nAt the moment the following formats are supported:\n* xml\n* json\n* [ExtractIng](https://github.com/bjschembera/ExtractIng) txt format\n\nEach mapping file starts with some header keys providing general information:\n\n|Key | Value |\n|----|-------|\n|scheme| Name of the structured metadata this mapping configuration is for. Is used as path parameter in REST calls, so used symbols should be URL compatible. Example: 'codemeta' |\n|description| Human readable description of the scheme, containing, e.g., informations about scheme versions this mapping file is for. |\n|format| MIME type of the structured metadata. One of: ```text/xml```, ```application/json```, ```text/plain```. |\n|reference (optional) | URL of further information or related publication to this scheme. |\n|namespaces (optional)| List of xml namespaces in the form ```abbreviation=URI```. Example: ```[pm=http://www.loc.gov/premis/v3]``` |\n\nThen, the keys ```mapping``` and ```rules``` define lists that express the translation of source keys to target keys. Most of the parameters of each item have defaults to facilitate compact definitions.\n\nEach ```mapping``` list item can have the following keys:\n\n|Key | Required? | Value | Default\n|----|-------|-----------|---------|\n|target_key | mandatory | string or list of strings, depending on ```type```. Dataverse metadata dataset field name as specified in a tsv file. | - |\n|source_key | optional | string or list of strings, depending on ```type```. The values are written as keys in case format is 'text/plain', in [xpath syntax](https://lxml.de/) in case format is 'text/xml', and in [json path syntax](https://github.com/zhangxianbing/jsonpath-python) in case format is 'application/json'. | target_key |\n|type | optional | One of 'copy', 'translate', 'merge', 'addition' | 'copy' if ```target_key``` is given, but not ```source_key```; 'translate' if both ```target_key``` and ```source_key``` are given. |\n|priority | optional | integer specifying which definition should be preferred if more than one has the same ```target_key```; the value with the highest priority is taken | 1 |\n|join_symbol | optional | if several ```source_keys``` shall be combined (```type``` 'merge'), the symbol between the values. | ' ' (space) |\n|class | optional | class name inside the [AdditonTranslators module](/v1/models/AdditionTranslators.py), to generate values when a specific ```source key``` occurs (```type``` 'addition'). One of 'DateAdder', 'RoleNameAdder', 'IdentifierAdder'. | - |\n\nEach ```rules``` list item can have the following keys:\n\n|Key | Required? | Value | Default\n|----|-------|-----------|---------|\n|trigger | mandatory | ```source_key```; the values of this define the mapping. | - |\n|priority | optional | integer specifying which definition should be preferred if more than one has the same ```trigger``` | 1 |\n| \\*; values of ```trigger``` | mandatory | list of mapping definitions (see table above) | - |\n\n"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "0.0.1"
      },
      "source": "https://raw.githubusercontent.com/izus-fokus/metadata2dataverse/main/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
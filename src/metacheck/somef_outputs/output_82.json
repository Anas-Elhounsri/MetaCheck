{
  "application_domain": [
    {
      "confidence": 0.8629837575462365,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "jonas.lieth@gesis.org",
        "type": "String",
        "value": "Jonas Lieth"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "format": "bibtex",
        "type": "File_dump",
        "value": "year <- format(Sys.time(), \"%Y\")\nabs <- trimws(gsub(\"\\\\s\", \" \", meta$Description))\nabs <- gsub(\"'\", \"\", abs)\npkg <- meta$Package\ntitle <- gsub(\"'\", \"\", meta$Title)\ndoi <- paste0(\"10.32614/CRAN.package.\", pkg)\n\nbibentry(\n  \"Manual\",\n  header = sprintf(\"To cite '%s' in publications use:\", pkg),\n  title = sprintf(\"{%s: %s}\", pkg, title),\n  doi = doi,\n  author = person(\"Jonas\", \"Lieth\"),\n  year = year,\n  version = meta$Version,\n  url = unlist(strsplit(meta$URL, \",\"))[[1]],\n  abstract = abs,\n  key = paste0(\"R-\", pkg)\n)\n"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/inst/CITATION",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rOpenGov/r311"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rOpenGov/r311"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rOpenGov/r311"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-03-20T17:29:37Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-04-16T00:09:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "R interface to the open311 standard for civic service requests"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/DESCRIPTION",
        "type": "String",
        "value": "Access and handle APIs that use the international 'open311'\n    'GeoReport v2' standard for civic issue tracking\n    <https://wiki.open311.org/GeoReport_v2/>. Retrieve civic service types\n    and request data. Select and add available 'open311' endpoints and\n    jurisdictions. Implicitly supports custom queries and 'open311'\n    extensions.  Requires a minimal number of hard dependencies while\n    still allowing the integration in common R formats ('xml2', 'tibble',\n    'sf')."
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Access and handle APIs that use the international 'open311' 'GeoReport v2' standard for civic issue tracking <https://wiki.open311.org/GeoReport_v2/>. Retrieve civic service types and request data. Select and add available 'open311' endpoints and jurisdictions. Implicitly supports custom queries and 'open311' extensions. Requires a minimal number of hard dependencies while still allowing the integration in common R formats ('xml2', 'tibble', 'sf')."
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9942786313343568,
      "result": {
        "original_header": "r311 <img align=\"right\" height=\"150\" src=\"man/figures/logo.png\">",
        "type": "Text_excerpt",
        "value": "\n`{r311}` is an R interface to the international standard\n[open311](https://www.open311.org/). Open311 APIs are used for civic\nissue management and public service communication. The standard allows\nadministrations to better manage citizen requests, citizens to more\neasily submit requests, and (hence this package) researchers and data\nscientists to access data regarding public service communication.\n`{r311}` supports the seamless management and supplementation of\navailable endpoints, the selection of appropriate APIs to access, and\nthe retrieval of civic service and request data. Custom queries and\nextensions (e.g.\u00a0from CitySDK) are implicitly supported. `{r311}` is\ndesigned to require a minimal amount of dependencies, but allow for easy\nintegration into common R frameworks such as the tidyverse, `sf` or\n`xml2`.\n \n"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.893376284856005,
      "result": {
        "original_header": "API upkeep",
        "type": "Text_excerpt",
        "value": "`{r311}` is powered by a JSON of available APIs (see\n[here](https://github.com/rOpenGov/r311/blob/main/inst/endpoints.json)).\nThis list does not claim to be comprehensive nor up-to-date at all times\nbut is updated from time to time. If an API is found to be unavailable\nfor an extended period of time, it will be marked as \u201cquestioning\u201d.\nQuestionable APIs will be removed on the next release. \nIf you know about a stable open311 API that should be added to the list,\nplease consider opening an issue. Otherwise, you can also just use the\n`o311_add_endpoint()` function to add the API locally.\n \n"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rOpenGov/r311/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/rOpenGov/r311/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rOpenGov/r311"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "r311 "
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "description",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rOpenGov/r311/main/DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/DESCRIPTION",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/DESCRIPTION",
        "type": "Url",
        "value": "DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "homepage": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://ropengov.github.io/r311/"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "r311"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://ropengov.github.io/rogtemplate/reference/figures/ropengov-badge.svg"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "r311 <img align=\"right\" height=\"150\" src=\"man/figures/logo.png\">"
        ],
        "type": "Text_excerpt",
        "value": "You can install `{r311}` from CRAN with:\n\n``` r\ninstall.packages(\"r311\")\n```\n\nOr you can install the development version from\n[GitHub](https://github.com/) with:\n\n``` r\n# install.packages(\"remotes\")\nremotes::install_github(\"rOpenGov/r311\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/rOpenGov/r311/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rOpenGov/r311/issues"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rOpenGov/r311/issues"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "r, r-package, rstats"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "ropengov"
        ]
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "File_dump",
        "value": "# MIT License\n\nCopyright (c) 2025 r311 authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/LICENSE.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/DESCRIPTION",
        "type": "String",
        "value": "MIT + file LICENSE"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/MIT",
        "spdx_id": "https://spdx.org/licenses/MIT",
        "type": "License",
        "value": "https://spdx.org/licenses/MIT"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rOpenGov/r311/main/man/figures/logo.png"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "r311"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "r311: Interface to the 'open311' Standard"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "rOpenGov"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/DESCRIPTION",
        "type": "String",
        "value": "r311"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 46608,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "type": "Programming_language",
        "url": "https://r-project.org",
        "value": "R",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rOpenGov/r311/main/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rOpenGov/r311/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JsLth",
          "type": "User"
        },
        "date_created": "2025-04-14T22:46:11Z",
        "date_published": "2025-04-16T00:08:43Z",
        "description": "* API list upkeep\n  * Added: Espoo, Oulu (#2)\n  * Changed: Turku (#2)\n  * Deprecated: Ottawa, Siegburg, Northfield, Annaberg-Buchholz\n* Introduced deprecation system of available APIs\n  * Added a key \"questioned\" to the API list which signals that an API might be abandoned\n  * Added a key \"deprecated\" to the API list which signals that an API is no longer functional\n  * `o311_api()` now warns when an API is questioned\n  * `o311_api()` now aborts when an API is deprecated\n* Added pretty formatting of error messages\n* Changed heuristics in `o311_request_all()` to compare requests using set equality of request IDs instead of exact object equality\n* Fix bug where formal checks in `validate_endpoints()` create an invalid dataframe\n* Ensure that API error handling always yields a valid condition object\n* `o311_api` does not match regular expressions anymore\n* `o311_ok(error = TRUE)` now returns an error instead of an error object\n* Add an explanatory note if an HTTP error is unknown\n* Added a CITATION file (#3)\n* Added a codemeta file\n* Add precomputed vignettes\n",
        "html_url": "https://github.com/rOpenGov/r311/releases/tag/v0.4.3",
        "name": "r311 0.4.3",
        "release_id": 212652854,
        "tag": "v0.4.3",
        "tarball_url": "https://api.github.com/repos/rOpenGov/r311/tarball/v0.4.3",
        "type": "Release",
        "url": "https://api.github.com/repos/rOpenGov/r311/releases/212652854",
        "value": "https://api.github.com/repos/rOpenGov/r311/releases/212652854",
        "zipball_url": "https://api.github.com/repos/rOpenGov/r311/zipball/v0.4.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "JsLth",
          "type": "User"
        },
        "date_created": "2024-07-15T09:47:36Z",
        "date_published": "2024-07-17T13:34:39Z",
        "description": "* Initial CRAN submission.\n",
        "html_url": "https://github.com/rOpenGov/r311/releases/tag/v0.3.7",
        "name": "r311 0.3.7",
        "release_id": 165852857,
        "tag": "v0.3.7",
        "tarball_url": "https://api.github.com/repos/rOpenGov/r311/tarball/v0.3.7",
        "type": "Release",
        "url": "https://api.github.com/repos/rOpenGov/r311/releases/165852857",
        "value": "https://api.github.com/repos/rOpenGov/r311/releases/165852857",
        "zipball_url": "https://api.github.com/repos/rOpenGov/r311/zipball/v0.3.7"
      },
      "technique": "GitHub_API"
    }
  ],
  "repository_status": [
    {
      "confidence": 1,
      "result": {
        "description": "Active \u2013 The project has reached a stable, usable\nstate and is being actively\ndeveloped.",
        "type": "Url",
        "value": "https://www.repostatus.org/#active"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 00:23:21",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 3
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "r311 <img align=\"right\" height=\"150\" src=\"man/figures/logo.png\">"
        ],
        "type": "Text_excerpt",
        "value": "The following example loads `{r311}`, sets up a jurisdiction and\nretrieves a small amount of data on service tickets in Cologne, Germany.\n\n``` r\nlibrary(r311)\n\no311_api(\"Cologne\")\no311_requests()\n#> Simple feature collection with 100 features and 11 fields\n#> Geometry type: POINT\n#> Dimension:     XY\n#> Bounding box:  xmin: 6.821324 ymin: 50.86269 xmax: 7.091088 ymax: 51.05102\n#> Geodetic CRS:  WGS 84\n#> # A tibble: 100 \u00d7 12\n#>    service_request_id title              description address_string service_name\n#>    <chr>              <chr>              <chr>       <chr>          <chr>       \n#>  1 30964-2024         #30964-2024 Leuch\u2026 \"Die Stras\u2026 51061 K\u00f6ln - \u2026 Leuchtmitte\u2026\n#>  2 30965-2024         #30965-2024 Stra\u00df\u2026 \"Das Schil\u2026 51103 K\u00f6ln - \u2026 Stra\u00dfenbaus\u2026\n#>  3 30966-2024         #30966-2024 Defek\u2026 \"Auf dem R\u2026 51103 K\u00f6ln - \u2026 Defekte Obe\u2026\n#>  4 30967-2024         #30967-2024 Wilde\u2026 \"Der M\u00fcll \u2026 50859 K\u00f6ln - \u2026 Wilder M\u00fcll \n#>  5 30968-2024         #30968-2024 Schro\u2026 \"Ein fahru\u2026 51069 K\u00f6ln - \u2026 Schrottfahr\u2026\n#>  6 30969-2024         #30969-2024 Schro\u2026 \"Sehr geeh\u2026 50733 K\u00f6ln - \u2026 Schrott-Kfz \n#>  7 30970-2024         #30970-2024 Wilde\u2026  <NA>       51105 K\u00f6ln - \u2026 Wilder M\u00fcll \n#>  8 30971-2024         #30971-2024 Schro\u2026 \"Schrottra\u2026 50935 K\u00f6ln - \u2026 Schrottfahr\u2026\n#>  9 30972-2024         #30972-2024 Graff\u2026 \"grafitti \u2026 50733 K\u00f6ln - \u2026 Graffiti    \n#> 10 30973-2024         #30973-2024 Wilde\u2026 \"K\u00fchlschra\u2026 50672 K\u00f6ln - \u2026 Wilder M\u00fcll \n#> # \u2139 90 more rows\n#> # \u2139 7 more variables: requested_datetime <chr>, updated_datetime <chr>,\n#> #   status <chr>, media_url <chr>, status_note <chr>, service_code <chr>,\n#> #   geometry <POINT [\u00b0]>\n```\n"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/DESCRIPTION",
        "type": "String",
        "value": "0.4.3"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "0.4.3"
      },
      "source": "https://raw.githubusercontent.com/rOpenGov/r311/main/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
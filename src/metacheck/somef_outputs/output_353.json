{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "affiliation": "Department of Mechanical and Aerospace Engineering, The George Washington University, Washington, DC, USA",
        "email": "pychuang@gwu.edu",
        "identifier": "https://orcid.org/0000-0001-6330-2709",
        "type": "String",
        "value": "Pi-Yueh Chuang"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "G2 Integrated Solutions, Houston, TX, USA",
        "email": "Tracy.Thorleifson@g2-is.com",
        "type": "String",
        "value": "Tracy Thorleifson"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Department of Mechanical and Aerospace Engineering, The George Washington University, Washington, DC, USA",
        "email": "labarba@gwu.edu",
        "identifier": "http://orcid.org/0000-0001-5812-2711",
        "type": "String",
        "value": "Lorena A. Barba"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\npychuang@gwu.edu or labarba@gwu.edu.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\n[https://www.contributor-covenant.org/version/2/0/code_of_conduct.html][v2.0].\n\nCommunity Impact Guidelines were inspired by \n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available \nat [https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.0]: https://www.contributor-covenant.org/version/2/0/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n\n"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/barbagroup/geoclaw-landspill"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/barbagroup/geoclaw-landspill"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "contact": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contact",
        "parent_header": [
          "geoclaw-landspill"
        ],
        "type": "Text_excerpt",
        "value": "Pi-Yueh Chuang: pychuang@gwu.edu\n"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/.github/workflows/ci.yml"
      },
      "technique": "file_exploration"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Contributing\n============\n\nThank you for considering contributing to this project. *geoclaw-landspil* is an\nopen-source project hosted on GitHub at\nhttps://github.com/barbagroup/geoclaw-landspill.\nAll contributions are welcome, including but not limited to:\n\n* bug reports,\n* bug fixes,\n* documentation improvement,\n* more examples or tests,\n* new features, and\n* performance enhancement.\n\nDon't hesitate to ask any questions! Questions help us know what can be improved\nand make this project more helpful to people.\n\n--------------------\n## How to contribute\n\nPlease open an issue at our\n[GitHub repository](https://github.com/barbagroup/geoclaw-landspill) if there\nare any questions, bugs, or suggestions.\n\nMake a pull request if you want to add new features/modifications, fix bugs, or\nadd more examples/tests. As we try to keep the project simple, all pull requests\nshould make the `master` branch as the base branch. A pull request against the\n`master` branch triggers Travis CI and tests defined with GitHub Actions. Please\nmake sure the newly added code passes all tests.\n\n------------------------------------------------------------------------\n## How to install *geoclaw-landspill* for development and run tests\n\nIn addition to the standard installation methods described in\n[`deps_install_tests.md`](doc/deps_install_tests.md), developers should consider\nan editable installation. With an editable installation, code modifications take\neffect immediately without re-installation. Assuming currently under the\ntop-level folder, do\n\n```\n$ pip install --editable .\n```\n\nYou may need to uninstall previously installed *geoclaw-landspill* with\n`$ pip uninstall geoclaw-landspill`.\n\nTo run tests, see the last section in\n[`deps_install_tests.md`](doc/deps_install_tests.md).\n"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "geoclaw-landspill"
        ],
        "type": "Text_excerpt",
        "value": "See [CONTRIBUTING.md](CONTRIBUTING.md).\n\n------------------------------------------------------------------------"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-12-21T09:57:28Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2021-01-11"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2021-01-11"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-09-12T15:09:41Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2021-01-11"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "An oil land-spill and overland flow simulator for pipeline rupture events"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Oil land-spill and overland flow simulator for pipeline rupture events"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.89101533246618,
      "result": {
        "original_header": "geoclaw-landspill",
        "type": "Text_excerpt",
        "value": "***Note: if looking for content of `geoclaw-landspill-cases`, please checkout tag\n`v0.1`. This repository has been converted to a fully working solver package.*** \n*geoclaw-landspill* is a package for running oil overland flow simulations for\napplications in pipeline risk management. It includes a numerical solver and\nsome pre-/post-processing utilities. \nThe numerical solver is a modified version of\n[GeoClaw](http://www.clawpack.org/geoclaw.html).\nGeoClaw solves full shallow-water equations. We added several new features and\nutilities to it and make it usable to simulate the overland flow from pipeline\nruptures. These features include: \n* adding point sources to mimic the rupture points\n* adding evaporation models\n* adding Darcy-Weisbach bottom friction models with land roughness\n* adding temperature-dependent viscosity\n* recording detail locations and time of oil flowing into in-land waterbodies\n* downloading topography and hydrology data automatically (the US only)\n* generating CF-1.7 compliant NetCDF files\n \n"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "geoclaw-landspill"
        ],
        "type": "Text_excerpt",
        "value": "2. [Usage](doc/usage.md)\n3. [Configuration file: `setrun.py`](doc/configuration.md)\n4. [Example cases](cases/README.md)\n5. [Containers: Docker and Singularity](doc/container.md)\n\n------------------------------------------------------------------------"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/barbagroup/geoclaw-landspill/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/barbagroup/geoclaw-landspill/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "barbagroup/geoclaw-landspill"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "geoclaw-landspill"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "setup.py",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/setup.py"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/setup.py",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "pyproject.toml",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/pyproject.toml"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/pyproject.toml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/requirements.txt",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/Dockerfiles/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/Dockerfiles/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "pyproject.toml"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://joss.theoj.org/papers/fb7b012799a70c9b4c55eb4bb0f36f97/status.svg"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/./doc/sample.gif"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Dependencies, installation, and tests\n\nThe only operating system officially supported is Linux. We are not maintaining\ncompatibility with other systems, though they may still work.\n\n---------------\n## Dependencies\n\nBuild time and runtime dependencies are described in `requirements-build.txt`\nand `requirements.txt`, respectively. `gfortran >= 8.0` is the only build time\ndependency not included in the file, and, correspondingly, `libgfortran5 >= 8.0`\nis the only runtime dependency not included in the file.\n\nAnaconda users do not need to worry about dependencies at all.\n\nOn the other hand, `pip` users have to install `gfortran` or/and `libgfortran5`\nin advance using the package managers of their Linux distributions. For example,\nin Arch Linux, use:\n```\n# pacman -S gcc-fortran\n```\nAnd in Ubuntu 20.04:\n```\n# apt install gfortran\n```\n\nAlternatively, though not recommended, one can use `conda` to get `gfortran` and\nthen continue using `pip` for other dependencies. The command to get `gfortran`\nfrom Anaconda is\n```\n$ conda install -c conda-forge \"gfortran_linux-64>=8.0\"\n```\n`conda` renames the compiler executable to `x86_64-conda-linux-gnu-gfortran`.\nHowever, this should not concern users because CMake should be able to find it\nautomatically.\n\nAfter installing `gfortran` manually, `pip` users can continue on the\ninstallation of *geoclaw-landspill* (the next section).\n\n---------------\n## Installation\n\n### Option 1: use `conda` and install binary files from Anaconda\n\nAs described in README, the following command creates an environment called\n`landspill`, and it has *geoclaw-landspill* installed:\n```\n$ conda create \\\n    -n landspill -c barbagroup -c conda-forge \\\n    python=3.8 geoclaw-landspill\n```\nOnce activate the environment, the executable `geoclaw-landspill` should already\nbe available.\n\n### Option 2: use `pip` to install from PyPI or from source\n\nNote, when using the `pip` command, users can always add the `--user` flag to\ninstall to users' local paths and avoid root privilege. However, if using the\n`--user` flag, users should make sure `pip`'s local `bin` path is in `PATH`.\n\n#### Option 2.1: install from PyPI\n\nTo install the package from PyPI. \n```\n$ pip install geoclaw-landspill\n```\n\nWe only distribute source tarballs on PyPI due to the requirement of a Fortran\ncompiler. Wheels or binary releases of this package are not available. `pip`\nwill download the source tarball, compile/build the package, and then install\nit. `gfortran` has to be installed in advance as described in the previous\nsection.\n\n#### Option 2.2: install with a source tarball from GitHub\n\nDownload a release tarball from the repository's\n[release page](https://github.com/barbagroup/geoclaw-landspill/releases) on GitHub,\nand install the package directly with pip and the tarball:\n```\n$ pip install <tarball name>.tar.gz\n```\n\n#### Option 2.3: install with the repository in developer mode\n\nClone/pull the repository from GitHub:\n```\n$ git clone --recurse-submodules https://github.com/barbagroup/geoclaw-landspill.git\n```\n\nGo into the folder, and then install the Python dependencies with:\n```\n$ pip install -r requirements.txt -r requirements-build.txt\n```\nThen, install *geoclaw-landspill*:\n```\n$ pip install --editable .\n```\n\nUnder the developer mode, installation is just a link referencing the source\ndirectory, so any changes in the source Python files take effect immediately (\nbut not the Fortran files because they have to be re-compiled).\n\n--------\n## Tests\n\nTo run tests without installation, users can use\n[`tox`](https://tox.readthedocs.io/en/latest/) to do so:\n\n```\n$ tox\n```\n\nEnd-users can run tests against the installed package if they install\n*geoclaw-landspill* through `pip` and using the source tarball or code\nrepository. Use `pytest`:\n```\n$ pytest -v tests\n```\n\nCurrently, the number and the coverage of the tests are limited. It's still a\nWIP.\n"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/doc/deps_install_tests.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "1. Installation",
        "parent_header": [
          "geoclaw-landspill",
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "The fast way to install *geoclaw-landspill* is through\n[Anaconda](https://www.anaconda.com/)'s `conda` command. The following command\ncreates a conda environment (called `landspill`) and installs the package and\ndependencies:\n\n```\n$ conda create \\\n    -n landspill -c barbagroup -c conda-forge \\\n    python=3.8 geoclaw-landspill\n```\n\nThen use `conda activate landspill` or\n`source <conda installation prefix>/bin/activate landspill` to activate the\nenvironment. Type `geoclaw-landspill --help` in the terminal to see if\n*geoclaw-landspill* is correctly installed.\n"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/barbagroup/geoclaw-landspill/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "geoclaw, land-spill, overland-flow, pipeline, pipeline-ruptures, shallow-water-equations"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "geoclaw",
          "overland-flow",
          "pipeline",
          "shallow-water-equations",
          "pipeline-ruptures",
          "land-spill"
        ]
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause",
        "spdx_id": "BSD-2-Clause",
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2018-2021 Pi-Yueh Chuang and Lorena A. Barba.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/BSD 3-Clause",
        "spdx_id": "BSD 3-Clause",
        "type": "License",
        "value": "BSD 3-Clause"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Third-party codes and licenses",
        "parent_header": [
          "geoclaw-landspill"
        ],
        "type": "Text_excerpt",
        "value": "* amrclaw: https://github.com/clawpack/amrclaw\n  ([BSD 3-Clause License](https://github.com/clawpack/amrclaw/blob/ee85c1fe178ec319a8403503e779d3f8faf22840/LICENSE))\n* geoclaw: https://github.com/clawpack/geoclaw\n  ([BSD 3-Clause License](https://github.com/clawpack/geoclaw/blob/3593cb1b418fd52739c186a8845a288037c8f575/LICENSE))\n* pyclaw: https://github.com/clawpack/pyclaw\n  ([BSD 3-Clause License](https://github.com/clawpack/pyclaw/blob/a85a01a5f20be1a18dde70b7bb37dc1cdcbd0b26/LICENSE))\n* clawutil: https://github.com/clawpack/clawutil\n  ([BSD 3-Clause License](https://github.com/clawpack/clawutil/blob/116ffb792e889fbf0854d7ac599657039d7b1f3e/LICENSE))\n* riemann: https://github.com/clawpack/riemann\n  ([BSD 3-Clause License](https://github.com/clawpack/riemann/blob/597824c051d56fa0c8818e00d740867283329b24/LICENSE))\n\n------------------------------------------------------------------------"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "geoclaw-landspill"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "barbagroup"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Fortran",
        "size": 274004,
        "type": "Programming_language",
        "value": "Fortran"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 170416,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 6888,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Singularity",
        "size": 5946,
        "type": "Programming_language",
        "value": "Singularity"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 5917,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CMake",
        "size": 5206,
        "type": "Programming_language",
        "value": "CMake"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "piyueh",
          "type": "User"
        },
        "date_created": "2021-06-08T21:59:40Z",
        "date_published": "2021-06-08T22:07:33Z",
        "description": "This is the version released with JOSS paper: https://doi.org/10.21105/joss.03114",
        "html_url": "https://github.com/barbagroup/geoclaw-landspill/releases/tag/v1.0",
        "name": "geoclaw-landspill-1.0",
        "release_id": 44309934,
        "tag": "v1.0",
        "tarball_url": "https://api.github.com/repos/barbagroup/geoclaw-landspill/tarball/v1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/barbagroup/geoclaw-landspill/releases/44309934",
        "value": "https://api.github.com/repos/barbagroup/geoclaw-landspill/releases/44309934",
        "zipball_url": "https://api.github.com/repos/barbagroup/geoclaw-landspill/zipball/v1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "piyueh",
          "type": "User"
        },
        "date_created": "2021-05-22T01:53:56Z",
        "date_published": "2021-05-22T02:03:27Z",
        "html_url": "https://github.com/barbagroup/geoclaw-landspill/releases/tag/v1.0.dev4",
        "name": "geoclaw-landspill-1.0.dev4",
        "release_id": 43400980,
        "tag": "v1.0.dev4",
        "tarball_url": "https://api.github.com/repos/barbagroup/geoclaw-landspill/tarball/v1.0.dev4",
        "type": "Release",
        "url": "https://api.github.com/repos/barbagroup/geoclaw-landspill/releases/43400980",
        "value": "https://api.github.com/repos/barbagroup/geoclaw-landspill/releases/43400980",
        "zipball_url": "https://api.github.com/repos/barbagroup/geoclaw-landspill/zipball/v1.0.dev4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "piyueh",
          "type": "User"
        },
        "date_created": "2021-01-19T09:21:18Z",
        "date_published": "2021-01-19T09:28:48Z",
        "description": "See PR #14 ",
        "html_url": "https://github.com/barbagroup/geoclaw-landspill/releases/tag/v1.0.dev3",
        "name": "geoclaw-landspill-1.0.dev3",
        "release_id": 36587952,
        "tag": "v1.0.dev3",
        "tarball_url": "https://api.github.com/repos/barbagroup/geoclaw-landspill/tarball/v1.0.dev3",
        "type": "Release",
        "url": "https://api.github.com/repos/barbagroup/geoclaw-landspill/releases/36587952",
        "value": "https://api.github.com/repos/barbagroup/geoclaw-landspill/releases/36587952",
        "zipball_url": "https://api.github.com/repos/barbagroup/geoclaw-landspill/zipball/v1.0.dev3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "piyueh",
          "type": "User"
        },
        "date_created": "2021-01-08T09:11:01Z",
        "date_published": "2021-01-08T09:31:13Z",
        "description": "This development iteration includes GitHub issues #7, #8, #9, #10, and #11",
        "html_url": "https://github.com/barbagroup/geoclaw-landspill/releases/tag/v1.0.dev2",
        "name": "geoclaw-landspill-1.0.dev2",
        "release_id": 36133017,
        "tag": "v1.0.dev2",
        "tarball_url": "https://api.github.com/repos/barbagroup/geoclaw-landspill/tarball/v1.0.dev2",
        "type": "Release",
        "url": "https://api.github.com/repos/barbagroup/geoclaw-landspill/releases/36133017",
        "value": "https://api.github.com/repos/barbagroup/geoclaw-landspill/releases/36133017",
        "zipball_url": "https://api.github.com/repos/barbagroup/geoclaw-landspill/zipball/v1.0.dev2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "piyueh",
          "type": "User"
        },
        "date_created": "2021-01-06T17:50:51Z",
        "date_published": "2021-01-06T18:06:00Z",
        "description": "A pre-release for the development iteration 1 of v1.0.\r\n",
        "html_url": "https://github.com/barbagroup/geoclaw-landspill/releases/tag/v1.0.dev1",
        "name": "geoclaw-landspill-1.0.dev1",
        "release_id": 36059325,
        "tag": "v1.0.dev1",
        "tarball_url": "https://api.github.com/repos/barbagroup/geoclaw-landspill/tarball/v1.0.dev1",
        "type": "Release",
        "url": "https://api.github.com/repos/barbagroup/geoclaw-landspill/releases/36059325",
        "value": "https://api.github.com/repos/barbagroup/geoclaw-landspill/releases/36059325",
        "zipball_url": "https://api.github.com/repos/barbagroup/geoclaw-landspill/zipball/v1.0.dev1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "setuptools",
        "type": "Software_application",
        "value": "setuptools>=51.0",
        "version": ">=51.0"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "wheel",
        "type": "Software_application",
        "value": "wheel>=0.36",
        "version": ">=0.36"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "scikit-build",
        "type": "Software_application",
        "value": "scikit-build>=0.11.1",
        "version": ">=0.11.1"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "cmake",
        "type": "Software_application",
        "value": "cmake>=3.18.4",
        "version": ">=3.18.4"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "ninja",
        "type": "Software_application",
        "value": "ninja>=1.10",
        "version": ">=1.10"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "six",
        "type": "Software_application",
        "value": "six>=1.15.0",
        "version": ">=1.15.0"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "psutil",
        "type": "Software_application",
        "value": "psutil>=5.8.0",
        "version": ">=5.8.0"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "requests",
        "type": "Software_application",
        "value": "requests>=2.25.1",
        "version": ">=2.25.1"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "numpy",
        "type": "Software_application",
        "value": "numpy>=1.19.4",
        "version": ">=1.19.4"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "rasterio",
        "type": "Software_application",
        "value": "rasterio>=1.1.8",
        "version": ">=1.1.8"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "netCDF4",
        "type": "Software_application",
        "value": "netCDF4>=1.5.5.1",
        "version": ">=1.5.5.1"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "matplotlib",
        "type": "Software_application",
        "value": "matplotlib>=3.3.3",
        "version": ">=3.3.3"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "typing_extensions",
        "type": "Software_application",
        "value": "typing_extensions>=3.7; python_version<=\"3.7\"",
        "version": ">=3.7; python_version<=\"3.7\""
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/requirements.txt",
      "technique": "code_parser"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Running an example case",
        "parent_header": [
          "geoclaw-landspill",
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "To run an example case under the folder `cases`, users have to clone this\nrepository. We currently don't maintain another repository for cases. After\ncloning this repository, run\n```\n$ geoclaw-landspill run <path to an example case folder>\n```\nFor example, to run `utal-flat-maya`:\n```\n$ geoclaw-landspill run ./cases/utah-flat-maya\n```\nUsers can use environment variable `OMP_NUM_THREADS` to control how many CPU\nthreads the simulation should use for OpenMP parallelization.\n"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contributors",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 01:32:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 12
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start",
        "parent_header": [
          "geoclaw-landspill"
        ],
        "type": "Text_excerpt",
        "value": "We only maintain compatibility with Linux. Though using `pip` or building from\nsource may still work in Mac OS or Windows (e.g., through WSL), we are not able\nto help with the installation issues on these two systems.\n\nBeyond this quick start, to see more details, please refer to the\n[documentation](#documentation) section.\n"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "2. Running an example case",
        "parent_header": [
          "geoclaw-landspill",
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "To run an example case under the folder `cases`, users have to clone this\nrepository. We currently don't maintain another repository for cases. After\ncloning this repository, run\n```\n$ geoclaw-landspill run <path to an example case folder>\n```\nFor example, to run `utal-flat-maya`:\n```\n$ geoclaw-landspill run ./cases/utah-flat-maya\n```\nUsers can use environment variable `OMP_NUM_THREADS` to control how many CPU\nthreads the simulation should use for OpenMP parallelization.\n"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "3. Creating a CF-compliant NetCDF raster file",
        "parent_header": [
          "geoclaw-landspill",
          "Quick start"
        ],
        "type": "Text_excerpt",
        "value": "After a simulation is done, users can convert flow depth in raw simulation data\ninto a CF-compliant NetCDF raster file. For example,\n```\n$ geoclaw-landspill createnc ./case/utah-flat-maya\n```\nReplace `./cases/utah-flat-maya` with the path to another desired case.\n\nQGIS and ArcGIS should be able to read the resulting NetCDF raster file.\n\n------------------------------------------------------------------------"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "v1.0"
      },
      "source": "https://raw.githubusercontent.com/barbagroup/geoclaw-landspill/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
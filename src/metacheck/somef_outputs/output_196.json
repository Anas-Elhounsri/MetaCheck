{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "rsdoiel@gmail.com",
        "identifier": "https://orcid.org/0000-0003-0900-6903",
        "type": "String",
        "value": "Robert Doiel"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": [
          {
            "family_name": "Doiel",
            "given_name": "Robert",
            "name": "Robert Doiel",
            "type": "Agent",
            "url": "https://orcid.org/0000-0003-0900-6903"
          }
        ],
        "datePublished": "2022",
        "format": "cff",
        "title": "Artemis",
        "type": "File_dump",
        "value": "\ncff-version: 1.1.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n   - family-names: Doiel\n     given-names: Robert\n     orcid: https://orcid.org/0000-0003-0900-6903\nversion: 0.0.0\ntitle: Artemis\ndate-released: 2022-03-26\n"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/CITATION.cff",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rsdoiel/Artemis"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rsdoiel/Artemis"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "contributors": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Contributors\n============\n\nThis is a list of people who have helped out in making Artemis possible.\nI apoligize for anyone I have missed.\n\n- [Oleg-N-Cher](https://github.com/Oleg-N-Cher/)\n- [R.S. Doiel](https://github.com/rsdoiel/)\n- [Erno Szabados](https://github.com/erno-szabados/)\n"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/CONTRIBUTORS.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-06-14T21:15:50Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-06-27T16:08:00Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Artemis is my project to create portable Oberon-07 modules that can be used in POSIX and Oberon System."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Artemis is a collection of Oberon-07 modules for use on Oberon-07 compilers are available."
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "descriptions of the structures",
        "parent_header": [
          "Artemis",
          "Project layout"
        ],
        "type": "Text_excerpt",
        "value": "The root repository directory is for modules that are\nportable between POSIX Oberon-07 compiler implementations\nand portable to an Oberon-07 based Oberon System. Where I've\nprovided non-canonical implementations I plan to use the \"art\" prefix\nin the module name.\n\nThe __obncdocs__ directory contains documentation of the\nmodule definitions for the common modules in the root directory.\n\nThe __obnc__ directory contains modules that target\nspecific features of the OBNC compiler. This is primarily\nintegration with C based libraries and services. These aren't\nportable between compilers but should work across POSIX systems\nwhere OBNC is available.\n\nThe __oxford__ directory contains modules that target the\nOxford Oberon Compiler, aka Obc-3. This is primarily\nintegration with C based libraries and services. These aren't\nportable between compilers but should work across POSIX systems\nwhere Obc-3 is available.\n\nThe __ofrontplus__ directory contains modules that target the\nOfrontPlus compiler. This is primarily integration with C based\nlibraries. These modules are not portable between compilers but\nshould work across POSIX systems where OfrontPlus is available.\n"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9384697750247438,
      "result": {
        "original_header": "Artemis",
        "type": "Text_excerpt",
        "value": "Artemis is an Oberon-07 module collection. My hope is\nto encourage continued use and development of the Oberon-07\nlanguage and encourage convergence towards compatibility\nin implementations of Oberon-07 compilers.  My focus in this project\nis using Oberon-07 on POSIX systems. \nThis project started as a re-imagining of the efforts that\nbegan at the Oakwood Hotel in the 1992. As at Oakwood I hope\nto encourage convergence to help code become more portable.\nUnlike Oakwood my focus is only on Oberon-07 and systems\nimplemented in Oberon-07 or providing an Oberon-07 compiler.\nThat is the scope of Artemis project for now. \nInitial development is being done in a POSIX environment and\nrelies on Karl Landstr\u00f6m's [OBNC](https://miasap.se/obnc/) compiler.\nAs time permits I am attempting to port the changes to other Oberon-07\nimplementations including Mike Spivey's [Obc-3](https://github.com/Spivoxity/obc-3)\n and Oleg N. Cher's [OfrontPlus](https://github.com/Oleg-N-Cher/OfrontPlus) compiler. \nArtemis draws inspiration from Wirth and Reed's Project Oberon 2013,\nJoseph Templ's [Ofront](https://github.com/jtempl/ofront) with V4.\nIt also draws inspiration from the discussions and community on the \n[Oberon List](https://lists.inf.ethz.ch/mailman/listinfo/oberon). \n"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8500942294565154,
      "result": {
        "original_header": "Project Status 2025",
        "type": "Text_excerpt",
        "value": "It's the middle of 2025. Weird things are afoot in North America. But I can take joy in that people out there are still interested in Oberon-07. I have merged several Pull requests recently for this project. That is very cool. Thank you [erno-szabados](https://github.com/erno-szabados). RSD 2025-06-10\n \n"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.993509078778744,
      "result": {
        "original_header": "Project Status 2023",
        "type": "Text_excerpt",
        "value": "It's the end of 2023 and I haven't had time to work on this. Busy life.\nI still think this is a worth while effort as I head into three years of\na lingering project on my todo list.  I like Oberon-07 very much as a\nlanguage but can't really use it conveniently for my personal projects yet.\nTime is a bottle neck right now and feeling comfortable asserting some\ndesign choices is another. My guess is I need to have a specific project\nas a use case to really get this effort off the ground.  In 2023 the\nOberon community is still active but is generally is small, dispersed and\nlargely aging (as am I). Makes me feel a little like Don Quote. I have hope\n2024 may allow time for Artemis but I suspect I'll reach mid 2025 before I\nrevisit it again. I remain hopeful but not expecting to much as I finish 2023. - RSD  \n"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9389618319243047,
      "result": {
        "original_header": "Project layout",
        "type": "Text_excerpt",
        "value": "The directories named for their compilers will implement modules\nproviding a common definition but specifically written to that compiler.\nThis typically will be modules that rely on an underlying C library\nor behavior. The plan is for commonly defined modules targeting\na specific compiler to use the \"art\" prefix. This will give room to \nthe compiler developer to either adopt or create their own compatible\nimplementations. E.g. current I've implemented a Unix and Clock modules\nfor the OBNC and Oxford compilers. These will be renamed artUnix and\nartClock.  Likewise the implementations of extArgs, extEnv I made for\nthe Oxford compiler will be renamed artArgs and artEnv so that it is clear\nthese are not the original OBNC modules extensions written by Karl.\n \n"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.911727482411842,
      "result": {
        "original_header": "Module naming",
        "type": "Text_excerpt",
        "value": "Any modules which are not canonical to Artemis or are specific to a\ncompiler implementation must be prefixed with \"art\". This will allow\nfor better re-use in other projects (e.g. OfrontPlus) and avoids name\ncollisions. \n"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9124854861207905,
      "result": {
        "original_header": "Artemis Modules",
        "type": "Text_excerpt",
        "value": "[Chars](Chars.Mod) is a module for working with CHAR and\nARRAY OF CHAR.  It is inspired by the Oakwood Strings \nmodule. It goes beyond the Oakwood minimum.  It can function\nas a drop in replacement for the Oakwood Strings module. \n[DStrings](DStrings.Mod) provides a dynamic string implementation\nfor Oberon-07.  The procedures signatures are often \ncompatible with the Chars module. It leverages the Rider\nconcept borrowed from Files and Texts in the Oberon System. \n[Obn2](Obn2.Mod) is a module provides compatibility for some\nbuilt-in Oberon-2 procedures that were dropped in the evolution\nto Oberon-07. \n[Path](Path.Mod) and [PathLists](PathLists.Mod) is a module for working with POSIX style paths and file extensions. It does not directly interact with the OS. It does provided a means of working with path strings in a uniform way. By default it assumes the paths are delimited with the '/' character and '.' for file extensions. This is configurable by the Path module's `SetDelimiter()` and `SetExtDelimiter()` procedures. \n"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.812795940912834,
      "result": {
        "original_header": "OBNC specific modules",
        "type": "Text_excerpt",
        "value": "[artClock](obnc/artClock.obn) provides an abstraction layer working with the system clock. The implementation uses the C `clock_gettime()` and `clock_settime()`. \n"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8715719413669466,
      "result": {
        "original_header": "OfrontPlus Specific Modules",
        "type": "Text_excerpt",
        "value": "[artArgs](ofronplus/artArgs.Mod) provides an OBNC compatible Args module \n[artEnv](ofrontplus/artEnv.Mod) provides an OBNC compatible Env module \n[artConvert](ofrontplus/artConvert.Mod) provides an OBNC compatible Convert module \n[artClock](ofrontplus/Clock.Mod) is an abstraction layer for working with the system clock. It uses the C `clock_gettime()` and `clock_settime()`. \n"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9255448709370575,
      "result": {
        "original_header": "Project approach to portability",
        "type": "Text_excerpt",
        "value": "Artemis is made up of two categories of Oberon-07 modules.\nModules in the root should be portable across POSIX Oberon-07\ncompilers and portable to Oberon Systems with an Oberon-07 compiler\n(e.g. on Project Oberon 2013). A second category are modules\nwritten for specific POSIX based Oberon-07 compilers. \n- Portable modules are in \"root\" project directory\n- Compiler specific modules their own sub directories (e.g. \"obnc\", \"oxford\"and \"ofrontplus\") \nIn the POSIX environment Oberon-07 compilers have not\nconverged (2021-09-21).  This is true for Oakwood module\nimplementations and and particularly true for\nhow C code is integrated. The later is the important\ndivergence as integration with legacy C libraries and services\nis likely to be required for some time into the future.\n \n"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9411293259227372,
      "result": {
        "original_header": "Putting it all together",
        "type": "Text_excerpt",
        "value": "Both non-portable and portable modules can be used together in\na project. This requires knowing the compiler you're using and\ntargeting it's way of managing where to find modules. \n\nAn example is using [Tests.Mod](Tests.Mod) for the **clocktest**\nimplementations in both __obnc__ and __oxford__ directories.\nWith OBNC you need to set some environment variables to let the\ncompiler known where to search for modules.\nHere's what you can do to compile this implementation of **clocktest**\nin the __obnc__ directory. \nWith Obc-3 you can just provide the full path to the module you want to\ninclude. Compiling the implementation of **clocktest** in the __oxford__\ndirectory looks like --- \n"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Concept"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rsdoiel/Artemis/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rsdoiel/Artemis/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/rsdoiel/Artemis/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "rsdoiel/Artemis"
      },
      "technique": "GitHub_API"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "---\ntitle: Installation\n---\n\nInstallation\n============\n\nInstalling a released version\n\n1. Change into that directory you want to place Artemis\n2. Unzip the release Zip file\n3. Make sure the \"Artemis\"  \"bin\" sub-directory is in your PATH \n\nExample\n-------\n\n```\n    mkdir -p $HOME/tools\n    cd $HOME/tools\n    unzip $HOME/Download/Artemis-0.0.1-Linux-x86_64.zip\n    export PATH=\"$HOME/tools/Artimis/bin:$PATH\"\n```\n\nFrom source\n-----------\n\nCompiling from source requires [OBNC](https://miasap.se/obnc), Git,\nGNU Make, a C compiler and linker.\n\n1. Clone the Git repository for the project\n2. Change into the repository directory\n3. Run `make`, `make test`, and `sudo make install`\n\nExample install:\n\n```\n    git clone git@github.com:rsdoiel/Artemis\n    cd Artemis\n    make\n    make full_test\n    sudo make install\n```\n\nExample uninstall\n\n```\n    cd Artemis\n    sudo make uninstall\n```\n\nThe Makefile supports an installation prefix. If\nyou install with a prefix you need to uninstall with\nthe same prefix. E.g.\n\n```\n    sudo make install prefix=/opt/local\n    sudo make uninstall prefix=/opt/local\n```\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/INSTALL.md",
      "technique": "file_exploration"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/rsdoiel/Artemis/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/rsdoiel/Artemis/issues"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "oberon-07, oberon-compiler, oberon-system"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "Oberon-07",
          "portable",
          "Oberon-System"
        ]
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause",
        "spdx_id": "BSD-2-Clause",
        "type": "File_dump",
        "value": "BSD 3-Clause License\n\nCopyright (c) 2021, R. S. Doiel\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://rsdoiel.github.io/Artemis/license.html",
        "spdx_id": "https://rsdoiel.github.io/Artemis/license.html",
        "type": "License",
        "value": "https://rsdoiel.github.io/Artemis/license.html"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Artemis"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Artemis"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "rsdoiel"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 113853,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C",
        "size": 31296,
        "type": "Programming_language",
        "value": "C"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Modula-2",
        "size": 11068,
        "type": "Programming_language",
        "value": "Modula-2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "CSS",
        "size": 10155,
        "type": "Programming_language",
        "value": "CSS"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 9701,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 5180,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "C++",
        "size": 3072,
        "type": "Programming_language",
        "value": "C++"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 1238,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Batchfile",
        "size": 789,
        "type": "Programming_language",
        "value": "Batchfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Oberon-07",
        "type": "Programming_language",
        "value": "Oberon-07",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "repository_status": [
    {
      "confidence": 1,
      "result": {
        "description": "Concept \u2013 Minimal or no implementation has been done yet, or the repository is only intended to be a limited example, demo, or proof-of-concept.",
        "type": "Url",
        "value": "https://www.repostatus.org/#concept"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "usage",
    "faq",
    "support",
    "identifier",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 00:58:08",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 18
      },
      "technique": "GitHub_API"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "0.0.0"
      },
      "source": "https://raw.githubusercontent.com/rsdoiel/Artemis/main/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
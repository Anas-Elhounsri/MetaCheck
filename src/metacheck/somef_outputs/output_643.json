{
  "application_domain": [
    {
      "confidence": 0.9638377193705926,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "affiliation": "School of Biological Sciences, The University of Adelaide",
        "email": "dan.kortschak@adelaide.edu.au",
        "identifier": "http://orcid.org/0000-0001-8295-2301",
        "type": "String",
        "value": "R Daniel Kortschak"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "School of Biological Sciences, The University of Adelaide",
        "email": "david.adelson@adelaide.edu.au",
        "identifier": "http://orcid.org/0000-0003-2404-5636",
        "type": "String",
        "value": "David L Adelson"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citing",
        "parent_header": [
          "NCBI"
        ],
        "type": "Text_excerpt",
        "value": "If you use b\u00edogo/ncbi, please cite Kortschak and Adelson \"b\u00edogo/ncbi: interfaces to NCBI services for the Go language\", doi:[10.21105/joss.00234](http://dx.doi.org/10.21105/joss.00234), and Kortschak and Adelson \"b\u00edogo: a simple high-performance bioinformatics toolkit for the Go language\", doi:[10.1101/005033](http://biorxiv.org/content/early/2014/05/12/005033).\n"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biogo/ncbi"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biogo/ncbi"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "NCBI"
        ],
        "type": "Text_excerpt",
        "value": "If you find any bugs, feel free to file an issue on the github issue tracker.\nPull requests are welcome, though if they involve changes to API or addition of features, please first open a discussion at the biogo-dev Google Group.\n\nhttps://groups.google.com/forum/#!forum/biogo-dev\n"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2015-03-13T01:10:43Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2017-03-03"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2017-03-03"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-06-08T16:11:50Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2017-03-03"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "b\u00edogo ncbi utilities repository"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "interfaces to NCBI services for the Go language"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/biogo/ncbi/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/biogo/ncbi/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "biogo/ncbi"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "NCBI"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biogo/biogo/master/biogo.png"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "NCBI"
        ],
        "type": "Text_excerpt",
        "value": "The NCBI package requires a functioning [Go compiler installation](https://golang.org/doc/install).\n\n        $ go get github.com/biogo/ncbi/...\n"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/biogo/ncbi/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "bioinformatics",
          "NCBI",
          "EUtilities",
          "BLAST",
          "golang"
        ]
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 3-Clause \"New\" or \"Revised\" License",
        "spdx_id": "BSD-3-Clause",
        "type": "License",
        "url": "https://api.github.com/licenses/bsd-3-clause",
        "value": "https://api.github.com/licenses/bsd-3-clause"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause",
        "spdx_id": "BSD-2-Clause",
        "type": "File_dump",
        "value": "Copyright \u00a92013 The b\u00edogo Authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n    * Neither the name of the b\u00edogo project nor the names of its authors and\n      contributors may be used to endorse or promote products derived from this\n      software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/BSD-3 like",
        "spdx_id": "BSD-3 like",
        "type": "License",
        "value": "BSD-3 like"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Copyright and License",
        "parent_header": [
          "NCBI"
        ],
        "type": "Text_excerpt",
        "value": "Copyright \u00a92011-2013 The b\u00edogo Authors except where otherwise noted. All rights\nreserved. Use of this source code is governed by a BSD-style license that can be\nfound in the LICENSE file.\n\nThe b\u00edogo logo is derived from Bitstream Charter, Copyright \u00a91989-1992\nBitstream Inc., Cambridge, MA.\n\nBITSTREAM CHARTER is a registered trademark of Bitstream Inc.\n"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://godoc.org/raw.githubusercontent.com/biogo/ncbi?status.svg"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ncbi"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "biogo"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Go",
        "size": 316685,
        "type": "Programming_language",
        "value": "Go"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 1861,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/biogo/ncbi/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 02:31:48",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 20
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting help",
        "parent_header": [
          "NCBI"
        ],
        "type": "Text_excerpt",
        "value": "Help or similar requests are preferred on the biogo-user Google Group.\n\nhttps://groups.google.com/forum/#!forum/biogo-user\n"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Entrez",
        "parent_header": [
          "NCBI",
          "Example usage"
        ],
        "type": "Text_excerpt",
        "value": "This is a simple illustration of using the Entrez Utility Programs to retrieve a large set of sequences to a file.\nThe complete code is [here](paper/examples/fetch/fetch.go).\n\n```\npackage main\n\nimport (\n\t\"bytes\"\n\t\"flag\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n\n\t\"github.com/biogo/ncbi\"\n\t\"github.com/biogo/ncbi/entrez\"\n)\n\nconst (\n\ttool = \"entrez.example\"\n)\n\nvar (\n\tclQuery = flag.String(\"query\", \"\", \"query specifies the search query for record retrieval (required).\")\n\tdb      = flag.String(\"db\", \"protein\", \"db specifies the database to search\")\n\trettype = flag.String(\"rettype\", \"fasta\", \"rettype specifies the format of the returned data.\")\n\tretmax  = flag.Int(\"retmax\", 500, \"retmax specifies the number of records to be retrieved per request.\")\n\tout     = flag.String(\"out\", \"\", \"out specifies destination of the returned data (default to stdout).\")\n\temail   = flag.String(\"email\", \"\", \"email specifies the email address to be sent to the server (required).\")\n\tretries = flag.Int(\"retry\", 5, \"retry specifies the number of attempts to retrieve the data.\")\n\thelp    = flag.Bool(\"help\", false, \"help prints this message.\")\n)\n\nfunc main() {\n\tncbi.SetTimeout(0)\n\n\tflag.Parse()\n\n\tif *help {\n\t\tflag.Usage()\n\t\tos.Exit(0)\n\t}\n\tif *email == \"\" || *clQuery == \"\" {\n\t\tflag.Usage()\n\t\tos.Exit(1)\n\t}\n\n\th := entrez.History{}\n\ts, err := entrez.DoSearch(*db, *clQuery, nil, &h, tool, *email)\n\tif err != nil {\n\t\tlog.Printf(\"error: %v\\n\", err)\n\t\tos.Exit(1)\n\t}\n\tlog.Printf(\"will retrieve %d records.\\n\", s.Count)\n\n\tvar of *os.File\n\tif *out == \"\" {\n\t\tof = os.Stdout\n\t} else {\n\t\tof, err = os.Create(*out)\n\t\tif err != nil {\n\t\t\tlog.Printf(\"error: %v\\n\", err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer of.Close()\n\t}\n\n\tvar (\n\t\tbuf   = &bytes.Buffer{}\n\t\tp     = &entrez.Parameters{RetMax: *retmax, RetType: *rettype, RetMode: \"text\"}\n\t\tbn, n int64\n\t)\n\tfor p.RetStart = 0; p.RetStart < s.Count; p.RetStart += p.RetMax {\n\t\tlog.Printf(\"attempting to retrieve %d records starting from %d with %d retries.\\n\", p.RetMax, p.RetStart, *retries)\n\t\tvar t int\n\t\tfor t = 0; t < *retries; t++ {\n\t\t\tbuf.Reset()\n\t\t\tvar (\n\t\t\t\tr   io.ReadCloser\n\t\t\t\t_bn int64\n\t\t\t)\n\t\t\tr, err = entrez.Fetch(*db, p, tool, *email, &h)\n\t\t\tif err != nil {\n\t\t\t\tif r != nil {\n\t\t\t\t\tr.Close()\n\t\t\t\t}\n\t\t\t\tlog.Printf(\"failed to retrieve on attempt %d... error: %v ... retrying.\\n\", t, err)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\t_bn, err = io.Copy(buf, r)\n\t\t\tbn += _bn\n\t\t\tr.Close()\n\t\t\tif err == nil {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tlog.Printf(\"failed to buffer on attempt %d... error: %v ... retrying.\\n\", t, err)\n\t\t}\n\t\tif err != nil {\n\t\t\tos.Exit(1)\n\t\t}\n\n\t\tlog.Printf(\"retrieved records with %d retries... writing out.\\n\", t)\n\t\t_n, err := io.Copy(of, buf)\n\t\tn += _n\n\t\tif err != nil {\n\t\t\tlog.Printf(\"Error: %v\\n\", err)\n\t\t\tos.Exit(1)\n\t\t}\n\t}\n\tif bn != n {\n\t\tlog.Printf(\"writethrough mismatch: %d != %d\\n\", bn, n)\n\t}\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "BLAST",
        "parent_header": [
          "NCBI",
          "Example usage"
        ],
        "type": "Text_excerpt",
        "value": "The following example provides a simple function used to perform a BLAST search from within a larger program.\nA complete example is available [here](paper/examples/blast/blast.go).\n\n```\n// tool is required by the BLAST server.\nconst tool  = \"blast.example\"\n\n// BLAST submits a query to the BLAST server, waits for the server's estimated time of\n// execution and retrieves the search status. If the search is ready the results are then\n// retrieved and returned. If errors are returned during data retrieval from the server,\n// retrieval is retried with up to retry attempts; all server requests honour the request\n// frequency policy specified in the BLAST usage guidelines.\nfunc BLAST(query string, retry int, pp *blast.PutParameters, gp *blast.GetParameters, email string) (*blast.Output, error) {\n\t// Put the query request to the BLAST server.\n\tr, err := blast.Put(query, pp, tool, email)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tvar o *blast.Output\n\tfor k := 0; k < retry; k++ {\n\t\t// Wait for RTOE to elapse and get search status.\n\t\tvar s *blast.SearchInfo\n\t\ts, err = r.SearchInfo(tool, email)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\n\t\t// Output search status.\n\t\tfmt.Println(s)\n\n\t\tswitch s.Status {\n\t\tcase \"WAITING\":\n\t\t\tcontinue\n\t\tcase \"FAILED\":\n\t\t\treturn nil, fmt.Errorf(\"search: %s failed\", r)\n\t\tcase \"UNKNOWN\":\n\t\t\treturn nil, fmt.Errorf(\"search: %s expired\", r)\n\t\tcase \"READY\":\n\t\t\tif !s.HaveHits {\n\t\t\t\treturn nil, fmt.Errorf(\"search: %s no hits\", r)\n\t\t\t}\n\t\tdefault:\n\t\t\treturn nil, errors.New(\"unknown error\")\n\t\t}\n\n\t\t// We have hits, so get the BLAST output.\n\t\to, err = r.GetOutput(gp, tool, email)\n\t\tif err == nil {\n\t\t\treturn o, err\n\t\t}\n\t}\n\n\treturn nil, fmt.Errorf(\"%s exceeded retries\", r)\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting help",
        "parent_header": [
          "NCBI"
        ],
        "type": "Text_excerpt",
        "value": "Help or similar requests are preferred on the biogo-user Google Group.\n\nhttps://groups.google.com/forum/#!forum/biogo-user\n"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "v1.0.0"
      },
      "source": "https://raw.githubusercontent.com/biogo/ncbi/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
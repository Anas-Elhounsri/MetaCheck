{
  "application_domain": [
    {
      "confidence": 0.9999914910701907,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "homepage": "http://i3s.unice.fr/~fmichel",
        "name": "Franck Michel",
        "role": "Developer",
        "type": "Agent",
        "value": "Franck Michel"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "University C\u00f4te d'Azur, CNRS, Inria",
        "email": "franck.michel@inria.fr",
        "identifier": "https://orcid.org/0000-0001-9064-0463",
        "type": "String",
        "value": "Franck Michel"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "franck.michel@inria.fr",
        "given_name": "Franck",
        "last_name": "Michel",
        "name": "Franck Michel",
        "type": "Agent",
        "value": "Franck Michel"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/AUTHORS",
      "technique": "file_exploration"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": [
          {
            "family_name": "Michel",
            "given_name": "Franck",
            "name": "Franck Michel",
            "type": "Agent",
            "url": "https://orcid.org/0000-0001-9064-0463"
          }
        ],
        "datePublished": "2024",
        "format": "cff",
        "title": "SPARQL Micro-Services",
        "type": "File_dump",
        "value": "# This CITATION.cff file was generated with cffinit.\n# Visit https://bit.ly/cffinit to generate yours today!\n\ncff-version: 1.2.0\ntitle: SPARQL Micro-Services\nmessage: >-\n  If you use this software, please cite it using the\n  metadata from this file.\ntype: software\nauthors:\n  - given-names: Franck\n    family-names: Michel\n    email: franck.michel@inria.fr\n    affiliation: 'Univ. C\u00f4te d''Azur, CNRS, Inria'\n    orcid: 'https://orcid.org/0000-0001-9064-0463'\nrepository-code: 'https://github.com/frmichel/sparql-micro-service'\nlicense: Apache-2.0\nversion: 0.5.8\ndate-released: '2024-07-22'\n"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Cite this work:",
        "parent_header": [
          "SPARQL Micro-Services"
        ],
        "type": "Text_excerpt",
        "value": "Michel F., Faron C., Gargominy O. & Gandon F. (2018). Integration of Web APIs and Linked Data Using SPARQL Micro-Services\u2014Application to Biodiversity Use Cases. *Information 9(12):310*. [DOI](https://dx.doi.org/10.3390/info9120310), [HAL](https://hal.archives-ouvertes.fr/hal-01947589).\n\n\n```bibtex\n@article{michel_sparqlmicroservices_2018,\n  title = {Integration of {{Web APIs}} and {{Linked Data Using SPARQL Micro}}-{{Services}}\\textemdash{{Application}} to {{Biodiversity Use Cases}}},\n  volume = {9},\n  copyright = {Licence Creative Commons Attribution 4.0 International (CC-BY)},\n  issn = {2078-2489},\n  language = {en},\n  number = {12},\n  journal = {Information},\n  doi = {10.3390/info9120310},\n  author = {Michel, Franck and Faron, Catherine and Gargominy, Olivier and Gandon, Fabien},\n  month = dec,\n  year = {2018},\n  pages = {310},\n  url = {https://hal.archives-ouvertes.fr/hal-01947589}\n}\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Michel, Franck and Faron, Catherine and Gargominy, Olivier and Gandon, Fabien",
        "doi": "10.3390/info9120310",
        "format": "bibtex",
        "title": "Integration of {{Web APIs}} and {{Linked Data Using SPARQL Micro}}-{{Services}}\\textemdash{{Application}} to {{Biodiversity Use Cases}}",
        "type": "Text_excerpt",
        "url": "https://hal.archives-ouvertes.fr/hal-01947589",
        "value": "@article{michel_sparqlmicroservices_2018,\n    url = {https://hal.archives-ouvertes.fr/hal-01947589},\n    pages = {310},\n    year = {2018},\n    month = {December},\n    author = {Michel, Franck and Faron, Catherine and Gargominy, Olivier and Gandon, Fabien},\n    doi = {10.3390/info9120310},\n    journal = {Information},\n    number = {12},\n    language = {en},\n    issn = {2078-2489},\n    copyright = {Licence Creative Commons Attribution 4.0 International (CC-BY)},\n    volume = {9},\n    title = {Integration of {{Web APIs}} and {{Linked Data Using SPARQL Micro}}-{{Services}}\\textemdash{{Application}} to {{Biodiversity Use Cases}}},\n}"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/frmichel/sparql-micro-service"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/frmichel/sparql-micro-service.git"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-01-08T17:46:25Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2018-06-19"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2018-06-19"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-07-20T22:56:33Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2024-02-07"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SPARQL micro-services: A lightweight approach to query Web APIs with SPARQL"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SPARQL micro-services"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The SPARQL Micro-Service architecture [is meant to allow the combination of Linked Data with data from Web APIs. It enables querying non-RDF Web APIs with SPARQL, and allows on-the-fly assigning dereferenceable URIs to Web API resources that do not have a URI in the first place. This project is a PHP implementation for JSON-based Web APIs. It comes with multiple configuration options to fit most specific APIs (e.g. add specific HTTP headers, configure a cache database) and can generate provenance information added to the graph being produced at the time a SPARQL micro-service is invoked."
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9581483255398717,
      "result": {
        "original_header": "SPARQL Micro-Services",
        "type": "Text_excerpt",
        "value": "Each SPARQL micro-service is a **lightweight SPARQL endpoint** that typically provides access to a small, resource-centric graph. It takes arguments that depend on the Web API, query the Web API, and build a graph that uses **any vocabulary or ontology of your choice**. \n"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9897864097366416,
      "result": {
        "original_header": "Implementation features:",
        "type": "Text_excerpt",
        "value": "- Easy **Docker-based deployment**;\n- **Simple**: a micro-service consists of a configuration file, a JSON-LD profile and a SPARQL query\n- **Dynamic**: simply drop off your files and your service is ready to go.\n- **Cache database** with configurable expiration time, to improve performance;\n- **Provenance information** about the API invokation (time, parameterr etc.);\n- Web API invokation with **HTTP GET method**, POST is not supported.\n- Dynamic generation of an HTML documentation and test interface \n"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8548659367428754,
      "result": {
        "original_header": "Conference",
        "type": "Text_excerpt",
        "value": "[1] Michel F., Faron-Zucker C. and Gandon F. SPARQL Micro-Services: Lightweight Integration of Web APIs and Linked Data. In *Proceedings of the Linked Data on the Web Workshop (LDOW2018)*. [HAL](https://hal.archives-ouvertes.fr/hal-01722792). \n[4] Michel F., Faron-Zucker C., Corby O. and Gandon F. Enabling Automatic Discovery and Querying of Web APIs at Web Scale using Linked Data Standards. In *LDOW/LDDL'19, companion proceedings of the 2019 World Wide Web Conference (WWW'19 Companion)*. [HAL](https://hal.archives-ouvertes.fr/hal-02060966). \n"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "active"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Documentation",
        "parent_header": [
          "SPARQL Micro-Services"
        ],
        "type": "Text_excerpt",
        "value": "- [How to use SPARQL micro-services](doc/01-usage.md)\n- [Configuring a SPARQL micro-service](doc/02-config.md)\n- [Docker-based deployment](deployment/docker/)\n- [Complete non-Docker installation procedure](doc/04-install.md) (for more advanced deployments)\n- [Dynamic HTML documentation](doc/03-html-doc.md)\n- [Adding provenance information](doc/05-prov.md)\n\n"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/frmichel/sparql-micro-service/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 9
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/frmichel/sparql-micro-service/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "frmichel/sparql-micro-service"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SPARQL Micro-Services"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "composer.json",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "docker_compose",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/deployment/docker/docker-compose.yml"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/deployment/docker/docker-compose.yml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "docker_compose",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/deployment/docker/build/docker-compose.yml"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/deployment/docker/build/docker-compose.yml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/deployment/docker/build/sparql-micro-service/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/deployment/docker/build/sparql-micro-service/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/deployment/docker/build/corese4sms/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/deployment/docker/build/corese4sms/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "composer.json"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "code_parser"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/demo/deployment/corese/corese-server-demo-sms.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/deployment/deploy.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/deployment/corese/corese-server.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/deployment/docker/build/corese4sms/corese-server.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "homepage": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/frmichel/sparql-micro-service"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "code_parser"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Installation, configuration and deployment\n\n## Pre-requisites\n\nTo install and run this project, you will need the following components to be installed first:\n\n  * a web server of your choice: we use Apache, thus configuration examples are given for Apache. You may use another server although you shall translate the confifugration appropriately.\n  * PHP 7.1+\n  * Additional PHP packages: `php-mbstring` and `php-xml`, `php-devel`, `php-pear` (PECL)\n  * [Composer](https://getcomposer.org/doc/) (PHP dependency management)\n  * [Corese-KGRAM](https://project.inria.fr/corese/download/) in-memory triple-store and SPARQL endpoint. It is used to store create temporary graphs and evaluate SPARQL queries. Specific features of Corese ([STTL](http://ns.inria.fr/sparql-template/) and [LDScript](http://ns.inria.fr/sparql-extension/)) are also used for the genration of Web pages ([service index and documentation](03-html-doc.md)) and the translation of SPARQL queries into SPIN.\n  * [Java Runtime Environment 10+](https://www.java.com/fr/download/)\n  * a [MongoDB database](https://www.mongodb.com/c) (optional), to serve as the cache database (can be deactivated in [/src/sparqlms/config.ini](../src/sparqlms/config.ini)).\n\n\n#### PHP fine-tuning\n  * Make sure the time zone is defined in the php.ini file, for instance:\n```ini\n  [Date]\n  ; Defines the default timezone used by the date functions\n  ; http://php.net/date.timezone\n  date.timezone = 'Europe/Paris'\n```\n  * To use MongoDB as a cache (optional), install the [MongoDB PHP driver](https://secure.php.net/manual/en/mongodb.installation.manual.php) and add the following line to php.ini:`extension=mongodb.so`\n  * If some SPARQL micro-services require a long time to complete, you may need to increase the default tiemout, for instance:\n```ini\n  [PHP]\n  max_execution_time = 300\n  max_input_time = 300\n```\n  * If some SPARQL micro-services produce large outputs, you may need to increase the default max memory, for instance:\n```ini\n  [PHP]\n  memory_limit = 2048M\n```\n\n  \n## Folders structure\n\n```bash\nsrc/common\n    Cache.php\n    Configuration.php         # management of the config either by config.ini file of service description graph\n    Context.php               # application execution context\n    Metrology.php             # execution time measures\n    Utils.php                 # utility functions\n\nsrc/sparqlms/\n    config.ini                # generic configuration of the SPARQL micro-service engine\n    service.php               # core logics of the SPARQL micro-services\n    resources/                # SPARQL queries used while executing a SPARQL micro-service\n        sms-html-description/ # STTL transformation generating an HTML page from a service description graph\n\nservices/                     # directory where the services are deployed\n    <Web API>/                # directory of the services related to one Web API\n    \n        # Service with arguments passed as parameters of the HTTP query string\n        <service>/\n            config.ini        # micro-service configuration\n            profile.jsonld    # JSON-LD profile to translate the JSON response into JSON-LD\n            construct.sparql  # optional SPARQL CONSTRUCT query to create triples that JSON-LD cannot create\n            service.php       # optional script to perform specific actions (see folder 'manual_config_example')\n                              \n        # Service with arguments passed in the SPARQL query graph pattern\n        <service>/\n            profile.jsonld    # JSON-LD profile to translate the JSON response into JSON-LD\n            construct.sparql  # optional SPARQL CONSTRUCT query to create triples that JSON-LD cannot create\n            service.php       # optional script to perform specific actions (see folder 'manual_config_example')\n            ServiceDescription.ttl # SPARQL Service Description describing this micro-service\n            ShapesGraph.ttl   # optional SHACL description of the graphs produced by the service\n        ...\n        \ndeployment/\n    docker/                   # this folder gives the necessary files to build Corese and your SPARQL micro-services as Docker containers\n    apache/                   # Apache rewriting rules for HTTP access\n    corese/                   # Corese configuration and running files\n    deploy.sh                 # customization of services' configuration files and SPARQL queries\n```\n\n## Installation procedure\n\nClone this Github repository to a directory that is made accessible through HTTP by Apache, typically `/var/www/html/sparqlms` or `~/public_html/sparqlms` in your home directory.\n\nCD to sparqlms directory.\n\nUse composer to [install the dependencies](https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies), this will create a `vendor` directory with the required PHP libraries:\n```\ncomposer install\n```\n\nCreate directory `logs` with execution and modification rights for all (`chmod 777 logs`), so that Apache can write into it.\n\nYou should now have the following directory structure:\n\n```\nservices/\nsparqlms/\n    deployment/\n    logs/\n    src/\n        common/\n        sparqlms/\n    vendor/\n```\n\n### Customize the properties in file [/src/sparqlms/config.ini](../src/sparqlms/config.ini):\n\n- Set the URL of your write-enabled SPARQL endpoint and optional SPARQL-to-SPIN service. These do not need to be exposed on the internet, only the Apache process should have access to them, e.g.:\n```\nsparql_endpoint = http://localhost:8081/sparql\nspin_endpoint   = http://localhost:8081/service/sparql-to-spin\n```\n- Set the path to the directories where SPARQL micro-services are deployed, e.g.:\n```\nservices_paths[] = ../../services\nservices_paths[] = /home/user/services\n```\n- The MongoDB cache is activated by default. If you don't want to use it, turn it off:\n```\nuse_cache = false\n```\n\n\n## Customize the SPARQL micro-services' configuration\n\nThe services provided in folder [/services](../services) are configured as if they were deployed at http://example.org/service, and the dereferenceable URIs they generate are in the form http://example.org/ld. These must be customized before you can use the services, to match the URL at which they are deployed.\n\nAlso, services requiring an API KEY need to be updated with your own private API keys.\n\nScript [/deployment/deploy.sh](../deployment/deploy.sh) does that for you: copy the script to the folder where the services are located (for instance /services), update the variables `SERVER`, `SERVERPATH`, `SMSDIR` and `API_KEY`, and run the script.\n\n\n### Change the log level\n\nThe application writes log traces in files named like `logs/sms-<date>.log`. The default log level is NOTICE. To change it, simply update the following line in [/src/sparqlms/config.ini](../src/sparqlms/config.ini) with e.g. INFO or DEBUG:\n\n```\n    log_level = INFO\n```\n\nLog levels are described in [Monolog documentation](https://github.com/Seldaek/monolog/blob/master/doc/01-usage.md#log-levels).\n\n\n### Corese-KGRAM security configuration\n\nStarting version 4.1.6, Corese-KGRAM implements some [security measures](https://files.inria.fr/corese/doc/level.html) that require defining explicitely the HTTP domains where Corese-KGRAM is allowed to look for remote ressources. \nThis applies to SPARQL federated queries (clause SERVICE <...>), but also to STTL transformation files (that can no longer be accessed directly from the local file system).\n\nTo allow those case:\n  * in the [Corese profile](../deployment/corese/corese-profile-sms.ttl), complete the list of URLs of all the domains that SERVICE clauses are allowed to reach:\n```\n  st:access st:namespace\n    <http://localhost/sttl>,\n    <https://sparql-micro-services.org>,\n    <http://sms.i3s.unice.fr/sparql-ms>.\n```\n  * In the Apache configuration, create aliases to expose the STTL folders through http://localhost/sttl/. File [/deployment/apache/example.org.conf](../deployment/apache/example.org.conf) provides an example Apache configuration to do that.\n\n\nNote: You may deactivate those security constraints by using the \"-su\" option of Corese. But this opens a potential security leak, e.g. a SPARQL query submitted to a SPARQL micro-serivce may execute SERVICE clauses against any endpoint.\n\n\n### URL rewriting rules\n\nYou now need to configure [rewriting rules](http://httpd.apache.org/docs/2.4/rewrite/) so that Apache will route SPARQL micro-service invocations appropriately. Several rules are needed to deal with the regular invocation with a SPARQL query, or the invocation to dereference URIs.\nComplete examples are given in [/deployment/apache/example.org.conf](../deployment/apache/example.org.conf), and the sections below provide further explanations.\n\nThe main entry point of SPARQL micro-services is the [service.php](../src/sparqlms/service.php) script. This script takes several parameters listed in the table below:\n\nParameter | Description\n--------- | -------------\nservice | the name of SPARQL micro-service being invoked, formatted as `<Web API>/<service>`\nquerymode | either `sparql` for regular SPARQL invocation or `ld` when the service is invoked to dereference a URI\nroot_url | URL at which the SPARQL micro-service is deployed (optional). If provided, this parameter overrides the `root_url` parameter in the [main config.ini](../src/sparqlms/config.ini) file.\nquery, default-graph-uri, named-graph-uri | the regular SPARQL parameters described in the [SPARQL Protocol](https://www.w3.org/TR/2013/REC-sparql11-protocol-20130321/) (since a SPARQL micro-service is first of all a SPARQL endpoint). When the service is invoked for URI dereferencing (querymode=ld), these parameters are ignored.\n*service custom arguments* | any other arguments of the SPARQL micro-service in case they are passed as query string parameters\n\nApache rewriting rules are used to route invocations to `service.php` while setting the `querymode`, `service` and `root_url` parameters appropriately. Other parameters (`query`, `default-graph-uri`, `named-graph-uri` and the service custom arguments) that are passed by the client invoking the service are transmitted transparantly to `service.php`.\n\n\n#### Rewriting rules for SPARQL querying\n\nIf the service custom arguments are passed on the HTTP query string ([config.ini method](02-config.md#configuration-with-file-configini)), the URL pattern is a follows:\n```http://example.org/service/<Web API>/<service>?param=value```.\n\nIf they are passed passed within the SPARQL query graph pattern ([Service Description method](02-config.md#configuration-with-a-sparql-service-description-file)), the URL pattern is simply:\n```http://example.org/service/<Web API>/<service>```.\n\nThe rewriting rule below invokes script  `service.php` with parameter `querymode` set to `sparql` and `service` set to `<Web API>/<service>`.\nThe other parameters (`query`, `default-graph-uri`, `named-graph-uri` and the service custom arguments) are passed transparently (flag QSA of the rewriting rule):\n```\n    RewriteRule \"^/service/([^/?]+)/([^/?]+).*$\" http://example.org/~userdir/sparqlms/src/sparqlms/service.php?querymode=sparql&service=$1/$2 [QSA,P,L]\n```\n\n**Example**. The following invocation:\n```sparql\nSELECT * WHERE {\n  SERVICE <https://example.org/service/macaulaylibrary/getAudioByTaxon?name=Delphinus+delphis>\n  { [] <http://schema.org/contentUrl> ?audioUrl. }\n}\n```\nwill be rewritten into this URL:\n```\nhttp://example.org/~userdir/sparqlms/src/sparqlms/service.php?querymode=sparql&service=macaulaylibrary/getAudioByTaxon&name=Delphinus+delphis\n```\n\n\n#### Rewriting rules for URI dereferencing\n\nHere we describe the example of the Flickr Web API.\n\nService `flickr/getPhotosByTaxon_sd` generates RDF triples with photo URIs formatted as follows:\n`http://example.org/ld/flickr/photo/<identifier>`, where `<identifier>` is the Flickr internal identifier.\n\nTo produce a graph in response to the lookup of such a URI, service `flickr/getPhotoById` is used. The rewriting rule below invokes script  `service.php` with parameter `querymode` set to `ld` and `service` set to `flickr/getPhotoById`:\n\n    RewriteRule \"^/ld/flickr/photo/(.*)$\" http://example.org/~userdir/sparqlms/src/sparqlms/service.php?querymode=ld&service=flickr/getPhotoById&photo_id=$1 [P,L]\n```\n```\n\nThis invokes service `flickr/getPhotoById` with the `photo_id` parameter whose value is extract from the URI.\n\nNote that the `querymode=ld` argument instructs `service.php ` to execute the query in file `construct.sparql` and return the response of this query as the response to the URI lookup query. Hence no SPARQL `query` argument needs to be provided.\n\n**Example**. The following invocation:\n```\n    curl --header \"Accept:text/turtle\" http://example.org/ld/flickr/photo/31173091516\n```\nwill be rewritten into this URL:\n```\nhttp://example.org/~userdir/sparqlms/src/sparqlms/service.php?querymode=ld&service=flickr/getPhotoById&photo_id=31173091516\n```\n\n\n#### Rewriting rules for dereferencing ServiceDescription and SHACL graphs\n\nAdditional rewrinting rules must be set to allow dereferencing the ServiceDescription and SHACL graphs, as well as the translation of the ServiceDescription graph into an HTML page.\n\nComplete examples are given in the first part of the [/deployment/apache/example.org.conf](../deployment/apache/example.org.conf).\n\n\n# Start the services\n\nIf some SPARQL micro-services are [configured with a Service Description file](02-config.md#configuration-with-a-sparql-service-description-file), then files ServiceDescription.ttl, ServiceDescriptionPrivate.ttl and ShapesGraph.ttl of each SPARQL micro-service must be loaded as named graphs when Corese-KGRAM starts.\nScript [corese-server.sh](../deployment/corese/corese-server.sh) prepares a list of those files as well as their named graphs URIs, then it starts up Corese-KGRAM that immediately loads the files.\n\n\nUpdate this script as needed and run it:\n\n`./corese-server.sh`\n\nIf you are using MongoDB as a cache database, make sure it is running:\n\n`sudo systemctl status mongod`\n\nFInally, restart the Apache server to take into account any configuration changes:\n\n`sudo systemctl status httpd`\n\n\n\n# Test the installation\n\n## Test SPARQL querying\n\nYou can test the services using the commands below in a bash.\n\n```bash\nSERVICEPATH=http://localhost/service\n\n# URL-encoded query: select * where {?s ?p ?o}\nSELECT='select%20*%20where%20%7B%3Fs%20%3Fp%20%3Fo%7D'\n\ncurl --header \"Accept: application/sparql-results+json\" \\\n  \"${SERVICEPATH}/flickr/getPhotoById?query=${SELECT}&photo_id=31173091246\"\n\ncurl --header \"Accept: application/sparql-results+json\" \\\n  \"${SERVICEPATH}/musicbrainz/getSongByName?query=${SELECT}&name=Delphinus+delphis\"\n```\n\nThat should return a SPARQL JSON result.\n\n## Test URI dereferencing\n\nEnter this URL in your browser: http://localhost/ld/flickr/photo/31173091246 or the following command in a bash:\n\n```bash\ncurl --header \"Accept: text/turtle\" http://localhost/ld/flickr/photo/31173091246\n```\n\nThis should return an RDF description of the photographic resource similar to:\n\n```turtle\n@prefix schema: <http://schema.org/> .\n@prefix cos: <http://www.inria.fr/acacia/corese#> .\n@prefix dce: <http://purl.org/dc/elements/1.1/> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .\n@prefix ma: <http://www.w3.org/ns/ma-ont#> .\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n\n<http://localhost/ld/flickr/photo/31173091516>\n    rdf:type schema:Photograph ;\n    dce:title           \"Delphinus delphis 1 (13-7-16 San Diego)\" ;\n    schema:author       <https://flickr.com/photos/10770266@N04> ;\n    schema:subjectOf    <https://www.flickr.com/photos/10770266@N04/31173091516/> ;\n    schema:thumbnailUrl <https://farm6.staticflickr.com/5567/31173091516_f1c09fa5d5_q.jpg> ;\n    schema:image        <https://farm6.staticflickr.com/5567/31173091516_f1c09fa5d5_z.jpg> .\n```\n\n## Test the HTML documentation generation\n\nTwo services are provided with a service description graph that can be dynamically translated into an HTML documentation. Enter the following URLs in a web browser:\n```\nhttp://localhost/service/flickr/getPhotosByTags_sd/\n```\n\nYou can also look up the URIs of the service description and shapes graphs directly, e.g.:\n```\ncurl --header \"Accept: text/turtle\" http://localhost/service/flickr/getPhotosByTags_sd/ServiceDescription\ncurl --header \"Accept: text/turtle\" http://localhost/service/flickr/getPhotosByTags_sd/ShapesGraph\n```\n"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/doc/04-install.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start guide",
        "parent_header": [
          "SPARQL Micro-Services"
        ],
        "type": "Text_excerpt",
        "value": "The most straightforward way to run SPARQL micro-services is using the [Docker deployment](deployment/docker/) option.\n\nThen, these [slides](doc/quick-start-guide.pdf) describe the main concepts behind SPARQL micro-services and provide a guide to **quickly write and setup your first SPARQL micro-service**.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/frmichel/sparql-micro-service/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/frmichel/sparql-micro-service/issues"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "api-wrapper, linked-data, microservice, microservices-architecture, rdf, semantic-web, sparql, web-of-data"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Web API"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SPARQL"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "RDF"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "semantic web"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "LOD"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "web API",
          "SPARQL",
          "RDF",
          "mapping",
          "mediator"
        ]
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "value": "Apache-2.0"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "File_dump",
        "value": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/Apache-2.0",
        "spdx_id": "https://spdx.org/licenses/Apache-2.0",
        "type": "License",
        "value": "https://spdx.org/licenses/Apache-2.0"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "sparql-micro-service"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "SPARQL micro-service"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "frmichel"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "frmichel/sparqlms"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "PHP",
        "size": 102674,
        "type": "Programming_language",
        "value": "PHP"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 39831,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 9832,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 3623,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "PHP",
        "type": "Programming_language",
        "value": "PHP",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "reference_publication": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://hal.archives-ouvertes.fr/hal-02060966"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "frmichel",
          "type": "User"
        },
        "date_created": "2024-11-04T14:15:30Z",
        "date_published": "2024-11-04T14:17:35Z",
        "description": "Fix and update SPARQL micro-services demo",
        "html_url": "https://github.com/frmichel/sparql-micro-service/releases/tag/0.5.8.1",
        "name": "0.5.8.1",
        "release_id": 183382440,
        "tag": "0.5.8.1",
        "tarball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/tarball/0.5.8.1",
        "type": "Release",
        "url": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/183382440",
        "value": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/183382440",
        "zipball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/zipball/0.5.8.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "frmichel",
          "type": "User"
        },
        "date_created": "2024-07-22T13:16:19Z",
        "date_published": "2024-07-22T13:39:58Z",
        "description": "Fixed issue #22 ",
        "html_url": "https://github.com/frmichel/sparql-micro-service/releases/tag/0.5.8",
        "name": "0.5.8",
        "release_id": 166518888,
        "tag": "0.5.8",
        "tarball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/tarball/0.5.8",
        "type": "Release",
        "url": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/166518888",
        "value": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/166518888",
        "zipball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/zipball/0.5.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "frmichel",
          "type": "User"
        },
        "date_created": "2024-02-07T09:56:45Z",
        "date_published": "2024-02-07T09:57:34Z",
        "description": "- Upgrade to php 8.3, MongoDB 4.4.6, Corese 4.4.1\r\n- Fixed Apache issue occuring under highload by adding custom prefork configuration (docker/build/sparql-micro-service/mpm_prefork.conf)\r\n- Fixed name resolution issue at Apache startup (docker/build/sparql-micro-service/Dockerfile)\r\n- Misc. documentation improvements\r\n- Moved some services to repository https://github.com/frmichel/sparql-micro-services.org",
        "html_url": "https://github.com/frmichel/sparql-micro-service/releases/tag/0.5.7",
        "name": "0.5.7",
        "release_id": 140262018,
        "tag": "0.5.7",
        "tarball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/tarball/0.5.7",
        "type": "Release",
        "url": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/140262018",
        "value": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/140262018",
        "zipball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/zipball/0.5.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "frmichel",
          "type": "User"
        },
        "date_created": "2023-07-28T09:44:11Z",
        "date_published": "2023-07-28T09:46:02Z",
        "description": "- Added support for OAuth2-based authentication\r\n- Add cache services\r\n- Add shared folder html in Docker deployment\r\n",
        "html_url": "https://github.com/frmichel/sparql-micro-service/releases/tag/0.5.6",
        "name": "0.5.6",
        "release_id": 113962126,
        "tag": "0.5.6",
        "tarball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/tarball/0.5.6",
        "type": "Release",
        "url": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/113962126",
        "value": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/113962126",
        "zipball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/zipball/0.5.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "frmichel",
          "type": "User"
        },
        "date_created": "2023-05-30T12:35:27Z",
        "date_published": "2023-05-30T12:37:41Z",
        "description": "Fix metadata issues in codemeta.json and CITATION.cff",
        "html_url": "https://github.com/frmichel/sparql-micro-service/releases/tag/0.5.5",
        "name": "0.5.5",
        "release_id": 105356985,
        "tag": "0.5.5",
        "tarball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/tarball/0.5.5",
        "type": "Release",
        "url": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/105356985",
        "value": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/105356985",
        "zipball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/zipball/0.5.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "frmichel",
          "type": "User"
        },
        "date_created": "2022-12-16T14:31:24Z",
        "date_published": "2022-12-16T14:37:06Z",
        "description": "Fix issue https://github.com/frmichel/sparql-micro-service/issues/20\r\nMinor improvement in the Pubmed services.",
        "html_url": "https://github.com/frmichel/sparql-micro-service/releases/tag/0.5.4",
        "name": "0.5.4",
        "release_id": 86323913,
        "tag": "0.5.4",
        "tarball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/tarball/0.5.4",
        "type": "Release",
        "url": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/86323913",
        "value": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/86323913",
        "zipball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/zipball/0.5.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "frmichel",
          "type": "User"
        },
        "date_created": "2022-02-11T13:26:32Z",
        "date_published": "2022-03-01T10:37:59Z",
        "html_url": "https://github.com/frmichel/sparql-micro-service/releases/tag/0.5.3",
        "name": "0.5.3",
        "release_id": 60693638,
        "tag": "0.5.3",
        "tarball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/tarball/0.5.3",
        "type": "Release",
        "url": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/60693638",
        "value": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/60693638",
        "zipball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/zipball/0.5.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "frmichel",
          "type": "User"
        },
        "date_created": "2021-02-19T15:12:19Z",
        "date_published": "2022-01-24T17:43:32Z",
        "html_url": "https://github.com/frmichel/sparql-micro-service/releases/tag/0.5.2",
        "name": "0.5.2",
        "release_id": 57852793,
        "tag": "0.5.2",
        "tarball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/tarball/0.5.2",
        "type": "Release",
        "url": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/57852793",
        "value": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/57852793",
        "zipball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/zipball/0.5.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "frmichel",
          "type": "User"
        },
        "date_created": "2020-09-03T15:06:36Z",
        "date_published": "2020-09-07T13:42:35Z",
        "html_url": "https://github.com/frmichel/sparql-micro-service/releases/tag/0.5.1",
        "release_id": 30856687,
        "tag": "0.5.1",
        "tarball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/tarball/0.5.1",
        "type": "Release",
        "url": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/30856687",
        "value": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/30856687",
        "zipball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/zipball/0.5.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "frmichel",
          "type": "User"
        },
        "date_created": "2018-07-26T14:16:17Z",
        "date_published": "2018-07-26T14:19:57Z",
        "html_url": "https://github.com/frmichel/sparql-micro-service/releases/tag/0.1.0",
        "release_id": 12117711,
        "tag": "0.1.0",
        "tarball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/tarball/0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/12117711",
        "value": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/12117711",
        "zipball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/zipball/0.1.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "frmichel",
          "type": "User"
        },
        "date_created": "2018-06-19T14:57:18Z",
        "date_published": "2018-07-25T16:16:42Z",
        "html_url": "https://github.com/frmichel/sparql-micro-service/releases/tag/0.0.1",
        "release_id": 12099959,
        "tag": "0.0.1",
        "tarball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/tarball/0.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/12099959",
        "value": "https://api.github.com/repos/frmichel/sparql-micro-service/releases/12099959",
        "zipball_url": "https://api.github.com/repos/frmichel/sparql-micro-service/zipball/0.0.1"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "dependency_type": "runtime",
        "name": "php",
        "type": "Software_application",
        "value": "php: >=7.1.0",
        "version": ">=7.1.0"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "dependency_type": "runtime",
        "name": "ext-mbstring",
        "type": "Software_application",
        "value": "ext-mbstring: *",
        "version": "*"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "dependency_type": "runtime",
        "name": "ext-xml",
        "type": "Software_application",
        "value": "ext-xml: *",
        "version": "*"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "dependency_type": "runtime",
        "name": "ml/json-ld",
        "type": "Software_application",
        "value": "ml/json-ld: 1.2.*",
        "version": "1.2.*"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "dependency_type": "runtime",
        "name": "easyrdf/easyrdf",
        "type": "Software_application",
        "value": "easyrdf/easyrdf: 1.0.*",
        "version": "1.0.*"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "dependency_type": "runtime",
        "name": "monolog/monolog",
        "type": "Software_application",
        "value": "monolog/monolog: 1.*",
        "version": "1.*"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "dependency_type": "runtime",
        "name": "mongodb/mongodb",
        "type": "Software_application",
        "value": "mongodb/mongodb: ^1.2",
        "version": "^1.2"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/composer.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": null,
        "type": "Software_application",
        "value": "https://github.com/frmichel/sparql-micro-service/blob/master/composer.json",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 03:11:42",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 38
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Quick start guide",
        "parent_header": [
          "SPARQL Micro-Services"
        ],
        "type": "Text_excerpt",
        "value": "The most straightforward way to run SPARQL micro-services is using the [Docker deployment](deployment/docker/) option.\n\nThen, these [slides](doc/quick-start-guide.pdf) describe the main concepts behind SPARQL micro-services and provide a guide to **quickly write and setup your first SPARQL micro-service**.\n\n\n"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Examples and Demo",
        "parent_header": [
          "SPARQL Micro-Services"
        ],
        "type": "Text_excerpt",
        "value": "You can check out some services we published at [https://sparql-micro-services.org/](https://sparql-micro-services.org/). The source of these services is provided in a separate Github repository: \n[sparql-micro-services.org/](https://github.com/frmichel/sparql-micro-service.org)\n\nThe **HTML documentation and test interface** is [generated dynamically](doc/03-html-doc.md) from the micro-service descriptions, that embeds Schema.org markup to **make the services discoverable** using for instance [Google Dataset Search](https://datasetsearch.research.google.com/search?query=flickr%20sparql&docid=88YllZoR%2BmJMuXMgAAAAAA%3D%3D).\n\nA **[demo](http://sparql-micro-services.org/demo-sms?param=Delphinapterus+leucas)** showcases the use of SPARQL micro-services to integrate, within a single SPARQL query, biodiversity data from a regular Linked Data source with non-RDF data resources: photos, scientific articles, life traits, audio recordings, all obtained through dedicated Web APIs wrapped in SPARQL micro-services.\n\nThis project comes with [several example](services/advanced_examples/) SPARQL micro-services, allowing for instance to search photos matching some tags on [Flickr](https://www.flickr.com/), or tunes whose titles match a given name in [MusicBrainz](https://musicbrainz.org/).\n\nAlso, in the [TaxrefWeb](https://github.com/frmichel/taxrefweb/tree/master/sparql-micro-services) repository we provide services to query major biodiversity data sources such as the [GBIF](https://www.biodiversitylibrary.org/), [BHL](https://www.biodiversitylibrary.org/) or [EoL](http://eol.org/traitbank).\n\n"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Demo",
        "parent_header": [
          "SPARQL Micro-Services",
          "Publications"
        ],
        "type": "Text_excerpt",
        "value": "Michel F., Faron-Zucker C. & Gandon F. (2018). Integration of Biodiversity Linked Data and Web APIs using SPARQL Micro-Services. In *Biodiversity Information Science and Standards 2: e25481 (TDWG 2018)*. Dunedin, New Zealand. Pensoft. [DOI](https://dx.doi.org/10.3897/biss.2.25481), [HAL](https://hal.archives-ouvertes.fr/hal-01856365). \nAvailable online: https://sparql-micro-services.org/demo-sms?param=Delphinapterus%20leucas\n"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "0.5.7"
      },
      "source": "https://raw.githubusercontent.com/frmichel/sparql-micro-service/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
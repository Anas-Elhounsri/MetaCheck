{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/DESCRIPTION",
        "type": "Agent",
        "value": [
          {
            "email": "",
            "value": "Colin Smith"
          }
        ]
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "*",
        "last_name": "Colin Smith (maintainer)",
        "name": "* Colin Smith (maintainer)",
        "type": "Agent",
        "value": "* Colin Smith (maintainer)"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/AUTHORS.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "*",
        "last_name": "Corinna Gries",
        "name": "* Corinna Gries",
        "type": "Agent",
        "value": "* Corinna Gries"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/AUTHORS.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "*",
        "last_name": "Mark Servilla",
        "name": "* Mark Servilla",
        "type": "Agent",
        "value": "* Mark Servilla"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/AUTHORS.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "*",
        "last_name": "Margaret O'Brien",
        "name": "* Margaret O'Brien",
        "type": "Agent",
        "value": "* Margaret O'Brien"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/AUTHORS.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "*",
        "last_name": "Duane Costa",
        "name": "* Duane Costa",
        "type": "Agent",
        "value": "* Duane Costa"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/AUTHORS.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "*",
        "last_name": "Kristin Vanderbilt",
        "name": "* Kristin Vanderbilt",
        "type": "Agent",
        "value": "* Kristin Vanderbilt"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/AUTHORS.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "*",
        "last_name": "Susanne Grossman Clarke",
        "name": "* Susanne Grossman Clarke",
        "type": "Agent",
        "value": "* Susanne Grossman Clarke"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/AUTHORS.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "This",
        "last_name": "project is new. A few people helped with conceptual design and implementation. We expect many to expand and refine it. A special thanks to these extraordinary individuals:",
        "name": "This project is new. A few people helped with conceptual design and implementation. We expect many to expand and refine it. A special thanks to these extraordinary individuals:",
        "type": "Agent",
        "value": "This project is new. A few people helped with conceptual design and implementation. We expect many to expand and refine it. A special thanks to these extraordinary individuals:"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/AUTHORS.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "*",
        "last_name": "[Stevan Earl](https://sustainability.asu.edu/person/stevan-earl/), for contributing methods to make EML for spatial raster data.",
        "name": "* [Stevan Earl](https://sustainability.asu.edu/person/stevan-earl/), for contributing methods to make EML for spatial raster data.",
        "type": "Agent",
        "value": "* [Stevan Earl](https://sustainability.asu.edu/person/stevan-earl/), for contributing methods to make EML for spatial raster data."
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/AUTHORS.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "email": "colin.smith@wisc.edu",
        "identifier": "https://orcid.org/0000-0003-2261-9931",
        "type": "String",
        "value": "Colin Smith"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at info@edirepository.org. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/EDIorg/EMLassemblyline"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/EDIorg/EMLassemblyline"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/EDIorg/EMLassemblyline"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing Guidelines\n\n## git structure\n\nThe active branch is `development`. `development` is merged into `main` for releases. Please submit your pull requests to `development`.\n\n## Repository structure\n\nThis repository is structured as a standard R package\nfollowing the conventions outlined in the [Writing R\nextensions](http://cran.r-project.org/doc/manuals/R-exts.html) manual.\nA few additional files are provided that are not part of the built\nR package and are listed in `.Rbuildignore`, such as `.travis.yml`,\nwhich is used for continuous testing and integration.\n\n## Code\n\nAll code for this package is found in `R/`. All functions should be thoroughly\ndocumented with `roxygen2` notation; see Documentation. Code should\nconform to the rOpenSci [Style guide](https://github.com/ropensci/onboarding/blob/master/packaging_guide.md).\n\n## Testing\n\nAny new feature or bug-fix should include a unit-test demonstrating the\nchange.  Unit tests follow the `testthat` framework with files in\n`tests/testthat`.  Please make sure that the testing suite passes\nbefore issuing a pull request.  This can be done by running `check()`\nfrom the `devtools` package, which will also check for consistent\ndocumentation, etc.\n\n\nThis package uses the [travis](https://github.com/craigcitro/r-travis)\ncontinuous testing mechanism for R to ensure that the test suite is run\non each push to Github.  An icon at the top of the README.md indicates\nwhether or not the tests are currently passing.\n\n## Documentation\n\nAll of the function documentation is generated automatically.\nPlease do not edit any of the documentation files in `man/`\nor the `NAMESPACE`.  Instead, construct the appropriate\n[roxygen2](https://github.com/klutometis/roxygen) documentation in the\nfunction files in `R/` themselves.  The documentation is then generated\nby running the `document()` function from the `devtools` package.  Please\nconsult the [Advanced R programming](http://adv-r.had.co.nz/) guide if\nthis workflow is unfamiliar to you.  Note that functions should include\nexamples in the documentation. Please use `\\dontrun` for examples that\ntake more than a few seconds to execute or require an internet connection.\n\nLikewise, the README.md file in the base directory should not be edited\ndirectly.  This file is created automatically from code that runs the\nexamples shown, helping to ensure that they are functioning as advertised\nand consistent with the package README vignette.  Instead, edit the\n`README.Rmd` source file in `manuscripts` and run `make` to build\nthe README.\n\n## General Development Goals & Guidelines\n\n1. High-level functions requiring little to no knowledge of EML or R.\n2. Functions to auto-detect metadata from data entities.\n3. Check user inputs for valid entries.\n4. Errors and warnings should guide users to solutions.\n\n## Attribution\n\nThese contributing guidelines are based on those of the [rOpenSci EML project](https://github.com/ropensci/EML/blob/master/CONTRIBUTING.md).\n"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "EMLassemblyline (EAL)"
        ],
        "type": "Text_excerpt",
        "value": "Please contribute! See our [code of conduct](https://github.com/EDIorg/EMLassemblyline/blob/master/CODE_OF_CONDUCT.md) and [contributing guidelines](https://github.com/EDIorg/EMLassemblyline/blob/master/CONTRIBUTING.md) for details.\n"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2017-03-09T17:04:28Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-09-03T14:34:03Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "R package for creating EML metadata"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/DESCRIPTION",
        "type": "String",
        "value": "For scientists and data managers to create high quality EML metadata for dataset publication. EMLassemblyline is optimized for automating recurring publications (timeseries or data derived from timeseries sources) but works well for \"one-off\" publications, especially through the MetaShARK interface. EMLassemblyline prioritizes automated metadata extraction from data objects to minimize required human effort and encourages EML best practices to make publications Findable, Accessible, Interoperable, and Reusable."
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": " For scientists and data managers to create high quality EML metadata for dataset publication. EMLassemblyline is optimized for automating recurring publications (timeseries or data derived from timeseries sources) but works well for \"one-off\" publications, especially through the MetaShARK interface. EMLassemblyline prioritizes automated metadata extraction from data objects to minimize required human effort and encourages EML best practices to make publications Findable, Accessible, Interoperable, and Reusable."
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9375145878690435,
      "result": {
        "original_header": "EMLassemblyline (EAL)",
        "type": "Text_excerpt",
        "value": "For scientists and data managers to create high quality [EML](https://eml.ecoinformatics.org/) metadata for dataset publication. EAL is optimized for automating recurring publications (time series or data derived from time series sources) but works well for \"one-off\" publications, especially through the [MetaShARK](https://github.com/earnaud/MetaShARK-v2) interface. EAL prioritizes automated metadata extraction from data objects to minimize required human effort and encourages EML best practices to make publications Findable, Accessible, Interoperable, and Reusable.\n \n"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9656863911988495,
      "result": {
        "original_header": "Features",
        "type": "Text_excerpt",
        "value": "* Optimized for automating recurring data publications\n* Works well for one-off data publications\n* Prioritizes automated metadata extraction from data objects\n* Aligns with EML best practices of the U.S. Long Term Ecological Research Network (LTER)\n* Requires no familiarity with EML\n* Requires little familiarity with the R language\n* Accepts all data types\n* Is data repository agnostic\n \n"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9874475921424967,
      "result": {
        "original_header": "Active projects",
        "type": "Text_excerpt",
        "value": "* Creating a Shiny interface for editing metadata template files thereby eliminating requirements for text and spreadsheet editors while facilitating use of dictionaries, vocabularies, and ontologies. This is under development in the [MetaShARK](https://github.com/earnaud/MetaShARK-v2) application, developped by the PNDB (French Biodiversity National Data Hub).\n* Aligning EAL with a profile of the most commonly used EML elements to provide an exchange interface with other information systems (e.g. [LTER-core-metabase](https://github.com/lter/LTER-core-metabase)).\n* See project [issues](https://github.com/EDIorg/EMLassemblyline/issues) for more.\n \n"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8242783337753329,
      "result": {
        "original_header": "Versioning",
        "type": "Text_excerpt",
        "value": "This project uses [semantic versioning](https://semver.org).\n \n"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/EDIorg/EMLassemblyline/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/EDIorg/EMLassemblyline/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 16
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/EDIorg/EMLassemblyline/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EDIorg/EMLassemblyline"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EMLassemblyline (EAL)"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "description",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/DESCRIPTION",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/DESCRIPTION",
        "type": "Url",
        "value": "DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "homepage": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://ediorg.github.io/EMLassemblyline/"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EMLassemblyline"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/84467795"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://codecov.io/github/EDIorg/EMLassemblyline/coverage.svg?branch=master"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "EMLassemblyline (EAL)"
        ],
        "type": "Text_excerpt",
        "value": "```\n# Install from GitHub\nremotes::install_github(\"EDIorg/EMLassemblyline\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/EDIorg/EMLassemblyline/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/EDIorg/EMLassemblyline/issues"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/EDIorg/EMLassemblyline/issues"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 EDIorg\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/DESCRIPTION",
        "type": "String",
        "value": "MIT"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/MIT",
        "spdx_id": "https://spdx.org/licenses/MIT",
        "type": "License",
        "value": "https://spdx.org/licenses/MIT"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EMLassemblyline"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "EMLassemblyline: A tool kit for building EML metadata workflows"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "EDIorg"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/DESCRIPTION",
        "type": "String",
        "value": "EMLassemblyline"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 587311,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "type": "Programming_language",
        "url": "https://r-project.org",
        "value": "R",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "clnsmth",
          "type": "User"
        },
        "date_created": "2025-09-03T14:23:04Z",
        "date_published": "2025-09-03T14:29:39Z",
        "description": "## What's Changed\r\n* Allow template_geographic_coverage to take a vector of tables by @mdkompella in https://github.com/EDIorg/EMLassemblyline/pull/147\r\n\r\n## New Contributors\r\n* @mdkompella made their first contribution in https://github.com/EDIorg/EMLassemblyline/pull/147",
        "html_url": "https://github.com/EDIorg/EMLassemblyline/releases/tag/v3.6.0",
        "name": "EMLassemblyline 3.6.0",
        "release_id": 244469078,
        "tag": "v3.6.0",
        "tarball_url": "https://api.github.com/repos/EDIorg/EMLassemblyline/tarball/v3.6.0",
        "type": "Release",
        "url": "https://api.github.com/repos/EDIorg/EMLassemblyline/releases/244469078",
        "value": "https://api.github.com/repos/EDIorg/EMLassemblyline/releases/244469078",
        "zipball_url": "https://api.github.com/repos/EDIorg/EMLassemblyline/zipball/v3.6.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "clnsmth",
          "type": "User"
        },
        "date_created": "2022-11-01T01:20:31Z",
        "date_published": "2022-11-02T15:02:10Z",
        "description": "### BUG FIXES\r\n\r\n  * `template_geographic_coverage()` now accepts numeric values to the \r\n  `site.col` parameter (#121).\r\n  * EMLassemblyline now does a better job of distinguishing metadata template\r\n  files from other files in the same directory.\r\n",
        "html_url": "https://github.com/EDIorg/EMLassemblyline/releases/tag/v3.5.5",
        "name": "EMLassemblyline 3.5.5",
        "release_id": 81829953,
        "tag": "v3.5.5",
        "tarball_url": "https://api.github.com/repos/EDIorg/EMLassemblyline/tarball/v3.5.5",
        "type": "Release",
        "url": "https://api.github.com/repos/EDIorg/EMLassemblyline/releases/81829953",
        "value": "https://api.github.com/repos/EDIorg/EMLassemblyline/releases/81829953",
        "zipball_url": "https://api.github.com/repos/EDIorg/EMLassemblyline/zipball/v3.5.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "clnsmth",
          "type": "User"
        },
        "date_created": "2022-05-12T20:43:08Z",
        "date_published": "2022-06-08T18:50:17Z",
        "description": "Now imports taxonomyCleanr >= 1.6.2. The EDIutils package was still listed\r\nfor taxonomyCleanr 1.6.1 (#113).",
        "html_url": "https://github.com/EDIorg/EMLassemblyline/releases/tag/v3.5.4",
        "name": "EMLassemblyline 3.5.4",
        "release_id": 68988628,
        "tag": "v3.5.4",
        "tarball_url": "https://api.github.com/repos/EDIorg/EMLassemblyline/tarball/v3.5.4",
        "type": "Release",
        "url": "https://api.github.com/repos/EDIorg/EMLassemblyline/releases/68988628",
        "value": "https://api.github.com/repos/EDIorg/EMLassemblyline/releases/68988628",
        "zipball_url": "https://api.github.com/repos/EDIorg/EMLassemblyline/zipball/v3.5.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "clnsmth",
          "type": "User"
        },
        "date_created": "2022-05-09T21:24:49Z",
        "date_published": "2022-05-09T21:49:13Z",
        "description": "BUG FIXES\r\n  * Now imports taxonomyCleanr >= 1.6.1 so the EDIutils package is not required ([#112](https://github.com/EDIorg/EMLassemblyline/issues/112)).\r\n\r\nMINOR IMPROVEMENTS\r\n  * To identify EML files created with EMLassemblyline, the application and version number are now included in the additionalMetadata element ([#109](https://github.com/EDIorg/EMLassemblyline/issues/109)).",
        "html_url": "https://github.com/EDIorg/EMLassemblyline/releases/tag/v3.5.3",
        "name": "EMLassemblyline 3.5.3",
        "release_id": 66419271,
        "tag": "v3.5.3",
        "tarball_url": "https://api.github.com/repos/EDIorg/EMLassemblyline/tarball/v3.5.3",
        "type": "Release",
        "url": "https://api.github.com/repos/EDIorg/EMLassemblyline/releases/66419271",
        "value": "https://api.github.com/repos/EDIorg/EMLassemblyline/releases/66419271",
        "zipball_url": "https://api.github.com/repos/EDIorg/EMLassemblyline/zipball/v3.5.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "clnsmth",
          "type": "User"
        },
        "date_created": "2022-03-07T15:53:07Z",
        "date_published": "2022-03-07T16:06:53Z",
        "description": "### Enhancements\r\n\r\n* Updated the get_eol() function - The get_eol() function was refactored for efficiency and clarity in the hymetDP package. The refactored function, unit tests, and updated implementation have been ported here.\r\n* Updated provenance.txt documentation - Added some minor details to the provenance.txt documentation.\r\n\r\n### Bug fix\r\n\r\n* Fixed keyword resolver - Keywords were not resolving to the LTER vocabulary due to a regression that occurred during the EDIutils deprecation. The missing functions have been added back to EAL.\r\n",
        "html_url": "https://github.com/EDIorg/EMLassemblyline/releases/tag/v3.5.2",
        "name": "EMLassemblyline 3.5.2",
        "release_id": 61167961,
        "tag": "v3.5.2",
        "tarball_url": "https://api.github.com/repos/EDIorg/EMLassemblyline/tarball/v3.5.2",
        "type": "Release",
        "url": "https://api.github.com/repos/EDIorg/EMLassemblyline/releases/61167961",
        "value": "https://api.github.com/repos/EDIorg/EMLassemblyline/releases/61167961",
        "zipball_url": "https://api.github.com/repos/EDIorg/EMLassemblyline/zipball/v3.5.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "clnsmth",
          "type": "User"
        },
        "date_created": "2019-04-29T20:27:21Z",
        "date_published": "2019-04-29T20:49:37Z",
        "description": "Version 2.5.0 contains substantial improvements for users and developers. See NEWS.md.",
        "html_url": "https://github.com/EDIorg/EMLassemblyline/releases/tag/2.5.0",
        "name": "EMLassemblyline v2.5.0",
        "release_id": 17051888,
        "tag": "2.5.0",
        "tarball_url": "https://api.github.com/repos/EDIorg/EMLassemblyline/tarball/2.5.0",
        "type": "Release",
        "url": "https://api.github.com/repos/EDIorg/EMLassemblyline/releases/17051888",
        "value": "https://api.github.com/repos/EDIorg/EMLassemblyline/releases/17051888",
        "zipball_url": "https://api.github.com/repos/EDIorg/EMLassemblyline/zipball/2.5.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "clnsmth",
          "type": "User"
        },
        "date_created": "2019-04-23T23:56:42Z",
        "date_published": "2019-04-29T15:37:50Z",
        "description": "Version 2.4.6 (December 2017 - April 2018) contains substantial improvements since v1.0.0, is stable, and is being archived prior to release of v2.5.0, which is a substantial refactoring of that is fully backwards compatible.",
        "html_url": "https://github.com/EDIorg/EMLassemblyline/releases/tag/v2.4.6",
        "name": "EMLassemblyline v2.4.6",
        "release_id": 17044354,
        "tag": "v2.4.6",
        "tarball_url": "https://api.github.com/repos/EDIorg/EMLassemblyline/tarball/v2.4.6",
        "type": "Release",
        "url": "https://api.github.com/repos/EDIorg/EMLassemblyline/releases/17044354",
        "value": "https://api.github.com/repos/EDIorg/EMLassemblyline/releases/17044354",
        "zipball_url": "https://api.github.com/repos/EDIorg/EMLassemblyline/zipball/v2.4.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "clnsmth",
          "type": "User"
        },
        "date_created": "2017-12-05T17:52:07Z",
        "date_published": "2017-12-06T16:47:29Z",
        "description": "`EMLassemblyline` v1.0.0 (June 2017 - December 2017) was developed to improve the EML creation work flow of the Environmental Data Initiative's (EDI) data curation team and it generated some interest from data managers in the Long-Term Ecological Research network. This initial version demonstrated potential to be a user friendly EML generation tool to help scientists and project technicians make EML their data. In November 2017 this version was tested on a group of scientists and technicians, revealing several weaknesses and short comings. This feed back resulted in several changes to the code thereby make this tool more robust, streamlined, and user friendly. This new version (v2.0.0) will soon be released.",
        "html_url": "https://github.com/EDIorg/EMLassemblyline/releases/tag/v1.0.0",
        "name": "EMLassemblyline v1.0.0",
        "release_id": 8798599,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/EDIorg/EMLassemblyline/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/EDIorg/EMLassemblyline/releases/8798599",
        "value": "https://api.github.com/repos/EDIorg/EMLassemblyline/releases/8798599",
        "zipball_url": "https://api.github.com/repos/EDIorg/EMLassemblyline/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "faq",
    "support",
    "executable_example",
    "keywords"
  ],
  "somef_provenance": {
    "date": "2025-09-19 02:33:05",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 30
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "EMLassemblyline (EAL)"
        ],
        "type": "Text_excerpt",
        "value": "[An overview of the EAL use cases](https://ediorg.github.io/EMLassemblyline/articles/overview.html)\n"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/DESCRIPTION",
        "type": "String",
        "value": "3.6.0"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "3.6.0"
      },
      "source": "https://raw.githubusercontent.com/EDIorg/EMLassemblyline/main/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
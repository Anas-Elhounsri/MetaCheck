{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "affiliation": "University of Cambridge",
        "email": "sdwfrost@gmail.com",
        "identifier": "http://orcid.org/0000-0002-5207-9879",
        "type": "String",
        "value": "Simon Frost"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "Gillespie.jl"
        ],
        "type": "Text_excerpt",
        "value": "If you use `Gillespie.jl` in a publication, please cite the following.\n\n- Frost, Simon D.W. (2016) Gillespie.jl: Stochastic Simulation Algorithm in Julia. *Journal of Open Source Software* 1(3) doi:0.21105/joss.00042\n\nA Bibtex entry can be found [here](http://www.doi2bib.org/#/doi/10.21105/joss.00042).\n"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JuliaPackageMirrors/Gillespie.jl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://github.com/sdwfrost/Gillespie.jl"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-09-10T12:04:34Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2016-07-18"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2016-07-18"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-09-10T12:04:49Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2016-07-18"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Julia package mirror."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Stochastic simulation algorithm in Julia"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9771345127539527,
      "result": {
        "original_header": "Statement of need",
        "type": "Text_excerpt",
        "value": "This is an implementation of [Gillespie's direct method](http://en.wikipedia.org/wiki/Gillespie_algorithm) for performing stochastic simulations, which are widely used in many fields, including systems biology and epidemiology. It borrows the basic interface (although none of the code) from the R library [`GillespieSSA`](http://www.jstatsoft.org/v25/i12/paper) by Mario Pineda-Krch, although `Gillespie.jl` only implements the standard exact method at present, whereas `GillespieSSA` also includes tau-leaping, *etc.*. It is intended to offer performance on par with hand-coded C code; please file an issue if you find an example that is significantly slower (2 to 5 times) than C.\n \n"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9044430230300987,
      "result": {
        "original_header": "Benchmarks",
        "type": "Text_excerpt",
        "value": "The speed of an SIR model in `Gillespie.jl` was compared to:\n- A version using the R package `GillespieSSA`\n- Handcoded versions of the SIR model in Julia, R, and Rcpp \n"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/JuliaPackageMirrors/Gillespie.jl/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/JuliaPackageMirrors/Gillespie.jl/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "JuliaPackageMirrors/Gillespie.jl"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Gillespie.jl"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "http://dx.doi.org/10.5281/zenodo.59127"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://zenodo.org/badge/latestdoi/23574/sdwfrost/Gillespie.jl"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://joss.theoj.org/papers/3cfdd80b93a9123b173e9617c1e6a238/status.svg"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://graphs.waffle.io/sdwfrost/Gillespie.jl/throughput.svg"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/sdwfrost/Gillespie.jl/master/sir.png"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "Gillespie.jl"
        ],
        "type": "Text_excerpt",
        "value": "```Gillespie.jl``` can be installed from the Julia REPL using the following command.\n\n```julia\nPkg.add(\"Gillespie\")\n```\n"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/JuliaPackageMirrors/Gillespie.jl/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "Julia",
          "stochastic simulation",
          "Doob-Gillespie algorithm"
        ]
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "The Gillespie.jl package is licensed under the MIT \"Expat\" License:\n\n> Copyright (c) 2014-2015: Simon Frost.\n>\n> Permission is hereby granted, free of charge, to any person obtaining\n> a copy of this software and associated documentation files (the\n> \"Software\"), to deal in the Software without restriction, including\n> without limitation the rights to use, copy, modify, merge, publish,\n> distribute, sublicense, and/or sell copies of the Software, and to\n> permit persons to whom the Software is furnished to do so, subject to\n> the following conditions:\n>\n> The above copyright notice and this permission notice shall be\n> included in all copies or substantial portions of the Software.\n>\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n> EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n> MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n> IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n> CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n> TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n> SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/LICENSE.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/MIT",
        "spdx_id": "MIT",
        "type": "License",
        "value": "MIT"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Gillespie.jl"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "JuliaPackageMirrors"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Julia",
        "size": 6120,
        "type": "Programming_language",
        "value": "Julia"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 1921,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 02:24:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Example usage",
        "parent_header": [
          "Gillespie.jl"
        ],
        "type": "Text_excerpt",
        "value": "An example of a [susceptible-infected-recovered (SIR) epidemiological model](https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology#The_SIR_model_without_vital_dynamics) is as follows.\n\n```julia\nusing Gillespie\nusing Gadfly\n\nfunction F(x,parms)\n  (S,I,R) = x\n  (beta,gamma) = parms\n  infection = beta*S*I\n  recovery = gamma*I\n  [infection,recovery]\nend\n\nx0 = [999,1,0]\nnu = [[-1 1 0];[0 -1 1]]\nparms = [0.1/1000.0,0.01]\ntf = 250.0\nsrand(1234)\n\nresult = ssa(x0,F,nu,parms,tf)\n\ndata = ssa_data(result)\n\np=plot(data,\n  layer(x=\"time\",y=\"x1\",Geom.step,Theme(default_color=color(\"red\"))),\n  layer(x=\"time\",y=\"x2\",Geom.step,Theme(default_color=color(\"blue\"))),\n  layer(x=\"time\",y=\"x3\",Geom.step,Theme(default_color=color(\"green\"))),\n  Guide.xlabel(\"Time\"),\n  Guide.ylabel(\"Number\"),\n  Guide.manual_color_key(\"Population\",\n                            [\"S\", \"I\", \"R\"],\n                            [\"red\", \"blue\", \"green\"]),\n  Guide.title(\"SIR epidemiological model\"))\n```\n\n![SIR](https://github.com/sdwfrost/Gillespie.jl/blob/master/sir.png)\n\nJulia versions of the examples used in [`GillespieSSA`](http://www.jstatsoft.org/v25/i12/paper) are given in the [examples](https://github.com/sdwfrost/Gillespie.jl/blob/master/examples) directory.\n\nPassing functions as arguments in Julia (currently) incurs a performance penalty. One can circumvent this by passing an immutable object, with ```call``` overloaded, as follows.\n\n```julia\nimmutable G; end\ncall(::Type{G},x,parms) = F(x,parms)\n```\n\nAn example of this approach is given [here](https://github.com/sdwfrost/Gillespie.jl/blob/master/examples/sir2.jl).\n"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "v0.0.1"
      },
      "source": "https://raw.githubusercontent.com/JuliaPackageMirrors/Gillespie.jl/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
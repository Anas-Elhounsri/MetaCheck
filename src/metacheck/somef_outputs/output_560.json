{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "affiliation": "Howard Hughes Medical Institute",
        "email": "peter@polidoro.io",
        "type": "String",
        "value": "Peter Polidoro"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "given_name": "Peter",
        "last_name": "Polidoro",
        "name": "Peter Polidoro",
        "type": "Agent",
        "value": "Peter Polidoro"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/AUTHORS",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/janelia-python/serial_interface_python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/janelia-python/serial_interface_python"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-01-11T19:51:53Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2018-01-11"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-03-20T18:59:57Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2025-03-20"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Extends pyserial-asyncio to add convenience methods."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Extends pyserial to make serial device interfaces."
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/janelia-python/serial_interface_python/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 2
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/janelia-python/serial_interface_python/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "janelia-python/serial_interface_python"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "About"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "setup.py",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/setup.py"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/setup.py",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "pyproject.toml",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/pyproject.toml"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/pyproject.toml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/requirements.txt",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/.metadata/docker/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/.metadata/docker/Dockerfile",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "pyproject.toml"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "type": "Text_excerpt",
        "value": "<https://github.com/janelia-python/python_setup>\n\n"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Drivers",
        "parent_header": [
          "Installation",
          "Windows"
        ],
        "type": "Text_excerpt",
        "value": "GNU/Linux computers usually have all of the necessary drivers already installed, but users need the appropriate permissions to open the device and communicate with it.\n\nUdev is the GNU/Linux subsystem that detects when things are plugged into your computer.\n\nUdev may be used to detect when a serial device is plugged into the computer and automatically give permission to open that device.\n\nIf you plug a sensor into your computer and attempt to open it and get an error such as: \"FATAL: cannot open /dev/ttyUSB0: Permission denied\", then you need to install udev rules to give permission to open that device.\n\nUdev rules may be downloaded as a file and placed in the appropriate directory using these instructions:\n\n[99-platformio-udev.rules](https://docs.platformio.org/en/stable/core/installation/udev-rules.html)\n\n1.  Download rules into the correct directory\n\n    ```sh\n    curl -fsSL https://raw.githubusercontent.com/platformio/platformio-core/master/scripts/99-platformio-udev.rules | sudo tee /etc/udev/rules.d/99-platformio-udev.rules\n    ```\n\n2.  Restart udev management tool\n\n    ```sh\n    sudo service udev restart\n    ```\n\n3.  Ubuntu/Debian users may need to add own \u201cusername\u201d to the \u201cdialout\u201d group\n\n    ```sh\n    sudo usermod -a -G dialout $USER\n    sudo usermod -a -G plugdev $USER\n    ```\n\n4.  After setting up rules and groups\n\n    You will need to log out and log back in again (or reboot) for the user group changes to take effect.\n    \n    After this file is installed, physically unplug and reconnect your board.\n\n"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Python Code",
        "parent_header": [
          "Installation",
          "Windows"
        ],
        "type": "Text_excerpt",
        "value": "The Python code in this library may be installed in any number of ways, chose one.\n\n1.  pip\n\n    ```sh\n    python3 -m venv ~/venvs/\n    source ~/venvs//bin/activate\n    pip install \n    ```\n\n2.  guix\n\n    Setup guix-janelia channel:\n    \n    <https://github.com/guix-janelia/guix-janelia>\n    \n    ```sh\n    guix install python-serial-interface\n    ```\n\n"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Install Guix",
        "parent_header": [
          "Development"
        ],
        "type": "Text_excerpt",
        "value": "[Install Guix](https://guix.gnu.org/manual/en/html_node/Binary-Installation.html)\n\n"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Test installation of Guix package",
        "parent_header": [
          "Development"
        ],
        "type": "Text_excerpt",
        "value": "```sh\nmake installed-shell # PORT=/dev/ttyUSB0\n# make PORT=/dev/ttyUSB1 installed-shell\nexit\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/janelia-python/serial_interface_python/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause",
        "spdx_id": "BSD-2-Clause",
        "type": "File_dump",
        "value": "Janelia Open-Source Software (3-clause BSD License)\n\nCopyright 2025 Howard Hughes Medical Institute\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation and/or\nother materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\nmay be used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/BSD-3-Clause",
        "spdx_id": "https://spdx.org/licenses/BSD-3-Clause",
        "type": "License",
        "value": "https://spdx.org/licenses/BSD-3-Clause"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "serial_interface_python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "serial_interface"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "janelia-python"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 19630,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 3804,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Scheme",
        "size": 2014,
        "type": "Programming_language",
        "value": "Scheme"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Emacs Lisp",
        "size": 1115,
        "type": "Programming_language",
        "value": "Emacs Lisp"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 99,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python 3",
        "type": "Programming_language",
        "value": "Python 3",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "https://pyserial.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "setuptools",
        "type": "Software_application",
        "value": "setuptools",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "identifier",
    "executable_example",
    "keywords"
  ],
  "somef_provenance": {
    "date": "2025-09-19 02:14:38",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Python",
        "parent_header": [
          "Example Usage"
        ],
        "type": "Text_excerpt",
        "value": "```python\nfrom serial_interface import SerialInterface, find_serial_interface_ports\nfind_serial_interface_ports() # Returns list of available serial ports\n\ndev = SerialInterface() # Might automatically find device if one available\n\n# if it is not found automatically, specify port directly\ndev = SerialInterface(port='/dev/ttyUSB0') # Linux\ndev = SerialInterface(port='/dev/tty.usbmodem262471') # Mac OS X\ndev = SerialInterface(port='COM3') # Windows\n\ndev.get_device_info()\n\nfrom serial_interface import SerialInterfaces\n\ndevs = SerialInterfaces()  # Might automatically find all available devices\n\n# if they are not found automatically, specify ports to use\ndevs = SerialInterfaces(use_ports=['/dev/ttyUSB0','/dev/ttyUSB1']) # Linux\ndevs = SerialInterfaces(use_ports=['/dev/tty.usbmodem262471','/dev/tty.usbmodem262472']) # Mac OS X\ndevs = SerialInterfaces(use_ports=['COM3','COM4']) # Windows\n\ndevs.get_devices_info()\ndevs.sort_by_port()\ndev = devs[0]\ndev.get_device_info()\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Command Line",
        "parent_header": [
          "Example Usage"
        ],
        "type": "Text_excerpt",
        "value": "```sh\n\n```\n\n\n<a id=\"org9227843\"></a>\n"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2.4.4"
      },
      "source": "https://raw.githubusercontent.com/janelia-python/serial_interface_python/main/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgments",
        "parent_header": [
          "cltests"
        ],
        "type": "Text_excerpt",
        "value": "This work was funded by the California Institute of Technology Library.\n\n(If this work was also supported by other organizations, acknowledge them here.  In addition, if your work relies on software libraries, or was inspired by looking at other work, it is appropriate to acknowledge this intellectual debt too.)\n\n<div align=\"center\">\n  <br>\n  <a href=\"https://www.caltech.edu\">\n    <img width=\"100\" height=\"100\" src=\"https://raw.githubusercontent.com/caltechlibrary/template/main/.graphics/caltech-round.png\">\n  </a>\n</div>\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "",
        "type": "Agent",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "California Institute of Technology Library",
        "email": "EMAIL",
        "identifier": "https://orcid.org/0000-0003-0900-6903",
        "type": "String",
        "value": "Robert Doiel"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "Contributor Covenant Code of Conduct\n====================================\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject contributors are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject contributors have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project contributors.\n\n## Enforcement\n\nIf a contributor engages in harassing behaviour, the project organizers may take any action they deem appropriate, including warning the offender or expelling them from online forums, online project resources, face-to-face meetings, or any other project-related activity or resource.\n\nIf you are being harassed, notice that someone else is being harassed, or have any other concerns, please contact a member of the project team immediately.  Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team.  All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances.  The project team is obligated to maintain confidentiality with regard to the reporter of an incident.  Further details of specific enforcement policies may be posted separately.\n\n## Attribution\n\nPortions of this Code of Conduct were adapted from Electron's [Contributor Covenant Code of Conduct](https://github.com/electron/electron/blob/master/CODE_OF_CONDUCT.md), which itself was adapted from the [Contributor Covenant](http://contributor-covenant.org/version/1/4), version 1.4.\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/cltests"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/cltests"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Guidelines for contributing to this project\n\nAny constructive contributions &ndash; bug reports, pull requests (code or documentation), suggestions for improvements, and more &ndash; are welcome.\n\n## Conduct\n\nEveryone is asked to read and respect the [code of conduct](CODE_OF_CONDUCT.md) before participating in this project.\n\n## Coordinating work\n\nA quick way to find out what is currently in the near-term plans for this project is to look at the [GitHub issue tracker](https://github.com/caltechlibrary/template/issues), but the possibilities are not limited to what you see there &ndash; if you have ideas for new features and enhancements, please feel free to write them up as a new issue or contact the developers directly!\n\n## Submitting contributions\n\nPlease feel free to contact the author directly, or even better, jump right in and use the standard GitHub approach of forking the repo and creating a pull request.  When committing code changes and submitting pull requests, please write a clear log message for your commits.\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Contributing",
        "parent_header": [
          "cltests"
        ],
        "type": "Text_excerpt",
        "value": "The intention is minimalism and simplicity but you are welcome to fork\nand submit pull requests via GitHub. See [CONTRIBUTING.md](CONTRIBUTING.md)\nfor communitity guidelines.\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-06-28T18:50:06Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-06-28T22:06:21Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "This is a lightweight test library for Caltech Library python projects."
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Caltech Library Tests (library)"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "cltests"
        ],
        "type": "Text_excerpt",
        "value": "This is avery minimal lightweight test library. It provides one classes\nfor managing a test set. The second object T provides a set of methods\nmaintaining test result state that can be returned by your test function.\nIt will also and a set of assertions that using the form\nof expected value, test result value,  message and current test state.\nThe expected function return a new test state if the test fails.\n\n- TestSet is a class for managing, running and reporting your tests.\n- T tests for expected type and value and reports failures.\n    - ExpectedBool\n    - ExpectedStr\n    - ExpectedInt (etc)\n    - Fail\n\n\nExmaple:\n\nThis example should fail showing a report of what happened.\n\n~~~\n    from cltests import TestSet, T, IsSuccessful\n\n    def mytest():\n        t = T()\n        t.Expected(True, False, \"True # False\")       \n        return t.Results()\n\n    if __name__ == '__main__':\n        ts = TestSet(\"My test demo fialing\")\n        ts.add(mytest)\n        IsSuccessful(ts.run())\n~~~\n\nThis example should success and return \"OK, My test demo worked\".\n\n~~~\n    from cltests import TestSet, T, IsSuccessful\n\n    def mytest():\n        t = T()\n        t.Expected(True, True, \"True = True\")       \n        return t.Results()\n\n    if __name__ == '__main__':\n        ts = TestSet(\"My test demo worked\")\n        ts.add(mytest)\n        IsSuccessful(ts.run())\n~~~\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.8966767399143303,
      "result": {
        "original_header": "Known issues and limitations",
        "type": "Text_excerpt",
        "value": "This is a very lightweight minimal test framework.  It might be too\nlightweight for your needs.\n \n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9707851947480464,
      "result": {
        "original_header": "Authors and history",
        "type": "Text_excerpt",
        "value": "In this section, list the authors and contributors to your software project.  Adding additional notes here about the history of the project can make it more interesting and compelling.  This is also a place where you can acknowledge other contributions to the work and the use of other people's software or tools. \n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "active"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/cltests/releases"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/cltests/archive/master.zip"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/caltechlibrary/cltests/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "caltechlibrary/cltests"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cltests"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "setup.py",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/setup.py"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/setup.py",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/requirements.txt",
      "technique": "file_exploration"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/template/main/.graphics/caltech-round.png"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\nInstall\n=======\n\nThe is a Python 3.8 or better package. Install using setup.py.\nIt depends in a recent version of setuptools.\n\nInstalling from source\n----------------------\n\n```\ngit clone git@github.com:caltechlibrary/cltests\ncd cltests\npython3 -m pip install --user -r requirements.txt\npython3 setup.py install --user\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/INSTALL.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# How to install Python version 3.x\n\nThe following instructions focus on getting [Python 3](https://docs.python.org/3/) running on Debian/Ubuntu Linux-based systems as well as on macOS via [MacPorts](https://www.macports.org) or [HomeBrew](https://brew.sh).\n\n_**Tip**_: If you are running on an Intel-based computers (e.g., most Macs and Windows machines), you can use a Python distribution called [Miniconda](https://docs.conda.io/en/latest/miniconda.html).  This is often the easiest approach to getting Python on your machine.  If that's not suitable for you for any reason, continue reading!\n\n\n## A note about Python version issues\n\nIt may be possible to use the default copy of Python provided by your operating system if it happens to be a version 3 edition of Python.  As of January 2021, the [oldest still-supported version of Python is 3.6](https://www.python.org/downloads/).  However, for historical reasons, many operating system distributions still ship with Python version 2.7 even today. This can be confusing, because the default `python` and `pip` commands provided on these operating systems is version 2.7 of Python; attempting to run programs written for Python version 3 with version 2.7 can result in extremely confusing errors that bear no relationship to the _actual_ problem, which is that the program is not written to run in Python 2.7.\n\n\n## Installing a recent version of Python and `pip`\n\nOn some systems, version 3.x of the Python interpreter and `pip` are available using the commands `python3` and `pip3`, respectively. More often, they must be installed separately.  The following subsections describe how Python 3 can be installed either using the standard software package managers on certain popular operating systems, or using third-party software managers.\n\n\n### Debian/Ubuntu\n\nDebian-based systems still ship with older versions of Python by\ndefault. To install a modern version of Python and the associated version of `pip`, run the following command:\n\n```\nsudo apt install python3 python3-pip\n```\n\n### macOS\n\nThe version of Python that comes with macOS through at least macOS 10.15 (Catalina) is Python 2.7.  The most convenient way to get Python 3.x and the associated version of `pip` is to use [MacPorts](https://www.macports.org) or [HomeBrew](https://brew.sh), depending on your preference.\n\n\n#### _Using MacPorts_\n\nIf you are using macOS and MacPorts, the following command will install a recent version of Python 3:\n\n```\nsudo port install python3 py38-pip\n```\n\nAfter running the command above, you should be able to invoke the Python interpreter using the command `python3`. You can verify the version of Python and `pip` with the following commands:\n\n```\npython3 --version\npython3 -m pip --version\n```\n\n#### _Using HomeBrew_\n\nIf you are using [HomeBrew](https://brew.sh), the corresponding commands are as follows:\n\n```\nbrew install python3\n```\n\nHomeBrew's Python 3 package installs `pip3` by default.  Unless you configured your copy of HomeBrew to install it elsewhere, programs should end up in `/usr/local/bin` on your computer.  Look for `pip3` there (e.g., by running the command `ls /usr/local/bin/pip*` to see what gets listed).\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/INSTALL-Python3.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "## Elasticsearch v7.x\n\nYou can go to Elasticsearch's website and download the appropriate\nelastic search.\n\n    https://www.elastic.co/start\n\nSpecific instructions for your operating system\n\n+ [Install Elasticsearch on Linux with Debian Package](https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html)\n+ [Installing Elasticsearch on Windows with `.zip`](https://www.elastic.co/guide/en/elasticsearch/reference/current/zip-windows.html)\n+ Installing Elasticsearch on macOS with [MacPorts](https://www.macports.org/)\n    + `sudo port install elasticsearch`\n\nElasticsearch can be run locally. By default it runs port 9200 of localhost (e.g. http://localhost:9200/).\n\n\n### Managing Elasticsearch on Debian/Ubuntu\n\nElasticsearch is setup up for `systemd`. Beloew are common\n`systemctl` commands for working with the elasticsearch service.\n\nIf you want manual restart just do `daemon-reload`, then use the \nusual `systemctl` start and stop verbs with elasticsearch.service.\n\n```shell\n    sudo systemctl daemon-reload\n    sudo systemctl enable elasticsearch.service\n```\n\nChecking to see if Elasticsearch is running.\n\n```shell\n    sudo systemctl status elasticsearch.service\n```\n\nStarting Elasticsearch\n\n```shell\n    sudo systemctl start elasticsearch.service\n```\n\nStopping Elasticsearch\n\n```shell\n    sudo systemctl stop elasticsearch.service\n```\n\nTo remove elasticsearch from auto start use the usually systemd\ndisable.\n\n```shell\n    sudo systemctl disable elasticsearch.service\n```\n\n\n### Manage Elasticsearch on macOS with MacPorts\n\nMacPorts includes a version of Elasticsearch that will\nwork with Observatory.\n\nInstalling Elasticsearch server and client. \n\n```shell\n    sudo port install elasticsearch\n```\n\nYou can manage your Elasticsearch service with the ports command.\n\nIf you are using MacPorts you can start elasticsearch\nwith\n\n```\n    sudo port load elasticsearch\n```\n\nand stop it with\n\n```\n    sudo port unload elasticsearch\n```\n\nIf you need to restart Elasticsearch you can use the reload option.\n\n```\n    sudo port reload elasticsearch\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/INSTALL-Elasticsearch.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "cltests"
        ],
        "type": "Text_excerpt",
        "value": "- Requires: Git, Python 3.8 or better, and pip\n\nSteps to install\n\n1. Clone git repository\n2. Change into cloned directory\n3. Run Python 3 setup with option to install in your personal python library\n\n~~~\n    git clone git@github.com:caltechlibrary/cltests\n    cd cltests\n    python3 -m pip install --user -r requirements\n    python3 setup.py install --user\n~~~\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/caltechlibrary/cltests/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/caltechlibrary/cltests/issues"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "software",
          "testing",
          "python3"
        ]
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "BSD 2-Clause",
        "spdx_id": "BSD-2-Clause",
        "type": "File_dump",
        "value": "Copyright (c) 2021, Caltech\nAll rights not granted herein are expressly reserved by Caltech.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice,\nthis list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\nmay be used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://github.com/caltechlibrary/cltests/blob/master/LICENSE",
        "spdx_id": "https://github.com/caltechlibrary/cltests/blob/master/LICENSE",
        "type": "License",
        "value": "https://github.com/caltechlibrary/cltests/blob/master/LICENSE"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "cltests"
        ],
        "type": "Text_excerpt",
        "value": "Software produced by the Caltech Library is Copyright \u00a9 2021 California Institute of Technology.  This software is freely distributed under a BSD/MIT type license.  Please see the [LICENSE](LICENSE) file for more information.\n\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cltests"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "cltests"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "caltechlibrary"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 8022,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/setup.py",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/setup.py",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "setuptools",
        "type": "Software_application",
        "value": "setuptools",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/requirements.txt",
      "technique": "code_parser"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "identifier",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 02:51:51",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting help",
        "parent_header": [
          "cltests"
        ],
        "type": "Text_excerpt",
        "value": "You can get help by opening a GitHub issue at https://github.com/caltechlbirary/cltests/issues\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting help",
        "parent_header": [
          "cltests"
        ],
        "type": "Text_excerpt",
        "value": "You can get help by opening a GitHub issue at https://github.com/caltechlbirary/cltests/issues\n"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "0.0.1"
      },
      "source": "https://raw.githubusercontent.com/caltechlibrary/cltests/main/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
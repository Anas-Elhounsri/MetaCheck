{
  "acknowledgement": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Acknowledgements",
        "parent_header": [
          "fairgraph: a Python API for the EBRAINS Knowledge Graph."
        ],
        "type": "Text_excerpt",
        "value": "<div><img src=\"https://www.braincouncil.eu/wp-content/uploads/2018/11/wsi-imageoptim-EU-Logo.jpg\" alt=\"EU Logo\" height=\"23%\" width=\"15%\" align=\"right\" style=\"margin-left: 10px\"></div>\n\nThis open source software code was developed in part or in whole in the Human Brain Project, funded from the European Union's Horizon 2020 Framework Programme for Research and Innovation under Specific Grant Agreements No. 720270, No. 785907 and No. 945539 (Human Brain Project SGA1, SGA2 and SGA3) and in the EBRAINS research infrastructure,\nfunded from the European Union's Horizon Europe funding programme under grant agreement No. 101147319 (EBRAINS-2.0).\n"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "application_domain": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "neuroscience"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9043993491043446,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "andrew.davison@cnrs.fr",
        "name": "Andrew P. Davison",
        "type": "Agent",
        "value": "Andrew P. Davison"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "http://orcid.org/0000-0002-4793-7541",
        "type": "String",
        "value": "Andrew P. Davison"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Onur Ates"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Yann Zerlaut"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Nico Feld"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Glynis Mattheisen"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Peyman Najafi"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project maintainers at andrew.davison@cnrs.fr. The project maintainers will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project maintainers are obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership or by their employer.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/apdavison/fairgraph"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HumanBrainProject/fairgraph"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HumanBrainProject/fairgraph/actions"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/apdavison/fairgraph/master/.github/workflows/ebrains.yml"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/apdavison/fairgraph/master/.github/workflows/tests.yml"
      },
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-06-11T20:20:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-07-17T12:11:03Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2024-10-08"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Experimental high-level Python API for the HBP Knowledge Graph"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python API for the EBRAINS Knowledge Graph"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Python API for the EBRAINS Knowledge Graph"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9923706674257531,
      "result": {
        "original_header": "fairgraph: a Python API for the EBRAINS Knowledge Graph.",
        "type": "Text_excerpt",
        "value": "**fairgraph** is a Python library for working with metadata\nin the EBRAINS Knowledge Graph, with a particular focus on data reuse,\nalthough it is also useful in metadata registration/curation.\nThe API is not stable, and is subject to change.\n \n"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9554830972278033,
      "result": {
        "original_header": "Knowledge Graph versions",
        "type": "Text_excerpt",
        "value": "This version of fairgraph supports version 3 of the EBRAINS Knowledge Graph (KG).\n \n"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8028718104579684,
      "result": {
        "original_header": "Retrieving metadata from the Knowledge Graph",
        "type": "Text_excerpt",
        "value": "For research products that are versioned, such as datasets, models, and software, certain attributes may be inherited from the parent (e.g. a DatasetVersion generally inherits its name from a Dataset). In this case, we have a convenience method to retrieve the parent's name:\n```\n>>> print(datasets[0].get_name(client, scope=\"in progress\"))\n'Cholinergic interneurons in the striatum - Single cell patch clamp recordings'\n```\nIf you know the unique identifier of an object, you can retrieve it directly:\n```\n>>> dataset = DatasetVersion.from_id(\"17196b79-04db-4ea4-bb69-d20aab6f1d62\", client, scope=\"in progress\")\n```\nLinks between metadata in the Knowledge Graph are not followed automatically,\nto avoid unnecessary network traffic, but can be followed with the `resolve()` method:\n```\n>>> license = dataset.license.resolve(client, scope=\"in progress\")\n>>> authors = [author.resolve(client, scope=\"in progress\") for author in dataset.authors]\n```\nThe associated metadata is accessible as attributes of the Python objects, e.g.:\n```\n>>> print(dataset.version_innovation)\nThis is the first version of this research product.\n```\nTo print out all the metadata for a given object, use the `show()` method:\n```\n>>> print(license.show())\nid          https://kg.ebrains.eu/api/instances/6ebce971-7f99-4fbc-9621-eeae47a70d85\nname        Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International\nlegal_code  https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode\nalias       CC BY-NC-SA 4.0\nwebpages    ['https://creativecommons.org/licenses/by-nc-sa/4.0', 'https://spdx.org/licenses/CC-BY-NC-SA-4.0.html']\n```\nYou can also access any associated data:\n```\n>>> dataset.download(client, local_directory=dataset.alias)\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "active"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/apdavison/fairgraph/releases"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://files.pythonhosted.org/packages/16/04/f9bbeb5fbb2be0bb52e592eaf230bdd653414f13867d4d61318c8dba4ca7/fairgraph-0.12.1.tar.gz"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/apdavison/fairgraph/master/examples/notebooks/advanced_tutorial.ipynb"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/examples/notebooks/advanced_tutorial.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/apdavison/fairgraph/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "apdavison/fairgraph"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fairgraph: a Python API for the EBRAINS Knowledge Graph."
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "setup.py",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/apdavison/fairgraph/master/setup.py"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/setup.py",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "pyproject.toml",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/apdavison/fairgraph/master/pyproject.toml"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/pyproject.toml",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/apdavison/fairgraph/master/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/requirements.txt",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "setup.py",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/apdavison/fairgraph/master/fairgraph/openminds/core/products/setup.py"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/fairgraph/openminds/core/products/setup.py",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "pyproject.toml"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://pypi.org/project/fairgraph/0.12.1/"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "fairgraph: a Python API for the EBRAINS Knowledge Graph."
        ],
        "type": "Text_excerpt",
        "value": "To get the latest release:\n\n```\npip install fairgraph\n```\n\nTo get the development version:\n\n```\ngit clone https://github.com/HumanBrainProject/fairgraph.git\npip install -U ./fairgraph\n```\n"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Basic setup",
        "parent_header": [
          "fairgraph: a Python API for the EBRAINS Knowledge Graph."
        ],
        "type": "Text_excerpt",
        "value": "The basic idea of the library is to represent metadata nodes from the Knowledge Graph as Python objects.\nCommunication with the Knowledge Graph service is through a client object,\nfor which an access token associated with an EBRAINS account is needed.\n\nIf you are working in a Collaboratory Jupyter notebook, the client will find your token automatically.\n\nIf working outside the Collaboratory, we recommend you obtain a token from whichever authentication endpoint\nis available to you, and save it as an environment variable so the client can find it, e.g. at a shell prompt:\n\n```\nexport KG_AUTH_TOKEN=eyJhbGci...nPq\n```\n\nYou can then create the client object:\n\n```\n>>> from fairgraph import KGClient\n\n>>> client = KGClient(host=\"core.kg.ebrains.eu\")\n```\n\nYou can also pass the token explicitly to the client:\n\n```\n>>> client = KGClient(token)\n```\n\n"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/apdavison/fairgraph/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HumanBrainProject/fairgraph/issues"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "License",
        "url": "https://api.github.com/licenses/apache-2.0",
        "value": "https://api.github.com/licenses/apache-2.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/Apache-2.0.html",
        "spdx_id": "https://spdx.org/licenses/Apache-2.0.html",
        "type": "License",
        "value": "https://spdx.org/licenses/Apache-2.0.html"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://www.braincouncil.eu/wp-content/uploads/2018/11/wsi-imageoptim-EU-Logo.jpg"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fairgraph"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fairgraph"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "apdavison"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fairgraph"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 1450231,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "type": "Programming_language",
        "value": "Python",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/apdavison/fairgraph/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "reference_publication": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": null
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "related_documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/HumanBrainProject/fairgraph"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/pyproject.toml",
      "technique": "code_parser"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "ebrains-kg-core",
        "type": "Software_application",
        "value": "ebrains-kg-core",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "python-dateutil",
        "type": "Software_application",
        "value": "python-dateutil",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "tabulate",
        "type": "Software_application",
        "value": "tabulate",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "requests",
        "type": "Software_application",
        "value": "requests",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "setuptools",
        "type": "Software_application",
        "value": "setuptools",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "wheel",
        "type": "Software_application",
        "value": "wheel",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "ebrains-kg-core",
        "type": "Software_application",
        "value": "ebrains-kg-core",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "python-dateutil",
        "type": "Software_application",
        "value": "python-dateutil",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "tabulate",
        "type": "Software_application",
        "value": "tabulate",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "requests",
        "type": "Software_application",
        "value": "requests",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": null,
        "type": "Software_application",
        "value": "Python >=3.8",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "ebrains-kg-core",
        "type": "Software_application",
        "value": "ebrains-kg-core",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "python-dateutil",
        "type": "Software_application",
        "value": "python-dateutil",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "tabulate",
        "type": "Software_application",
        "value": "tabulate",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "requests",
        "type": "Software_application",
        "value": "requests",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "keywords"
  ],
  "somef_provenance": {
    "date": "2025-09-19 02:06:56",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 10
      },
      "technique": "GitHub_API"
    }
  ],
  "support": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting help",
        "parent_header": [
          "fairgraph: a Python API for the EBRAINS Knowledge Graph."
        ],
        "type": "Text_excerpt",
        "value": "In case of questions about **fairgraph**, please contact us via https://ebrains.eu/support/.\nIf you find a bug or would like to suggest an enhancement or new feature,\nplease open a ticket in the [issue tracker](https://github.com/HumanBrainProject/fairgraph/issues).\n"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Getting help",
        "parent_header": [
          "fairgraph: a Python API for the EBRAINS Knowledge Graph."
        ],
        "type": "Text_excerpt",
        "value": "In case of questions about **fairgraph**, please contact us via https://ebrains.eu/support/.\nIf you find a bug or would like to suggest an enhancement or new feature,\nplease open a ticket in the [issue tracker](https://github.com/HumanBrainProject/fairgraph/issues).\n"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "tag": "0.13.0.dev.0",
        "type": "Release",
        "value": "0.13.0.dev.0"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/pyproject.toml",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "0.12.1"
      },
      "source": "https://raw.githubusercontent.com/apdavison/fairgraph/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
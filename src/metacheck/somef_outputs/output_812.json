{
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fabricebrito/dev-platform-dask-gateway"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-09-03T06:12:42Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-01-23T11:53:20Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Bootstraps a dask gateway deployment on minikube using skaffold"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 0.8065311051290646,
      "result": {
        "original_header": "Dask Cluster configuration",
        "type": "Text_excerpt",
        "value": "This section is informative.\n \n"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/fabricebrito/dev-platform-dask-gateway/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "executable_example": [
    {
      "confidence": 1,
      "result": {
        "format": "jupyter_notebook",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/validate.ipynb"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/validate.ipynb",
      "technique": "file_exploration"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 1
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fabricebrito/dev-platform-dask-gateway/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "fabricebrito/dev-platform-dask-gateway"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Dask Gateway"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/requirements.txt",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/k8s/bai/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/k8s/bai/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/k8s/bai/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/k8s/bai/requirements.txt",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/option-b/bai/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/option-b/bai/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/option-b/bai/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/option-b/bai/requirements.txt",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/requirements.txt",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "dockerfile",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/bai/Dockerfile"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/bai/Dockerfile",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "format": "requirements.txt",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/bai/requirements.txt"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/bai/requirements.txt",
      "technique": "file_exploration"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/wait-for-it.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Setup",
        "parent_header": [
          "Dask Gateway"
        ],
        "type": "Text_excerpt",
        "value": "Start your minikube cluster:\n\n```\nminikube start\n```\n\nInstall Dask Gateway development platform with:\n\n```\nskaffold dev\n```\nThis builds and pushes two container images to minikube node image cache: \n\n- the worker image `worker` built with the docker file `Dockerfile.worker`\n- the client image `daskclient` built with the docker file `Dockerfile.client`\n\nAnd installs two helm releases:\n\n- `dask-gateway` using the chart https://helm.dask.org/dask-gateway-2024.1.0.tgz. The values set the worker image built with the docker file `Dockerfile.worker`. The Dask Gateway configuration is extended to allow clients to set `image`, `worker_cores`, `worker_cores_limit` and `worker_memory` (see the file `dask-gateway/values.yalm`)\n- `dask-session` a local chart creating a deployment with a pod running the image built with the docker file `Dockerfile.client`\n\n\nWait for the deployment to stabilize, the logs will show the tags of the built images, e.g.:\n\n```\nTags used in deployment:\n - worker -> worker:3853d0ad064e3f6b76696a81c99148113b44ac297759843d4c302017d4abaf45\n - daskclient -> daskclient:fc88475cf797d64f0069d3bb4119a86d092b8d9761c77dfa882aa845f2e53be5\n```\n\n\n\n```\nChecking cache...\n - worker: Found. Tagging\n - daskclient: Found. Tagging\nTags used in deployment:\n - worker -> worker:3853d0ad064e3f6b76696a81c99148113b44ac297759843d4c302017d4abaf45\n - daskclient -> daskclient:fc88475cf797d64f0069d3bb4119a86d092b8d9761c77dfa882aa845f2e53be5\nStarting deploy...\nHelm release dask-gateway not installed. Installing...\nNAME: dask-gateway\nLAST DEPLOYED: Fri Jul  5 16:43:16 2024\nNAMESPACE: dask-gateway\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\nYou've installed Dask-Gateway version 2024.1.0, from chart\nversion 2024.1.0!\n\nYour release is named \"dask-gateway\" and installed into the\nnamespace \"dask-gateway\".\n\nYou can find the public address(es) at:\n\n  $ kubectl --namespace=dask-gateway get service traefik-dask-gateway\nHelm release dask-session not installed. Installing...\nNAME: dask-session\nLAST DEPLOYED: Fri Jul  5 16:43:17 2024\nNAMESPACE: dask-gateway\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nWARN[0012] image [worker:3853d0ad064e3f6b76696a81c99148113b44ac297759843d4c302017d4abaf45] is not used.  subtask=-1 task=DevLoop\nWARN[0012] See helm documentation on how to replace image names with their actual tags: https://skaffold.dev/docs/pipeline-stages/deployers/helm/#image-configuration  subtask=-1 task=DevLoop\nWaiting for deployments to stabilize...\n - dask-gateway:deployment/controller-dask-gateway is ready. [3/4 deployment(s) still pending]\n - dask-gateway:deployment/dask-session is ready. [2/4 deployment(s) still pending]\n - dask-gateway:deployment/api-dask-gateway: waiting for rollout to finish: 0 of 1 updated replicas are available...\n - dask-gateway:deployment/traefik-dask-gateway: waiting for rollout to finish: 0 of 1 updated replicas are available...\n - dask-gateway:deployment/traefik-dask-gateway is ready. [1/4 deployment(s) still pending]\n - dask-gateway:deployment/api-dask-gateway is ready.\nDeployments stabilized in 10.081 seconds\nStarting post-deploy hooks...\nDeployment replicas: 1\nDeployment with label app.kubernetes.io/name=dask-gateway is running\nCompleted post-deploy hooks\nPort forwarding service/traefik-dask-gateway in namespace dask-gateway, remote port 80 -> http://127.0.0.1:8001\nListing files to watch...\n - worker\n - daskclient\nPress Ctrl+C to exit\nWatching for changes...\n```\n\nOpen the browser on https://127.0.0.1:8001, this will print `404: Not Found`. This is ok, it is the Dask Gateway port forward that you can use from your local development environment.\n\n"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Set the worker container image at runtime",
        "parent_header": [
          "Dask Gateway",
          "Dask Cluster configuration"
        ],
        "type": "Text_excerpt",
        "value": "If the `dask-gateway` Helm chart values includes:\n\n```yaml\ngateway:\n  extraConfig:\n    dask_gateway_config.py: |\n      c = get_config()\n      from dask_gateway_server.options import Options, String\n      c.Backend.cluster_options = Options(\n          String(\"image\", default=\"daskgateway/dask-worker:latest\", label=\"Worker Image\")\n      )\n```\n\nThen the Python code may define the Dask scheduler and workers' image: \n\n\n```python\nfrom dask_gateway import Gateway\nfrom time import sleep\n# Connect to the Dask Gateway\ngateway = Gateway(\"http://localhost:8001\")\n\n# Define cluster options with a custom worker container image\ncluster_options = gateway.cluster_options()\n\nprint(cluster_options)\ncluster_options['image'] = 'docker.io/library/worker:5ee153c-dirty'\n\n# Create a new cluster with the specified options\ncluster = gateway.new_cluster(cluster_options)\n\n# Scale the cluster as needed\ncluster.scale(5)\n\n# Use the cluster\nfrom dask.distributed import Client\nclient = Client(cluster)\n\nsleep(30)\n\ncluster.shutdown()\n```\n"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Set the worker cores and memory",
        "parent_header": [
          "Dask Gateway",
          "Dask Cluster configuration"
        ],
        "type": "Text_excerpt",
        "value": "If the Helm chart values includes:\n\n```yaml\ngateway:\n  extraConfig:\n    dask_gateway_config.py: |\n      c = get_config()\n      from dask_gateway_server.options import Options, String, Integer\n      c.Backend.cluster_options = Options(\n            Integer(\"worker_cores_limit\", default=1, label=\"Worker Cores Limit\"),\n            Integer(\"worker_cores\", default=1, label=\"Worker Cores\"),\n            String(\"worker_memory\", default=\"1 G\", label=\"Worker Memory\"),\n      )\n```\n\nThen you can use:\n\n```python\nfrom dask_gateway import Gateway\nfrom time import sleep\n# Connect to the Dask Gateway\ngateway = Gateway(\"http://localhost:8001\")\n\n# Define cluster options \ncluster_options = gateway.cluster_options()\n\ncluster_options['worker_cores'] = 1\ncluster_options['worker_cores_limit'] = 2\ncluster_options['worker_memory'] = \"2 G\"\n\n# Create a new cluster with the specified options\ncluster = gateway.new_cluster(cluster_options)\n\n# Scale the cluster as needed\ncluster.scale(5)\n\n# Use the cluster\nfrom dask.distributed import Client\nclient = Client(cluster)\n\nsleep(30)\nclient.close()\n\ncluster.shutdown()\n```\n\nThe `dask-gateway` helm chart values defines:\n\n```python\nc = get_config()\n      from dask_gateway_server.options import Options, String, Integer, Float\n      c.Backend.cluster_options = Options(\n        Float(\"worker_cores_limit\", default=1, label=\"Worker Cores Limit\"),\n        Float(\"worker_cores\", default=1, label=\"Worker Cores\"),\n        String(\"worker_memory\", default=\"1 G\", label=\"Worker Memory\"),\n        String(\"image\", default=\"daskgateway/dask-worker:latest\", label=\"Worker Image\")\n      )\n```\n\nso `worker_cores_limit`, `worker_cores`, `worker_memory` and `image` can be defined."
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/fabricebrito/dev-platform-dask-gateway/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dev-platform-dask-gateway"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "fabricebrito"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Python",
        "size": 25287,
        "type": "Programming_language",
        "value": "Python"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Jupyter Notebook",
        "size": 11391,
        "type": "Programming_language",
        "value": "Jupyter Notebook"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Common Workflow Language",
        "size": 7740,
        "type": "Programming_language",
        "value": "Common Workflow Language"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Dockerfile",
        "size": 816,
        "type": "Programming_language",
        "value": "Dockerfile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 700,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "numpy",
        "type": "Software_application",
        "value": "numpy==1.26.3",
        "version": "==1.26.3"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "dask",
        "type": "Software_application",
        "value": "dask==2024.1.0",
        "version": "==2024.1.0"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "distributed",
        "type": "Software_application",
        "value": "distributed==2024.1.0",
        "version": "==2024.1.0"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "dask-gateway",
        "type": "Software_application",
        "value": "dask-gateway==2024.1.0",
        "version": "==2024.1.0"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pystac",
        "type": "Software_application",
        "value": "pystac==1.11.0",
        "version": "==1.11.0"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "bokeh",
        "type": "Software_application",
        "value": "bokeh==3.6.2",
        "version": "==3.6.2"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "rioxarray",
        "type": "Software_application",
        "value": "rioxarray==0.18.1",
        "version": "==0.18.1"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "loguru",
        "type": "Software_application",
        "value": "loguru==0.7.3",
        "version": "==0.7.3"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "odc-stac[botocore]",
        "type": "Software_application",
        "value": "odc-stac[botocore]==0.3.10",
        "version": "==0.3.10"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "stackstac",
        "type": "Software_application",
        "value": "stackstac==0.5.1",
        "version": "==0.5.1"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "numpy",
        "type": "Software_application",
        "value": "numpy==1.26.3",
        "version": "==1.26.3"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/k8s/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "dask",
        "type": "Software_application",
        "value": "dask==2024.1.0",
        "version": "==2024.1.0"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/k8s/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "distributed",
        "type": "Software_application",
        "value": "distributed==2024.1.0",
        "version": "==2024.1.0"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/k8s/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "dask-gateway",
        "type": "Software_application",
        "value": "dask-gateway==2024.1.0",
        "version": "==2024.1.0"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/k8s/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pystac",
        "type": "Software_application",
        "value": "pystac",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/k8s/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "bokeh",
        "type": "Software_application",
        "value": "bokeh!=3.0.*",
        "version": "!=3.0.*"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/k8s/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "rioxarray",
        "type": "Software_application",
        "value": "rioxarray",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/k8s/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "loguru",
        "type": "Software_application",
        "value": "loguru",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/k8s/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "stackstac",
        "type": "Software_application",
        "value": "stackstac",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/k8s/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "numpy",
        "type": "Software_application",
        "value": "numpy==1.26.3",
        "version": "==1.26.3"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/option-b/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "dask",
        "type": "Software_application",
        "value": "dask==2024.1.0",
        "version": "==2024.1.0"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/option-b/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "distributed",
        "type": "Software_application",
        "value": "distributed==2024.1.0",
        "version": "==2024.1.0"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/option-b/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "dask-gateway",
        "type": "Software_application",
        "value": "dask-gateway==2024.1.0",
        "version": "==2024.1.0"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/option-b/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pystac",
        "type": "Software_application",
        "value": "pystac",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/option-b/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "bokeh",
        "type": "Software_application",
        "value": "bokeh!=3.0.*",
        "version": "!=3.0.*"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/option-b/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "rioxarray",
        "type": "Software_application",
        "value": "rioxarray",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/option-b/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "loguru",
        "type": "Software_application",
        "value": "loguru",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/option-b/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "stackstac",
        "type": "Software_application",
        "value": "stackstac",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/option-b/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "numpy",
        "type": "Software_application",
        "value": "numpy==1.26.3",
        "version": "==1.26.3"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "dask",
        "type": "Software_application",
        "value": "dask==2024.1.0",
        "version": "==2024.1.0"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "distributed",
        "type": "Software_application",
        "value": "distributed==2024.1.0",
        "version": "==2024.1.0"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "dask-gateway",
        "type": "Software_application",
        "value": "dask-gateway==2024.1.0",
        "version": "==2024.1.0"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "click",
        "type": "Software_application",
        "value": "click",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "loguru",
        "type": "Software_application",
        "value": "loguru",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "numpy",
        "type": "Software_application",
        "value": "numpy==1.26.3",
        "version": "==1.26.3"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "dask",
        "type": "Software_application",
        "value": "dask==2024.1.0",
        "version": "==2024.1.0"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "distributed",
        "type": "Software_application",
        "value": "distributed==2024.1.0",
        "version": "==2024.1.0"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "dask-gateway",
        "type": "Software_application",
        "value": "dask-gateway==2024.1.0",
        "version": "==2024.1.0"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pystac",
        "type": "Software_application",
        "value": "pystac",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "bokeh",
        "type": "Software_application",
        "value": "bokeh!=3.0.*",
        "version": "!=3.0.*"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "rioxarray",
        "type": "Software_application",
        "value": "rioxarray",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "loguru",
        "type": "Software_application",
        "value": "loguru",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "stackstac",
        "type": "Software_application",
        "value": "stackstac",
        "version": ""
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/pod-procure/bai/requirements.txt",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "Dask Gateway"
        ],
        "type": "Text_excerpt",
        "value": "* Minikube [installation](https://minikube.sigs.k8s.io/docs/start/?arch=%2Flinux%2Fx86-64%2Fstable%2Fbinary+download)\n* skaffold [installation](https://skaffold.dev/docs/install/#standalone-binary)\n"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "run": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Local client running on your machine",
        "parent_header": [
          "Dask Gateway",
          "Getting started"
        ],
        "type": "Text_excerpt",
        "value": "Create a Python environment with:\n\n```\npython3 -m venv env_test_dask\nsource env_test_dask/bin/activate\npip install -r requirements.txt\n```\n\nUse the Python code below to get started:\n\n```\nfrom time import sleep\nfrom dask_gateway import Gateway\n\ngateway = Gateway(\"http://localhost:8001\")\n\nfrom dask_gateway import GatewayCluster\ncluster = gateway.new_cluster()\n\nprint(\"Scaling cluster to 4 workers\")\ncluster.scale(4)\nclient = cluster.get_client()\n\nprint(f\"Cluster dashboard: {cluster.dashboard_link}\")\n\nsleep(60)\n\ncluster.shutdown()\n```\n"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "download",
    "contact",
    "contributors",
    "documentation",
    "license",
    "faq",
    "support",
    "identifier",
    "keywords"
  ],
  "somef_provenance": {
    "date": "2025-09-19 03:12:33",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Access the dask client pod",
        "parent_header": [
          "Dask Gateway",
          "Getting started"
        ],
        "type": "Text_excerpt",
        "value": "Open a shell on the dask-session deployment pod. There are two environment variables set:\n\n- `DASK_GATEWAY_URL`: the Dask Gateway endpoint\n- `DASK_WORKER_IMAGE`: the container image for the dask scheduler and workers\n\n"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "1.0.0"
      },
      "source": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "workflows": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/k8s/bai.cwl"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/fabricebrito/dev-platform-dask-gateway/main/example/option-b/bai.cwl"
      },
      "technique": "file_exploration"
    }
  ]
}
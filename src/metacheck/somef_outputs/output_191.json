{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "affiliation": "Department of Animal Ecology and Tropical Biology (Zoology III), University of W\u00fcrzburg, Germany",
        "email": "markus.ankenbrand@uni-wuerzburg.de",
        "identifier": "https://orcid.org/0000-0002-6620-807X",
        "type": "String",
        "value": "Markus J. Ankenbrand"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Center for Computational and Theoretical Biology, University of W\u00fcrzburg",
        "email": "simon.pfaff@stud-mail.uni-wuerzburg.de",
        "identifier": "https://orcid.org/0000-0001-8505-9439",
        "type": "String",
        "value": "Simon Pfaff"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Center for Computational and Theoretical Biology, University of W\u00fcrzburg",
        "email": "",
        "type": "String",
        "value": "Niklas Terhoeven"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Centre for Experimental Molecular Medicine, University Clinics W\u00fcrzburg, Germany",
        "email": "qureischi_m@ukw.de",
        "identifier": "https://orcid.org/0000-0001-9661-8494",
        "type": "String",
        "value": "Musga Qureischi"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "",
        "email": "",
        "identifier": "https://orcid.org/0000-0002-0022-320X",
        "type": "String",
        "value": "Maik G\u00fcndel"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Research Group for Ancient Genomics and Evolution, Department of Molecular Biology, Max Planck Institute for Developmental Biology, T\u00fcbingen, Germany",
        "email": "",
        "type": "String",
        "value": "Clemens L. Weiss"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Department of Civil and Environmental Engineering, Massachusetts Institute of Technology",
        "email": "thackl@mit.edu",
        "identifier": "https://orcid.org/0000-0002-0022-320X",
        "type": "String",
        "value": "Thomas Hackl"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Fraunhofer Institute for Molecular Biology and Applied Ecology IME, Applied Ecology and Bioresources, Gie\u00dfen, Germany",
        "email": "frank.foerster@ime.fraunhofer.de",
        "identifier": "https://orcid.org/0000-0003-4166-5423",
        "type": "String",
        "value": "Frank F\u00f6rster"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Howto cite",
        "parent_header": [
          "chloroExtractor"
        ],
        "type": "Text_excerpt",
        "value": "The software chloroExtractor was published in JOSS as [![DOI](http://joss.theoj.org/papers/10.21105/joss.00464/status.svg)](https://doi.org/10.21105/joss.00464).\n\nIf you are using chloroExtractor please cite\n- Ankenbrand et al., (2018). chloroExtractor: extraction and assembly of the chloroplast genome from whole genome shotgun data. Journal of Open Source Software, 3(21), 464, https://doi.org/10.21105/joss.00464\n"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at frank.foerster@ime.fraunhofer.de or markus.ankenbrand@uni-wuerzburg.de. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/chloroExtractorTeam/chloroExtractor"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/chloroExtractorTeam/chloroExtractor"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Introduction\n\nThank you for considering contributing to chloroExtractor.\n\nFollowing these guidelines helps the developers of this open source project.\nMaking it easier for them to address your issue, assess changes, and help you finalize your pull requests.\nAny kind of contribution, to code, documentation, examples or tests are welcome.\n\n# Ground Rules\nPlease have a look at our [code of conduct](CODE_OF_CONDUCT.md).\n\n# Contributing Code\nPlease follow this procedure\n1. Open an issue with a bug report or feature request (indicate that you are willing to do the coding yourself)\n2. Create your own fork of the code\n3. Do the changes in your fork\n4. Open a pull request\n\n# How to report a bug\n\nWhen filing an issue, make sure to answer those questions:\n\n1. What version of Perl and chloroExtractor are you using?\n2. What operating system are you using?\n3. What did you do?\n4. What did you expect to see?\n5. What did you see instead?\n\n# How to suggest a feature or enhancement\n\nOpen an issue which describes the feature you would like to see, why you need it, and how it should work.\n"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2016-08-12T14:59:35Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2017-09-28"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2017-09-28"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2024-05-17T06:52:52Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2019-04-08"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "The chloroExtractor is a perl based program which provides a pipeline for DNA extraction of chloroplast DNA from whole genome plant data."
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Introduction",
        "parent_header": [
          "chloroExtractor"
        ],
        "type": "Text_excerpt",
        "value": "The chloroExtractor is a perl based program which provides a pipeline for DNA extraction of chloroplast DNA from whole genome plant data.\nToo huge amounts of chloroplast DNA can cast problems for the assembly of whole genome data.\nOne solution for this problem can be a core extraction before sequencing, but this can be expensive.\nThe chloroExtractor takes your whole genome data and extracts the chloroplast DNA, so you can have your different DNA separated easily by the chloroExractor.\nFurthermore the chloroExtractor takes the chloroplast DNA and tries to assemble it.\nThis is possible because of the preserved nature of the chloroplasts primary and secondary structure.\nThrough k-mer filtering the k-mers which contain the chloroplast sequences get extracted and can then be used to assemble the chloroplast on a guided assembly with several other chloroplasts.\n"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 0.9047070886939358,
      "result": {
        "original_header": "Version v1.0.9 2019-05-01",
        "type": "Text_excerpt",
        "value": "The strange behavior of fcg is fixed now (Fix #135)\n \n"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8347072175198279,
      "result": {
        "original_header": "Version v1.0.5 2018-07-11",
        "type": "Text_excerpt",
        "value": "It updates the fastg-parser to version v0.6.3, therefore it finally solves the bug caused by SPAdes' fastg files (Fix #101).\nMoreover, added some documentation about docker images and changed format of our changelog section.\n \n"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9479724321810951,
      "result": {
        "original_header": "Version v1.0.0 2018-01-15",
        "type": "Text_excerpt",
        "value": "Archived as [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.998262.svg)](https://doi.org/10.5281/zenodo.998262) and used for submission to [The Journal of Open Source Software](http://joss.theoj.org/)\n \n"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "format": "readthedocs",
        "type": "Url",
        "value": "http://bedtools.readthedocs.io/"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/chloroExtractorTeam/chloroExtractor/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 8
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "chloroExtractorTeam/chloroExtractor"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "chloroExtractor"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://doi.org/10.5281/zenodo.883594"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.21105/joss.00464"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.1288679"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.1179297"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.1148955"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.1147434"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.998262"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.21105/joss.00464"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.5281/zenodo.883594"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://joss.theoj.org/papers/10.21105/joss.00464/status.svg"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://joss.theoj.org/papers/10.21105/joss.00464/status.svg"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "chloroExtractor"
        ],
        "type": "Text_excerpt",
        "value": "Install the requirements then clone the directory recursively\n```shell\ngit clone --recursive https://github.com/chloroExtractorTeam/chloroExtractor\n```\n"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Docker",
        "parent_header": [
          "chloroExtractor",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "[![Docker Automated build](https://img.shields.io/docker/automated/chloroextractorteam/chloroextractor.svg?style=plastic)](https://hub.docker.com/r/chloroextractorteam/chloroextractor/)\n[![Docker Build Status](https://img.shields.io/docker/build/chloroextractorteam/chloroextractor.svg?style=plastic)](https://hub.docker.com/r/chloroextractorteam/chloroextractor/)\n\nOur chloroExtractor is also available as a docker image.\n\nThe docker image for the current release is [![](https://images.microbadger.com/badges/version/chloroextractorteam/chloroextractor:v1.0.6.svg)](https://microbadger.com/images/chloroextractorteam/chloroextractor:v1.0.6 \"Get your own version badge on microbadger.com\") [![](https://images.microbadger.com/badges/image/chloroextractorteam/chloroextractor:v1.0.6.svg)](https://microbadger.com/images/chloroextractorteam/chloroextractor:v1.0.6 \"Get your own image badge on microbadger.com\") [![](https://images.microbadger.com/badges/commit/chloroextractorteam/chloroextractor:v1.0.6.svg)](https://microbadger.com/images/chloroextractorteam/chloroextractor:v1.0.6 \"Get your own commit badge on microbadger.com\").\n\nWe also provide rolling releases for docker images for our master and develop branch:\n* [![](https://images.microbadger.com/badges/version/chloroextractorteam/chloroextractor:master.svg)](https://microbadger.com/images/chloroextractorteam/chloroextractor:master \"Get your own version badge on microbadger.com\") [![](https://images.microbadger.com/badges/image/chloroextractorteam/chloroextractor:master.svg)](https://microbadger.com/images/chloroextractorteam/chloroextractor:master \"Get your own image badge on microbadger.com\") [![](https://images.microbadger.com/badges/commit/chloroextractorteam/chloroextractor:master.svg)](https://microbadger.com/images/chloroextractorteam/chloroextractor:master \"Get your own commit badge on microbadger.com\")\n* [![](https://images.microbadger.com/badges/version/chloroextractorteam/chloroextractor:develop.svg)](https://microbadger.com/images/chloroextractorteam/chloroextractor:develop \"Get your own version badge on microbadger.com\") [![](https://images.microbadger.com/badges/image/chloroextractorteam/chloroextractor:develop.svg)](https://microbadger.com/images/chloroextractorteam/chloroextractor:develop \"Get your own image badge on microbadger.com\") [![](https://images.microbadger.com/badges/commit/chloroextractorteam/chloroextractor:develop.svg)](https://microbadger.com/images/chloroextractorteam/chloroextractor:develop \"Get your own commit badge on microbadger.com\")\n\nRunning chloroExtractor using that image requires the installation of docker and the permission to execute the `docker` commands.\nAdditionally, the docker container needs to be able to allocate enough memory (5GB are sufficient for the demo dataset).\nIn ubuntu memory for docker is usually not limited but on Mac OS X it is, refer to [this guide](https://stackoverflow.com/questions/32834082/how-to-increase-docker-machine-memory-mac/39720010#39720010) to increase the memory.\nThe data are mapped into the container as a volumne under `/data`.\nOur chloroExtractor will run with `/data` as working directory.\nTherefore, the output files will be stored inside the directory which was mapped into the container.\nIn case you are not using a user mapping, chloroExtractor will run with root priveleges and all created files will belong the `root` user.\nFor further information about docker and its security implications please visit their [website](https://docker.com).\n\n```shell\ndocker pull chloroextractorteam/chloroextractor\ndocker run -v /location-of-input-data:/data --rm chloroextractorteam/chloroextractor -1 first_read.fq -2 second_read.fa [other options]\n```\n"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/issues"
      },
      "technique": "GitHub_API"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "chloroplast",
          "genome",
          "assembly",
          "k-mer"
        ]
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2017 Frank F\u00f6rster\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/MIT",
        "spdx_id": "MIT",
        "type": "License",
        "value": "MIT"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "License",
        "parent_header": [
          "chloroExtractor"
        ],
        "type": "Text_excerpt",
        "value": "For License please refer to the LICENSE file\n"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://www.travis-ci.org/chloroExtractorTeam/chloroExtractor.svg"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "chloroExtractor"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "chloroExtractorTeam"
      },
      "technique": "GitHub_API"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "Perl",
        "size": 67760,
        "type": "Programming_language",
        "value": "Perl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 16603,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 14413,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "greatfireball",
          "type": "User"
        },
        "date_created": "2019-05-01T15:31:14Z",
        "date_published": "2019-05-01T15:32:12Z",
        "description": "Fix #135 ",
        "html_url": "https://github.com/chloroExtractorTeam/chloroExtractor/releases/tag/v1.0.9",
        "name": "Release v1.0.9",
        "release_id": 17090420,
        "tag": "v1.0.9",
        "tarball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/tarball/v1.0.9",
        "type": "Release",
        "url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/17090420",
        "value": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/17090420",
        "zipball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/zipball/v1.0.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "greatfireball",
          "type": "User"
        },
        "date_created": "2019-04-16T08:45:22Z",
        "date_published": "2019-04-16T08:47:37Z",
        "html_url": "https://github.com/chloroExtractorTeam/chloroExtractor/releases/tag/v1.0.8",
        "name": "Release v1.0.8",
        "release_id": 16788366,
        "tag": "v1.0.8",
        "tarball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/tarball/v1.0.8",
        "type": "Release",
        "url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/16788366",
        "value": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/16788366",
        "zipball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/zipball/v1.0.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "greatfireball",
          "type": "User"
        },
        "date_created": "2019-04-12T09:52:24Z",
        "date_published": "2019-04-12T09:53:40Z",
        "description": "Solves progress bar issue (#128)",
        "html_url": "https://github.com/chloroExtractorTeam/chloroExtractor/releases/tag/v1.0.7",
        "name": "Release of v1.0.7",
        "release_id": 16722609,
        "tag": "v1.0.7",
        "tarball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/tarball/v1.0.7",
        "type": "Release",
        "url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/16722609",
        "value": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/16722609",
        "zipball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/zipball/v1.0.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "greatfireball",
          "type": "User"
        },
        "date_created": "2019-04-08T12:39:15Z",
        "date_published": "2019-04-08T12:39:47Z",
        "html_url": "https://github.com/chloroExtractorTeam/chloroExtractor/releases/tag/v1.0.6",
        "name": "Version v1.0.6",
        "release_id": 16619752,
        "tag": "v1.0.6",
        "tarball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/tarball/v1.0.6",
        "type": "Release",
        "url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/16619752",
        "value": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/16619752",
        "zipball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/zipball/v1.0.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "greatfireball",
          "type": "User"
        },
        "date_created": "2018-07-11T06:04:01Z",
        "date_published": "2018-07-11T11:03:08Z",
        "description": "Version v1.0.5\r\nArchived as [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.1309206.svg)](https://doi.org/10.5281/zenodo.1309206).\r\n\r\nIt updates the fastg-parser to version v0.6.3, therefore it finally solves the bug caused by SPAdes' fastg files (Fix #101 ).\r\nMoreover, added some documentation about docker images and changed format of our changelog section.\r\n\r\nReleased on 2018-07-11",
        "html_url": "https://github.com/chloroExtractorTeam/chloroExtractor/releases/tag/v1.0.5",
        "name": "v1.0.5 Solved SPAdes overlap issue",
        "release_id": 11874042,
        "tag": "v1.0.5",
        "tarball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/tarball/v1.0.5",
        "type": "Release",
        "url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/11874042",
        "value": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/11874042",
        "zipball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/zipball/v1.0.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "greatfireball",
          "type": "User"
        },
        "date_created": "2018-06-13T23:39:35Z",
        "date_published": "2018-06-13T23:05:14Z",
        "description": "This release updates the fastg-parser to version v0.6.0. It solves an issue with the returned chloroplast sequences. Before v1.0.4 those sequences contained overlaps on contig boundaries caused by the fastg produced by SPAdes (#101).\r\n\r\nMoreover, we added information howto cite chloroExtractor!",
        "html_url": "https://github.com/chloroExtractorTeam/chloroExtractor/releases/tag/v1.0.4",
        "name": "Release v1.0.4 update to fastg-parser v0.6.0 and howto cite",
        "release_id": 11471701,
        "tag": "v1.0.4",
        "tarball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/tarball/v1.0.4",
        "type": "Release",
        "url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/11471701",
        "value": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/11471701",
        "zipball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/zipball/v1.0.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "greatfireball",
          "type": "User"
        },
        "date_created": "2018-02-20T04:39:07Z",
        "date_published": "2018-02-20T04:47:45Z",
        "description": "This version fixes the divide by zero bug found by @PfaffS \r\n\r\nThis bug occured if the insert size could not be calculated from the first read mappings and caused an exception. In that case NA is now returned and the exception is avoided.\r\n\r\nAdditionally, the Moose version is pinned to 2.2009 for Travis-CI, due to the new version 2.2010 caused installation issues.",
        "html_url": "https://github.com/chloroExtractorTeam/chloroExtractor/releases/tag/v1.0.3",
        "name": "Release 1.0.3 Bugfix for divide by zero bug",
        "release_id": 9744583,
        "tag": "v1.0.3",
        "tarball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/tarball/v1.0.3",
        "type": "Release",
        "url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/9744583",
        "value": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/9744583",
        "zipball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/zipball/v1.0.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "greatfireball",
          "type": "User"
        },
        "date_created": "2018-01-16T10:13:46Z",
        "date_published": "2018-01-16T10:25:26Z",
        "description": "Contain the version accepted by JOSS",
        "html_url": "https://github.com/chloroExtractorTeam/chloroExtractor/releases/tag/v1.0.2",
        "name": "Release v1.0.2 accepted JOSS manuscript",
        "release_id": 9249936,
        "tag": "v1.0.2",
        "tarball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/tarball/v1.0.2",
        "type": "Release",
        "url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/9249936",
        "value": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/9249936",
        "zipball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/zipball/v1.0.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "greatfireball",
          "type": "User"
        },
        "date_created": "2018-01-15T07:42:49Z",
        "date_published": "2018-01-15T07:56:00Z",
        "description": "This release comprises all changes, which have been requested during JOSS review process.",
        "html_url": "https://github.com/chloroExtractorTeam/chloroExtractor/releases/tag/v1.0.1",
        "name": "Release v1.0.1 after JOSS review",
        "release_id": 9232902,
        "tag": "v1.0.1",
        "tarball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/tarball/v1.0.1",
        "type": "Release",
        "url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/9232902",
        "value": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/9232902",
        "zipball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/zipball/v1.0.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "greatfireball",
          "type": "User"
        },
        "date_created": "2017-09-29T05:32:50Z",
        "date_published": "2018-01-15T07:28:05Z",
        "description": "This version was used to submit chloroExtractor to JOSS",
        "html_url": "https://github.com/chloroExtractorTeam/chloroExtractor/releases/tag/v1.0.0",
        "name": "v1.0.0 Release for JOSS review",
        "release_id": 9232705,
        "tag": "v1.0.0",
        "tarball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/tarball/v1.0.0",
        "type": "Release",
        "url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/9232705",
        "value": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/9232705",
        "zipball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/zipball/v1.0.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "greatfireball",
          "type": "User"
        },
        "date_created": "2017-09-02T10:19:34Z",
        "date_published": "2017-09-02T10:20:10Z",
        "html_url": "https://github.com/chloroExtractorTeam/chloroExtractor/releases/tag/v0.2_interactive",
        "release_id": 7613790,
        "tag": "v0.2_interactive",
        "tarball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/tarball/v0.2_interactive",
        "type": "Release",
        "url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/7613790",
        "value": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/7613790",
        "zipball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/zipball/v0.2_interactive"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "greatfireball",
          "type": "User"
        },
        "date_created": "2017-09-02T10:13:30Z",
        "date_published": "2017-09-02T10:18:24Z",
        "html_url": "https://github.com/chloroExtractorTeam/chloroExtractor/releases/tag/v0.1_legacy",
        "release_id": 7613787,
        "tag": "v0.1_legacy",
        "tarball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/tarball/v0.1_legacy",
        "type": "Release",
        "url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/7613787",
        "value": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/releases/7613787",
        "zipball_url": "https://api.github.com/repos/chloroExtractorTeam/chloroExtractor/zipball/v0.1_legacy"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Requirements",
        "parent_header": [
          "chloroExtractor"
        ],
        "type": "Text_excerpt",
        "value": "The version numbers given in parentheses are tested and known to work in this combination.\nIf you do a local install you can try to use other versions of some programs or modules but they are not guaranteed to work.\nThe docker container we provide will always contain a working combination of programs and modules."
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Required Software",
        "parent_header": [
          "chloroExtractor",
          "Requirements"
        ],
        "type": "Text_excerpt",
        "value": " - [Jellyfish](http://www.cbcb.umd.edu/software/jellyfish/ \"Jellyfish K-mer counter\") (2.2.4)\n - [Spades](http://cab.spbu.ru/software/spades/ \"SPAdes assamlber\") (v3.10.1)\n - [bowtie2](http://bowtie-bio.sourceforge.net/bowtie2/index.shtml \"Bowtie2 Fast and sensitive read alignment\") (2.2.6)\n - [NCBI-Blast+](https://blast.ncbi.nlm.nih.gov/Blast.cgi?PAGE_TYPE=BlastDocs&DOC_TYPE=Download \"BLAST (Basic Local Alignment Search Tool)\") (2.2.31+)\n - [Samtools](http://www.htslib.org/ \"Samtools Reading/writing/editing/indexing/viewing SAM/BAM/CRAM format\") (0.1.19-96b5f2294a)\n - [Bedtools](http://bedtools.readthedocs.io/en/latest/ \"bedtools: a powerful toolset for genome arithmetic\") (v2.25.0)\n - [GNU R](https://www.r-project.org/ \"The R Project for Statistical Computing\") (3.2.3)\n - [Ghostscript](https://www.ghostscript.com/ \"Ghostscript--an interpreter for the PostScript language and for PDF\") (9.18)\n - [Python](https://www.python.org/ \"www.python.org\") (2.7.12)\n - [Perl](https://www.perl.org/ \"www.perl.org\") (v5.22.1)"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Required Perl modules",
        "parent_header": [
          "chloroExtractor",
          "Requirements"
        ],
        "type": "Text_excerpt",
        "value": " - [Moose](http://search.cpan.org/~ether/Moose-2.2006/lib/Moose.pm \"Moose Perl5-integration\") (2.1604)\n - [Log::Log4Perl](http://search.cpan.org/~mschilli/Log-Log4perl-1.49/lib/Log/Log4perl.pm \"Log4Perl Perl5-Integration\") (1.44)\n - [Term::ProgressBar](http://search.cpan.org/~manwar/Term-ProgressBar-2.21/lib/Term/ProgressBar.pm \"Term::ProgressBar Perl5-Integration\") (2.17)\n - [Graph](http://search.cpan.org/dist/Graph/lib/Graph.pod \"Graph - graph data structures and algorithms\") (0.96)\n - [IPC::Run](http://search.cpan.org/~toddr/IPC-Run-0.96/lib/IPC/Run.pm \"IPC::Run - system() and background procs w/ piping, redirs, ptys (Unix, Win32)\") (0.94)\n - [File::Which](http://search.cpan.org/~plicease/File-Which-1.22/lib/File/Which.pm \"File::Which - Perl implementation of the which utility as an API\") (1.19)\n"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "faq",
    "support",
    "has_build_file",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 00:57:04",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 4
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Usage",
        "parent_header": [
          "chloroExtractor"
        ],
        "type": "Text_excerpt",
        "value": "To use the chloroExtractor, use the ptx executable in the bin/ folder\n\n```shell\n./ptx --help\n\n```\nor use the docker container:\n\n``` script\ndocker run -v /location-of-input-data:/data --rm chloroextractorteam/chloroextractor --help\n```\nIt returns a list of all mandatory parameters and optional setting.\n\n```shell\n$ ./ptx [<OPTIONS>] -1 <FQ_1> -2 <FQ_2> -d <OUTPUT-DIRECTORY>\n\nOptions:\n    -1|--reads\n        Input reads file, first of pair.\n\n    -2|--mates\n        Input reads file, second of pair\n\n    -d|--dir [ptx]\n        Path to a working directory. Will be created. If exists, needs to be\n        empty.\n\n    --create-config\n        Create a config file with default settings for user customization.\n\n    -c|--config\n        Use user customized config file. Superseeds default config.\n\n    --continue=[TASKID TASKID ...] [TRUE]\n        By default, the pipeline will check for a incomplete previous run\n        and if possible continue after the last successful task of that run.\n        Additionally you may provide task ids to specify a specific task -\n        instead of the last task - to continue from.\n\n    --redo [FALSE]\n        Force pipeline to restart from the beginning, ignoring and\n        overwriting previous results. Supersedes --continue.\n\n    --stop-after=<TASKID>\n        Stop the pipeline after the specified task.\n\n    --skip=<TASKID/PATTERN TASKID/PATTERN ...>\n        Skip specified tasks or tasks matching specified patterns (perl\n        regex). If other tasks request results from skipped tasks, the\n        pipeline will try to reuse results from previous runs. You need to\n        take care, that these results still make sence in the current run.\n\n    -V|--version\n        Display version.\n\n    -h|--help\n        Display this help.\n```\n\n\nAll the Options can and should be handled with the configuration file ptx.cfg, which is located in the mainfolder. With this config file you can handle the options for each step and task individual.\nOn default the chloroExtractor uses this config file, you can edit these one, or make your own one and uses the -c parameter to use it.\n\n```shell\n\n$ ./ptx -c ownptx.cfg -1 FQ_1 -2 FQ_2\n\n```"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Example",
        "parent_header": [
          "chloroExtractor"
        ],
        "type": "Text_excerpt",
        "value": "An example data set can be downloaded from zenodo. As example we download the dataset into a folder and run chloroExtractor with the input files.\n\nFor preparation, a folder will be created and an example dataset will be downloaded:\n\n```shell\n# create a folder for the testrun, adjust this to your needs or use the current folder DATAFOLDER=$(pwd)\nDATAFOLDER=/tmp/chloroExtractor-testrun\nmkdir -p ${DATAFOLDER}\ncd ${DATAFOLDER}\n\n# download the example set and extract the sequencing reads\nwget 'https://zenodo.org/record/884449/files/SRR5216995_1M.tar.bz2' -O - | tar xjf -\n```\nAfterwards, chloroExtractor can be run in command line mode:\n\n```shell\n# run chloroExtractor via command line (assuming all dependencies are installed and ptx folder is in PATH)\nptx -1 SRR5216995_1M_1.fastq -2 SRR5216995_1M_2.fastq\n[17-09-21 13:42:42] [PipeWrap] Running ptx from the beginning, no previous runs detected.\n[17-09-21 13:42:42] [PipeWrap] Running 'jf0': jellyfish count -t 8 -m 31 -s 500M -C -o jf0.jf /data/SRR5216995_1M_1.fastq /data/SRR5216995_1M_2.fastq\n[...]\n```\n\nor using the docker container:\n\n```shell\n# other possibility is docker container based chloroExtractor (assuming that the user is allowed to run docker)\ndocker pull chloroextractorteam/chloroextractor # ensure the latest version from docker hub\n# this binds the DATAFOLDER from above into the docker container you can also use the path directly instead of the variable\ndocker run -v ${DATAFOLDER}:/data --rm chloroextractorteam/chloroextractor -1 SRR5216995_1M_1.fastq -2 SRR5216995_1M_2.fastq\n[17-09-21 13:52:30] [PipeWrap] Running ptx from the beginning, no previous runs detected.\n[17-09-21 13:52:30] [PipeWrap] Running 'jf0': jellyfish count -t 8 -m 31 -s 500M -C -o jf0.jf /data/SRR5216995_1M_1.fastq /data/SRR5216995_1M_2.fastq\n[...]\n```\n\nBoth runs result in a final chloroplast assembly in the file `fcg.fa`.\n\nAnother more detailed example is available at our [demo](DEMO.md).\n"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "v1.0.6"
      },
      "source": "https://raw.githubusercontent.com/chloroExtractorTeam/chloroExtractor/master/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
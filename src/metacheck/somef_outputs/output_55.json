{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "name": "Fritz Lekschas",
        "type": "Agent",
        "value": "Fritz Lekschas"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "affiliation": "Independent Researcher, USA",
        "identifier": "http://orcid.org/0000-0001-8432-4835",
        "type": "String",
        "value": "Fritz Lekschas"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "citation": [
    {
      "confidence": 1,
      "result": {
        "author": [
          {
            "family_name": "Lekschas",
            "given_name": "Fritz",
            "name": "Fritz Lekschas",
            "type": "Agent",
            "url": "https://orcid.org/0000-0001-8432-4835"
          }
        ],
        "datePublished": "2023",
        "doi": "10.5281/zenodo.7796642",
        "format": "cff",
        "title": "Regl-Scatterplot: A Scalable Interactive JavaScript-based Scatter Plot Library",
        "type": "File_dump",
        "url": "https://doi.org/10.5281/zenodo.7796642",
        "value": "cff-version: \"1.2.0\"\nauthors:\n- family-names: Lekschas\n  given-names: Fritz\n  orcid: \"https://orcid.org/0000-0001-8432-4835\"\ndoi: 10.5281/zenodo.7796642\nmessage: If you use this software, please cite our article in the\n  Journal of Open Source Software.\npreferred-citation:\n  authors:\n  - family-names: Lekschas\n    given-names: Fritz\n    orcid: \"https://orcid.org/0000-0001-8432-4835\"\n  date-published: 2023-04-11\n  doi: 10.21105/joss.05275\n  issn: 2475-9066\n  issue: 84\n  journal: Journal of Open Source Software\n  publisher:\n    name: Open Journals\n  start: 5275\n  title: \"Regl-Scatterplot: A Scalable Interactive JavaScript-based\n    Scatter Plot Library\"\n  type: article\n  url: \"https://joss.theoj.org/papers/10.21105/joss.05275\"\n  volume: 8\ntitle: \"Regl-Scatterplot: A Scalable Interactive JavaScript-based\n  Scatter Plot Library\"\n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/CITATION.cff",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Citation",
        "parent_header": [
          "WebGl 2D Scatterplot with Regl"
        ],
        "type": "Text_excerpt",
        "value": "If you like `regl-scatterplot` and are using it in your research, we'd appreciate if you could cite our paper:\n\n```bibtex\n@article {lekschas2023reglscatterplot,\n  author = {Lekschas, Fritz},\n  title = {Regl-Scatterplot: A Scalable Interactive JavaScript-based Scatter Plot Library},\n  journal = {Journal of Open Source Software},\n  volume = {8},\n  number = {84},\n  pages = {5275},\n  year = {2023},\n  month = {4},\n  doi = {10.21105/joss.05275},\n  url = {https://doi.org/10.21105/joss.05275},\n}\n```\n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "author": "Lekschas, Fritz",
        "doi": "10.21105/joss.05275",
        "format": "bibtex",
        "title": "Regl-Scatterplot: A Scalable Interactive JavaScript-based Scatter Plot Library",
        "type": "Text_excerpt",
        "url": "https://doi.org/10.21105/joss.05275",
        "value": "@article{lekschas2023reglscatterplot,\n    url = {https://doi.org/10.21105/joss.05275},\n    doi = {10.21105/joss.05275},\n    month = {4},\n    year = {2023},\n    pages = {5275},\n    number = {84},\n    volume = {8},\n    journal = {Journal of Open Source Software},\n    title = {Regl-Scatterplot: A Scalable Interactive JavaScript-based Scatter Plot Library},\n    author = {Lekschas, Fritz},\n}"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/flekschas/regl-scatterplot"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "git://github.com/flekschas/regl-scatterplot.git"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/flekschas/regl-scatterplot"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/.github/workflows/publish.yml"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/.github/workflows/release.yml"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/.github/workflows/build.yml"
      },
      "technique": "file_exploration"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing to Regl-Scatterplot\n\n:wave: Welcome and thank you for considering to contribute to `regl-scatterplot`.\n\nIn this guide you will get an overview of the contribution workflow from opening an issue, creating a PR, reviewing, and merging the PR.\n\n## Getting Started\n\nTo get an overview of the tool, checkout the [demos](https://flekschas.github.io/regl-scatterplot/) and read the [README](README.md). In particular, you might find the following sections helpful:\n\n- [Getting started](https://github.com/flekschas/regl-scatterplot#getting-started)\n- [API](https://github.com/flekschas/regl-scatterplot#api)\n  - [Properties](https://github.com/flekschas/regl-scatterplot#properties)\n  - [Events](https://github.com/flekschas/regl-scatterplot#events)\n- [Trouble shooting](https://github.com/flekschas/regl-scatterplot#trouble-shooting)\n\n## Help! I am lost... :sob:\n\nHead over to our [discussion board](https://github.com/flekschas/regl-scatterplot/discussions) and we're happy to help.\n\n## Reporting Issues :bug: or Feature Requests :bulb:\n\nIf you discover a bug in `regl-scatterplot` or have an idea for a new feature, please [submit a new issue](https://github.com/flekschas/regl-scatterplot/issues/new). Make sure the issue is following either the [bug report](/.github/ISSUE_TEMPLATE/bug.md) or [feature request](/.github/ISSUE_TEMPLATE/enhancement.md) template.\n\nFor questions on how to use `regl-scatterplot`, please use the [discussion board](https://github.com/flekschas/regl-scatterplot/discussions).\n\n## Contribute Code :nail_care:\n\nIf you have a concrete plan how to improve `regl-scatterplot` and have created a [ticket](#reporting-issues-or-feature-requests), send us your pull requests! If you're wondering what a pull request (PR) is, please check out [GitHub's how to](https://help.github.com/articles/using-pull-requests/).\n\nA maintainer will review your pull request. Once the pull request is approved and passes continuous integration checks, we will merge it and add it to the next scheduled release.\n\n#### Pull Request Checklist :white_check_mark:\n\n- Ensure that your pull request answers the relevant questions in the [pull request template](/.github/PULL_REQUEST_TEMPLATE.md).\n- Ensure that your pull requests successfully passes all continuous integration tests with GH Actions.\n- Optionally, if your pull request introduces a new feature, it'd be great to add a new demo to `/example`.\n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2018-09-03T18:48:39Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2023-02-12"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_published": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2023-02-12"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-09-11T21:54:13Z"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2023-02-12"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Scalable WebGL-based scatter plot library build with Regl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A WebGL-Powered Scalable Interactive Scatter Plot Library"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A Scalable Interactive JavaScript-based Scatter Plot"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.8920179598277551,
      "result": {
        "original_header": "WebGl 2D Scatterplot with Regl",
        "type": "Text_excerpt",
        "value": "A highly-scalable pan-and-zoomable scatter plot library that uses WebGL through [Regl](https://github.com/regl-project/regl). This library sacrifices feature richness for speed to allow rendering up to **20 million points** (depending on your hardware of course) including fast lasso selection. Further, the [footprint of regl-scatterplot](https://bundlephobia.com/result?p=regl-scatterplot) is kept small. **NEW:** Python lovers please see [jscatter](https://github.com/flekschas/jupyter-scatter): a Jupyter Notebook/Lab widget that uses regl-scatterplot. \n- x/y point position (obviously)\n- categorical and continuous color encoding (including opacity)\n- categorical and continuous size encoding\n- point connections (stemming, for example, from time series data)\n \n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8319566742794968,
      "result": {
        "original_header": "Constructors",
        "type": "Text_excerpt",
        "value": "**Options:** is an object that accepts any of the [properties](#properties). \n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8809281080578194,
      "result": {
        "original_header": "Methods",
        "type": "Text_excerpt",
        "value": "- `points` can either be an array of quadruples (row-oriented) or an object of arrays (column-oriented):\n  - For row-oriented data, each nested array defines a point data of the form `[x, y, ?valueA, ?valueB, ?line, ?lineOrder]`. `valueA` and `valueB` are optional and can be used for [color, opacity, or size encoding](#property-by). `line` and `lineOrder` are also optional and can be used to [visually connect points by lines](#connecting-points).\n  - For column-oriented data, the object must be of the form `{ x: [], y: [], ?valueA: [], ?valueB: [], ?line: [], ?lineOrder: [] }`.\n- `options` is an object with the following properties:\n  - `showPointConnectionsOnce` [default: `false`]: if `true` and if points contain a `line` component/dimension the points will be visually conntected.\n  - `transition` [default: `false`]: if `true` and if the current number of points equals `points.length`, the current points will be transitioned to the new points\n  - `transitionDuration` [default: `500`]: the duration in milliseconds over which the transition should occur\n  - `transitionEasing` [default: `cubicInOut`]: the easing function, which determines how intermediate values of the transition are calculated\n  - `preventFilterReset` [default: `false`]: if `true` and if the number of new points is the same as the current number of points, the current point filter will not be reset\n  - `hover` [default: `undefined`]: a shortcut for [`hover()`](#scatterplot.hover). This option allows to programmatically hover a point by specifying a point index\n  - `select` [default: `undefined`]: a shortcut for [`select()`](#scatterplot.select). This option allows to programmatically select points by specifying a list of point indices\n  - `filter` [default: `undefined`]: a shortcut for [`filter()`](#scatterplot.filter). This option allows to programmatically filter points by specifying a list of point indices\n  - `zDataType` [default: `undefined`]: This option allows to manually set the data type of the z/valueA value to either `continuous` or `categorical`. By default the data type is [determined automatically](#color-opacity-and-size-encoding).\n  - `wDataType` [default: `undefined`]: This option allows to manually set the data type of the w/valyeB value to either `continuous` or `categorical`. By default the data type is [determined automatically](#color-opacity-and-size-encoding).\n  - `spatialIndex` [default: `undefined`]: This option allows to pass in the array buffer of [KDBush](https://github.com/mourner/kdbush) to skip the manual creation of the spatial index. Caution: only use this option if you know what you're doing! The point data is not validated against the spatial index. \n**Examples:**\n```javascript\nconst points = [\n  [\n    // The relative X position in [-1,1] (normalized device coordinates)\n    0.9,\n    // The relative Y position in [-1,1] (normalized device coordinates)\n    0.3,\n    // The category, which defaults to `0` if `undefined`\n    0,\n    // A continuous value between [0,1], which defaults to `0` if `undefined`\n    0.5,\n  ],\n];\n\nscatterplot.draw(points);\n\n// You can now do something else like changing the point size etc.\n\n// If we want to animate the transition of our point from above to another\n// x,y position, we can also do this by drawing a new point while enableing\n// transition via the `options` argument.\nscatterplot.draw([[0.6, 0.6, 0, 0.6]], { transition: true });\n\n// Let's unset the points. To do so, pass in an empty array to `draw()`.\n// Or alternatively, call `scatterplot.clear()`\nscatterplot.draw([]);\n\n// You can also specify the point data in a column-oriented format. The\n// following call will draw three points: (1,3), (2,2), and (3,1)\nscatterplot.draw({\n  x: [1, 2, 3],\n  y: [3, 2, 1],\n});\n\n// Finally, you can also specify which point will be hovered, which points will\n// be selected, and which points will be filtered. These options are useful to\n// avoid a flicker which would occur if `hover()`, `select()`, and `filter()`\n// are called after `draw()`.\nscatterplot.draw(\n  { x: [1, 2, 3], y: [3, 2, 1] },\n  { hover: 0, selected: [0, 1], filter: [0, 2] }\n);\n```\n \n- `properties` is an object of key-value pairs. [See below for a list of all properties.](#properties) \n- `points` is an array of point indices referencing the points that you want to select.\n- `options` [optional] is an object with the following properties:\n  - `preventEvent`: if `true` the `select` will not be published. \n- `points` is an array of indices referencing the points that you want to filter down to.\n- `options` [optional] is an object with the following properties:\n  - `preventEvent`: if `true` the `select` will not be published. \nZoom to a set of points \nZoom to the original camera position. This is similar to resetting the view \nZoom to a specific location, specified in normalized device coordinates. This function is similar to [`scatterplot.lookAt()`](#scatterplot.lookAt), however, it allows to smoothly transition the camera position. \n- `pointIdx` is a point indix. \n_Note, this API is a shorthand to `scatterplot.set({ 'cameraView': view })` with the additional features of allowing to prevent `view` events._ \n- `options` is an object for customizing the render settings during the export:\n  - `scale`: is a float number allowning to adjust the exported image size\n  - `antiAliasing`: is a float allowing to adjust the anti-aliasing factor\n  - `pixelAligned`: is a Boolean allowing to adjust the point alignment with the pixel grid \n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.8791979450219456,
      "result": {
        "original_header": "Properties",
        "type": "Text_excerpt",
        "value": "- An attribute is considered _nullifiable_ if it can be unset. Attributes that\n  are **not nullifiable** will be ignored if you try to set them to a falsy\n  value. For example, if you call `scatterplot.attr({ width: 0 });` the width\n  will not be changed as `0` is interpreted as a falsy value. \n- The background of the scatterplot is transparent, i.e., you have to control\n  the background with CSS! `background` is used when drawing the\n  outline of selected points to simulate the padded border only. \n- The size of selected points is given by `pointSize + pointSizeSelected` \n- If you need to draw more than 2 million points, you might want to set\n  `performanceMode` to `true` during the initialization to boost the\n  performance. In performance mode, points will be drawn as simple squares and\n  alpha blending is disabled. This should allow you to draw up to 20 million\n  points (or more depending on your hardware). Make sure to reduce the\n  `pointSize` as you render more and more points (e.g., `0.25` for 20 million\n  works for me) to ensure good performance. You can also enable squared points\n  and disable alpha blending individually via `renderPointsAsSquares` and\n  `disableAlphaBlending` respectively. \nTo visual encode one of the two point values set `colorBy`, `opacityBy`, or `sizeBy`\nto one of the following values referencing the third or forth component of your\npoints. To reference the third component you can use `category` (only for\nbackwards compatibility), `value1`, `valueA`, `valueZ`, or `z`. To reference\nthe forth component use `value` (only for backwards compatibility), `value2`,\n`valueB`, `valueW`, or `w`. \n**Density-based opacity encoding:** In addition, the opacity can dynamically be\nset based on the point density and zoom level via `opacityBy: 'density'`. As an\nexample go to [dynamic-opacity.html](https://flekschas.github.io/regl-scatterplot/dynamic-opacity.html).\nThe implementation is an extension of [Ricky Reusser's awesome notebook](https://observablehq.com/@rreusser/selecting-the-right-opacity-for-2d-point-clouds).\nHuuuge kudos Ricky! \ud83d\ude47\u200d\u2642\ufe0f \nIn addition to the properties understood by [`colorBy`, etc.](#property-by),\n`pointConnectionColorBy`, `pointConnectionOpacityBy`, and `pointConnectionSizeBy`\nalso understand `\"inherit\"` and `\"segment\"`. When set to `\"inherit\"`, the value\nwill be inherited from its point-specific counterpart. When set to `\"segment\"`,\neach segment of a point connection will be encoded separately. This allows you\nto, for instance, color connection by a gradient from the start to the end of\neach line. \n```javascript\n// Set width and height\nscatterplot.set({ width: 300, height: 200 });\n\n// get width\nconst width = scatterplot.get('width');\n\n// Set the aspect ratio of the scatterplot. This aspect ratio is referring to\n// your data source and **not** the aspect ratio of the canvas element! By\n// default it is assumed that your data us following a 1:1 ratio and this ratio\n// is preserved even if your canvas element has some other aspect ratio. But if\n// you wanted you could provide data that's going from [0,2] in x and [0,1] in y\n// in which case you'd have to set the aspect ratio as follows to `2`.\nscatterplot.set({ aspectRatio: 2.0 });\n\n// Set background color to red\nscatterplot.set({ backgroundColor: '#00ff00' }); // hex string\nscatterplot.set({ backgroundColor: [255, 0, 0] }); // rgb array\nscatterplot.set({ backgroundColor: [255, 0, 0, 1.0] }); // rgba array\nscatterplot.set({ backgroundColor: [1.0, 0, 0, 1.0] }); // normalized rgba\n\n// Set background image to an image\nscatterplot.set({ backgroundImage: 'https://server.com/my-image.png' });\n// If you need to know when the image was loaded you have two options. First,\n// you can listen to the following event\nscatterplot.subscribe(\n  'backgroundImageReady',\n  () => {\n    console.log('Background image is now loaded and rendered!');\n  },\n  1\n);\n// or you load the image yourself as follows\nconst backgroundImage = await scatterplot.createTextureFromUrl(\n  'https://server.com/my-image.png'\n);\nscatterplot.set({ backgroundImage });\n\n// Color by\nscatterplot.set({ colorBy: 'category' });\n\n// Set color map\nscatterplot.set({\n  pointColor: ['#ff0000', '#00ff00', '#0000ff'],\n  pointColorActive: ['#ff0000', '#00ff00', '#0000ff'], // optional\n  pointColorHover: ['#ff0000', '#00ff00', '#0000ff'], // optional\n});\n\n// Set base opacity\nscatterplot.set({ opacity: 0.5 });\n\n// If you want to deemphasize unselected points (when some points are selected)\n// you can rescale the unselected points' opacity as follows\nscatterplot.set({ opacityInactiveScale: 0.5 });\n\n// Set the width of the outline of selected points\nscatterplot.set({ pointOutlineWidth: 2 });\n\n// Set the base point size\nscatterplot.set({ pointSize: 10 });\n\n// Set the additional point size of selected points\nscatterplot.set({ pointSizeSelected: 2 });\n\n// Change the lasso color and make it very smooth, i.e., do not wait before\n// extending the lasso (i.e., `lassoMinDelay = 0`) and extend the lasso when\n// the mouse moves at least 1 pixel\nscatterplot.set({\n  lassoColor: [1, 1, 1, 1],\n  lassoMinDelay: 0,\n  lassoMinDist: 1,\n  // This will keep the drawn lasso until the selected points are deselected\n  lassoClearEvent: 'deselect',\n});\n\n// Activate reticle and set reticle color to red\nscatterplot.set({ showReticle: true, reticleColor: [1, 0, 0, 0.66] });\n```\n \n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9628479575834686,
      "result": {
        "original_header": "Renderer API",
        "type": "Text_excerpt",
        "value": "Updates Regl's viewport, drawingBufferWidth, and drawingBufferHeight. \n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/flekschas/regl-scatterplot/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "faq": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Resizing the scatterplot",
        "parent_header": [
          "WebGl 2D Scatterplot with Regl",
          "Trouble Shooting"
        ],
        "type": "Text_excerpt",
        "value": "The chances are high that you use the regl-scatterplot in a dynamically-resizable or interactive web-app. Please note that **regl-scatterplot doesn't not automatically resize** when the dimensions of its parent container change. It's your job to keep the size of regl-scatterplot and its parent element in sync. Hence, every time the size of the parent or `canvas` element changed, you have to call:\n\n```javascript\nconst { width, height } = canvas.getBoundingClientRect();\nscatterplot.set({ width, height });\n```\n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Using regl-scatterplot with Vue",
        "parent_header": [
          "WebGl 2D Scatterplot with Regl",
          "Trouble Shooting"
        ],
        "type": "Text_excerpt",
        "value": "Related to the resizing, when conditionally displaying regl-scatterplot in Vue you might have to update the `width` and `height` when the visibility is changed. See [issue #20](https://github.com/flekschas/regl-scatterplot/issues/20#issuecomment-639377810) for an example.\n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 27
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "flekschas/regl-scatterplot"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "WebGl 2D Scatterplot with Regl"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "package.json",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "package.json"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": ""
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://doi.org/10.21105/joss.05275"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/932103/62905669-7679f380-bd39-11e9-9528-86ee56d6dfba.gif"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/user-attachments/assets/5e6a7c2a-5686-4711-9b3d-36d45a96ca69"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/932103/106489598-f42c4480-6482-11eb-8286-92a9956e1d20.gif"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "regular_expression"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://user-images.githubusercontent.com/932103/106489598-f42c4480-6482-11eb-8286-92a9956e1d20.gif"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Install",
        "parent_header": [
          "WebGl 2D Scatterplot with Regl"
        ],
        "type": "Text_excerpt",
        "value": "```sh\nnpm i regl-scatterplot\n```\n\n_FYI, if you're using `npm` version prior to 7, you have to install regl-scatterplot's peer dependencies (`regl` and `pub-sub-es`) manually._\n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/flekschas/regl-scatterplot/issues"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2d, regl, scatter-plot, scatterplot, visualization, webgl"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "scatterplot"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "2d scatter"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "interactive data visualization"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "regl"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "WebGL"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "embedding plot"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "scatter plot",
          "2D scatter",
          "interactive data visualization",
          "JavaScript",
          "embedding plot",
          "WebGL"
        ]
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "License",
        "url": "https://api.github.com/licenses/mit",
        "value": "https://api.github.com/licenses/mit"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "File_dump",
        "value": "MIT License\n\nCopyright (c) 2018 Fritz Lekschas\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/LICENSE",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "License",
        "value": "MIT"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/MIT",
        "spdx_id": "MIT",
        "type": "License",
        "value": "MIT"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "logo": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "http://img.badgesize.io/https://unpkg.com/regl-scatterplot/dist/regl-scatterplot.min.js?compression=gzip&amp;color=0dacd4&amp;style=flat-square"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "regl-scatterplot"
      },
      "technique": "GitHub_API"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "flekschas"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "regl-scatterplot"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "JavaScript",
        "size": 371074,
        "type": "Programming_language",
        "value": "JavaScript"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "HTML",
        "size": 10198,
        "type": "Programming_language",
        "value": "HTML"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "TeX",
        "size": 9276,
        "type": "Programming_language",
        "value": "TeX"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "GLSL",
        "size": 6376,
        "type": "Programming_language",
        "value": "GLSL"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 206,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2025-05-03T02:33:26Z",
        "date_published": "2025-05-03T02:33:47Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.14.1",
        "name": "v1.14.1",
        "release_id": 216277889,
        "tag": "v1.14.1",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.14.1",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/216277889",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/216277889",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.14.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2025-03-04T21:47:16Z",
        "date_published": "2025-03-04T21:47:30Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.14.0",
        "name": "v1.14.0",
        "release_id": 203711396,
        "tag": "v1.14.0",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.14.0",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/203711396",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/203711396",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.14.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2025-02-13T14:15:54Z",
        "date_published": "2025-02-13T14:16:08Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.13.2",
        "name": "v1.13.2",
        "release_id": 200128049,
        "tag": "v1.13.2",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.13.2",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/200128049",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/200128049",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.13.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2025-02-10T21:10:17Z",
        "date_published": "2025-02-10T21:10:34Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.13.1",
        "name": "v1.13.1",
        "release_id": 199475743,
        "tag": "v1.13.1",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.13.1",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/199475743",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/199475743",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.13.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2025-01-19T18:54:00Z",
        "date_published": "2025-01-19T18:54:18Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.13.0",
        "name": "v1.13.0",
        "release_id": 195526789,
        "tag": "v1.13.0",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.13.0",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/195526789",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/195526789",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.13.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2025-01-13T01:49:34Z",
        "date_published": "2025-01-13T01:49:50Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.12.1",
        "name": "v1.12.1",
        "release_id": 194337293,
        "tag": "v1.12.1",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.12.1",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/194337293",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/194337293",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.12.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-12-28T11:21:31Z",
        "date_published": "2024-12-28T11:21:47Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.12.0",
        "name": "v1.12.0",
        "release_id": 192564870,
        "tag": "v1.12.0",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.12.0",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/192564870",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/192564870",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.12.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-12-13T23:04:40Z",
        "date_published": "2024-12-13T23:14:28Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.11.4",
        "name": "v1.11.4",
        "release_id": 190729011,
        "tag": "v1.11.4",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.11.4",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/190729011",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/190729011",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.11.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-12-11T15:23:38Z",
        "date_published": "2024-12-11T15:24:03Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.11.3",
        "name": "v1.11.3",
        "release_id": 190232272,
        "tag": "v1.11.3",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.11.3",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/190232272",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/190232272",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.11.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-12-11T15:00:13Z",
        "date_published": "2024-12-11T15:01:04Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.11.2",
        "name": "v1.11.2",
        "release_id": 190225981,
        "tag": "v1.11.2",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.11.2",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/190225981",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/190225981",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.11.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-11-23T16:10:26Z",
        "date_published": "2024-11-23T16:11:21Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.11.1",
        "name": "v1.11.1",
        "release_id": 187118270,
        "tag": "v1.11.1",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.11.1",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/187118270",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/187118270",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.11.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-09-28T16:07:07Z",
        "date_published": "2024-09-28T16:16:06Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.11.0",
        "name": "v1.11.0",
        "release_id": 177430356,
        "tag": "v1.11.0",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.11.0",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/177430356",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/177430356",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.11.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-08-16T20:14:46Z",
        "date_published": "2024-08-16T20:17:22Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.10.4",
        "name": "v1.10.4",
        "release_id": 170655676,
        "tag": "v1.10.4",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.10.4",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/170655676",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/170655676",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.10.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-08-14T18:43:57Z",
        "date_published": "2024-08-14T18:44:14Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.10.3",
        "name": "v1.10.3",
        "release_id": 170238422,
        "tag": "v1.10.3",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.10.3",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/170238422",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/170238422",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.10.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-07-18T18:34:27Z",
        "date_published": "2024-08-03T17:45:07Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.10.2",
        "name": "v1.10.2",
        "release_id": 168559421,
        "tag": "v1.10.2",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.10.2",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/168559421",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/168559421",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.10.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-07-17T20:36:38Z",
        "date_published": "2024-07-17T20:37:00Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.10.1",
        "name": "v1.10.1",
        "release_id": 165927075,
        "tag": "v1.10.1",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.10.1",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/165927075",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/165927075",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.10.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-06-26T01:53:46Z",
        "date_published": "2024-07-17T20:33:27Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.10.0",
        "name": "v1.10.0",
        "release_id": 165926628,
        "tag": "v1.10.0",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.10.0",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/165926628",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/165926628",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.10.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-06-23T17:08:06Z",
        "date_published": "2024-06-23T18:50:18Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.9.6",
        "name": "v1.9.6",
        "release_id": 161916717,
        "tag": "v1.9.6",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.9.6",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/161916717",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/161916717",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.9.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-06-21T19:39:46Z",
        "date_published": "2024-06-21T19:40:14Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.9.5",
        "name": "v1.9.5",
        "release_id": 161731841,
        "tag": "v1.9.5",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.9.5",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/161731841",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/161731841",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.9.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-06-11T13:34:06Z",
        "date_published": "2024-06-11T13:34:47Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.9.4",
        "name": "v1.9.4",
        "release_id": 159894006,
        "tag": "v1.9.4",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.9.4",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/159894006",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/159894006",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.9.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-06-05T03:12:18Z",
        "date_published": "2024-06-05T03:12:35Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.9.3",
        "name": "v1.9.3",
        "release_id": 158907738,
        "tag": "v1.9.3",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.9.3",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/158907738",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/158907738",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.9.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-06-05T01:17:17Z",
        "date_published": "2024-06-05T01:17:30Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.9.2",
        "name": "v1.9.2",
        "release_id": 158900694,
        "tag": "v1.9.2",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.9.2",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/158900694",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/158900694",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.9.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-06-03T12:01:52Z",
        "date_published": "2024-06-03T12:02:18Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.9.1",
        "name": "v1.9.1",
        "release_id": 158597142,
        "tag": "v1.9.1",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.9.1",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/158597142",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/158597142",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.9.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2024-06-01T16:08:03Z",
        "date_published": "2024-06-01T16:08:33Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.9.0",
        "name": "v1.9.0",
        "release_id": 158462651,
        "tag": "v1.9.0",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.9.0",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/158462651",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/158462651",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.9.0"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-11-03T15:23:38Z",
        "date_published": "2023-11-03T15:24:00Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.8.5",
        "name": "v1.8.5",
        "release_id": 127896194,
        "tag": "v1.8.5",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.8.5",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/127896194",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/127896194",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.8.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-08-28T15:16:22Z",
        "date_published": "2023-08-28T15:22:19Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.8.4",
        "name": "v1.8.4",
        "release_id": 118947108,
        "tag": "v1.8.4",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.8.4",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/118947108",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/118947108",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.8.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-08-14T14:28:19Z",
        "date_published": "2023-08-14T14:28:49Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.8.3",
        "name": "v1.8.3",
        "release_id": 117172630,
        "tag": "v1.8.3",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.8.3",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/117172630",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/117172630",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.8.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-08-10T14:46:27Z",
        "date_published": "2023-08-10T14:46:57Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.8.2",
        "name": "v1.8.2",
        "release_id": 115942559,
        "tag": "v1.8.2",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.8.2",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/115942559",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/115942559",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.8.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-08-09T13:07:05Z",
        "date_published": "2023-08-09T13:07:39Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.8.1",
        "name": "v1.8.1",
        "release_id": 115759952,
        "tag": "v1.8.1",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.8.1",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/115759952",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/115759952",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.8.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "github-actions[bot]",
          "type": "Bot"
        },
        "date_created": "2023-07-29T16:29:19Z",
        "date_published": "2023-07-29T16:31:33Z",
        "html_url": "https://github.com/flekschas/regl-scatterplot/releases/tag/v1.8.0",
        "name": "v1.8.0",
        "release_id": 114109119,
        "tag": "v1.8.0",
        "tarball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/tarball/v1.8.0",
        "type": "Release",
        "url": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/114109119",
        "value": "https://api.github.com/repos/flekschas/regl-scatterplot/releases/114109119",
        "zipball_url": "https://api.github.com/repos/flekschas/regl-scatterplot/zipball/v1.8.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "requirements": [
    {
      "confidence": 1,
      "result": {
        "name": "@flekschas/utils",
        "type": "Software_application",
        "value": "@flekschas/utils@^0.32.2",
        "version": "^0.32.2"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "dom-2d-camera",
        "type": "Software_application",
        "value": "dom-2d-camera@^2.2.6",
        "version": "^2.2.6"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "earcut",
        "type": "Software_application",
        "value": "earcut@^3.0.1",
        "version": "^3.0.1"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "gl-matrix",
        "type": "Software_application",
        "value": "gl-matrix@~3.4.3",
        "version": "~3.4.3"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "pub-sub-es",
        "type": "Software_application",
        "value": "pub-sub-es@~3.0.0",
        "version": "~3.0.0"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "regl",
        "type": "Software_application",
        "value": "regl@~2.1.1",
        "version": "~2.1.1"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "regl-line",
        "type": "Software_application",
        "value": "regl-line@~1.1.1",
        "version": "~1.1.1"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "@babel/core",
        "type": "Software_application",
        "value": "@babel/core@^7.26.0",
        "version": "^7.26.0"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "@babel/plugin-transform-regenerator",
        "type": "Software_application",
        "value": "@babel/plugin-transform-regenerator@^7.25.9",
        "version": "^7.25.9"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "@babel/polyfill",
        "type": "Software_application",
        "value": "@babel/polyfill@^7.12.1",
        "version": "^7.12.1"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "@babel/preset-env",
        "type": "Software_application",
        "value": "@babel/preset-env@^7.26.0",
        "version": "^7.26.0"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "@biomejs/biome",
        "type": "Software_application",
        "value": "@biomejs/biome@^1.9.4",
        "version": "^1.9.4"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "@rollup/plugin-babel",
        "type": "Software_application",
        "value": "@rollup/plugin-babel@^6.0.3",
        "version": "^6.0.3"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "@rollup/plugin-commonjs",
        "type": "Software_application",
        "value": "@rollup/plugin-commonjs@^28.0.1",
        "version": "^28.0.1"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "@rollup/plugin-json",
        "type": "Software_application",
        "value": "@rollup/plugin-json@^6.0.0",
        "version": "^6.0.0"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "@rollup/plugin-node-resolve",
        "type": "Software_application",
        "value": "@rollup/plugin-node-resolve@^15.3.0",
        "version": "^15.3.0"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "@rollup/plugin-terser",
        "type": "Software_application",
        "value": "@rollup/plugin-terser@^0.4.3",
        "version": "^0.4.3"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "@tweakpane/core",
        "type": "Software_application",
        "value": "@tweakpane/core@^2.0.5",
        "version": "^2.0.5"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "@types/d3-scale",
        "type": "Software_application",
        "value": "@types/d3-scale@^4.0.6",
        "version": "^4.0.6"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "@types/node",
        "type": "Software_application",
        "value": "@types/node@^22.9.3",
        "version": "^22.9.3"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "@vitest/browser",
        "type": "Software_application",
        "value": "@vitest/browser@^3.0.9",
        "version": "^3.0.9"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "@vitest/coverage-v8",
        "type": "Software_application",
        "value": "@vitest/coverage-v8@^3.0.9",
        "version": "^3.0.9"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "apache-arrow",
        "type": "Software_application",
        "value": "apache-arrow@^18.0.0",
        "version": "^18.0.0"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "browser-env",
        "type": "Software_application",
        "value": "browser-env@^3.3.0",
        "version": "^3.3.0"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "d3-axis",
        "type": "Software_application",
        "value": "d3-axis@^3.0.0",
        "version": "^3.0.0"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "d3-random",
        "type": "Software_application",
        "value": "d3-random@^3.0.1",
        "version": "^3.0.1"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "d3-scale",
        "type": "Software_application",
        "value": "d3-scale@^4.0.2",
        "version": "^4.0.2"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "d3-selection",
        "type": "Software_application",
        "value": "d3-selection@^3.0.0",
        "version": "^3.0.0"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "esm",
        "type": "Software_application",
        "value": "esm@^3.2.25",
        "version": "^3.2.25"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "gh-pages",
        "type": "Software_application",
        "value": "gh-pages@^6.2.0",
        "version": "^6.2.0"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "merge",
        "type": "Software_application",
        "value": "merge@^2.1.1",
        "version": "^2.1.1"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "playwright",
        "type": "Software_application",
        "value": "playwright@^1.49.0",
        "version": "^1.49.0"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "rollup",
        "type": "Software_application",
        "value": "rollup@^4.27.4",
        "version": "^4.27.4"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "rollup-plugin-filesize",
        "type": "Software_application",
        "value": "rollup-plugin-filesize@^10.0.0",
        "version": "^10.0.0"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "tweakpane",
        "type": "Software_application",
        "value": "tweakpane@^4.0.5",
        "version": "^4.0.5"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "typescript",
        "type": "Software_application",
        "value": "typescript@~5.7.2",
        "version": "~5.7.2"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "vite",
        "type": "Software_application",
        "value": "vite@^6.2.3",
        "version": "^6.2.3"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "vite-plugin-virtual-html-template",
        "type": "Software_application",
        "value": "vite-plugin-virtual-html-template@^1.1.0",
        "version": "^1.1.0"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "name": "vitest",
        "type": "Software_application",
        "value": "vitest@^3.0.9",
        "version": "^3.0.9"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    }
  ],
  "somef_missing_categories": [
    "acknowledgement",
    "run",
    "download",
    "contact",
    "contributors",
    "documentation",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 00:18:35",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 216
      },
      "technique": "GitHub_API"
    }
  ],
  "type": [
    {
      "confidence": 0.82,
      "result": {
        "type": "String",
        "value": "commandline-application"
      },
      "technique": "software_type_heuristics"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Basic Example",
        "parent_header": [
          "WebGl 2D Scatterplot with Regl",
          "Getting started"
        ],
        "type": "Text_excerpt",
        "value": "```javascript\nimport createScatterplot from 'regl-scatterplot';\n\nconst canvas = document.querySelector('#canvas');\n\nconst { width, height } = canvas.getBoundingClientRect();\n\nconst scatterplot = createScatterplot({\n  canvas,\n  width,\n  height,\n  pointSize: 5,\n});\n\nconst points = new Array(10000)\n  .fill()\n  .map(() => [-1 + Math.random() * 2, -1 + Math.random() * 2, color]);\n\nscatterplot.draw(points);\n```\n\n**IMPORTANT:** Your points positions need to be normalized to `[-1, 1]` (normalized device coordinates). Why? Regl-scatterplot is designed to be a lower-level library, whose primary purpose is speed. As such it expects you to normalize the data upfront.\n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Color, Opacity, and Size Encoding",
        "parent_header": [
          "WebGl 2D Scatterplot with Regl",
          "Getting started"
        ],
        "type": "Text_excerpt",
        "value": "In regl-scatterplot, points can be associated with two data values. These two values are defined as the third and forth component of the point quadruples (`[x, y, value, value]`). For instance:\n\n```javascript\nscatterplot.draw([\n  [0.2, -0.1, 0, 0.1337],\n  [0.3, 0.1, 1, 0.3371],\n  [-0.9, 0.8, 2, 0.3713],\n]);\n```\n\nThese two values can be visually encoded as the color, opacity, or the size. Integers are treated as categorical data and floats that range between [0, 1] are treated as continuous values. In the example above, the first point value would be treated as categorical data and the second would be treated as continuous data.\n\nIn the edge case that you have continuous data but all data points are either `0` or `1` you can manually set the data type via the [`zDataType` and `wDatatype` draw options](#scatterplot.draw).\n\nTo encode the two point values use the `colorBy`, `opacityBy`, and `sizeBy` property as follows:\n\n```javascript\nscatterplot.set({\n  opacityBy: 'valueA',\n  sizeBy: 'valueA',\n  colorBy: 'valueB',\n});\n```\n\nIn this example we would encode the first categorical point values (`[0, 1, 2]`) as the point opacity and size. The second continuous point values (`[0.1337, 0.3317, 0.3713]`) would be encoded as the point color.\n\nThe last thing we need to tell regl-scatterplot is what those point values should be translated to. We do this by specifying a color, opacity, and size map as an array of colors, opacities, and sizes as follows:\n\n```javascript\nscatterplot.set({\n  pointColor: ['#000000', '#111111', ..., '#eeeeee', '#ffffff'],\n  pointSize: [2, 4, 8],\n  opacity: [0.5, 0.75, 1],\n});\n```\n\nYou can encode a point data value in multiple ways. For instance, as you can see in the example above, the categorical fist data value is encoded via the point size _and_ opacity.\n\n**What if I have more than two values associated to a point?** Unfortunately, this isn't supported currently. In case you're wondering, this limitation is due to how we store the point data. The whole point state is encoded as an RGBA texture where the x and y coordinate are stored as the red and green color components and the first and second data value are stored in the blue and alpha component of the color. However, this limitation might be addressed in future versions so make sure to check back or, even better, start a pull request!\n\n**Why can't I specify a range function instead of a map?** Until we have implemented enough scale functions in the shader it's easier to let _you_ pre-compute the map. For instance, if you wanted to encode a continuous values on a log scale of point size, you can simply do `pointSize: Array(100).fill().map((v, i) => Math.log(i + 1) + 1)`.\n\n[Code Example](example/index.js) | [Demo](https://flekschas.github.io/regl-scatterplot/index.html)\n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Connecting points",
        "parent_header": [
          "WebGl 2D Scatterplot with Regl",
          "Getting started"
        ],
        "type": "Text_excerpt",
        "value": "You can connect points visually using spline curves by adding a 5th component to your point data and setting `showPointConnections: true`.\n\nThe 5th component is needed to identify which points should be connected. By default, the order of how the points are connected is defined by the order in which the points appear in your data.\n\n```javascript\nconst points = [\n  [1, 1, 0, 0, 0],\n  [2, 2, 0, 0, 0],\n  [3, 3, 0, 0, 1],\n  [4, 4, 0, 0, 1],\n  [5, 5, 0, 0, 0],\n];\n```\n\nIn the example above, the points would be connected as follows:\n\n```\n0 -> 1 -> 4\n2 -> 3\n```\n\n**Line Ordering:**\n\nTo explicitely define or change the order of how points are connected, you can define a 6th component as follows:\n\n```javascript\nconst points = [\n  [1, 1, 0, 0, 0, 2],\n  [2, 2, 0, 0, 0, 0],\n  [3, 3, 0, 0, 1, 1],\n  [4, 4, 0, 0, 1, 0],\n  [5, 5, 0, 0, 0, 1],\n];\n```\n\nwould lead tp the following line segment ordering:\n\n```\n1 -> 4 -> 0\n3 -> 2\n```\n\nNote, to visualize the point connections, make sure `scatterplot.set({ showPointConnection: true })` is set!\n\n[Code Example](example/connected-points.js) | [Demo](https://flekschas.github.io/regl-scatterplot/connected-points.html)\n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Synchronize D3 x and y scales with the scatterplot view",
        "parent_header": [
          "WebGl 2D Scatterplot with Regl",
          "Getting started"
        ],
        "type": "Text_excerpt",
        "value": "Under the hood regl-scatterplot uses a [2D camera](https://github.com/flekschas/dom-2d-camera), which you can either get via `scatterplot.get('camera')` or `scatterplot.subscribe('view', ({ camera }) => {})`. You can use the camera's `view` matrix to compute the x and y scale domains. However, since this is tedious, regl-scatterplot allows you to specify D3 x and y scales that will automatically be synchronized. For example:\n\n```javascript\nconst xScale = scaleLinear().domain([0, 42]);\nconst yScale = scaleLinear().domain([-5, 5]);\nconst scatterplot = createScatterplot({\n  canvas,\n  width,\n  height,\n  xScale,\n  yScale,\n});\n```\n\nNow whenever you pan or zoom, the domains of `xScale` and `yScale` will be updated according to your current view. Note, the ranges are automatically set to the width and height of your `canvas` object.\n\n[Code Example](example/axes.js) | [Demo](https://flekschas.github.io/regl-scatterplot/axes.html)\n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Translating Point Coordinates to Screen Coordinates",
        "parent_header": [
          "WebGl 2D Scatterplot with Regl",
          "Getting started"
        ],
        "type": "Text_excerpt",
        "value": "Imagine you want to render additional features on top of points points, for which you need to know where on the canvas points are drawn. To determine the screen coordinates of points you can use [D3 scales](#synchronize-d3-x-and-y-scales-with-the-scatterplot-view) and `scatterplot.get('pointsInView')` as follows:\n\n```javascript\nconst points = Array.from({ length: 100 }, () => [Math.random() * 42, Math.random()]);\nconst [xScale, yScale] = [scaleLinear().domain([0, 42]), scaleLinear().domain([0, 1])];\n\nconst scatterplot = createScatterplot({ ..., xScale, yScale });\nscatterplot.draw(points);\n\nscatterplot.subscribe('view', ({ xScale, yScale }) => {\n  console.log('pointsInScreenCoords', scatterplot.get('pointsInView').map((pointIndex) => [\n    xScale(points[pointIndex][0]),\n    yScale(points[pointIndex][1])\n  ]));\n});\n```\n\n[Code Example](example/text-labels.js) | [Demo](https://flekschas.github.io/regl-scatterplot/text-labels.html)\n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Transition Points",
        "parent_header": [
          "WebGl 2D Scatterplot with Regl",
          "Getting started"
        ],
        "type": "Text_excerpt",
        "value": "To make sense of two different states of points, it can help to show an animation by transitioning the points from their first to their second location. To do so, simple `draw()` the new points as follows:\n\n```javascript\nconst initialPoints = Array.from({ length: 100 }, () => [Math.random() * 42, Math.random()]);\nconst finalPoints = Array.from({ length: 100 }, () => [Math.random() * 42, Math.random()]);\n\nconst scatterplot = createScatterplot({ ... });\nscatterplot.draw(initialPoints).then(() => {\n  scatterplot.draw(finalPoints, { transition: true });\n})\n```\n\nIt's important that the number of points is the same for the two `draw()` calls. Also note that the point correspondence is determined by their index.\n\n[Code Example](example/transition.js) | [Demo](https://flekschas.github.io/regl-scatterplot/transition.html)\n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Zoom to Points",
        "parent_header": [
          "WebGl 2D Scatterplot with Regl",
          "Getting started"
        ],
        "type": "Text_excerpt",
        "value": "Sometimes it can be useful to programmatically zoom to a set of points. In regl-scatterplot you can do this with the `zoomToPoints()` method as follows:\n\n```javascript\nconst points = Array.from({ length: 100 }, () => [Math.random() * 42, Math.random()]);\n\nconst scatterplot = createScatterplot({ ... });\nscatterplot.draw(initialPoints).then(() => {\n  // We'll select the first five points...\n  scatterplot.select([0, 1, 2, 3, 4]);\n  // ...and zoom into them\n  scatterplot.zoomToPoints([0, 1, 2, 3, 4], { transition: true })\n})\n```\n\nNote that the zooming can be smoothly transitioned when `{ transition: true }` is passed to the function.\n\n[Code Example](example/multiple-instances.js) | [Demo](https://flekschas.github.io/regl-scatterplot/multiple-instances.html)\n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Update only the Z/W point coordinates",
        "parent_header": [
          "WebGl 2D Scatterplot with Regl",
          "Getting started"
        ],
        "type": "Text_excerpt",
        "value": "If you only want to update the z/w points coordinates that can be used for encoding te point color, opacity, or size, you can improve the redrawing performance by reusing the existing spatial index, which is otherwise recomputed every time you draw new points.\n\n```javascript\nconst x = (length) => Array.from({ length }, () => -1 + Math.random() * 2);\nconst y = (length) => Array.from({ length }, () => -1 + Math.random() * 2);\nconst z = (length) => Array.from({ length }, () => Math.round(Math.random()));\nconst w = (length) => Array.from({ length }, () => Math.random());\n\nconst numPoints = 1000000;\nconst points = {\n  x: x(numPoints),\n  y: y(numPoints),\n  z: z(numPoints),\n  w: w(numPoints),\n};\n\nconst scatterplot = createScatterplot({ ... });\nscatterplot.draw(initialPoints).then(() => {\n  // After the initial draw, we retrieve and save the KDBush spatial index.\n  const spatialIndex = scatterplot.get('spatialIndex');\n  setInterval(() => {\n    // Update Z and W values\n    points.z = z(numPoints);\n    points.w = w(numPoints);\n\n    // We redraw the scatter plot with the updates points. Importantly, since\n    // the x/y coordinates remain unchanged we pass in the saved spatial index\n    // to avoid having to re-index the points.\n    scatterplot.draw(points, { spatialIndex });\n  }, 2000);\n})\n```\n"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "type": "Release",
        "value": "1.14.1"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/package.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "v1.5.1"
      },
      "source": "https://raw.githubusercontent.com/flekschas/regl-scatterplot/main/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
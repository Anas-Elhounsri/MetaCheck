{
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "jkeane@gmail.com",
        "identifier": "https://orcid.org/0000-0001-7087-9776",
        "type": "String",
        "value": "Jonathan Keane"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "email": "mvargas@dcc.uchile.cl",
        "identifier": "https://orcid.org/0000-0003-1017-7574",
        "type": "String",
        "value": "Mauricio Vargas"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[jkeane@gmail.com].\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/dittodb"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/dittodb"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/dittodb"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": [
          "https://github.com/ropensci/dittodb/actions?workflow=check-macOS",
          "https://github.com/ropensci/dittodb/actions?workflow=check-linux",
          "https://github.com/ropensci/dittodb/actions?workflow=check-windows",
          "https://app.codecov.io/gh/ropensci/dittodb?branch=main"
        ]
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "contributing_guidelines": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributing to `dittodb`\n\nThis outlines how to propose a change to `dittodb`. For detailed information \nabout developing `dittodb` see the [developing `dittodb` vignette](articles/developing-dittodb.html).\n\n\n### Fixing typos\n\nSmall typos or grammatical errors in documentation may be edited directly using\nthe GitHub web interface, so long as the changes are made in the _source_ file.\nWe love getting help with this!\n\n* **Yes, please:** you edit a roxygen comment in a `.R` file under the `R/` directory.\n* **No, thanks:** you edit an `.Rd` file under the `man/` directory.\n\n### Prerequisites\n\nIn order to not waste effort and time, before you make a substantial pull request,\nyou should file an issue and make sure someone from the team agrees that it\u2019s a \nproblem. If you\u2019ve found a bug, create an associated issue and illustrate the \nbug with a minimal [reprex](https://www.tidyverse.org/help/#reprex).\n\n### Pull request process\n\n*  We recommend that you create a new git branch for each pull request (PR).\n*  Look at the GitHub Actions build status before and after making changes.\n*  We use [roxygen2](https://cran.r-project.org/package=roxygen2), with\n[Markdown syntax](https://cran.r-project.org/web/packages/roxygen2/vignettes/markdown.html),\nfor documentation.\n*  We use [testthat](https://cran.r-project.org/package=testthat). Contributions\nwith test cases included are easier to accept.\n*  New code should generally follow the tidyverse [style guide](http://style.tidyverse.org).\nYou can use the [styler](https://CRAN.R-project.org/package=styler) package to\napply these styles, but please don't restyle code that has nothing to do with \nyour PR.  \n\n### Code of Conduct\n\nPlease note that the `dittodb` project is released with a  [Contributor Code of Conduct](CODE_OF_CONDUCT.md). \nBy contributing to this project, you agree to abide by its terms.\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/CONTRIBUTING.md",
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2019-10-15T22:18:14Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-08-21T22:37:43Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dittodb: A Test Environment for DB Queries in R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/DESCRIPTION",
        "type": "String",
        "value": "Testing and documenting code that communicates with remote\n  databases can be painful. Although the interaction with R is usually relatively \n  simple (e.g. data(frames) passed to and from a database), because they rely on \n  a separate service and the data there, testing them can be difficult to set up,\n  unsustainable in a continuous integration environment, or impossible without \n  replicating an entire production cluster. This package addresses that by \n  allowing you to make recordings from your database interactions and then play \n  them back while testing (or in other contexts) all without needing to spin up \n  or have access to the database your code would typically connect to."
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Testing and documenting code that communicates with remote databases can be painful. Although the interaction with R is usually relatively simple (e.g. data(frames) passed to and from a database), because they rely on a separate service and the data there, testing them can be difficult to set up, unsustainable in a continuous integration environment, or impossible without replicating an entire production cluster. This package addresses that by allowing you to make recordings from your database interactions and then play them back while testing (or in other contexts) all without needing to spin up or have access to the database your code would typically connect to."
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9716681877838261,
      "result": {
        "original_header": "dittodb",
        "type": "Text_excerpt",
        "value": "\n`dittodb` is a package that makes testing against databases easy. When writing code that relies on interactions with databases, testing has been difficult without recreating test databases in your continuous integration (aka CI) environment, or resorting to using SQLite databases instead of the database engines you have in production. Both have their downsides: recreating database infrastructure is slow, error prone, and hard to iterate with. Using SQLite works well, right up until you use a feature (like [a full outer join](https://www.sqlite.org/omitted.html)) or has [quirks](https://www.sqlite.org/quirks.html) that might differ from your production database. `dittodb` solves this by recording database interactions, saving them as mocks, and then replaying them seamlessly during testing. This means that if you can get a query from your database, you can record the response and reliably reproduce that response in tests. \n"
      },
      "source": "https://github.com/ropensci/dittodb/blob/main/README.md",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9020810726151527,
      "result": {
        "original_header": "Code of Conduct",
        "type": "Text_excerpt",
        "value": "Please note that the `dittodb` project is released with a [Contributor Code of Conduct](https://dittodb.jonkeane.com/CODE_OF_CONDUCT). By contributing to this project, you agree to abide by its terms.\n \n"
      },
      "source": "https://github.com/ropensci/dittodb/blob/main/README.md",
      "technique": "supervised_classification"
    }
  ],
  "development_status": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://lifecycle.r-lib.org/articles/stages.html"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/dittodb/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 15
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ropensci/dittodb/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "ropensci/dittodb"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dittodb"
      },
      "source": "https://github.com/ropensci/dittodb/blob/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "description",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/dittodb/main/DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/DESCRIPTION",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/DESCRIPTION",
        "type": "Url",
        "value": "DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "has_script_file": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/dittodb/main/db-setup/mariadb-docker-container-only.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/dittodb/main/db-setup/populate-dbs.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/dittodb/main/db-setup/mariadb-brew.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/dittodb/main/db-setup/postgres-brew.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/dittodb/main/db-setup/local-postgres-docker-setup.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/dittodb/main/db-setup/postgres-docker-container-only.sh"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/dittodb/main/db-setup/local-mariadb-docker-setup.sh"
      },
      "technique": "file_exploration"
    }
  ],
  "homepage": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://dittodb.jonkeane.com/"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dittodb"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "images": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://lifecycle.r-lib.org/articles/figures/lifecycle-stable.svg"
      },
      "source": "https://github.com/ropensci/dittodb/blob/main/README.md",
      "technique": "regular_expression"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "dittodb"
        ],
        "type": "Text_excerpt",
        "value": "Currently, `dittodb` is on CRAN (The Comprehensive R Archive Network), so you can install it with `install.packages(\"dittodb\")`. \n"
      },
      "source": "https://github.com/ropensci/dittodb/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Installing a development version",
        "parent_header": [
          "dittodb",
          "Installation"
        ],
        "type": "Text_excerpt",
        "value": "If you would like to use the development version, you can install from GitHub with: `remotes::install_github(\"ropensci/dittodb\")`\n\n_Note_ You may need to add `@main` at the end if you are using a version of {remotes} prior to 2.2.0. Alternatively, you can use `remotes::install_git()` directly: `remotes::install_git(\"https://github.com/ropensci/dittodb.git\")`\n"
      },
      "source": "https://github.com/ropensci/dittodb/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Setup a package to use `dittodb`",
        "parent_header": [
          "dittodb"
        ],
        "type": "Text_excerpt",
        "value": "Use the function `dittodb::use_dittodb()` to easily get started using `dittodb`. It will add `dittodb` to `Suggests` in the `DESCRIPTION` file and add `library(dittodb)` to `tests/testthat/helper.R`.\n"
      },
      "source": "https://github.com/ropensci/dittodb/blob/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/ropensci/dittodb/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/dittodb/issues"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/ropensci/dittodb/issues"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "Apache License 2.0",
        "spdx_id": "Apache-2.0",
        "type": "File_dump",
        "value": "Apache License\n==============\n\n_Version 2.0, January 2004_\n_&lt;<http://www.apache.org/licenses/>&gt;_\n\n### Terms and Conditions for use, reproduction, and distribution\n\n#### 1. Definitions\n\n\u201cLicense\u201d shall mean the terms and conditions for use, reproduction, and\ndistribution as defined by Sections 1 through 9 of this document.\n\n\u201cLicensor\u201d shall mean the copyright owner or entity authorized by the copyright\nowner that is granting the License.\n\n\u201cLegal Entity\u201d shall mean the union of the acting entity and all other entities\nthat control, are controlled by, or are under common control with that entity.\nFor the purposes of this definition, \u201ccontrol\u201d means **(i)** the power, direct or\nindirect, to cause the direction or management of such entity, whether by\ncontract or otherwise, or **(ii)** ownership of fifty percent (50%) or more of the\noutstanding shares, or **(iii)** beneficial ownership of such entity.\n\n\u201cYou\u201d (or \u201cYour\u201d) shall mean an individual or Legal Entity exercising\npermissions granted by this License.\n\n\u201cSource\u201d form shall mean the preferred form for making modifications, including\nbut not limited to software source code, documentation source, and configuration\nfiles.\n\n\u201cObject\u201d form shall mean any form resulting from mechanical transformation or\ntranslation of a Source form, including but not limited to compiled object code,\ngenerated documentation, and conversions to other media types.\n\n\u201cWork\u201d shall mean the work of authorship, whether in Source or Object form, made\navailable under the License, as indicated by a copyright notice that is included\nin or attached to the work (an example is provided in the Appendix below).\n\n\u201cDerivative Works\u201d shall mean any work, whether in Source or Object form, that\nis based on (or derived from) the Work and for which the editorial revisions,\nannotations, elaborations, or other modifications represent, as a whole, an\noriginal work of authorship. For the purposes of this License, Derivative Works\nshall not include works that remain separable from, or merely link (or bind by\nname) to the interfaces of, the Work and Derivative Works thereof.\n\n\u201cContribution\u201d shall mean any work of authorship, including the original version\nof the Work and any modifications or additions to that Work or Derivative Works\nthereof, that is intentionally submitted to Licensor for inclusion in the Work\nby the copyright owner or by an individual or Legal Entity authorized to submit\non behalf of the copyright owner. For the purposes of this definition,\n\u201csubmitted\u201d means any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems, and\nissue tracking systems that are managed by, or on behalf of, the Licensor for\nthe purpose of discussing and improving the Work, but excluding communication\nthat is conspicuously marked or otherwise designated in writing by the copyright\nowner as \u201cNot a Contribution.\u201d\n\n\u201cContributor\u201d shall mean Licensor and any individual or Legal Entity on behalf\nof whom a Contribution has been received by Licensor and subsequently\nincorporated within the Work.\n\n#### 2. Grant of Copyright License\n\nSubject to the terms and conditions of this License, each Contributor hereby\ngrants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,\nirrevocable copyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the Work and such\nDerivative Works in Source or Object form.\n\n#### 3. Grant of Patent License\n\nSubject to the terms and conditions of this License, each Contributor hereby\ngrants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,\nirrevocable (except as stated in this section) patent license to make, have\nmade, use, offer to sell, sell, import, and otherwise transfer the Work, where\nsuch license applies only to those patent claims licensable by such Contributor\nthat are necessarily infringed by their Contribution(s) alone or by combination\nof their Contribution(s) with the Work to which such Contribution(s) was\nsubmitted. If You institute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work or a\nContribution incorporated within the Work constitutes direct or contributory\npatent infringement, then any patent licenses granted to You under this License\nfor that Work shall terminate as of the date such litigation is filed.\n\n#### 4. Redistribution\n\nYou may reproduce and distribute copies of the Work or Derivative Works thereof\nin any medium, with or without modifications, and in Source or Object form,\nprovided that You meet the following conditions:\n\n* **(a)** You must give any other recipients of the Work or Derivative Works a copy of\nthis License; and\n* **(b)** You must cause any modified files to carry prominent notices stating that You\nchanged the files; and\n* **(c)** You must retain, in the Source form of any Derivative Works that You distribute,\nall copyright, patent, trademark, and attribution notices from the Source form\nof the Work, excluding those notices that do not pertain to any part of the\nDerivative Works; and\n* **(d)** If the Work includes a \u201cNOTICE\u201d text file as part of its distribution, then any\nDerivative Works that You distribute must include a readable copy of the\nattribution notices contained within such NOTICE file, excluding those notices\nthat do not pertain to any part of the Derivative Works, in at least one of the\nfollowing places: within a NOTICE text file distributed as part of the\nDerivative Works; within the Source form or documentation, if provided along\nwith the Derivative Works; or, within a display generated by the Derivative\nWorks, if and wherever such third-party notices normally appear. The contents of\nthe NOTICE file are for informational purposes only and do not modify the\nLicense. You may add Your own attribution notices within Derivative Works that\nYou distribute, alongside or as an addendum to the NOTICE text from the Work,\nprovided that such additional attribution notices cannot be construed as\nmodifying the License.\n\nYou may add Your own copyright statement to Your modifications and may provide\nadditional or different license terms and conditions for use, reproduction, or\ndistribution of Your modifications, or for any such Derivative Works as a whole,\nprovided Your use, reproduction, and distribution of the Work otherwise complies\nwith the conditions stated in this License.\n\n#### 5. Submission of Contributions\n\nUnless You explicitly state otherwise, any Contribution intentionally submitted\nfor inclusion in the Work by You to the Licensor shall be under the terms and\nconditions of this License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify the terms of\nany separate license agreement you may have executed with Licensor regarding\nsuch Contributions.\n\n#### 6. Trademarks\n\nThis License does not grant permission to use the trade names, trademarks,\nservice marks, or product names of the Licensor, except as required for\nreasonable and customary use in describing the origin of the Work and\nreproducing the content of the NOTICE file.\n\n#### 7. Disclaimer of Warranty\n\nUnless required by applicable law or agreed to in writing, Licensor provides the\nWork (and each Contributor provides its Contributions) on an \u201cAS IS\u201d BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,\nincluding, without limitation, any warranties or conditions of TITLE,\nNON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are\nsolely responsible for determining the appropriateness of using or\nredistributing the Work and assume any risks associated with Your exercise of\npermissions under this License.\n\n#### 8. Limitation of Liability\n\nIn no event and under no legal theory, whether in tort (including negligence),\ncontract, or otherwise, unless required by applicable law (such as deliberate\nand grossly negligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special, incidental,\nor consequential damages of any character arising as a result of this License or\nout of the use or inability to use the Work (including but not limited to\ndamages for loss of goodwill, work stoppage, computer failure or malfunction, or\nany and all other commercial damages or losses), even if such Contributor has\nbeen advised of the possibility of such damages.\n\n#### 9. Accepting Warranty or Additional Liability\n\nWhile redistributing the Work or Derivative Works thereof, You may choose to\noffer, and charge a fee for, acceptance of support, warranty, indemnity, or\nother liability obligations and/or rights consistent with this License. However,\nin accepting such obligations, You may act only on Your own behalf and on Your\nsole responsibility, not on behalf of any other Contributor, and only if You\nagree to indemnify, defend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason of your\naccepting any such warranty or additional liability.\n\n_END OF TERMS AND CONDITIONS_\n\n### APPENDIX: How to apply the Apache License to your work\n\nTo apply the Apache License to your work, attach the following boilerplate\nnotice, with the fields enclosed by brackets `[]` replaced with your own\nidentifying information. (Don't include the brackets!) The text should be\nenclosed in the appropriate comment syntax for the file format. We also\nrecommend that a file or class name and description of purpose be included on\nthe same \u201cprinted page\u201d as the copyright notice for easier identification within\nthird-party archives.\n\n    Copyright 2019 apache2\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n    \n    \n--------------------------------------------------------------------------------\n\nThe files R/recording.R, R/mock-paths.R, use-dittodb.r, and test-use-dittodb.R \nare adapted from Neal Richardson's httptest package \n(https://github.com/nealrichardson/httptest/) It is licensed under MIT license.\n\nThe MIT License (MIT)\nCopyright (c) 2016 Neal Richardson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n--------------------------------------------------------------------------------\n\nThe files src/init.c and src/reassign.c are adapted from\nHadley Wickham's and RStudio's testthat package (https://github.com/r-lib/testthat/)\nIt is licensed under MIT license.\n\nThe MIT License (MIT)\nCopyright (c) 2013-2019 Hadley Wickham; RStudio\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/LICENSE.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/DESCRIPTION",
        "type": "String",
        "value": "Apache License (>= 2.0)"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/Apache-2.0",
        "spdx_id": "https://spdx.org/licenses/Apache-2.0",
        "type": "License",
        "value": "https://spdx.org/licenses/Apache-2.0"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dittodb"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "dittodb: A Test Environment for Database Requests"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "Organization",
        "value": "ropensci"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/DESCRIPTION",
        "type": "String",
        "value": "dittodb"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 125819,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Shell",
        "size": 3511,
        "type": "Programming_language",
        "value": "Shell"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Rez",
        "size": 231,
        "type": "Programming_language",
        "value": "Rez"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "type": "Programming_language",
        "url": "https://r-project.org",
        "value": "R",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://github.com/ropensci/dittodb/blob/main/README.md"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/ropensci/dittodb/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "releases": [
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jonkeane",
          "type": "User"
        },
        "date_created": "2025-08-21T22:29:47Z",
        "date_published": "2025-08-21T22:31:51Z",
        "description": "* Updated links in docs for new CRAN checks (#193)\n",
        "html_url": "https://github.com/ropensci/dittodb/releases/tag/v0.1.9",
        "name": "dittodb 0.1.9",
        "release_id": 241664046,
        "tag": "v0.1.9",
        "tarball_url": "https://api.github.com/repos/ropensci/dittodb/tarball/v0.1.9",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/dittodb/releases/241664046",
        "value": "https://api.github.com/repos/ropensci/dittodb/releases/241664046",
        "zipball_url": "https://api.github.com/repos/ropensci/dittodb/zipball/v0.1.9"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jonkeane",
          "type": "User"
        },
        "date_created": "2024-04-09T03:01:25Z",
        "date_published": "2024-04-09T03:22:20Z",
        "description": "* Improved error messages for connections made before running `start_db_capture()`. (@KoderKow, #183)\n* Added to the `dbplyr` unique table names that are ignored to work with the newest `dbplyr` table names. (#188)\n",
        "html_url": "https://github.com/ropensci/dittodb/releases/tag/v0.1.8",
        "name": "dittodb 0.1.8",
        "release_id": 150321802,
        "tag": "v0.1.8",
        "tarball_url": "https://api.github.com/repos/ropensci/dittodb/tarball/v0.1.8",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/dittodb/releases/150321802",
        "value": "https://api.github.com/repos/ropensci/dittodb/releases/150321802",
        "zipball_url": "https://api.github.com/repos/ropensci/dittodb/zipball/v0.1.8"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jonkeane",
          "type": "User"
        },
        "date_created": "2023-08-13T14:02:40Z",
        "date_published": "2023-08-13T14:30:33Z",
        "description": "* Added better capture support for unknown databases including better capture support for Teradata databases. (#176, @sandstumpen)\n",
        "html_url": "https://github.com/ropensci/dittodb/releases/tag/v0.1.7",
        "name": "dittodb 0.1.7",
        "release_id": 117055935,
        "tag": "v0.1.7",
        "tarball_url": "https://api.github.com/repos/ropensci/dittodb/tarball/v0.1.7",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/dittodb/releases/117055935",
        "value": "https://api.github.com/repos/ropensci/dittodb/releases/117055935",
        "zipball_url": "https://api.github.com/repos/ropensci/dittodb/zipball/v0.1.7"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jonkeane",
          "type": "User"
        },
        "date_created": "2023-04-16T22:24:35Z",
        "date_published": "2023-04-17T23:44:49Z",
        "html_url": "https://github.com/ropensci/dittodb/releases/tag/v0.1.6",
        "name": "dittodb 0.1.6",
        "release_id": 99830356,
        "tag": "v0.1.6",
        "tarball_url": "https://api.github.com/repos/ropensci/dittodb/tarball/v0.1.6",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/dittodb/releases/99830356",
        "value": "https://api.github.com/repos/ropensci/dittodb/releases/99830356",
        "zipball_url": "https://api.github.com/repos/ropensci/dittodb/zipball/v0.1.6"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jonkeane",
          "type": "User"
        },
        "date_created": "2023-04-13T01:11:51Z",
        "date_published": "2023-04-15T17:50:35Z",
        "html_url": "https://github.com/ropensci/dittodb/releases/tag/v0.1.5",
        "name": "dittodb 0.1.5",
        "release_id": 99632814,
        "tag": "v0.1.5",
        "tarball_url": "https://api.github.com/repos/ropensci/dittodb/tarball/v0.1.5",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/dittodb/releases/99632814",
        "value": "https://api.github.com/repos/ropensci/dittodb/releases/99632814",
        "zipball_url": "https://api.github.com/repos/ropensci/dittodb/zipball/v0.1.5"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jonkeane",
          "type": "User"
        },
        "date_created": "2022-06-17T06:23:57Z",
        "date_published": "2022-06-25T21:14:55Z",
        "description": "* Allow support for mocking when transactions are on (full support for transactions with different mock directories is still planned for the future)\r\n* Add support for quoting with Postgres\r\n",
        "html_url": "https://github.com/ropensci/dittodb/releases/tag/v0.1.4",
        "name": "dittodb 0.1.4",
        "release_id": 70565000,
        "tag": "v0.1.4",
        "tarball_url": "https://api.github.com/repos/ropensci/dittodb/tarball/v0.1.4",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/dittodb/releases/70565000",
        "value": "https://api.github.com/repos/ropensci/dittodb/releases/70565000",
        "zipball_url": "https://api.github.com/repos/ropensci/dittodb/zipball/v0.1.4"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jonkeane",
          "type": "User"
        },
        "date_created": "2020-10-08T23:40:48Z",
        "date_published": "2020-10-10T12:12:27Z",
        "description": "* Minor CRAN update that makes vignette execution conditional when `Suggests` packages are not available.\r\n",
        "html_url": "https://github.com/ropensci/dittodb/releases/tag/v0.1.3",
        "name": "dittodb 0.1.3",
        "release_id": 32402622,
        "tag": "v0.1.3",
        "tarball_url": "https://api.github.com/repos/ropensci/dittodb/tarball/v0.1.3",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/dittodb/releases/32402622",
        "value": "https://api.github.com/repos/ropensci/dittodb/releases/32402622",
        "zipball_url": "https://api.github.com/repos/ropensci/dittodb/zipball/v0.1.3"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jonkeane",
          "type": "User"
        },
        "date_created": "2020-10-08T01:47:34Z",
        "date_published": "2020-10-08T12:53:03Z",
        "description": "## New features\r\n* Experimental support for [`expect_sql()`] to check if a specific SQL statement is sent in a test without needing a fixture. Useful for when you only want or need to check that a specific query was sent and you don't need to check any code after that. This feature is experimental, so might change in a subsequent release. \r\n\r\n## Bug fixes and test improvements \r\n* ODBC connections that only specify a dsn now use the dsn as the path (@klmr, #132). \r\n* Compatibility for the forthcoming {testthat} 3e.\r\n* Test changes for {dbplyr} (@hadley, #134).\r\n* Internal updates for changes in an upcoming {dbplyr} release.\r\n",
        "html_url": "https://github.com/ropensci/dittodb/releases/tag/v0.1.2",
        "name": "dittodb 0.1.2",
        "release_id": 32319830,
        "tag": "v0.1.2",
        "tarball_url": "https://api.github.com/repos/ropensci/dittodb/tarball/v0.1.2",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/dittodb/releases/32319830",
        "value": "https://api.github.com/repos/ropensci/dittodb/releases/32319830",
        "zipball_url": "https://api.github.com/repos/ropensci/dittodb/zipball/v0.1.2"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jonkeane",
          "type": "User"
        },
        "date_created": "2020-07-28T23:27:49Z",
        "date_published": "2020-07-29T13:47:00Z",
        "description": "* Minor CRAN update that makes tests and examples conditional when `Suggests` packages are not available.\r\n",
        "html_url": "https://github.com/ropensci/dittodb/releases/tag/v0.1.1",
        "name": "dittodb 0.1.1",
        "release_id": 29073410,
        "tag": "v0.1.1",
        "tarball_url": "https://api.github.com/repos/ropensci/dittodb/tarball/v0.1.1",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/dittodb/releases/29073410",
        "value": "https://api.github.com/repos/ropensci/dittodb/releases/29073410",
        "zipball_url": "https://api.github.com/repos/ropensci/dittodb/zipball/v0.1.1"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "author": {
          "name": "jonkeane",
          "type": "User"
        },
        "date_created": "2020-07-21T14:16:41Z",
        "date_published": "2020-07-25T14:38:53Z",
        "description": "* Initial release with functionality for recording and playing back database fixtures from a number of DBI-based drivers (RSQLite, RPostgres, RMariaDB, RPostgreSQL)\r\n* bug fixes to cope with dbplyr's unique table name functions and quoting\r\n* Thanks to @maelle for PR#12\r\n",
        "html_url": "https://github.com/ropensci/dittodb/releases/tag/v0.1.0",
        "name": "dittodb 0.1.0",
        "release_id": 28939128,
        "tag": "v0.1.0",
        "tarball_url": "https://api.github.com/repos/ropensci/dittodb/tarball/v0.1.0",
        "type": "Release",
        "url": "https://api.github.com/repos/ropensci/dittodb/releases/28939128",
        "value": "https://api.github.com/repos/ropensci/dittodb/releases/28939128",
        "zipball_url": "https://api.github.com/repos/ropensci/dittodb/zipball/v0.1.0"
      },
      "technique": "GitHub_API"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "documentation",
    "faq",
    "support",
    "executable_example",
    "keywords"
  ],
  "somef_provenance": {
    "date": "2025-09-19 03:05:54",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 81
      },
      "technique": "GitHub_API"
    }
  ],
  "usage": [
    {
      "confidence": 1,
      "result": {
        "original_header": "A quick example",
        "parent_header": [
          "dittodb"
        ],
        "type": "Text_excerpt",
        "value": "Say we have a database with some [{nycflights}](https://CRAN.R-project.org/package=nycflights13) data in it and we are writing functions that query this data that we want to test. \n\nFor example, we have the simple function that retrieves one airline:\n\n```r\nget_an_airline <- function(con) {\n  return(dbGetQuery(con, \"SELECT carrier, name FROM airlines LIMIT 1\"))\n}\n```\n\nBut we want to make sure that this function returns what we expect. To do this, we first record the response we get from the production database:\n"
      },
      "source": "https://github.com/ropensci/dittodb/blob/main/README.md",
      "technique": "header_analysis"
    },
    {
      "confidence": 1,
      "result": {
        "original_header": "Setup a package to use `dittodb`",
        "parent_header": [
          "dittodb"
        ],
        "type": "Text_excerpt",
        "value": "Use the function `dittodb::use_dittodb()` to easily get started using `dittodb`. It will add `dittodb` to `Suggests` in the `DESCRIPTION` file and add `library(dittodb)` to `tests/testthat/helper.R`.\n"
      },
      "source": "https://github.com/ropensci/dittodb/blob/main/README.md",
      "technique": "header_analysis"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/DESCRIPTION",
        "type": "String",
        "value": "0.1.9.9000"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "0.1.9.9000"
      },
      "source": "https://raw.githubusercontent.com/ropensci/dittodb/main/codemeta.json",
      "technique": "code_parser"
    }
  ]
}
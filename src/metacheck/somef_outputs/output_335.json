{
  "application_domain": [
    {
      "confidence": 0.9020462819448986,
      "result": {
        "type": "String",
        "value": "Semantic web"
      },
      "technique": "supervised_classification"
    }
  ],
  "authors": [
    {
      "confidence": 1,
      "result": {
        "email": "me.dewitt.jr@gmail.com",
        "identifier": "https://orcid.org/0000-0001-8940-1967",
        "type": "String",
        "value": "Michael DeWitt"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "code_of_conduct": [
    {
      "confidence": 1,
      "result": {
        "type": "File_dump",
        "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\nand learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\ncommunity\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\nadvances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\naddress, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards\nof acceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies\nwhen an individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at [INSERT CONTACT\nMETHOD]. All complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0,\navailable at https://www.contributor-covenant.org/version/2/0/\ncode_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at https://\nwww.contributor-covenant.org/translations.\n"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/CODE_OF_CONDUCT.md",
      "technique": "file_exploration"
    }
  ],
  "code_repository": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/medewitt/staninside"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/medewitt/staninside"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/medewitt/staninside"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "continuous_integration": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": [
          "https://github.com/medewitt/staninside/actions/workflows/R-CMD-check.yaml",
          "https://app.codecov.io/gh/medewitt/staninside?branch=main"
        ]
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/medewitt/staninside/main/.github/workflows/main.yml"
      },
      "technique": "file_exploration"
    }
  ],
  "date_created": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2021-05-18T22:59:39Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "date_updated": [
    {
      "confidence": 1,
      "result": {
        "type": "Date",
        "value": "2025-07-28T14:53:27Z"
      },
      "technique": "GitHub_API"
    }
  ],
  "description": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "A helper package for using CmdStanR in R packages"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/medewitt/staninside/main/DESCRIPTION",
        "type": "String",
        "value": "Infrastructure and functions that can be used for \n    integrating 'Stan' (Carpenter et al. (2017) <doi:10.18637/jss.v076.i01>) code into \n    stand alone R packages which in turn use the  'CmdStan' engine  which is often accessed through \n    'CmdStanR'. Details given in Stan Development Team (2025) <https://mc-stan.org/cmdstanr/>. \n    Using 'CmdStanR' and pre-written 'Stan' code can make package installation easy. Using 'staninside'\n    offers a way to cache user-compiled 'Stan' models in user-specified directories reducing the need\n    to recompile the same model multiple times."
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "Infrastructure and functions that can be used for integrating 'Stan' (Carpenter et al. (2017) <doi:10.18637/jss.v076.i01>) code into stand alone R packages which in turn use the 'CmdStan' engine which is often accessed through 'CmdStanR'. Details given in Stan Development Team (2025) <https://mc-stan.org/cmdstanr/>. Using 'CmdStanR' and pre-written 'Stan' code can make package installation easy. Using 'staninside' offers a way to cache user-compiled 'Stan' models in user-specified directories reducing the need to recompile the same model multiple times."
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 0.9414021499490711,
      "result": {
        "original_header": "staninside",
        "type": "Text_excerpt",
        "value": "\nThe goal of staninside is to facilitate the use of\n[CmdStanR](https://mc-stan.org/cmdstanr/) and packages leveraging\n[Stan](https://mc-stan.org/) code.\n \n"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9593560164082154,
      "result": {
        "original_header": "Motivation",
        "type": "Text_excerpt",
        "value": "CmdStanR is a fantastic resource for interacting with Stan. The benefits\ninclude using the latest version of Stan and associated feature (which\nmay not be available to RStan), no need for Rcpp dependencies, and\nlicensing (BSD vs GPL3). Personally, the ability to ship packages with\nthe raw Stan code allows users to directly interact with the code and\nupdate it based on their needs. \nOne issue that staninside seeks to solve is the prohibition by CRAN of\nmanipulating a user\u2019s files: \nStaninside seeks to resolve this issue by providing a framework for\npackage authors who wish to use Stan and CmdStanR to stay in compliance\nwith CRAN Policies. This is done by providing helper functions with\nwrite and compile Stan code from within a package to the user\u2019s package\ncache using the `rappdirs` package.\n \n"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/README.Rmd",
      "technique": "supervised_classification"
    },
    {
      "confidence": 0.9602680469303578,
      "result": {
        "original_header": "Code of Conduct",
        "type": "Text_excerpt",
        "value": "Please note that the staninside project is released with a [Contributor\nCode of\nConduct](https://contributor-covenant.org/version/2/0/CODE_OF_CONDUCT.html).\nBy contributing to this project, you agree to abide by its terms.\n \n"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/README.Rmd",
      "technique": "supervised_classification"
    }
  ],
  "documentation": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/medewitt/staninside/tree/main/docs"
      },
      "technique": "file_exploration"
    }
  ],
  "download_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/medewitt/staninside/releases"
      },
      "technique": "GitHub_API"
    }
  ],
  "forks_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/medewitt/staninside/forks"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "medewitt/staninside"
      },
      "technique": "GitHub_API"
    }
  ],
  "full_title": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "staninside"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/README.Rmd",
      "technique": "regular_expression"
    }
  ],
  "has_build_file": [
    {
      "confidence": 1,
      "result": {
        "format": "description",
        "type": "Url",
        "value": "https://raw.githubusercontent.com/medewitt/staninside/main/DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/DESCRIPTION",
      "technique": "file_exploration"
    }
  ],
  "has_package_file": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/medewitt/staninside/main/DESCRIPTION",
        "type": "Url",
        "value": "DESCRIPTION"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "homepage": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://medewitt.github.io/staninside/"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "identifier": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "staninside"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "installation": [
    {
      "confidence": 1,
      "result": {
        "original_header": "Installation",
        "parent_header": [
          "staninside"
        ],
        "type": "Text_excerpt",
        "value": "From Github:\n\n``` r\nremotes::install_github(\"medewitt/staninside\")\n```\n\nAlternatively, try\n[r-universe](https://medewitt.r-universe.dev/#builds):\n\n``` r\n# Enable this universe\noptions(repos = c(\n    medewitt = 'https://medewitt.r-universe.dev',\n    CRAN = 'https://cloud.r-project.org'))\n\ninstall.packages('staninside')\n```\n"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/README.Rmd",
      "technique": "header_analysis"
    }
  ],
  "issue_tracker": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://api.github.com/repos/medewitt/staninside/issues"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/medewitt/staninside/issues"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://github.com/medewitt/staninside/issues"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "keywords": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "r, stan"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": [
          "r",
          "stan"
        ]
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "license": [
    {
      "confidence": 1,
      "result": {
        "name": "MIT License",
        "spdx_id": "MIT",
        "type": "File_dump",
        "value": "# MIT License\n\nCopyright (c) 2021 staninside authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/LICENSE.md",
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/medewitt/staninside/main/DESCRIPTION",
        "type": "String",
        "value": "MIT + file LICENSE"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "identifier": "https://spdx.org/licenses/https://spdx.org/licenses/MIT",
        "spdx_id": "https://spdx.org/licenses/MIT",
        "type": "License",
        "value": "https://spdx.org/licenses/MIT"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "name": [
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "staninside"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "staninside: \"Facilitating the Use of 'Stan' Within Packages\""
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "owner": [
    {
      "confidence": 1,
      "result": {
        "type": "User",
        "value": "medewitt"
      },
      "technique": "GitHub_API"
    }
  ],
  "package_id": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/medewitt/staninside/main/DESCRIPTION",
        "type": "String",
        "value": "staninside"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/DESCRIPTION",
      "technique": "code_parser"
    }
  ],
  "programming_languages": [
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "size": 8817,
        "type": "Programming_language",
        "value": "R"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Stan",
        "size": 350,
        "type": "Programming_language",
        "value": "Stan"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Makefile",
        "size": 115,
        "type": "Programming_language",
        "value": "Makefile"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "Rez",
        "size": 90,
        "type": "Programming_language",
        "value": "Rez"
      },
      "technique": "GitHub_API"
    },
    {
      "confidence": 1,
      "result": {
        "name": "R",
        "type": "Programming_language",
        "url": "https://r-project.org",
        "value": "R",
        "version": null
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/codemeta.json",
      "technique": "code_parser"
    }
  ],
  "readme_url": [
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/medewitt/staninside/main/README.Rmd"
      },
      "technique": "file_exploration"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "https://github.com/medewitt/staninside/blob/main/README.md"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/codemeta.json",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "Url",
        "value": "https://raw.githubusercontent.com/medewitt/staninside/main/README.md"
      },
      "technique": "file_exploration"
    }
  ],
  "somef_missing_categories": [
    "citation",
    "acknowledgement",
    "run",
    "download",
    "requirements",
    "contact",
    "contributors",
    "usage",
    "faq",
    "support",
    "executable_example"
  ],
  "somef_provenance": {
    "date": "2025-09-19 01:28:35",
    "somef_schema_version": "1.0.0",
    "somef_version": "0.9.12"
  },
  "stargazers_count": [
    {
      "confidence": 1,
      "result": {
        "type": "Number",
        "value": 7
      },
      "technique": "GitHub_API"
    }
  ],
  "version": [
    {
      "confidence": 1,
      "result": {
        "source": "https://raw.githubusercontent.com/medewitt/staninside/main/DESCRIPTION",
        "type": "String",
        "value": "0.0.4"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/DESCRIPTION",
      "technique": "code_parser"
    },
    {
      "confidence": 1,
      "result": {
        "type": "String",
        "value": "0.0.4"
      },
      "source": "https://raw.githubusercontent.com/medewitt/staninside/main/codemeta.json",
      "technique": "code_parser"
    }
  ]
}